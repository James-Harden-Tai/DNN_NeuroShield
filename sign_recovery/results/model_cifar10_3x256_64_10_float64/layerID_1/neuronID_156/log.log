10:08:00,63 root DEBUG Check that model weights are dtype tf.float64: 	 <dtype: 'float64'>
10:08:00,64 root INFO eps: 1e-06
10:08:00,64 root INFO tol: 1e-06
10:08:00,64 root DEBUG Load dual points from file: ../data/dual_points_cifar10_3x256_64_10_float64.
10:08:00,86 root DEBUG 

=================== Experiment ID #0 	 Dual Point ID: 1 ===================
10:08:00,96 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.094E-09|<1.000E-06)
10:08:00,97 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:00,395 root DEBUG Side: ON	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.698E-02 	 Total distance: 2.698E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([239], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:00,711 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.206E-02 	 Total distance: 7.206E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([48], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:00,896 root DEBUG Side: OFF	 Angle(dx0, dx): 1.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.093E-02 	 Total distance: 8.299E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([34], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:00,896 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:00,896 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 50.94 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:00,896 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:00,897 root DEBUG dOFF/dON = 3.1
10:08:00,897 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.49164248864882, 'dON1': 0.02697641461220823, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.02697641461220823, 'nTON': 1, 'dON': 0.02697641461220823, 'dxOFFAngle': 89.71564216578234, 'dOFF1': 0.08299050666128913, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.08299050666128913, 'nTOFF': 1, 'dOFF': 0.08299050666128913, 'SUCCESS': True}
10:08:00,907 root DEBUG 

=================== Experiment ID #1 	 Dual Point ID: 2 ===================
10:08:00,921 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.865E-08|<1.000E-06)
10:08:00,921 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:01,330 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.410E-01 	 Total distance: 1.410E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([221], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:08:01,651 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.286E-02 	 Total distance: 2.286E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([17], dtype=int64), array([[False]])]] 	 class: [1 8]
10:08:01,913 root DEBUG Side: OFF	 Angle(dx0, dx): 0.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.008E-01 	 Total distance: 6.237E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([253], dtype=int64), array([[False]])]] 	 class: [1 8]
10:08:01,913 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:01,913 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 63.13 	 cIDON = [0 8], cIDOFF = [1 8]
10:08:01,913 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:01,913 root DEBUG dOFF/dON = 4.4
10:08:01,913 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.42203668442315, 'dON1': 0.14097128906703685, 'cIDON1': array([0, 8], dtype=int64), 'dON_patch_1': 0.14097128906703685, 'nTON': 1, 'dON': 0.14097128906703685, 'dxOFFAngle': 88.0534347961881, 'dOFF1': 0.6236767263854395, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 0.6236767263854395, 'nTOFF': 1, 'dOFF': 0.6236767263854395, 'SUCCESS': True}
10:08:01,926 root DEBUG 

=================== Experiment ID #2 	 Dual Point ID: 3 ===================
10:08:01,935 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.115E-08|<1.000E-06)
10:08:01,936 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:02,257 root DEBUG Side: ON	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.217E-01 	 Total distance: 1.217E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([215], dtype=int64), array([[False]])]] 	 class: [4 8]
10:08:02,640 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.464E-01 	 Total distance: 2.464E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([252], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:08:02,884 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.320E-01 	 Total distance: 5.785E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([218], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:08:03,139 root DEBUG Side: OFF	 Angle(dx0, dx): 0.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.402E-01 	 Total distance: 1.319E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([141], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:08:03,139 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:03,139 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 83.10 	 cIDON = [4 8], cIDOFF = [4 8]
10:08:03,139 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:03,139 root DEBUG dOFF/dON = 10.8
10:08:03,139 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.70974189006536, 'dON1': 0.12168345726562073, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.12168345726562073, 'nTON': 1, 'dON': 0.12168345726562073, 'dxOFFAngle': 88.32208202901367, 'dOFF1': 1.3186938301892122, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 1.3186938301892122, 'nTOFF': 1, 'dOFF': 1.3186938301892122, 'SUCCESS': True}
10:08:03,150 root DEBUG 

=================== Experiment ID #3 	 Dual Point ID: 4 ===================
10:08:03,162 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.878E-09|<1.000E-06)
10:08:03,162 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:03,495 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.819E-01 	 Total distance: 5.819E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([144], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:03,712 root DEBUG Side: ON	 Angle(dx0, dx): 1.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.703E-01 	 Total distance: 1.052E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([63], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:03,989 root DEBUG Side: OFF	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.314E-01 	 Total distance: 1.314E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([148], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:03,989 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:03,990 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -77.79 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:03,990 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:03,990 root DEBUG dOFF/dON = 0.1
10:08:03,990 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.10592327643703, 'dON1': 1.0522021971440776, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 1.0522021971440776, 'nTON': 1, 'dON': 1.0522021971440776, 'dxOFFAngle': 88.14027300037847, 'dOFF1': 0.13142185202287085, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.13142185202287085, 'nTOFF': 1, 'dOFF': 0.13142185202287085, 'SUCCESS': False}
10:08:03,996 root DEBUG 

=================== Experiment ID #4 	 Dual Point ID: 5 ===================
10:08:04,6 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.786E-10|<1.000E-06)
10:08:04,6 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:04,328 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.002E-03 	 Total distance: 2.002E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([53], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:04,598 root DEBUG Side: ON	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.723E-02 	 Total distance: 4.923E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([98], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:04,800 root DEBUG Side: ON	 Angle(dx0, dx): 0.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.791E-02 	 Total distance: 9.714E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([153], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:05,85 root DEBUG Side: OFF	 Angle(dx0, dx): 1.87 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.897E-03 	 Total distance: 1.897E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([56], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:05,86 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:05,86 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -96.17 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:05,86 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:05,86 root DEBUG dOFF/dON = 0.0
10:08:05,86 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.27563184808272, 'dON1': 0.09713701833788449, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.09713701833788449, 'nTON': 1, 'dON': 0.09713701833788449, 'dxOFFAngle': 89.07789559858952, 'dOFF1': 0.0018971360535482013, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.0018971360535482013, 'nTOFF': 1, 'dOFF': 0.0018971360535482013, 'SUCCESS': False}
10:08:05,95 root DEBUG 

=================== Experiment ID #5 	 Dual Point ID: 6 ===================
10:08:05,106 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.163E-08|<1.000E-06)
10:08:05,106 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:05,394 root DEBUG Side: ON	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.410E-02 	 Total distance: 8.410E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([146], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:05,784 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.445E-01 	 Total distance: 4.445E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([122], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:06,37 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.076E-02 	 Total distance: 4.552E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([228], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:06,299 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.288E-01 	 Total distance: 6.840E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([177], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:06,553 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.481E-02 	 Total distance: 7.189E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([52], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:06,553 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:06,553 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 79.05 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:06,553 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:06,553 root DEBUG dOFF/dON = 8.5
10:08:06,553 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.07330154421489, 'dON1': 0.08409615271304975, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.08409615271304975, 'nTON': 1, 'dON': 0.08409615271304975, 'dxOFFAngle': 88.15350448921171, 'dOFF1': 0.7188591871926927, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.7188591871926927, 'nTOFF': 1, 'dOFF': 0.7188591871926927, 'SUCCESS': True}
10:08:06,572 root DEBUG 

=================== Experiment ID #6 	 Dual Point ID: 7 ===================
10:08:06,582 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.723E-08|<1.000E-06)
10:08:06,583 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:06,916 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.264E-02 	 Total distance: 9.264E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([177], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:08:07,210 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.457E-01 	 Total distance: 2.457E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([155], dtype=int64), array([[False]])]] 	 class: [2 5]
10:08:07,210 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:07,210 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 45.23 	 cIDON = [2 5], cIDOFF = [2 5]
10:08:07,211 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:07,211 root DEBUG dOFF/dON = 2.7
10:08:07,211 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.5786655405391, 'dON1': 0.09264443889018976, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.09264443889018976, 'nTON': 1, 'dON': 0.09264443889018976, 'dxOFFAngle': 89.97314506496616, 'dOFF1': 0.24567292473205019, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.24567292473205019, 'nTOFF': 1, 'dOFF': 0.24567292473205019, 'SUCCESS': True}
10:08:07,229 root DEBUG 

=================== Experiment ID #7 	 Dual Point ID: 8 ===================
10:08:07,250 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.653E-08|<1.000E-06)
10:08:07,250 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:07,647 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.587E-01 	 Total distance: 4.587E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([154], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:07,897 root DEBUG Side: ON	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.971E-01 	 Total distance: 6.557E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([124], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:08,209 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.476E-01 	 Total distance: 2.476E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([126], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:08,415 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.200E-01 	 Total distance: 5.676E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([242], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:08,415 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:08,416 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -7.20 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:08,416 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:08,416 root DEBUG dOFF/dON = 0.9
10:08:08,416 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.29570659080042, 'dON1': 0.6557120404352529, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.6557120404352529, 'nTON': 1, 'dON': 0.6557120404352529, 'dxOFFAngle': 88.39418638606925, 'dOFF1': 0.5675962892989326, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.5675962892989326, 'nTOFF': 1, 'dOFF': 0.5675962892989326, 'SUCCESS': False}
10:08:08,432 root DEBUG 

=================== Experiment ID #8 	 Dual Point ID: 9 ===================
10:08:08,447 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.367E-08|<1.000E-06)
10:08:08,448 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:08,782 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.915E-02 	 Total distance: 8.915E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([122], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:09,92 root DEBUG Side: ON	 Angle(dx0, dx): 0.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.305E-01 	 Total distance: 4.197E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([131], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:09,360 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.325E-01 	 Total distance: 2.325E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([18], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:09,361 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:09,361 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -28.69 	 cIDON = [3 7], cIDOFF = [3 7]
10:08:09,361 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:09,361 root DEBUG dOFF/dON = 0.6
10:08:09,361 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.20130721633596, 'dON1': 0.41965878042676774, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.41965878042676774, 'nTON': 1, 'dON': 0.41965878042676774, 'dxOFFAngle': 88.38855726086042, 'dOFF1': 0.23254358895072966, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.23254358895072966, 'nTOFF': 1, 'dOFF': 0.23254358895072966, 'SUCCESS': False}
10:08:09,370 root DEBUG 

=================== Experiment ID #9 	 Dual Point ID: 10 ===================
10:08:09,379 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.540E-09|<1.000E-06)
10:08:09,380 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:09,739 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.811E-02 	 Total distance: 7.811E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([228], dtype=int64), array([[False]])]] 	 class: [3 4]
10:08:09,968 root DEBUG Side: ON	 Angle(dx0, dx): 1.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.974E-02 	 Total distance: 1.678E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([50], dtype=int64), array([[False]])]] 	 class: [3 4]
10:08:10,324 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.312E-03 	 Total distance: 5.312E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([154], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:08:10,539 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.686E-02 	 Total distance: 4.217E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([81], dtype=int64), array([[False]])]] 	 class: [3 4]
10:08:10,539 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:10,539 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -59.84 	 cIDON = [3 4], cIDOFF = [3 4]
10:08:10,539 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:10,539 root DEBUG dOFF/dON = 0.3
10:08:10,539 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.26498415338229, 'dON1': 0.1678484155456169, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.1678484155456169, 'nTON': 1, 'dON': 0.1678484155456169, 'dxOFFAngle': 88.18850866196149, 'dOFF1': 0.04217498875370273, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.04217498875370273, 'nTOFF': 1, 'dOFF': 0.04217498875370273, 'SUCCESS': False}
10:08:10,549 root DEBUG 

=================== Experiment ID #10 	 Dual Point ID: 11 ===================
10:08:10,556 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.494E-08|<1.000E-06)
10:08:10,557 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:10,922 root DEBUG Side: ON	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.554E-01 	 Total distance: 1.554E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([243], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:11,159 root DEBUG Side: ON	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.061E-02 	 Total distance: 2.260E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([175], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:11,402 root DEBUG Side: ON	 Angle(dx0, dx): 0.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.624E-01 	 Total distance: 5.884E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([138], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:11,720 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.175E+00 	 Total distance: 1.175E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([203], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:11,937 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.359E-03 	 Total distance: 1.181E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([37], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:12,184 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.061E+00 	 Total distance: 2.243E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([189], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:12,185 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:12,185 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 58.43 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:12,186 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:12,186 root DEBUG dOFF/dON = 3.8
10:08:12,186 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.68467561645946, 'dON1': 0.5883696283026185, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.5883696283026185, 'nTON': 1, 'dON': 0.5883696283026185, 'dxOFFAngle': 88.48919066284259, 'dOFF1': 2.242533162216727, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 2.242533162216727, 'nTOFF': 1, 'dOFF': 2.242533162216727, 'SUCCESS': True}
10:08:12,199 root DEBUG 

=================== Experiment ID #11 	 Dual Point ID: 12 ===================
10:08:12,210 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.165E-09|<1.000E-06)
10:08:12,210 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:12,582 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.436E-01 	 Total distance: 1.436E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([200], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:12,833 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.943E-01 	 Total distance: 4.380E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([0], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:13,116 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.605E-01 	 Total distance: 7.605E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([254], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:13,386 root DEBUG Side: OFF	 Angle(dx0, dx): 0.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.130E-02 	 Total distance: 8.518E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([44], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:13,386 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:13,387 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 32.09 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:13,387 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:13,387 root DEBUG dOFF/dON = 1.9
10:08:13,387 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.14636432956014, 'dON1': 0.43796754274836713, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.43796754274836713, 'nTON': 1, 'dON': 0.43796754274836713, 'dxOFFAngle': 88.94573160709709, 'dOFF1': 0.851848856836818, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.851848856836818, 'nTOFF': 1, 'dOFF': 0.851848856836818, 'SUCCESS': True}
10:08:13,396 root DEBUG 

=================== Experiment ID #12 	 Dual Point ID: 13 ===================
10:08:13,404 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.134E-10|<1.000E-06)
10:08:13,404 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:13,786 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.413E-02 	 Total distance: 6.413E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([121], dtype=int64), array([[False]])]] 	 class: [0 8]
10:08:14,84 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.345E-01 	 Total distance: 1.987E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([115], dtype=int64), array([[False]])]] 	 class: [0 8]
10:08:14,326 root DEBUG Side: ON	 Angle(dx0, dx): 0.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.125E-01 	 Total distance: 5.112E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([43], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:08:14,481 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.696E-01 	 Total distance: 8.808E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([7], dtype=int64), array([[False]])]] 	 class: [0 8]
10:08:14,725 root DEBUG Side: OFF	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.110E-01 	 Total distance: 2.110E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([70], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:08:14,725 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:14,725 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -61.35 	 cIDON = [0 8], cIDOFF = [1 8]
10:08:14,727 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:14,728 root DEBUG dOFF/dON = 0.2
10:08:14,728 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.38507480745167, 'dON1': 0.8808060377813234, 'cIDON1': array([0, 8], dtype=int64), 'dON_patch_1': 0.8808060377813234, 'nTON': 1, 'dON': 0.8808060377813234, 'dxOFFAngle': 87.83123881021082, 'dOFF1': 0.2110087876014333, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 0.2110087876014333, 'nTOFF': 1, 'dOFF': 0.2110087876014333, 'SUCCESS': False}
10:08:14,734 root DEBUG 

=================== Experiment ID #13 	 Dual Point ID: 14 ===================
10:08:14,747 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.620E-09|<1.000E-06)
10:08:14,747 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:15,153 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.152E-01 	 Total distance: 1.152E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([214], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:08:15,383 root DEBUG Side: ON	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.654E-02 	 Total distance: 1.318E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([207], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:08:15,714 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.780E-01 	 Total distance: 1.780E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([72], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:08:15,958 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.036E-01 	 Total distance: 2.816E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([253], dtype=int64), array([[False]])]] 	 class: [2 4]
10:08:15,958 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:15,958 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 36.24 	 cIDON = [2 4], cIDOFF = [2 4]
10:08:15,959 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:15,959 root DEBUG dOFF/dON = 2.1
10:08:15,959 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.5117712662112, 'dON1': 0.13178641765712218, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.13178641765712218, 'nTON': 1, 'dON': 0.13178641765712218, 'dxOFFAngle': 88.8573778674202, 'dOFF1': 0.28157679332838237, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.28157679332838237, 'nTOFF': 1, 'dOFF': 0.28157679332838237, 'SUCCESS': True}
10:08:15,974 root DEBUG 

=================== Experiment ID #14 	 Dual Point ID: 15 ===================
10:08:15,986 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.522E-10|<1.000E-06)
10:08:15,986 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:16,214 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.652E-01 	 Total distance: 1.652E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([92], dtype=int64), array([[False]])]] 	 class: [3 4]
10:08:16,520 root DEBUG Side: OFF	 Angle(dx0, dx): 1.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.202E-02 	 Total distance: 7.202E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([123], dtype=int64), array([[False]])]] 	 class: [3 4]
10:08:16,521 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:16,521 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -39.29 	 cIDON = [3 4], cIDOFF = [3 4]
10:08:16,521 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:16,521 root DEBUG dOFF/dON = 0.4
10:08:16,521 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.02518615260253, 'dON1': 0.16523410004020986, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.16523410004020986, 'nTON': 1, 'dON': 0.16523410004020986, 'dxOFFAngle': 86.66894229434504, 'dOFF1': 0.07202399777490058, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.07202399777490058, 'nTOFF': 1, 'dOFF': 0.07202399777490058, 'SUCCESS': False}
10:08:16,528 root DEBUG 

=================== Experiment ID #15 	 Dual Point ID: 16 ===================
10:08:16,538 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.814E-09|<1.000E-06)
10:08:16,538 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:16,820 root DEBUG Side: ON	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.396E-02 	 Total distance: 5.396E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([104], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:17,183 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.564E+00 	 Total distance: 1.564E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([9], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:17,183 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:17,184 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 93.33 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:17,184 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:17,184 root DEBUG dOFF/dON = 29.0
10:08:17,184 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.7821657463101, 'dON1': 0.05395651651368105, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.05395651651368105, 'nTON': 1, 'dON': 0.05395651651368105, 'dxOFFAngle': 87.97892923924944, 'dOFF1': 1.5635936136420945, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 1.5635936136420945, 'nTOFF': 1, 'dOFF': 1.5635936136420945, 'SUCCESS': True}
10:08:17,190 root DEBUG 

=================== Experiment ID #16 	 Dual Point ID: 17 ===================
10:08:17,203 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.241E-08|<1.000E-06)
10:08:17,203 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:17,541 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.767E-02 	 Total distance: 7.767E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([159], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:17,803 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.749E-02 	 Total distance: 1.552E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([32], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:18,98 root DEBUG Side: OFF	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.182E-02 	 Total distance: 7.182E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([45], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:18,346 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.824E-02 	 Total distance: 1.401E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([214], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:18,347 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:18,347 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -5.11 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:18,347 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:18,347 root DEBUG dOFF/dON = 0.9
10:08:18,347 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.88661795401545, 'dON1': 0.15515667084055762, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.15515667084055762, 'nTON': 1, 'dON': 0.15515667084055762, 'dxOFFAngle': 89.04543182350265, 'dOFF1': 0.14005866457825816, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.14005866457825816, 'nTOFF': 1, 'dOFF': 0.14005866457825816, 'SUCCESS': False}
10:08:18,360 root DEBUG 

=================== Experiment ID #17 	 Dual Point ID: 18 ===================
10:08:18,370 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.122E-09|<1.000E-06)
10:08:18,371 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:18,743 root DEBUG Side: ON	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.251E-01 	 Total distance: 1.251E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([204], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:08:19,129 root DEBUG Side: OFF	 Angle(dx0, dx): 0.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.267E-01 	 Total distance: 1.267E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([44], dtype=int64), array([[False]])]] 	 class: [3 9]
10:08:19,130 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:19,130 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 0.63 	 cIDON = [3 9], cIDOFF = [3 9]
10:08:19,130 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:19,130 root DEBUG dOFF/dON = 1.0
10:08:19,130 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.57889838771365, 'dON1': 0.1251168343695886, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.1251168343695886, 'nTON': 1, 'dON': 0.1251168343695886, 'dxOFFAngle': 87.91277699757535, 'dOFF1': 0.12670492049805504, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.12670492049805504, 'nTOFF': 1, 'dOFF': 0.12670492049805504, 'SUCCESS': True}
10:08:19,143 root DEBUG 

=================== Experiment ID #18 	 Dual Point ID: 19 ===================
10:08:19,157 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.736E-08|<1.000E-06)
10:08:19,158 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:19,444 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.411E-02 	 Total distance: 3.411E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([49], dtype=int64), array([[False]])]] 	 class: [3 9]
10:08:19,665 root DEBUG Side: ON	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.082E-01 	 Total distance: 3.423E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([232], dtype=int64), array([[False]])]] 	 class: [3 9]
10:08:20,99 root DEBUG Side: OFF	 Angle(dx0, dx): 0.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.581E-01 	 Total distance: 4.581E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([160], dtype=int64), array([[False]])]] 	 class: [3 9]
10:08:20,99 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:20,99 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 14.47 	 cIDON = [3 9], cIDOFF = [3 9]
10:08:20,99 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:20,99 root DEBUG dOFF/dON = 1.3
10:08:20,99 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.2319088174979, 'dON1': 0.3423102728348737, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.3423102728348737, 'nTON': 1, 'dON': 0.3423102728348737, 'dxOFFAngle': 89.40109356471518, 'dOFF1': 0.45812801797565866, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.45812801797565866, 'nTOFF': 1, 'dOFF': 0.45812801797565866, 'SUCCESS': True}
10:08:20,109 root DEBUG 

=================== Experiment ID #19 	 Dual Point ID: 20 ===================
10:08:20,119 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.066E-08|<1.000E-06)
10:08:20,120 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:20,513 root DEBUG Side: ON	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.895E-02 	 Total distance: 6.895E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([50], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:08:20,986 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.399E-02 	 Total distance: 2.399E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([114], dtype=int64), array([[False]])]] 	 class: [2 3]
10:08:20,986 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:20,986 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -48.38 	 cIDON = [2 3], cIDOFF = [2 3]
10:08:20,986 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:20,986 root DEBUG dOFF/dON = 0.3
10:08:20,986 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.1105919198639, 'dON1': 0.0689510077162549, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.0689510077162549, 'nTON': 1, 'dON': 0.0689510077162549, 'dxOFFAngle': 89.58781500137498, 'dOFF1': 0.023986082049464622, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.023986082049464622, 'nTOFF': 1, 'dOFF': 0.023986082049464622, 'SUCCESS': False}
10:08:20,994 root DEBUG 

=================== Experiment ID #20 	 Dual Point ID: 21 ===================
10:08:21,4 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.188E-08|<1.000E-06)
10:08:21,4 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:21,424 root DEBUG Side: ON	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.121E-01 	 Total distance: 2.121E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([13], dtype=int64), array([[False]])]] 	 class: [0 2]
10:08:21,724 root DEBUG Side: OFF	 Angle(dx0, dx): 0.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.932E-06 	 Total distance: 7.932E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 2]
10:08:21,724 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:21,725 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.99 	 cIDON = [0 2], cIDOFF = [0 2]
10:08:21,725 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:21,725 root DEBUG dOFF/dON = 0.0
10:08:21,725 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.65220522475357, 'dON1': 0.2120972814016127, 'cIDON1': array([0, 2], dtype=int64), 'dON_patch_1': 0.2120972814016127, 'nTON': 1, 'dON': 0.2120972814016127, 'dxOFFAngle': 88.97245804066904, 'dOFF1': 7.932022061771392e-06, 'cIDOFF1': array([0, 2], dtype=int64), 'dOFF_patch_1': 7.932022061771392e-06, 'nTOFF': 1, 'dOFF': 7.932022061771392e-06, 'SUCCESS': False}
10:08:21,733 root DEBUG 

=================== Experiment ID #21 	 Dual Point ID: 22 ===================
10:08:21,742 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.496E-08|<1.000E-06)
10:08:21,742 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:22,123 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.439E-02 	 Total distance: 7.439E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([20], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:22,534 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.061E-01 	 Total distance: 1.061E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([83], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:22,534 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:22,534 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 17.57 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:22,534 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:22,535 root DEBUG dOFF/dON = 1.4
10:08:22,535 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.94171186419615, 'dON1': 0.0743893714660986, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.0743893714660986, 'nTON': 1, 'dON': 0.0743893714660986, 'dxOFFAngle': 87.87952452734518, 'dOFF1': 0.10609808146389037, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.10609808146389037, 'nTOFF': 1, 'dOFF': 0.10609808146389037, 'SUCCESS': True}
10:08:22,546 root DEBUG 

=================== Experiment ID #22 	 Dual Point ID: 23 ===================
10:08:22,556 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.172E-09|<1.000E-06)
10:08:22,557 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:22,994 root DEBUG Side: ON	 Angle(dx0, dx): 0.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.663E-01 	 Total distance: 5.663E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([44], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:23,281 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.727E-01 	 Total distance: 1.139E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([65], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:23,646 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.281E-01 	 Total distance: 2.281E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([222], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:23,893 root DEBUG Side: OFF	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.413E-01 	 Total distance: 3.694E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([180], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:23,894 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:23,894 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -51.02 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:23,894 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:23,894 root DEBUG dOFF/dON = 0.3
10:08:23,894 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.49796046240195, 'dON1': 1.1389346197892751, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 1.1389346197892751, 'nTON': 1, 'dON': 1.1389346197892751, 'dxOFFAngle': 87.78512556666618, 'dOFF1': 0.3694284282502355, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.3694284282502355, 'nTOFF': 1, 'dOFF': 0.3694284282502355, 'SUCCESS': False}
10:08:23,903 root DEBUG 

=================== Experiment ID #23 	 Dual Point ID: 24 ===================
10:08:23,915 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.123E-07|<1.000E-06)
10:08:23,916 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:24,316 root DEBUG Side: ON	 Angle(dx0, dx): 0.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.089E-01 	 Total distance: 3.089E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([129], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:08:24,700 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.995E-01 	 Total distance: 2.995E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([133], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:08:24,701 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:24,701 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -1.54 	 cIDON = [4 7], cIDOFF = [4 7]
10:08:24,701 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:24,701 root DEBUG dOFF/dON = 1.0
10:08:24,701 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.47871267821905, 'dON1': 0.30890815215406053, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.30890815215406053, 'nTON': 1, 'dON': 0.30890815215406053, 'dxOFFAngle': 89.27458315043552, 'dOFF1': 0.2995473957739304, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.2995473957739304, 'nTOFF': 1, 'dOFF': 0.2995473957739304, 'SUCCESS': False}
10:08:24,711 root DEBUG 

=================== Experiment ID #24 	 Dual Point ID: 25 ===================
10:08:24,721 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.668E-09|<1.000E-06)
10:08:24,721 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:25,84 root DEBUG Side: ON	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.800E-01 	 Total distance: 2.800E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([251], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:08:25,276 root DEBUG Side: ON	 Angle(dx0, dx): 0.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.657E-02 	 Total distance: 3.666E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([116], dtype=int64), array([[False]])]] 	 class: [1 9]
10:08:25,541 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.886E-02 	 Total distance: 7.886E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([196], dtype=int64), array([[False]])]] 	 class: [0 9]
10:08:25,541 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:25,542 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -64.59 	 cIDON = [1 9], cIDOFF = [0 9]
10:08:25,542 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:25,542 root DEBUG dOFF/dON = 0.2
10:08:25,542 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.90587861789642, 'dON1': 0.36658862216262245, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.36658862216262245, 'nTON': 1, 'dON': 0.36658862216262245, 'dxOFFAngle': 88.50577930101674, 'dOFF1': 0.07885771414202634, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.07885771414202634, 'nTOFF': 1, 'dOFF': 0.07885771414202634, 'SUCCESS': False}
10:08:25,550 root DEBUG 

=================== Experiment ID #25 	 Dual Point ID: 26 ===================
10:08:25,558 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.186E-09|<1.000E-06)
10:08:25,558 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:26,17 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.770E-01 	 Total distance: 9.770E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([152], dtype=int64), array([[False]])]] 	 class: [2 6]
10:08:26,247 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.014E-03 	 Total distance: 9.800E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([205], dtype=int64), array([[False]])]] 	 class: [2 6]
10:08:26,510 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.431E-01 	 Total distance: 1.431E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([67], dtype=int64), array([[False]])]] 	 class: [2 6]
10:08:26,732 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.577E-02 	 Total distance: 2.288E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([75], dtype=int64), array([[False]])]] 	 class: [2 6]
10:08:26,733 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:26,733 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -62.14 	 cIDON = [2 6], cIDOFF = [2 6]
10:08:26,733 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:26,733 root DEBUG dOFF/dON = 0.2
10:08:26,733 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.66606886994607, 'dON1': 0.9800329742795268, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.9800329742795268, 'nTON': 1, 'dON': 0.9800329742795268, 'dxOFFAngle': 88.32241279842354, 'dOFF1': 0.2288410777845003, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.2288410777845003, 'nTOFF': 1, 'dOFF': 0.2288410777845003, 'SUCCESS': False}
10:08:26,740 root DEBUG 

=================== Experiment ID #26 	 Dual Point ID: 27 ===================
10:08:26,751 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.843E-08|<1.000E-06)
10:08:26,751 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:27,133 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.149E+00 	 Total distance: 1.149E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([133], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:27,358 root DEBUG Side: ON	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.634E-02 	 Total distance: 1.175E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([12], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:27,663 root DEBUG Side: OFF	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.118E-02 	 Total distance: 2.118E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([17], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:27,663 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:27,663 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -96.46 	 cIDON = [3 7], cIDOFF = [3 7]
10:08:27,664 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:27,664 root DEBUG dOFF/dON = 0.0
10:08:27,664 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.00890577908437, 'dON1': 1.1754320617117227, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 1.1754320617117227, 'nTON': 1, 'dON': 1.1754320617117227, 'dxOFFAngle': 88.40832281388109, 'dOFF1': 0.021180381518813157, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.021180381518813157, 'nTOFF': 1, 'dOFF': 0.021180381518813157, 'SUCCESS': False}
10:08:27,674 root DEBUG 

=================== Experiment ID #27 	 Dual Point ID: 28 ===================
10:08:27,685 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.671E-09|<1.000E-06)
10:08:27,686 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:27,996 root DEBUG Side: ON	 Angle(dx0, dx): 1.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.785E-02 	 Total distance: 2.785E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([219], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:28,292 root DEBUG Side: OFF	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.488E-01 	 Total distance: 2.488E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([119], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:28,471 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.393E-02 	 Total distance: 2.627E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([98], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:28,748 root DEBUG Side: OFF	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.511E-01 	 Total distance: 7.139E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([48], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:28,748 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:28,748 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 92.49 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:28,748 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:28,748 root DEBUG dOFF/dON = 25.6
10:08:28,749 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.76894014626765, 'dON1': 0.027853008251035018, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.027853008251035018, 'nTON': 1, 'dON': 0.027853008251035018, 'dxOFFAngle': 89.72136995102429, 'dOFF1': 0.7138582850098146, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.7138582850098146, 'nTOFF': 1, 'dOFF': 0.7138582850098146, 'SUCCESS': True}
10:08:28,758 root DEBUG 

=================== Experiment ID #28 	 Dual Point ID: 29 ===================
10:08:28,765 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.487E-08|<1.000E-06)
10:08:28,765 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:29,94 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.296E-01 	 Total distance: 1.296E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([250], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:08:29,318 root DEBUG Side: ON	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.881E-02 	 Total distance: 1.584E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([103], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:08:29,631 root DEBUG Side: OFF	 Angle(dx0, dx): 1.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.736E-01 	 Total distance: 1.736E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([4, 7], dtype=int64), array([[0.],
       [1.]])]] 	 class: [6 7]
10:08:29,631 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:29,631 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 4.57 	 cIDON = [4 6], cIDOFF = [4 6]
10:08:29,631 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:29,631 root DEBUG dOFF/dON = 1.1
10:08:29,632 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.64266533655352, 'dON1': 0.15838916863127805, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.15838916863127805, 'nTON': 1, 'dON': 0.15838916863127805, 'dxOFFAngle': 89.04703526750595, 'dOFF1': 0.17355739102717208, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.17355739102717208, 'nTOFF': 1, 'dOFF': 0.17355739102717208, 'SUCCESS': True}
10:08:29,638 root DEBUG 

=================== Experiment ID #29 	 Dual Point ID: 30 ===================
10:08:29,647 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.985E-08|<1.000E-06)
10:08:29,647 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:29,954 root DEBUG Side: ON	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.373E-01 	 Total distance: 2.373E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([107], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:08:30,235 root DEBUG Side: OFF	 Angle(dx0, dx): 1.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.011E-01 	 Total distance: 3.011E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([137], dtype=int64), array([[False]])]] 	 class: [2 4]
10:08:30,235 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:30,235 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 11.86 	 cIDON = [2 4], cIDOFF = [2 4]
10:08:30,236 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:30,236 root DEBUG dOFF/dON = 1.3
10:08:30,236 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.85242269295091, 'dON1': 0.2372929928569445, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.2372929928569445, 'nTON': 1, 'dON': 0.2372929928569445, 'dxOFFAngle': 88.95159954027194, 'dOFF1': 0.30112606079703713, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.30112606079703713, 'nTOFF': 1, 'dOFF': 0.30112606079703713, 'SUCCESS': True}
10:08:30,247 root DEBUG 

=================== Experiment ID #30 	 Dual Point ID: 31 ===================
10:08:30,254 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.605E-08|<1.000E-06)
10:08:30,254 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:30,486 root DEBUG Side: ON	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.307E-01 	 Total distance: 4.307E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([182], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:30,774 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.060E-02 	 Total distance: 8.060E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([37], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:30,774 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:30,774 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -68.47 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:30,775 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:30,775 root DEBUG dOFF/dON = 0.2
10:08:30,775 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.20052138905692, 'dON1': 0.43066992544582444, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.43066992544582444, 'nTON': 1, 'dON': 0.43066992544582444, 'dxOFFAngle': 88.76542812707746, 'dOFF1': 0.08060302613201069, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.08060302613201069, 'nTOFF': 1, 'dOFF': 0.08060302613201069, 'SUCCESS': False}
10:08:30,783 root DEBUG 

=================== Experiment ID #31 	 Dual Point ID: 32 ===================
10:08:30,792 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.124E-08|<1.000E-06)
10:08:30,792 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:31,157 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.617E-01 	 Total distance: 4.617E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([151], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:08:31,338 root DEBUG Side: ON	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.375E-01 	 Total distance: 7.992E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([144], dtype=int64), array([[False]])]] 	 class: [2 6]
10:08:31,636 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.478E-01 	 Total distance: 2.478E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([97], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:08:31,636 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:31,637 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -52.67 	 cIDON = [2 6], cIDOFF = [2 6]
10:08:31,637 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:31,637 root DEBUG dOFF/dON = 0.3
10:08:31,637 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.84070446525322, 'dON1': 0.7992211949316488, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.7992211949316488, 'nTON': 1, 'dON': 0.7992211949316488, 'dxOFFAngle': 88.90352680817719, 'dOFF1': 0.24778603128199858, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.24778603128199858, 'nTOFF': 1, 'dOFF': 0.24778603128199858, 'SUCCESS': False}
10:08:31,650 root DEBUG 

=================== Experiment ID #32 	 Dual Point ID: 33 ===================
10:08:31,658 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.474E-09|<1.000E-06)
10:08:31,658 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:32,43 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.277E-01 	 Total distance: 1.277E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([155], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:32,280 root DEBUG Side: ON	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.746E-01 	 Total distance: 3.023E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([198], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:32,553 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.854E-03 	 Total distance: 5.854E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([202], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:32,553 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:32,554 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -96.20 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:32,554 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:32,554 root DEBUG dOFF/dON = 0.0
10:08:32,554 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.87112220926355, 'dON1': 0.3022854478851856, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.3022854478851856, 'nTON': 1, 'dON': 0.3022854478851856, 'dxOFFAngle': 86.06493946124351, 'dOFF1': 0.005853713637121109, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.005853713637121109, 'nTOFF': 1, 'dOFF': 0.005853713637121109, 'SUCCESS': False}
10:08:32,566 root DEBUG 

=================== Experiment ID #33 	 Dual Point ID: 34 ===================
10:08:32,578 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.746E-10|<1.000E-06)
10:08:32,579 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:32,906 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.098E-01 	 Total distance: 6.098E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([193], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:33,107 root DEBUG Side: ON	 Angle(dx0, dx): 0.60 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.014E-01 	 Total distance: 1.011E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([243], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:33,294 root DEBUG Side: ON	 Angle(dx0, dx): 0.89 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.089E-01 	 Total distance: 1.520E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([149], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:33,603 root DEBUG Side: OFF	 Angle(dx0, dx): 1.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.808E-01 	 Total distance: 7.808E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([62], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:33,604 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:33,604 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -32.14 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:33,604 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:33,604 root DEBUG dOFF/dON = 0.5
10:08:33,604 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.07422314335706, 'dON1': 1.5202038170702887, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 1.5202038170702887, 'nTON': 1, 'dON': 1.5202038170702887, 'dxOFFAngle': 85.55743259925643, 'dOFF1': 0.7807716864450771, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.7807716864450771, 'nTOFF': 1, 'dOFF': 0.7807716864450771, 'SUCCESS': False}
10:08:33,609 root DEBUG 

=================== Experiment ID #34 	 Dual Point ID: 35 ===================
10:08:33,617 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.671E-09|<1.000E-06)
10:08:33,617 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:33,865 root DEBUG Side: ON	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.888E-01 	 Total distance: 8.888E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([119], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:34,112 root DEBUG Side: OFF	 Angle(dx0, dx): 1.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.466E-01 	 Total distance: 5.466E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([50], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:34,112 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:34,113 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -23.84 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:34,113 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:34,113 root DEBUG dOFF/dON = 0.6
10:08:34,113 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.08033407116984, 'dON1': 0.8888180885722909, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.8888180885722909, 'nTON': 1, 'dON': 0.8888180885722909, 'dxOFFAngle': 88.85684887871875, 'dOFF1': 0.546646101193356, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.546646101193356, 'nTOFF': 1, 'dOFF': 0.546646101193356, 'SUCCESS': False}
10:08:34,122 root DEBUG 

=================== Experiment ID #35 	 Dual Point ID: 36 ===================
10:08:34,133 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.990E-08|<1.000E-06)
10:08:34,133 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:34,409 root DEBUG Side: ON	 Angle(dx0, dx): 0.92 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.763E-01 	 Total distance: 3.763E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([45], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:34,670 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.349E-02 	 Total distance: 5.349E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([59], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:34,670 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:34,670 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -75.11 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:34,670 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:34,670 root DEBUG dOFF/dON = 0.1
10:08:34,670 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.40922473149371, 'dON1': 0.3762905738150463, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.3762905738150463, 'nTON': 1, 'dON': 0.3762905738150463, 'dxOFFAngle': 86.53230552464979, 'dOFF1': 0.05348699598098614, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.05348699598098614, 'nTOFF': 1, 'dOFF': 0.05348699598098614, 'SUCCESS': False}
10:08:34,680 root DEBUG 

=================== Experiment ID #36 	 Dual Point ID: 37 ===================
10:08:34,689 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.012E-08|<1.000E-06)
10:08:34,690 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:35,51 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.675E-01 	 Total distance: 3.675E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([61], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:35,291 root DEBUG Side: ON	 Angle(dx0, dx): 1.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.390E-01 	 Total distance: 1.206E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([56], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:35,567 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.125E-01 	 Total distance: 7.125E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([182], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:35,766 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.528E-02 	 Total distance: 7.478E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([2], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:35,766 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:35,766 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -23.47 	 cIDON = [3 7], cIDOFF = [3 7]
10:08:35,767 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:35,767 root DEBUG dOFF/dON = 0.6
10:08:35,767 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.30764386891917, 'dON1': 1.206438849699103, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 1.206438849699103, 'nTON': 1, 'dON': 1.206438849699103, 'dxOFFAngle': 89.49566741333858, 'dOFF1': 0.7477567248282389, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.7477567248282389, 'nTOFF': 1, 'dOFF': 0.7477567248282389, 'SUCCESS': False}
10:08:35,778 root DEBUG 

=================== Experiment ID #37 	 Dual Point ID: 38 ===================
10:08:35,786 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.624E-08|<1.000E-06)
10:08:35,787 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:36,117 root DEBUG Side: ON	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.154E+00 	 Total distance: 1.154E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([75], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:08:36,404 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.424E-02 	 Total distance: 2.424E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([129], dtype=int64), array([[False]])]] 	 class: [6 7]
10:08:36,405 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:36,405 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -95.88 	 cIDON = [6 7], cIDOFF = [6 7]
10:08:36,406 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:36,406 root DEBUG dOFF/dON = 0.0
10:08:36,406 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.2997389846186, 'dON1': 1.1537293254277665, 'cIDON1': array([6, 7], dtype=int64), 'dON_patch_1': 1.1537293254277665, 'nTON': 1, 'dON': 1.1537293254277665, 'dxOFFAngle': 89.48928244564667, 'dOFF1': 0.024240929250864688, 'cIDOFF1': array([6, 7], dtype=int64), 'dOFF_patch_1': 0.024240929250864688, 'nTOFF': 1, 'dOFF': 0.024240929250864688, 'SUCCESS': False}
10:08:36,419 root DEBUG 

=================== Experiment ID #38 	 Dual Point ID: 39 ===================
10:08:36,430 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.194E-09|<1.000E-06)
10:08:36,431 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:36,737 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.051E-01 	 Total distance: 1.051E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([244], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:37,1 root DEBUG Side: OFF	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.791E-03 	 Total distance: 2.791E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([200], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:37,1 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:37,1 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -94.83 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:37,2 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:37,2 root DEBUG dOFF/dON = 0.0
10:08:37,2 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.00608643292807, 'dON1': 0.1051359544587741, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.1051359544587741, 'nTON': 1, 'dON': 0.1051359544587741, 'dxOFFAngle': 88.15784165378282, 'dOFF1': 0.002790902243157936, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.002790902243157936, 'nTOFF': 1, 'dOFF': 0.002790902243157936, 'SUCCESS': False}
10:08:37,8 root DEBUG 

=================== Experiment ID #39 	 Dual Point ID: 40 ===================
10:08:37,17 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.555E-09|<1.000E-06)
10:08:37,18 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:37,311 root DEBUG Side: ON	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.772E-04 	 Total distance: 5.772E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([167], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:37,747 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.443E-01 	 Total distance: 1.443E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([113], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:37,747 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:37,747 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.20 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:37,747 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:37,748 root DEBUG dOFF/dON = 250.0
10:08:37,748 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.92527383069647, 'dON1': 0.0005771599158882447, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.0005771599158882447, 'nTON': 1, 'dON': 0.0005771599158882447, 'dxOFFAngle': 88.08195950699775, 'dOFF1': 0.14426540455625048, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.14426540455625048, 'nTOFF': 1, 'dOFF': 0.14426540455625048, 'SUCCESS': True}
10:08:37,764 root DEBUG 

=================== Experiment ID #40 	 Dual Point ID: 41 ===================
10:08:37,774 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.870E-10|<1.000E-06)
10:08:37,775 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:38,48 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.097E-01 	 Total distance: 1.097E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([92], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:38,345 root DEBUG Side: OFF	 Angle(dx0, dx): 1.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.243E-02 	 Total distance: 5.243E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([60], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:38,345 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:38,346 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -35.31 	 cIDON = [3 7], cIDOFF = [3 7]
10:08:38,346 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:38,346 root DEBUG dOFF/dON = 0.5
10:08:38,346 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.4135355542068, 'dON1': 0.10967427187285415, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.10967427187285415, 'nTON': 1, 'dON': 0.10967427187285415, 'dxOFFAngle': 87.21843644632017, 'dOFF1': 0.05243137757171979, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.05243137757171979, 'nTOFF': 1, 'dOFF': 0.05243137757171979, 'SUCCESS': False}
10:08:38,363 root DEBUG 

=================== Experiment ID #41 	 Dual Point ID: 42 ===================
10:08:38,376 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.824E-08|<1.000E-06)
10:08:38,376 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:38,721 root DEBUG Side: ON	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.369E-01 	 Total distance: 4.369E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([234], dtype=int64), array([[ True]])]] 	 class: [0 2]
10:08:38,875 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.743E-01 	 Total distance: 8.112E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([52], dtype=int64), array([[ True]])]] 	 class: [0 2]
10:08:39,140 root DEBUG Side: ON	 Angle(dx0, dx): 0.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.094E+00 	 Total distance: 1.905E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([164], dtype=int64), array([[False]])]] 	 class: [0 2]
10:08:39,348 root DEBUG Side: OFF	 Angle(dx0, dx): 1.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.328E-06 	 Total distance: 4.328E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 2]
10:08:39,348 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:39,348 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -100.00 	 cIDON = [0 2], cIDOFF = [0 2]
10:08:39,348 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:39,348 root DEBUG dOFF/dON = 0.0
10:08:39,348 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.11363630277891, 'dON1': 1.9048787390793454, 'cIDON1': array([0, 2], dtype=int64), 'dON_patch_1': 1.9048787390793454, 'nTON': 1, 'dON': 1.9048787390793454, 'dxOFFAngle': 88.31143110927175, 'dOFF1': 4.327741018693552e-06, 'cIDOFF1': array([0, 2], dtype=int64), 'dOFF_patch_1': 4.327741018693552e-06, 'nTOFF': 1, 'dOFF': 4.327741018693552e-06, 'SUCCESS': False}
10:08:39,354 root DEBUG 

=================== Experiment ID #42 	 Dual Point ID: 43 ===================
10:08:39,363 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.420E-08|<1.000E-06)
10:08:39,363 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:39,707 root DEBUG Side: ON	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.173E-01 	 Total distance: 2.173E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([189], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:40,42 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.589E-01 	 Total distance: 4.589E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([161], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:40,43 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:40,44 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 35.73 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:40,44 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:40,45 root DEBUG dOFF/dON = 2.1
10:08:40,45 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.76191997578067, 'dON1': 0.21729712072146107, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.21729712072146107, 'nTON': 1, 'dON': 0.21729712072146107, 'dxOFFAngle': 89.31906944431826, 'dOFF1': 0.4588722338314129, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.4588722338314129, 'nTOFF': 1, 'dOFF': 0.4588722338314129, 'SUCCESS': True}
10:08:40,59 root DEBUG 

=================== Experiment ID #43 	 Dual Point ID: 44 ===================
10:08:40,72 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.118E-08|<1.000E-06)
10:08:40,72 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:40,447 root DEBUG Side: ON	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.788E-01 	 Total distance: 1.788E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([0], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:40,679 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.924E-02 	 Total distance: 8.924E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([153], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:40,867 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.926E-01 	 Total distance: 3.818E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([18], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:40,867 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:40,867 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 36.22 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:40,867 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:40,867 root DEBUG dOFF/dON = 2.1
10:08:40,867 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.91652374341948, 'dON1': 0.1787842693621059, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.1787842693621059, 'nTON': 1, 'dON': 0.1787842693621059, 'dxOFFAngle': 86.62529329077847, 'dOFF1': 0.38184474938587804, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.38184474938587804, 'nTOFF': 1, 'dOFF': 0.38184474938587804, 'SUCCESS': True}
10:08:40,880 root DEBUG 

=================== Experiment ID #44 	 Dual Point ID: 45 ===================
10:08:40,889 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.640E-09|<1.000E-06)
10:08:40,889 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:41,221 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.801E-01 	 Total distance: 3.801E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([202], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:41,391 root DEBUG Side: ON	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.033E-01 	 Total distance: 4.833E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([125], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:41,658 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.895E-02 	 Total distance: 3.895E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([228], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:41,658 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:41,658 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -85.08 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:41,658 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:41,658 root DEBUG dOFF/dON = 0.1
10:08:41,658 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.35210843940791, 'dON1': 0.4833050935571362, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.4833050935571362, 'nTON': 1, 'dON': 0.4833050935571362, 'dxOFFAngle': 88.18396506608646, 'dOFF1': 0.03894943482637243, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.03894943482637243, 'nTOFF': 1, 'dOFF': 0.03894943482637243, 'SUCCESS': False}
10:08:41,669 root DEBUG 

=================== Experiment ID #45 	 Dual Point ID: 46 ===================
10:08:41,679 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.183E-08|<1.000E-06)
10:08:41,679 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:42,32 root DEBUG Side: ON	 Angle(dx0, dx): 0.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.103E-02 	 Total distance: 5.103E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([27], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:08:42,365 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.766E-02 	 Total distance: 3.766E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([11], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:08:42,365 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:42,365 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -15.07 	 cIDON = [4 8], cIDOFF = [4 8]
10:08:42,365 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:42,365 root DEBUG dOFF/dON = 0.7
10:08:42,365 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.90893837756597, 'dON1': 0.0510320705749568, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.0510320705749568, 'nTON': 1, 'dON': 0.0510320705749568, 'dxOFFAngle': 89.00684161318459, 'dOFF1': 0.03766156325476179, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.03766156325476179, 'nTOFF': 1, 'dOFF': 0.03766156325476179, 'SUCCESS': False}
10:08:42,373 root DEBUG 

=================== Experiment ID #46 	 Dual Point ID: 47 ===================
10:08:42,385 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.142E-09|<1.000E-06)
10:08:42,386 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:42,853 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.819E-01 	 Total distance: 2.819E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([7], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:43,54 root DEBUG Side: OFF	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.281E-02 	 Total distance: 9.281E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([35], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:43,54 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:43,54 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -50.47 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:43,54 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:43,54 root DEBUG dOFF/dON = 0.3
10:08:43,55 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.48225618540512, 'dON1': 0.28191494158934327, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.28191494158934327, 'nTON': 1, 'dON': 0.28191494158934327, 'dxOFFAngle': 89.32296530761465, 'dOFF1': 0.09280919118458332, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.09280919118458332, 'nTOFF': 1, 'dOFF': 0.09280919118458332, 'SUCCESS': False}
10:08:43,60 root DEBUG 

=================== Experiment ID #47 	 Dual Point ID: 48 ===================
10:08:43,69 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.299E-08|<1.000E-06)
10:08:43,69 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:43,406 root DEBUG Side: ON	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.893E-01 	 Total distance: 4.893E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([67], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:43,607 root DEBUG Side: OFF	 Angle(dx0, dx): 0.94 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.855E-01 	 Total distance: 2.855E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([26], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:43,822 root DEBUG Side: OFF	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.454E-01 	 Total distance: 1.031E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([115], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:43,822 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:43,823 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 35.62 	 cIDON = [3 7], cIDOFF = [3 7]
10:08:43,823 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:43,823 root DEBUG dOFF/dON = 2.1
10:08:43,823 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.31397840817351, 'dON1': 0.4893145150165775, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.4893145150165775, 'nTON': 1, 'dON': 0.4893145150165775, 'dxOFFAngle': 85.38360719089486, 'dOFF1': 1.0308025596515697, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 1.0308025596515697, 'nTOFF': 1, 'dOFF': 1.0308025596515697, 'SUCCESS': True}
10:08:43,832 root DEBUG 

=================== Experiment ID #48 	 Dual Point ID: 49 ===================
10:08:43,842 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.058E-08|<1.000E-06)
10:08:43,843 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:44,134 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.357E-01 	 Total distance: 3.357E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([168], dtype=int64), array([[ True]])]] 	 class: [0 7]
10:08:44,444 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.679E-01 	 Total distance: 3.679E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([77], dtype=int64), array([[ True]])]] 	 class: [1 7]
10:08:44,444 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:44,445 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 4.58 	 cIDON = [0 7], cIDOFF = [1 7]
10:08:44,445 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:44,445 root DEBUG dOFF/dON = 1.1
10:08:44,445 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.91187733361714, 'dON1': 0.33566318751184493, 'cIDON1': array([0, 7], dtype=int64), 'dON_patch_1': 0.33566318751184493, 'nTON': 1, 'dON': 0.33566318751184493, 'dxOFFAngle': 89.67184729897076, 'dOFF1': 0.36789101442861555, 'cIDOFF1': array([1, 7], dtype=int64), 'dOFF_patch_1': 0.36789101442861555, 'nTOFF': 1, 'dOFF': 0.36789101442861555, 'SUCCESS': True}
10:08:44,457 root DEBUG 

=================== Experiment ID #49 	 Dual Point ID: 50 ===================
10:08:44,465 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.153E-08|<1.000E-06)
10:08:44,465 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:44,696 root DEBUG Side: ON	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.721E-02 	 Total distance: 6.721E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([234], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:44,959 root DEBUG Side: OFF	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.397E-01 	 Total distance: 5.397E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([147], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:44,959 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:44,960 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 77.85 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:44,960 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:44,960 root DEBUG dOFF/dON = 8.0
10:08:44,960 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.84659831567625, 'dON1': 0.06721443875427134, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.06721443875427134, 'nTON': 1, 'dON': 0.06721443875427134, 'dxOFFAngle': 88.56955443057907, 'dOFF1': 0.539722115423906, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.539722115423906, 'nTOFF': 1, 'dOFF': 0.539722115423906, 'SUCCESS': True}
10:08:44,967 root DEBUG 

=================== Experiment ID #50 	 Dual Point ID: 51 ===================
10:08:44,977 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.410E-08|<1.000E-06)
10:08:44,977 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:45,206 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.949E-01 	 Total distance: 1.949E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([34], dtype=int64), array([[ True]])]] 	 class: [1 3]
10:08:45,433 root DEBUG Side: OFF	 Angle(dx0, dx): 2.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.164E-06 	 Total distance: 2.164E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 3]
10:08:45,433 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:45,434 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -100.00 	 cIDON = [1 3], cIDOFF = [0 3]
10:08:45,434 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:45,434 root DEBUG dOFF/dON = 0.0
10:08:45,434 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.83774913647903, 'dON1': 0.1949078168258435, 'cIDON1': array([1, 3], dtype=int64), 'dON_patch_1': 0.1949078168258435, 'nTON': 1, 'dON': 0.1949078168258435, 'dxOFFAngle': 87.88585343454365, 'dOFF1': 2.164404143494453e-06, 'cIDOFF1': array([0, 3], dtype=int64), 'dOFF_patch_1': 2.164404143494453e-06, 'nTOFF': 1, 'dOFF': 2.164404143494453e-06, 'SUCCESS': False}
10:08:45,444 root DEBUG 

=================== Experiment ID #51 	 Dual Point ID: 52 ===================
10:08:45,454 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.254E-08|<1.000E-06)
10:08:45,454 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:45,764 root DEBUG Side: ON	 Angle(dx0, dx): 0.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.513E-01 	 Total distance: 3.513E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([233], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:08:46,40 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.252E-01 	 Total distance: 5.252E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([16], dtype=int64), array([[False]])]] 	 class: [2 5]
10:08:46,190 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.172E-02 	 Total distance: 5.469E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([37], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:08:46,355 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.506E-01 	 Total distance: 6.975E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([12], dtype=int64), array([[False]])]] 	 class: [2 5]
10:08:46,608 root DEBUG Side: OFF	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.287E-01 	 Total distance: 1.026E+00 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([140], dtype=int64), array([[False]])]] 	 class: [2 5]
10:08:46,880 root DEBUG Side: OFF	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.608E-01 	 Total distance: 1.387E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([30], dtype=int64), array([[False]])]] 	 class: [2 5]
10:08:46,880 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:46,881 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 59.58 	 cIDON = [2 5], cIDOFF = [2 5]
10:08:46,881 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:46,881 root DEBUG dOFF/dON = 3.9
10:08:46,881 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.52072483000461, 'dON1': 0.35125856667673894, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.35125856667673894, 'nTON': 1, 'dON': 0.35125856667673894, 'dxOFFAngle': 87.46142089528497, 'dOFF1': 1.3869552097361955, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 1.3869552097361955, 'nTOFF': 1, 'dOFF': 1.3869552097361955, 'SUCCESS': True}
10:08:46,890 root DEBUG 

=================== Experiment ID #52 	 Dual Point ID: 53 ===================
10:08:46,898 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.877E-09|<1.000E-06)
10:08:46,898 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:47,212 root DEBUG Side: ON	 Angle(dx0, dx): 0.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.932E-01 	 Total distance: 2.932E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([138], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:47,526 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.828E-01 	 Total distance: 2.828E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([6], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:47,752 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.485E-02 	 Total distance: 3.477E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([181], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:48,15 root DEBUG Side: OFF	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.316E+00 	 Total distance: 1.664E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([85], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:48,15 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:48,16 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 70.04 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:48,16 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:48,16 root DEBUG dOFF/dON = 5.7
10:08:48,16 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.30553314403289, 'dON1': 0.29321457189804934, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.29321457189804934, 'nTON': 1, 'dON': 0.29321457189804934, 'dxOFFAngle': 87.54673520767471, 'dOFF1': 1.664020119123985, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 1.664020119123985, 'nTOFF': 1, 'dOFF': 1.664020119123985, 'SUCCESS': True}
10:08:48,31 root DEBUG 

=================== Experiment ID #53 	 Dual Point ID: 54 ===================
10:08:48,43 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.287E-10|<1.000E-06)
10:08:48,43 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:48,290 root DEBUG Side: ON	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.485E-01 	 Total distance: 1.485E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([31], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:48,569 root DEBUG Side: OFF	 Angle(dx0, dx): 0.77 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.094E-01 	 Total distance: 3.094E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([130], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:48,570 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:48,570 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 35.13 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:48,570 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:48,570 root DEBUG dOFF/dON = 2.1
10:08:48,570 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.62073168426666, 'dON1': 0.1485397180250672, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.1485397180250672, 'nTON': 1, 'dON': 0.1485397180250672, 'dxOFFAngle': 87.15536683282676, 'dOFF1': 0.30939918079302975, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.30939918079302975, 'nTOFF': 1, 'dOFF': 0.30939918079302975, 'SUCCESS': True}
10:08:48,577 root DEBUG 

=================== Experiment ID #54 	 Dual Point ID: 55 ===================
10:08:48,588 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.574E-08|<1.000E-06)
10:08:48,588 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:48,920 root DEBUG Side: ON	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.615E-01 	 Total distance: 2.615E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([220], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:49,178 root DEBUG Side: OFF	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.441E-01 	 Total distance: 3.441E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([213], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:49,178 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:49,178 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 13.64 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:49,179 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:49,179 root DEBUG dOFF/dON = 1.3
10:08:49,179 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.50064892230795, 'dON1': 0.26148231737819244, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.26148231737819244, 'nTON': 1, 'dON': 0.26148231737819244, 'dxOFFAngle': 89.34448962461774, 'dOFF1': 0.34406623214900395, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.34406623214900395, 'nTOFF': 1, 'dOFF': 0.34406623214900395, 'SUCCESS': True}
10:08:49,195 root DEBUG 

=================== Experiment ID #55 	 Dual Point ID: 56 ===================
10:08:49,204 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.172E-09|<1.000E-06)
10:08:49,204 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:49,534 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.218E-01 	 Total distance: 1.218E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([80], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:08:49,957 root DEBUG Side: OFF	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.284E-02 	 Total distance: 2.284E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([228], dtype=int64), array([[False]])]] 	 class: [5 9]
10:08:49,957 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:49,957 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -68.42 	 cIDON = [5 9], cIDOFF = [5 9]
10:08:49,957 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:49,958 root DEBUG dOFF/dON = 0.2
10:08:49,958 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.20577665456838, 'dON1': 0.12183278477287526, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.12183278477287526, 'nTON': 1, 'dON': 0.12183278477287526, 'dxOFFAngle': 87.61896301620607, 'dOFF1': 0.022843689941156833, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.022843689941156833, 'nTOFF': 1, 'dOFF': 0.022843689941156833, 'SUCCESS': False}
10:08:49,969 root DEBUG 

=================== Experiment ID #56 	 Dual Point ID: 57 ===================
10:08:49,978 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.025E-08|<1.000E-06)
10:08:49,978 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:50,291 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.306E+00 	 Total distance: 1.306E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([27], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:50,454 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.039E-02 	 Total distance: 1.386E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([193], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:50,663 root DEBUG Side: ON	 Angle(dx0, dx): 0.83 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.880E-01 	 Total distance: 1.674E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([153], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:50,929 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.013E+00 	 Total distance: 1.013E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([90], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:50,929 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:50,929 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -24.60 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:50,929 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:50,930 root DEBUG dOFF/dON = 0.6
10:08:50,930 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.39959684679403, 'dON1': 1.6742343964849242, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 1.6742343964849242, 'nTON': 1, 'dON': 1.6742343964849242, 'dxOFFAngle': 89.89763950749565, 'dOFF1': 1.0131371807339, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 1.0131371807339, 'nTOFF': 1, 'dOFF': 1.0131371807339, 'SUCCESS': False}
10:08:50,945 root DEBUG 

=================== Experiment ID #57 	 Dual Point ID: 58 ===================
10:08:50,956 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.535E-08|<1.000E-06)
10:08:50,956 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:51,248 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.757E-02 	 Total distance: 4.757E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([7], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:51,422 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.169E-02 	 Total distance: 1.093E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([73], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:51,639 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.141E-01 	 Total distance: 4.233E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([202], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:51,838 root DEBUG Side: ON	 Angle(dx0, dx): 0.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.452E-02 	 Total distance: 4.778E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([46], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:52,123 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.321E-01 	 Total distance: 4.321E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([63], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:52,371 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.170E-01 	 Total distance: 5.491E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([152], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:52,371 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:52,372 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 6.94 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:52,372 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:52,372 root DEBUG dOFF/dON = 1.1
10:08:52,372 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.83057864420934, 'dON1': 0.47783212985876766, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.47783212985876766, 'nTON': 1, 'dON': 0.47783212985876766, 'dxOFFAngle': 86.58828850518367, 'dOFF1': 0.5490800592029519, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.5490800592029519, 'nTOFF': 1, 'dOFF': 0.5490800592029519, 'SUCCESS': True}
10:08:52,381 root DEBUG 

=================== Experiment ID #58 	 Dual Point ID: 59 ===================
10:08:52,391 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.609E-08|<1.000E-06)
10:08:52,391 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:52,720 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.967E-02 	 Total distance: 2.967E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([6], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:52,879 root DEBUG Side: ON	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.870E-02 	 Total distance: 5.837E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([33], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:53,245 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.381E+00 	 Total distance: 1.381E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([155], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:53,246 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:53,246 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 91.89 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:53,246 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:53,246 root DEBUG dOFF/dON = 23.7
10:08:53,246 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.34130869422457, 'dON1': 0.058366173045061656, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.058366173045061656, 'nTON': 1, 'dON': 0.058366173045061656, 'dxOFFAngle': 88.67686695736803, 'dOFF1': 1.3812770859177348, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 1.3812770859177348, 'nTOFF': 1, 'dOFF': 1.3812770859177348, 'SUCCESS': True}
10:08:53,261 root DEBUG 

=================== Experiment ID #59 	 Dual Point ID: 60 ===================
10:08:53,272 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.207E-09|<1.000E-06)
10:08:53,273 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:53,600 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.466E-01 	 Total distance: 3.466E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([78], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:53,837 root DEBUG Side: ON	 Angle(dx0, dx): 1.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.769E-01 	 Total distance: 7.235E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([43], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:54,131 root DEBUG Side: OFF	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.613E-01 	 Total distance: 5.613E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([33], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:54,131 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:54,132 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -12.63 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:54,132 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:54,132 root DEBUG dOFF/dON = 0.8
10:08:54,132 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.50160533200814, 'dON1': 0.7235123428316488, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.7235123428316488, 'nTON': 1, 'dON': 0.7235123428316488, 'dxOFFAngle': 88.32951145022766, 'dOFF1': 0.561259539456569, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.561259539456569, 'nTOFF': 1, 'dOFF': 0.561259539456569, 'SUCCESS': False}
10:08:54,142 root DEBUG 

=================== Experiment ID #60 	 Dual Point ID: 61 ===================
10:08:54,154 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.397E-09|<1.000E-06)
10:08:54,155 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:54,498 root DEBUG Side: ON	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.299E-02 	 Total distance: 8.299E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([36], dtype=int64), array([[False]])]] 	 class: [2 9]
10:08:54,840 root DEBUG Side: OFF	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.348E-01 	 Total distance: 1.348E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([111], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:08:54,841 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:54,841 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 23.79 	 cIDON = [2 9], cIDOFF = [2 9]
10:08:54,841 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:54,841 root DEBUG dOFF/dON = 1.6
10:08:54,841 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.34890975440888, 'dON1': 0.08298717925391272, 'cIDON1': array([2, 9], dtype=int64), 'dON_patch_1': 0.08298717925391272, 'nTON': 1, 'dON': 0.08298717925391272, 'dxOFFAngle': 88.51989297246078, 'dOFF1': 0.13478474890254932, 'cIDOFF1': array([2, 9], dtype=int64), 'dOFF_patch_1': 0.13478474890254932, 'nTOFF': 1, 'dOFF': 0.13478474890254932, 'SUCCESS': True}
10:08:54,850 root DEBUG 

=================== Experiment ID #61 	 Dual Point ID: 62 ===================
10:08:54,861 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.186E-09|<1.000E-06)
10:08:54,862 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:55,188 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.176E-03 	 Total distance: 3.176E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([18], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:55,542 root DEBUG Side: OFF	 Angle(dx0, dx): 0.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.217E-02 	 Total distance: 7.217E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([239], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:55,543 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:55,543 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 91.57 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:55,543 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:55,543 root DEBUG dOFF/dON = 22.7
10:08:55,543 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.93873662870674, 'dON1': 0.0031759053065357917, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.0031759053065357917, 'nTON': 1, 'dON': 0.0031759053065357917, 'dxOFFAngle': 89.59392761506896, 'dOFF1': 0.07216655890299496, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.07216655890299496, 'nTOFF': 1, 'dOFF': 0.07216655890299496, 'SUCCESS': True}
10:08:55,557 root DEBUG 

=================== Experiment ID #62 	 Dual Point ID: 63 ===================
10:08:55,565 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.409E-08|<1.000E-06)
10:08:55,565 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:55,804 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.954E-02 	 Total distance: 7.954E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([182], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:56,129 root DEBUG Side: OFF	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.866E-01 	 Total distance: 1.866E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([55], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:56,129 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:56,129 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 40.23 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:56,129 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:56,129 root DEBUG dOFF/dON = 2.3
10:08:56,130 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.59461352056341, 'dON1': 0.07954119636135916, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.07954119636135916, 'nTON': 1, 'dON': 0.07954119636135916, 'dxOFFAngle': 88.92021731202783, 'dOFF1': 0.18662197581457268, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.18662197581457268, 'nTOFF': 1, 'dOFF': 0.18662197581457268, 'SUCCESS': True}
10:08:56,141 root DEBUG 

=================== Experiment ID #63 	 Dual Point ID: 64 ===================
10:08:56,151 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.411E-08|<1.000E-06)
10:08:56,151 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:56,493 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.893E-01 	 Total distance: 2.893E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([85], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:56,805 root DEBUG Side: OFF	 Angle(dx0, dx): 0.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.221E-01 	 Total distance: 2.221E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([87], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:56,805 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:56,805 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -13.14 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:56,805 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:56,805 root DEBUG dOFF/dON = 0.8
10:08:56,805 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.715932345577, 'dON1': 0.28932606743711736, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.28932606743711736, 'nTON': 1, 'dON': 0.28932606743711736, 'dxOFFAngle': 86.07563423399046, 'dOFF1': 0.22210945050233477, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.22210945050233477, 'nTOFF': 1, 'dOFF': 0.22210945050233477, 'SUCCESS': False}
10:08:56,812 root DEBUG 

=================== Experiment ID #64 	 Dual Point ID: 65 ===================
10:08:56,820 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.714E-09|<1.000E-06)
10:08:56,820 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:57,127 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.089E-01 	 Total distance: 5.089E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([226], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:57,288 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.946E-03 	 Total distance: 5.168E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([154], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:57,551 root DEBUG Side: ON	 Angle(dx0, dx): 0.84 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.454E-01 	 Total distance: 6.622E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([129], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:57,833 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.741E-01 	 Total distance: 2.741E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([68], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:58,6 root DEBUG Side: OFF	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.286E-02 	 Total distance: 3.070E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([177], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:58,7 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:58,8 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -36.66 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:58,8 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:58,8 root DEBUG dOFF/dON = 0.5
10:08:58,8 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.61359578511477, 'dON1': 0.662203843238691, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.662203843238691, 'nTON': 1, 'dON': 0.662203843238691, 'dxOFFAngle': 87.44094587256325, 'dOFF1': 0.30695345916862854, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.30695345916862854, 'nTOFF': 1, 'dOFF': 0.30695345916862854, 'SUCCESS': False}
10:08:58,18 root DEBUG 

=================== Experiment ID #65 	 Dual Point ID: 66 ===================
10:08:58,30 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.297E-08|<1.000E-06)
10:08:58,30 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:58,347 root DEBUG Side: ON	 Angle(dx0, dx): 1.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.352E-01 	 Total distance: 6.352E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([197], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:58,658 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.611E-03 	 Total distance: 3.611E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([50], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:58,658 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:58,658 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -98.87 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:58,659 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:58,659 root DEBUG dOFF/dON = 0.0
10:08:58,659 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.39322199990266, 'dON1': 0.6352165404161333, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.6352165404161333, 'nTON': 1, 'dON': 0.6352165404161333, 'dxOFFAngle': 87.32835350955425, 'dOFF1': 0.003610972607379626, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.003610972607379626, 'nTOFF': 1, 'dOFF': 0.003610972607379626, 'SUCCESS': False}
10:08:58,673 root DEBUG 

=================== Experiment ID #66 	 Dual Point ID: 67 ===================
10:08:58,682 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.515E-08|<1.000E-06)
10:08:58,682 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:58,997 root DEBUG Side: ON	 Angle(dx0, dx): 0.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.291E-01 	 Total distance: 4.291E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([13], dtype=int64), array([[False]])]] 	 class: [4 8]
10:08:59,271 root DEBUG Side: OFF	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.895E-01 	 Total distance: 2.895E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([41], dtype=int64), array([[False]])]] 	 class: [4 8]
10:08:59,467 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.364E-02 	 Total distance: 3.732E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([148], dtype=int64), array([[False]])]] 	 class: [4 8]
10:08:59,468 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:59,468 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -6.97 	 cIDON = [4 8], cIDOFF = [4 8]
10:08:59,468 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:59,468 root DEBUG dOFF/dON = 0.9
10:08:59,468 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.49437548602788, 'dON1': 0.42908595591337256, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.42908595591337256, 'nTON': 1, 'dON': 0.42908595591337256, 'dxOFFAngle': 89.32422379357719, 'dOFF1': 0.3731831454806948, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.3731831454806948, 'nTOFF': 1, 'dOFF': 0.3731831454806948, 'SUCCESS': False}
10:08:59,481 root DEBUG 

=================== Experiment ID #67 	 Dual Point ID: 68 ===================
10:08:59,492 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.365E-09|<1.000E-06)
10:08:59,493 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:59,736 root DEBUG Side: ON	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.402E-02 	 Total distance: 7.402E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([208], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:59,988 root DEBUG Side: OFF	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.428E-01 	 Total distance: 2.428E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([205], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:59,989 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:59,989 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 53.28 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:59,989 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:59,989 root DEBUG dOFF/dON = 3.3
10:08:59,989 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.52998089936571, 'dON1': 0.07402327395448158, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.07402327395448158, 'nTON': 1, 'dON': 0.07402327395448158, 'dxOFFAngle': 88.59750979203471, 'dOFF1': 0.24283073345518066, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.24283073345518066, 'nTOFF': 1, 'dOFF': 0.24283073345518066, 'SUCCESS': True}
10:08:59,995 root DEBUG 

=================== Experiment ID #68 	 Dual Point ID: 69 ===================
10:09:00,6 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.945E-09|<1.000E-06)
10:09:00,6 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:00,306 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.241E-01 	 Total distance: 2.241E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([69], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:00,496 root DEBUG Side: ON	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.564E-02 	 Total distance: 2.397E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([135], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:00,718 root DEBUG Side: OFF	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.514E-01 	 Total distance: 1.514E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([171], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:00,718 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:00,719 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -22.57 	 cIDON = [5 7], cIDOFF = [5 7]
10:09:00,719 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:00,719 root DEBUG dOFF/dON = 0.6
10:09:00,719 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.56405029760789, 'dON1': 0.23970777911561217, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.23970777911561217, 'nTON': 1, 'dON': 0.23970777911561217, 'dxOFFAngle': 87.26595345008158, 'dOFF1': 0.15143550629937402, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.15143550629937402, 'nTOFF': 1, 'dOFF': 0.15143550629937402, 'SUCCESS': False}
10:09:00,731 root DEBUG 

=================== Experiment ID #69 	 Dual Point ID: 70 ===================
10:09:00,741 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.058E-08|<1.000E-06)
10:09:00,741 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:01,107 root DEBUG Side: ON	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.816E-01 	 Total distance: 3.816E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([175], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:09:01,234 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.714E-02 	 Total distance: 4.288E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([48], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:09:01,436 root DEBUG Side: ON	 Angle(dx0, dx): 0.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.150E-02 	 Total distance: 5.203E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([60], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:09:01,666 root DEBUG Side: OFF	 Angle(dx0, dx): 2.79 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.214E-07 	 Total distance: 7.214E-07 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 9]
10:09:01,771 root DEBUG Side: OFF	 Angle(dx0, dx): 2.79 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.213E-07 	 Total distance: 1.443E-06 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 9]
10:09:01,911 root DEBUG Side: OFF	 Angle(dx0, dx): 2.79 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.214E-07 	 Total distance: 2.164E-06 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 9]
10:09:01,926 root DEBUG Got stuck in too many past-layer relus.
10:09:01,926 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:09:01,926 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:09:01,928 root DEBUG 

=================== Experiment ID #69 	 Dual Point ID: 71 ===================
10:09:01,940 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.045E-08|<1.000E-06)
10:09:01,940 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:02,236 root DEBUG Side: ON	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.602E-01 	 Total distance: 1.602E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([200], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:09:02,522 root DEBUG Side: ON	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.642E-02 	 Total distance: 1.867E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([138], dtype=int64), array([[False]])]] 	 class: [4 6]
10:09:02,809 root DEBUG Side: OFF	 Angle(dx0, dx): 0.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.335E-02 	 Total distance: 9.335E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([31], dtype=int64), array([[False]])]] 	 class: [4 6]
10:09:02,809 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:02,809 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -33.32 	 cIDON = [4 6], cIDOFF = [4 6]
10:09:02,809 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:02,810 root DEBUG dOFF/dON = 0.5
10:09:02,810 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.05514854758941, 'dON1': 0.18665572945790238, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.18665572945790238, 'nTON': 1, 'dON': 0.18665572945790238, 'dxOFFAngle': 87.47972760283852, 'dOFF1': 0.09335154972368548, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.09335154972368548, 'nTOFF': 1, 'dOFF': 0.09335154972368548, 'SUCCESS': False}
10:09:02,821 root DEBUG 

=================== Experiment ID #70 	 Dual Point ID: 72 ===================
10:09:02,829 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.127E-07|<1.000E-06)
10:09:02,829 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:03,152 root DEBUG Side: ON	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.289E-01 	 Total distance: 3.289E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([213], dtype=int64), array([[False]])]] 	 class: [5 8]
10:09:03,455 root DEBUG Side: OFF	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.221E-01 	 Total distance: 1.221E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([8], dtype=int64), array([[ True]])]] 	 class: [5 8]
10:09:03,455 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:03,455 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -45.85 	 cIDON = [5 8], cIDOFF = [5 8]
10:09:03,455 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:03,455 root DEBUG dOFF/dON = 0.4
10:09:03,455 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.8047282316933, 'dON1': 0.3288720347011806, 'cIDON1': array([5, 8], dtype=int64), 'dON_patch_1': 0.3288720347011806, 'nTON': 1, 'dON': 0.3288720347011806, 'dxOFFAngle': 87.490651062145, 'dOFF1': 0.12210494653830291, 'cIDOFF1': array([5, 8], dtype=int64), 'dOFF_patch_1': 0.12210494653830291, 'nTOFF': 1, 'dOFF': 0.12210494653830291, 'SUCCESS': False}
10:09:03,463 root DEBUG 

=================== Experiment ID #71 	 Dual Point ID: 73 ===================
10:09:03,475 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.494E-09|<1.000E-06)
10:09:03,475 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:03,855 root DEBUG Side: ON	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.105E-01 	 Total distance: 3.105E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([164], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:04,161 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.147E-01 	 Total distance: 4.147E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([202], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:04,345 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.892E-02 	 Total distance: 4.736E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([32], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:04,537 root DEBUG Side: OFF	 Angle(dx0, dx): 2.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.028E-01 	 Total distance: 7.764E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([5, 6], dtype=int64), array([[0.],
       [1.]])]] 	 class: [3 6]
10:09:04,537 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:04,537 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 42.87 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:04,537 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:04,537 root DEBUG dOFF/dON = 2.5
10:09:04,537 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.87553380465822, 'dON1': 0.31050382129989834, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.31050382129989834, 'nTON': 1, 'dON': 0.31050382129989834, 'dxOFFAngle': 89.40027901448907, 'dOFF1': 0.7764472849109589, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.7764472849109589, 'nTOFF': 1, 'dOFF': 0.7764472849109589, 'SUCCESS': True}
10:09:04,547 root DEBUG 

=================== Experiment ID #72 	 Dual Point ID: 74 ===================
10:09:04,559 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.859E-08|<1.000E-06)
10:09:04,560 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:04,848 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.026E-01 	 Total distance: 1.026E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([239], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:09:05,166 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.702E-02 	 Total distance: 9.702E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([206], dtype=int64), array([[False]])]] 	 class: [2 8]
10:09:05,166 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:05,166 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -2.82 	 cIDON = [2 8], cIDOFF = [2 8]
10:09:05,166 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:05,166 root DEBUG dOFF/dON = 0.9
10:09:05,166 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.66313712735938, 'dON1': 0.1026472064165987, 'cIDON1': array([2, 8], dtype=int64), 'dON_patch_1': 0.1026472064165987, 'nTON': 1, 'dON': 0.1026472064165987, 'dxOFFAngle': 86.7244216308037, 'dOFF1': 0.09702176218461578, 'cIDOFF1': array([2, 8], dtype=int64), 'dOFF_patch_1': 0.09702176218461578, 'nTOFF': 1, 'dOFF': 0.09702176218461578, 'SUCCESS': False}
10:09:05,179 root DEBUG 

=================== Experiment ID #73 	 Dual Point ID: 75 ===================
10:09:05,186 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.599E-10|<1.000E-06)
10:09:05,186 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:05,403 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.641E-01 	 Total distance: 7.641E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([100], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:05,673 root DEBUG Side: OFF	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.569E-02 	 Total distance: 4.569E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([162], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:05,673 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:05,673 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -88.72 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:05,673 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:05,673 root DEBUG dOFF/dON = 0.1
10:09:05,673 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.3475854443109, 'dON1': 0.7641243326555051, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.7641243326555051, 'nTON': 1, 'dON': 0.7641243326555051, 'dxOFFAngle': 89.49429218066231, 'dOFF1': 0.04568936838025298, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.04568936838025298, 'nTOFF': 1, 'dOFF': 0.04568936838025298, 'SUCCESS': False}
10:09:05,680 root DEBUG 

=================== Experiment ID #74 	 Dual Point ID: 76 ===================
10:09:05,687 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.412E-10|<1.000E-06)
10:09:05,687 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:05,904 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.838E-01 	 Total distance: 3.838E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([29], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:06,134 root DEBUG Side: OFF	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.469E-01 	 Total distance: 2.469E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([17], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:09:06,134 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:06,134 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -21.69 	 cIDON = [7 9], cIDOFF = [7 9]
10:09:06,134 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:06,134 root DEBUG dOFF/dON = 0.6
10:09:06,134 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.86812763353247, 'dON1': 0.3837780984178417, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.3837780984178417, 'nTON': 1, 'dON': 0.3837780984178417, 'dxOFFAngle': 89.13637445793931, 'dOFF1': 0.24694607732255414, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.24694607732255414, 'nTOFF': 1, 'dOFF': 0.24694607732255414, 'SUCCESS': False}
10:09:06,146 root DEBUG 

=================== Experiment ID #75 	 Dual Point ID: 77 ===================
10:09:06,160 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.534E-09|<1.000E-06)
10:09:06,160 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:06,436 root DEBUG Side: ON	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.205E-01 	 Total distance: 5.205E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([132], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:06,653 root DEBUG Side: ON	 Angle(dx0, dx): 0.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.104E-02 	 Total distance: 5.315E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([131], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:06,992 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.288E-01 	 Total distance: 3.288E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([194], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:06,993 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:06,993 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -23.55 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:06,993 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:06,994 root DEBUG dOFF/dON = 0.6
10:09:06,994 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.91677471219339, 'dON1': 0.5315021331510553, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.5315021331510553, 'nTON': 1, 'dON': 0.5315021331510553, 'dxOFFAngle': 89.19434683758624, 'dOFF1': 0.3288470276639206, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.3288470276639206, 'nTOFF': 1, 'dOFF': 0.3288470276639206, 'SUCCESS': False}
10:09:07,6 root DEBUG 

=================== Experiment ID #76 	 Dual Point ID: 78 ===================
10:09:07,18 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.171E-08|<1.000E-06)
10:09:07,18 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:07,251 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.368E-01 	 Total distance: 1.368E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([53], dtype=int64), array([[False]])]] 	 class: [2 8]
10:09:07,530 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.145E-03 	 Total distance: 2.145E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([136], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:09:07,531 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:07,531 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -96.91 	 cIDON = [2 8], cIDOFF = [2 8]
10:09:07,531 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:07,531 root DEBUG dOFF/dON = 0.0
10:09:07,531 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.46031874434233, 'dON1': 0.1367616967991898, 'cIDON1': array([2, 8], dtype=int64), 'dON_patch_1': 0.1367616967991898, 'nTON': 1, 'dON': 0.1367616967991898, 'dxOFFAngle': 89.60132658316937, 'dOFF1': 0.0021449583689976473, 'cIDOFF1': array([2, 8], dtype=int64), 'dOFF_patch_1': 0.0021449583689976473, 'nTOFF': 1, 'dOFF': 0.0021449583689976473, 'SUCCESS': False}
10:09:07,538 root DEBUG 

=================== Experiment ID #77 	 Dual Point ID: 79 ===================
10:09:07,549 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.135E-08|<1.000E-06)
10:09:07,549 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:07,819 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.518E-02 	 Total distance: 2.518E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([16], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:08,110 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.412E-02 	 Total distance: 1.412E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([16], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:08,110 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:08,111 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -28.12 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:08,111 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:08,111 root DEBUG dOFF/dON = 0.6
10:09:08,111 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.30895111131812, 'dON1': 0.02517546250481221, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.02517546250481221, 'nTON': 1, 'dON': 0.02517546250481221, 'dxOFFAngle': 89.54828201187854, 'dOFF1': 0.014122935530361294, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.014122935530361294, 'nTOFF': 1, 'dOFF': 0.014122935530361294, 'SUCCESS': False}
10:09:08,122 root DEBUG 

=================== Experiment ID #78 	 Dual Point ID: 80 ===================
10:09:08,134 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.228E-08|<1.000E-06)
10:09:08,134 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:08,380 root DEBUG Side: ON	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.870E-02 	 Total distance: 2.870E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([130], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:08,537 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.878E-01 	 Total distance: 2.165E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([132], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:08,721 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.373E-03 	 Total distance: 2.178E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([200], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:08,921 root DEBUG Side: ON	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.277E-01 	 Total distance: 4.455E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([33], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:09,242 root DEBUG Side: OFF	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.210E-01 	 Total distance: 1.210E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([107], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:09,242 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:09,243 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -57.29 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:09,243 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:09,243 root DEBUG dOFF/dON = 0.3
10:09:09,243 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.57511644159135, 'dON1': 0.44553300865167556, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.44553300865167556, 'nTON': 1, 'dON': 0.44553300865167556, 'dxOFFAngle': 86.51742741350253, 'dOFF1': 0.12097045123179097, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.12097045123179097, 'nTOFF': 1, 'dOFF': 0.12097045123179097, 'SUCCESS': False}
10:09:09,249 root DEBUG 

=================== Experiment ID #79 	 Dual Point ID: 81 ===================
10:09:09,260 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.338E-08|<1.000E-06)
10:09:09,260 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:09,609 root DEBUG Side: ON	 Angle(dx0, dx): 0.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.221E-01 	 Total distance: 2.221E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([65], dtype=int64), array([[False]])]] 	 class: [4 6]
10:09:09,942 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.874E-01 	 Total distance: 1.874E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([19], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:09:10,144 root DEBUG Side: OFF	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.130E-01 	 Total distance: 4.004E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([199], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:09:10,144 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:10,144 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 28.64 	 cIDON = [4 6], cIDOFF = [4 6]
10:09:10,144 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:10,144 root DEBUG dOFF/dON = 1.8
10:09:10,144 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.3513396028843, 'dON1': 0.22207208172595735, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.22207208172595735, 'nTON': 1, 'dON': 0.22207208172595735, 'dxOFFAngle': 88.24517352679023, 'dOFF1': 0.40035615543812, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.40035615543812, 'nTOFF': 1, 'dOFF': 0.40035615543812, 'SUCCESS': True}
10:09:10,151 root DEBUG 

=================== Experiment ID #80 	 Dual Point ID: 82 ===================
10:09:10,160 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.802E-09|<1.000E-06)
10:09:10,161 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:10,399 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.771E-02 	 Total distance: 2.771E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([33], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:10,702 root DEBUG Side: OFF	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.710E-01 	 Total distance: 3.710E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([39], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:10,889 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.112E-01 	 Total distance: 8.822E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([119], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:11,56 root DEBUG Side: OFF	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.799E-02 	 Total distance: 9.102E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([209], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:11,210 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.971E-02 	 Total distance: 9.499E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([178], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:11,210 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:11,210 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 94.33 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:11,210 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:11,210 root DEBUG dOFF/dON = 34.3
10:09:11,210 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.97468858214347, 'dON1': 0.027712920714693407, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.027712920714693407, 'nTON': 1, 'dON': 0.027712920714693407, 'dxOFFAngle': 88.08804745539423, 'dOFF1': 0.9499078485607624, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.9499078485607624, 'nTOFF': 1, 'dOFF': 0.9499078485607624, 'SUCCESS': True}
10:09:11,217 root DEBUG 

=================== Experiment ID #81 	 Dual Point ID: 83 ===================
10:09:11,230 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.634E-08|<1.000E-06)
10:09:11,230 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:11,550 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.076E-02 	 Total distance: 1.076E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([139], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:11,963 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.446E-01 	 Total distance: 1.446E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([26], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:12,213 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.210E-01 	 Total distance: 2.655E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([190], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:12,214 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:12,214 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 92.21 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:12,214 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:12,214 root DEBUG dOFF/dON = 24.7
10:09:12,214 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.55093694010351, 'dON1': 0.010759469580887512, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.010759469580887512, 'nTON': 1, 'dON': 0.010759469580887512, 'dxOFFAngle': 89.9737171181006, 'dOFF1': 0.2655340065947607, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.2655340065947607, 'nTOFF': 1, 'dOFF': 0.2655340065947607, 'SUCCESS': True}
10:09:12,220 root DEBUG 

=================== Experiment ID #82 	 Dual Point ID: 84 ===================
10:09:12,229 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.694E-08|<1.000E-06)
10:09:12,229 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:12,513 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.008E+00 	 Total distance: 1.008E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([193], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:12,689 root DEBUG Side: ON	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.446E-02 	 Total distance: 1.083E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([24], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:12,980 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.642E-02 	 Total distance: 3.642E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([139], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:13,160 root DEBUG Side: OFF	 Angle(dx0, dx): 0.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.815E-01 	 Total distance: 2.179E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([43], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:13,161 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:13,161 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -66.49 	 cIDON = [5 7], cIDOFF = [5 7]
10:09:13,161 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:13,161 root DEBUG dOFF/dON = 0.2
10:09:13,162 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.57560640902439, 'dON1': 1.0827454755659038, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 1.0827454755659038, 'nTON': 1, 'dON': 1.0827454755659038, 'dxOFFAngle': 88.9305421349557, 'dOFF1': 0.21790286747854348, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.21790286747854348, 'nTOFF': 1, 'dOFF': 0.21790286747854348, 'SUCCESS': False}
10:09:13,179 root DEBUG 

=================== Experiment ID #83 	 Dual Point ID: 85 ===================
10:09:13,193 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.451E-09|<1.000E-06)
10:09:13,193 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:13,501 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.306E-01 	 Total distance: 2.306E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([147], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:09:13,773 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.614E-02 	 Total distance: 2.567E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([94], dtype=int64), array([[False]])]] 	 class: [4 5]
10:09:13,979 root DEBUG Side: ON	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.280E-03 	 Total distance: 2.640E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([160], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:09:14,296 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.368E-02 	 Total distance: 7.368E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([38], dtype=int64), array([[False]])]] 	 class: [4 5]
10:09:14,297 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:14,297 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -56.36 	 cIDON = [4 5], cIDOFF = [4 5]
10:09:14,297 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:14,297 root DEBUG dOFF/dON = 0.3
10:09:14,297 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.79973271569702, 'dON1': 0.26400108194706373, 'cIDON1': array([4, 5], dtype=int64), 'dON_patch_1': 0.26400108194706373, 'nTON': 1, 'dON': 0.26400108194706373, 'dxOFFAngle': 89.65199893522536, 'dOFF1': 0.07367583116878004, 'cIDOFF1': array([4, 5], dtype=int64), 'dOFF_patch_1': 0.07367583116878004, 'nTOFF': 1, 'dOFF': 0.07367583116878004, 'SUCCESS': False}
10:09:14,304 root DEBUG 

=================== Experiment ID #84 	 Dual Point ID: 86 ===================
10:09:14,313 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.716E-09|<1.000E-06)
10:09:14,313 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:14,677 root DEBUG Side: ON	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.455E-01 	 Total distance: 8.455E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([107], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:15,13 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.209E-02 	 Total distance: 1.209E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([182], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:15,13 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:15,14 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -97.18 	 cIDON = [4 7], cIDOFF = [4 7]
10:09:15,14 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:15,14 root DEBUG dOFF/dON = 0.0
10:09:15,14 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.39495324447667, 'dON1': 0.8454896063240265, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.8454896063240265, 'nTON': 1, 'dON': 0.8454896063240265, 'dxOFFAngle': 87.58698963717241, 'dOFF1': 0.012093576233775709, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.012093576233775709, 'nTOFF': 1, 'dOFF': 0.012093576233775709, 'SUCCESS': False}
10:09:15,21 root DEBUG 

=================== Experiment ID #85 	 Dual Point ID: 87 ===================
10:09:15,30 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.251E-09|<1.000E-06)
10:09:15,31 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:15,368 root DEBUG Side: ON	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.989E-02 	 Total distance: 9.989E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([91], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:09:15,655 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.909E-02 	 Total distance: 1.909E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([59], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:09:15,871 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.902E-02 	 Total distance: 1.181E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([147], dtype=int64), array([[False]])]] 	 class: [0 9]
10:09:16,23 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.292E-02 	 Total distance: 1.410E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([218], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:09:16,221 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.368E-01 	 Total distance: 2.779E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([41], dtype=int64), array([[False]])]] 	 class: [0 9]
10:09:16,394 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.726E-01 	 Total distance: 4.505E-01 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([52], dtype=int64), array([[False]])]] 	 class: [0 9]
10:09:16,616 root DEBUG Side: OFF	 Angle(dx0, dx): 0.93 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.033E-02 	 Total distance: 5.408E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([85], dtype=int64), array([[False]])]] 	 class: [0 9]
10:09:16,616 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:16,616 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 68.82 	 cIDON = [1 9], cIDOFF = [0 9]
10:09:16,616 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:16,616 root DEBUG dOFF/dON = 5.4
10:09:16,616 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.76174477385412, 'dON1': 0.09988501107338238, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.09988501107338238, 'nTON': 1, 'dON': 0.09988501107338238, 'dxOFFAngle': 85.04193336456015, 'dOFF1': 0.5408238494662746, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.5408238494662746, 'nTOFF': 1, 'dOFF': 0.5408238494662746, 'SUCCESS': True}
10:09:16,623 root DEBUG 

=================== Experiment ID #86 	 Dual Point ID: 88 ===================
10:09:16,631 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.228E-08|<1.000E-06)
10:09:16,632 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:16,990 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.302E-01 	 Total distance: 6.302E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([128], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:17,166 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.666E-01 	 Total distance: 7.968E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([57], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:17,330 root DEBUG Side: ON	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.434E-01 	 Total distance: 9.402E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([20], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:17,611 root DEBUG Side: OFF	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.970E-03 	 Total distance: 7.970E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([33], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:17,611 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:17,612 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -98.32 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:17,612 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:17,612 root DEBUG dOFF/dON = 0.0
10:09:17,612 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.72148417621695, 'dON1': 0.9401949913504832, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.9401949913504832, 'nTON': 1, 'dON': 0.9401949913504832, 'dxOFFAngle': 88.73001322053499, 'dOFF1': 0.007970195144372765, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.007970195144372765, 'nTOFF': 1, 'dOFF': 0.007970195144372765, 'SUCCESS': False}
10:09:17,623 root DEBUG 

=================== Experiment ID #87 	 Dual Point ID: 89 ===================
10:09:17,631 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.966E-09|<1.000E-06)
10:09:17,631 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:17,876 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.033E-01 	 Total distance: 2.033E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([255], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:18,99 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.191E-01 	 Total distance: 4.224E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([29], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:18,424 root DEBUG Side: OFF	 Angle(dx0, dx): 1.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.965E-01 	 Total distance: 1.965E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([31], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:09:18,424 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:18,424 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -36.50 	 cIDON = [7 9], cIDOFF = [7 9]
10:09:18,425 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:18,425 root DEBUG dOFF/dON = 0.5
10:09:18,425 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.87872928028324, 'dON1': 0.42238892805489264, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.42238892805489264, 'nTON': 1, 'dON': 0.42238892805489264, 'dxOFFAngle': 89.860617193276, 'dOFF1': 0.1965158284222805, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.1965158284222805, 'nTOFF': 1, 'dOFF': 0.1965158284222805, 'SUCCESS': False}
10:09:18,434 root DEBUG 

=================== Experiment ID #88 	 Dual Point ID: 90 ===================
10:09:18,442 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.132E-08|<1.000E-06)
10:09:18,443 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:18,752 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.151E-02 	 Total distance: 2.151E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([70], dtype=int64), array([[False]])]] 	 class: [6 9]
10:09:18,943 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.951E-01 	 Total distance: 2.166E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([139], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:09:19,182 root DEBUG Side: ON	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.265E-02 	 Total distance: 2.393E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([33], dtype=int64), array([[False]])]] 	 class: [6 9]
10:09:19,475 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.969E-01 	 Total distance: 6.969E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([7], dtype=int64), array([[False]])]] 	 class: [6 9]
10:09:19,475 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:19,475 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 48.88 	 cIDON = [6 9], cIDOFF = [6 9]
10:09:19,475 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:19,475 root DEBUG dOFF/dON = 2.9
10:09:19,475 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.1041786265036, 'dON1': 0.23928031358502225, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.23928031358502225, 'nTON': 1, 'dON': 0.23928031358502225, 'dxOFFAngle': 89.27769088859816, 'dOFF1': 0.6969170978971295, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.6969170978971295, 'nTOFF': 1, 'dOFF': 0.6969170978971295, 'SUCCESS': True}
10:09:19,485 root DEBUG 

=================== Experiment ID #89 	 Dual Point ID: 91 ===================
10:09:19,494 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.775E-08|<1.000E-06)
10:09:19,495 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:19,773 root DEBUG Side: ON	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.798E-01 	 Total distance: 7.798E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([72], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:09:20,86 root DEBUG Side: OFF	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.586E-01 	 Total distance: 2.586E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([24], dtype=int64), array([[False]])]] 	 class: [2 3]
10:09:20,86 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:20,86 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -50.20 	 cIDON = [2 3], cIDOFF = [2 3]
10:09:20,86 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:20,86 root DEBUG dOFF/dON = 0.3
10:09:20,86 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.6664114295586, 'dON1': 0.7798240557987517, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.7798240557987517, 'nTON': 1, 'dON': 0.7798240557987517, 'dxOFFAngle': 89.80871735902655, 'dOFF1': 0.25856180175435334, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.25856180175435334, 'nTOFF': 1, 'dOFF': 0.25856180175435334, 'SUCCESS': False}
10:09:20,95 root DEBUG 

=================== Experiment ID #90 	 Dual Point ID: 92 ===================
10:09:20,106 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.462E-07|<1.000E-06)
10:09:20,106 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:20,389 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.451E-04 	 Total distance: 5.451E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([14], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:20,679 root DEBUG Side: OFF	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.537E-01 	 Total distance: 1.537E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([38], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:20,679 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:20,680 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.29 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:20,680 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:20,680 root DEBUG dOFF/dON = 282.0
10:09:20,680 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.92000998947198, 'dON1': 0.0005450591098898781, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.0005450591098898781, 'nTON': 1, 'dON': 0.0005450591098898781, 'dxOFFAngle': 89.89094290841888, 'dOFF1': 0.15372626404617334, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.15372626404617334, 'nTOFF': 1, 'dOFF': 0.15372626404617334, 'SUCCESS': True}
10:09:20,690 root DEBUG 

=================== Experiment ID #91 	 Dual Point ID: 93 ===================
10:09:20,697 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.345E-08|<1.000E-06)
10:09:20,697 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:21,8 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.795E-01 	 Total distance: 5.795E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([55], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:09:21,199 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.808E-01 	 Total distance: 1.160E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([199], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:09:21,411 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.083E-01 	 Total distance: 1.669E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([167], dtype=int64), array([[False]])]] 	 class: [1 8]
10:09:21,659 root DEBUG Side: OFF	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.226E-05 	 Total distance: 1.226E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:09:21,659 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:21,659 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -100.00 	 cIDON = [1 8], cIDOFF = [1 8]
10:09:21,660 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:21,660 root DEBUG dOFF/dON = 0.0
10:09:21,660 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.75065700257078, 'dON1': 1.6685728197615646, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 1.6685728197615646, 'nTON': 1, 'dON': 1.6685728197615646, 'dxOFFAngle': 89.61857786565058, 'dOFF1': 1.225687984215758e-05, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 1.225687984215758e-05, 'nTOFF': 1, 'dOFF': 1.225687984215758e-05, 'SUCCESS': False}
10:09:21,676 root DEBUG 

=================== Experiment ID #92 	 Dual Point ID: 94 ===================
10:09:21,690 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.187E-08|<1.000E-06)
10:09:21,691 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:22,31 root DEBUG Side: ON	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.979E-02 	 Total distance: 6.979E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([5], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:09:22,279 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.461E-01 	 Total distance: 1.461E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([167], dtype=int64), array([[False]])]] 	 class: [4 8]
10:09:22,280 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:22,280 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 35.34 	 cIDON = [4 8], cIDOFF = [4 8]
10:09:22,280 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:22,280 root DEBUG dOFF/dON = 2.1
10:09:22,280 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.66058234734864, 'dON1': 0.06979017210704552, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.06979017210704552, 'nTON': 1, 'dON': 0.06979017210704552, 'dxOFFAngle': 88.63579221575269, 'dOFF1': 0.14607456522309287, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.14607456522309287, 'nTOFF': 1, 'dOFF': 0.14607456522309287, 'SUCCESS': True}
10:09:22,291 root DEBUG 

=================== Experiment ID #93 	 Dual Point ID: 95 ===================
10:09:22,299 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.225E-08|<1.000E-06)
10:09:22,299 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:22,603 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.702E-01 	 Total distance: 5.702E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([173], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:22,901 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.835E-02 	 Total distance: 4.835E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([234], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:23,131 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.005E-01 	 Total distance: 6.488E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([67], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:23,302 root DEBUG Side: OFF	 Angle(dx0, dx): 0.86 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.539E-01 	 Total distance: 1.103E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([10], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:23,303 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:23,303 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 31.83 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:23,303 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:23,303 root DEBUG dOFF/dON = 1.9
10:09:23,303 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.32876885679505, 'dON1': 0.5702266396825116, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.5702266396825116, 'nTON': 1, 'dON': 0.5702266396825116, 'dxOFFAngle': 89.59220815811675, 'dOFF1': 1.1027326283639807, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 1.1027326283639807, 'nTOFF': 1, 'dOFF': 1.1027326283639807, 'SUCCESS': True}
10:09:23,310 root DEBUG 

=================== Experiment ID #94 	 Dual Point ID: 96 ===================
10:09:23,316 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.399E-08|<1.000E-06)
10:09:23,316 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:23,630 root DEBUG Side: ON	 Angle(dx0, dx): 0.73 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.179E-01 	 Total distance: 1.179E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([138], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:23,948 root DEBUG Side: OFF	 Angle(dx0, dx): 1.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.967E-02 	 Total distance: 9.967E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([63], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:23,948 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:23,948 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -8.38 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:23,949 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:23,949 root DEBUG dOFF/dON = 0.8
10:09:23,949 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.10840046980853, 'dON1': 0.1179014431332468, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.1179014431332468, 'nTON': 1, 'dON': 0.1179014431332468, 'dxOFFAngle': 88.1392497861133, 'dOFF1': 0.09967138528093335, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.09967138528093335, 'nTOFF': 1, 'dOFF': 0.09967138528093335, 'SUCCESS': False}
10:09:23,961 root DEBUG 

=================== Experiment ID #95 	 Dual Point ID: 97 ===================
10:09:23,967 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.166E-09|<1.000E-06)
10:09:23,967 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:24,228 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.204E-01 	 Total distance: 1.204E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([53], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:09:24,424 root DEBUG Side: ON	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.229E-02 	 Total distance: 2.127E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([29], dtype=int64), array([[False]])]] 	 class: [3 4]
10:09:24,697 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.210E-01 	 Total distance: 4.210E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([164], dtype=int64), array([[False]])]] 	 class: [3 4]
10:09:24,698 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:24,698 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 32.87 	 cIDON = [3 4], cIDOFF = [3 4]
10:09:24,698 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:24,698 root DEBUG dOFF/dON = 2.0
10:09:24,698 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.35196659850209, 'dON1': 0.21271519634060543, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.21271519634060543, 'nTON': 1, 'dON': 0.21271519634060543, 'dxOFFAngle': 89.36768104658526, 'dOFF1': 0.4210379702697406, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.4210379702697406, 'nTOFF': 1, 'dOFF': 0.4210379702697406, 'SUCCESS': True}
10:09:24,709 root DEBUG 

=================== Experiment ID #96 	 Dual Point ID: 98 ===================
10:09:24,718 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.890E-08|<1.000E-06)
10:09:24,719 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:25,17 root DEBUG Side: ON	 Angle(dx0, dx): 1.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.877E-01 	 Total distance: 1.877E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([129], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:25,280 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.951E-01 	 Total distance: 1.951E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([123], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:25,452 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.849E-01 	 Total distance: 5.800E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([33], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:25,700 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.249E-01 	 Total distance: 7.049E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([182], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:25,909 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.450E-02 	 Total distance: 7.494E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([254], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:26,56 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.390E-02 	 Total distance: 8.434E-01 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([48], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:26,233 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.016E-01 	 Total distance: 1.445E+00 	 Future toggles: 0 	 Past toggles: 6 	 Toggled: [[1, array([52], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:26,495 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.500E-01 	 Total distance: 1.795E+00 	 Future toggles: 0 	 Past toggles: 7 	 Toggled: [[1, array([110], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:26,664 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.193E-02 	 Total distance: 1.817E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([69], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:26,665 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:26,665 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 81.28 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:26,665 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:26,665 root DEBUG dOFF/dON = 9.7
10:09:26,665 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.31918020291103, 'dON1': 0.18765371055179272, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.18765371055179272, 'nTON': 1, 'dON': 0.18765371055179272, 'dxOFFAngle': 88.27119555404168, 'dOFF1': 1.8168451413402593, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 1.8168451413402593, 'nTOFF': 1, 'dOFF': 1.8168451413402593, 'SUCCESS': True}
10:09:26,676 root DEBUG 

=================== Experiment ID #97 	 Dual Point ID: 99 ===================
10:09:26,687 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.593E-08|<1.000E-06)
10:09:26,688 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:27,19 root DEBUG Side: ON	 Angle(dx0, dx): 1.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.440E-01 	 Total distance: 2.440E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([87], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:09:27,274 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.864E-01 	 Total distance: 1.864E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([24], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:09:27,274 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:27,274 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -13.37 	 cIDON = [7 9], cIDOFF = [7 9]
10:09:27,275 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:27,275 root DEBUG dOFF/dON = 0.8
10:09:27,275 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.81701570395829, 'dON1': 0.24398157797700848, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.24398157797700848, 'nTON': 1, 'dON': 0.24398157797700848, 'dxOFFAngle': 89.04949684313405, 'dOFF1': 0.18642198722818823, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.18642198722818823, 'nTOFF': 1, 'dOFF': 0.18642198722818823, 'SUCCESS': False}
10:09:27,287 root DEBUG 

=================== Experiment ID #98 	 Dual Point ID: 100 ===================
10:09:27,297 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.652E-08|<1.000E-06)
10:09:27,297 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:27,565 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.258E-02 	 Total distance: 4.258E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([146], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:09:27,816 root DEBUG Side: ON	 Angle(dx0, dx): 1.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.947E-01 	 Total distance: 9.373E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([0], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:09:28,107 root DEBUG Side: OFF	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.091E+00 	 Total distance: 1.091E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([47], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:28,107 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:28,107 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 7.58 	 cIDON = [7 9], cIDOFF = [7 9]
10:09:28,107 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:28,107 root DEBUG dOFF/dON = 1.2
10:09:28,107 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.67999562675116, 'dON1': 0.9372983067156643, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.9372983067156643, 'nTON': 1, 'dON': 0.9372983067156643, 'dxOFFAngle': 87.68567347207805, 'dOFF1': 1.0911051930234903, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 1.0911051930234903, 'nTOFF': 1, 'dOFF': 1.0911051930234903, 'SUCCESS': True}
10:09:28,118 root DEBUG 

=================== Experiment ID #99 	 Dual Point ID: 101 ===================
10:09:28,128 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.654E-09|<1.000E-06)
10:09:28,129 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:28,445 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.765E-02 	 Total distance: 3.765E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([165], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:28,599 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.005E-02 	 Total distance: 1.277E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([21], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:28,817 root DEBUG Side: OFF	 Angle(dx0, dx): 1.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.244E-03 	 Total distance: 5.244E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([47], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:28,817 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:28,818 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -92.11 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:28,818 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:28,818 root DEBUG dOFF/dON = 0.0
10:09:28,818 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.66266403060335, 'dON1': 0.12770459884694635, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.12770459884694635, 'nTON': 1, 'dON': 0.12770459884694635, 'dxOFFAngle': 87.69632345894573, 'dOFF1': 0.005244298864503694, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.005244298864503694, 'nTOFF': 1, 'dOFF': 0.005244298864503694, 'SUCCESS': False}
10:09:28,829 root DEBUG 

=================== Experiment ID #100 	 Dual Point ID: 102 ===================
10:09:28,836 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.047E-08|<1.000E-06)
10:09:28,837 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:29,135 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.680E-02 	 Total distance: 2.680E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([125], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:29,461 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.551E-01 	 Total distance: 1.551E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([98], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:29,688 root DEBUG Side: OFF	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.132E-01 	 Total distance: 4.683E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([152], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:29,689 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:29,689 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 89.17 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:29,689 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:29,689 root DEBUG dOFF/dON = 17.5
10:09:29,689 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.57658585349049, 'dON1': 0.026800166227934078, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.026800166227934078, 'nTON': 1, 'dON': 0.026800166227934078, 'dxOFFAngle': 89.49045577193972, 'dOFF1': 0.46827522489590717, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.46827522489590717, 'nTOFF': 1, 'dOFF': 0.46827522489590717, 'SUCCESS': True}
10:09:29,695 root DEBUG 

=================== Experiment ID #101 	 Dual Point ID: 103 ===================
10:09:29,703 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.282E-09|<1.000E-06)
10:09:29,703 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:30,11 root DEBUG Side: ON	 Angle(dx0, dx): 0.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.290E-01 	 Total distance: 4.290E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([124], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:30,257 root DEBUG Side: OFF	 Angle(dx0, dx): 0.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.202E-02 	 Total distance: 2.202E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([241], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:30,257 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:30,257 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -90.24 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:30,257 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:30,257 root DEBUG dOFF/dON = 0.1
10:09:30,257 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.32658524463287, 'dON1': 0.42896624035384956, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.42896624035384956, 'nTON': 1, 'dON': 0.42896624035384956, 'dxOFFAngle': 85.13759697453591, 'dOFF1': 0.022017847129750377, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.022017847129750377, 'nTOFF': 1, 'dOFF': 0.022017847129750377, 'SUCCESS': False}
10:09:30,264 root DEBUG 

=================== Experiment ID #102 	 Dual Point ID: 104 ===================
10:09:30,272 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.862E-08|<1.000E-06)
10:09:30,272 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:30,575 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.794E-02 	 Total distance: 1.794E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([69], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:09:30,754 root DEBUG Side: ON	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.274E-01 	 Total distance: 7.453E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([13], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:09:31,61 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.484E-01 	 Total distance: 1.484E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([122], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:09:31,61 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:31,61 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -66.78 	 cIDON = [3 8], cIDOFF = [3 8]
10:09:31,61 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:31,61 root DEBUG dOFF/dON = 0.2
10:09:31,61 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.80838147110282, 'dON1': 0.7453043729639941, 'cIDON1': array([3, 8], dtype=int64), 'dON_patch_1': 0.7453043729639941, 'nTON': 1, 'dON': 0.7453043729639941, 'dxOFFAngle': 89.65121542074915, 'dOFF1': 0.14843604402365718, 'cIDOFF1': array([3, 8], dtype=int64), 'dOFF_patch_1': 0.14843604402365718, 'nTOFF': 1, 'dOFF': 0.14843604402365718, 'SUCCESS': False}
10:09:31,75 root DEBUG 

=================== Experiment ID #103 	 Dual Point ID: 105 ===================
10:09:31,84 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.278E-08|<1.000E-06)
10:09:31,85 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:31,338 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.909E-02 	 Total distance: 2.909E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([64], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:31,646 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.423E-01 	 Total distance: 4.423E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([120], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:31,856 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.437E-02 	 Total distance: 4.667E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([219], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:32,100 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.099E-01 	 Total distance: 6.766E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([146], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:32,101 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:32,102 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 91.76 	 cIDON = [2 6], cIDOFF = [2 6]
10:09:32,102 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:32,102 root DEBUG dOFF/dON = 23.3
10:09:32,102 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.09005406816823, 'dON1': 0.0290900418567137, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.0290900418567137, 'nTON': 1, 'dON': 0.0290900418567137, 'dxOFFAngle': 88.98597992521846, 'dOFF1': 0.6765785543449488, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.6765785543449488, 'nTOFF': 1, 'dOFF': 0.6765785543449488, 'SUCCESS': True}
10:09:32,111 root DEBUG 

=================== Experiment ID #104 	 Dual Point ID: 106 ===================
10:09:32,122 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.201E-09|<1.000E-06)
10:09:32,122 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:32,408 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.981E-01 	 Total distance: 5.981E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([182], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:09:32,550 root DEBUG Side: ON	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.593E-01 	 Total distance: 9.574E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([204], dtype=int64), array([[False]])]] 	 class: [4 8]
10:09:32,807 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.280E-01 	 Total distance: 3.280E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([73], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:09:32,967 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.150E-01 	 Total distance: 4.430E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([22], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:09:32,968 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:32,968 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -36.73 	 cIDON = [4 8], cIDOFF = [4 8]
10:09:32,968 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:32,968 root DEBUG dOFF/dON = 0.5
10:09:32,968 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.81271927383324, 'dON1': 0.957404242240578, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.957404242240578, 'nTON': 1, 'dON': 0.957404242240578, 'dxOFFAngle': 88.86941339209345, 'dOFF1': 0.44300626584950403, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.44300626584950403, 'nTOFF': 1, 'dOFF': 0.44300626584950403, 'SUCCESS': False}
10:09:32,977 root DEBUG 

=================== Experiment ID #105 	 Dual Point ID: 107 ===================
10:09:32,989 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.062E-08|<1.000E-06)
10:09:32,990 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:33,329 root DEBUG Side: ON	 Angle(dx0, dx): 0.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.369E-01 	 Total distance: 1.369E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([197], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:09:33,555 root DEBUG Side: OFF	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.081E-01 	 Total distance: 3.081E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([219], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:09:33,555 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:33,555 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 38.46 	 cIDON = [4 6], cIDOFF = [4 6]
10:09:33,555 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:33,555 root DEBUG dOFF/dON = 2.3
10:09:33,555 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.1198786600374, 'dON1': 0.1369311207624082, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.1369311207624082, 'nTON': 1, 'dON': 0.1369311207624082, 'dxOFFAngle': 88.82096594044124, 'dOFF1': 0.3080997514441425, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.3080997514441425, 'nTOFF': 1, 'dOFF': 0.3080997514441425, 'SUCCESS': True}
10:09:33,563 root DEBUG 

=================== Experiment ID #106 	 Dual Point ID: 108 ===================
10:09:33,571 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.947E-09|<1.000E-06)
10:09:33,572 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:33,819 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.047E-01 	 Total distance: 2.047E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([63], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:09:34,56 root DEBUG Side: ON	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.196E-01 	 Total distance: 1.124E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([233], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:09:34,288 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.442E-01 	 Total distance: 2.442E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([159], dtype=int64), array([[False]])]] 	 class: [4 9]
10:09:34,473 root DEBUG Side: OFF	 Angle(dx0, dx): 0.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.472E-01 	 Total distance: 3.913E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([119], dtype=int64), array([[False]])]] 	 class: [4 9]
10:09:34,473 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:34,473 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -48.36 	 cIDON = [4 9], cIDOFF = [4 9]
10:09:34,474 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:34,474 root DEBUG dOFF/dON = 0.3
10:09:34,474 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.43648361772408, 'dON1': 1.124263330084535, 'cIDON1': array([4, 9], dtype=int64), 'dON_patch_1': 1.124263330084535, 'nTON': 1, 'dON': 1.124263330084535, 'dxOFFAngle': 88.98063222367618, 'dOFF1': 0.39134181021344394, 'cIDOFF1': array([4, 9], dtype=int64), 'dOFF_patch_1': 0.39134181021344394, 'nTOFF': 1, 'dOFF': 0.39134181021344394, 'SUCCESS': False}
10:09:34,483 root DEBUG 

=================== Experiment ID #107 	 Dual Point ID: 109 ===================
10:09:34,492 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.547E-08|<1.000E-06)
10:09:34,492 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:34,775 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.252E-02 	 Total distance: 8.252E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([39], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:34,961 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.363E-03 	 Total distance: 9.188E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([154], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:35,83 root DEBUG Side: ON	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.110E-01 	 Total distance: 3.029E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([239], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:35,369 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.206E-01 	 Total distance: 2.206E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([206], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:35,369 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:35,370 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -15.73 	 cIDON = [5 7], cIDOFF = [5 7]
10:09:35,370 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:35,370 root DEBUG dOFF/dON = 0.7
10:09:35,370 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.8923125086045, 'dON1': 0.30292505864226626, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.30292505864226626, 'nTON': 1, 'dON': 0.30292505864226626, 'dxOFFAngle': 89.90541417922951, 'dOFF1': 0.22059834078797014, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.22059834078797014, 'nTOFF': 1, 'dOFF': 0.22059834078797014, 'SUCCESS': False}
10:09:35,381 root DEBUG 

=================== Experiment ID #108 	 Dual Point ID: 110 ===================
10:09:35,389 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.543E-08|<1.000E-06)
10:09:35,389 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:35,637 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.242E-03 	 Total distance: 5.242E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([81], dtype=int64), array([[False]])]] 	 class: [2 5]
10:09:35,910 root DEBUG Side: OFF	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.265E+00 	 Total distance: 2.265E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([252], dtype=int64), array([[False]])]] 	 class: [2 5]
10:09:35,910 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:35,911 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.54 	 cIDON = [2 5], cIDOFF = [2 5]
10:09:35,911 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:35,911 root DEBUG dOFF/dON = 432.1
10:09:35,911 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.71637354706012, 'dON1': 0.00524172558820588, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.00524172558820588, 'nTON': 1, 'dON': 0.00524172558820588, 'dxOFFAngle': 85.58343021903958, 'dOFF1': 2.2648700046903176, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 2.2648700046903176, 'nTOFF': 1, 'dOFF': 2.2648700046903176, 'SUCCESS': True}
10:09:35,924 root DEBUG 

=================== Experiment ID #109 	 Dual Point ID: 111 ===================
10:09:35,933 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.494E-09|<1.000E-06)
10:09:35,934 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:36,189 root DEBUG Side: ON	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.611E-01 	 Total distance: 2.611E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([112], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:09:36,326 root DEBUG Side: ON	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.309E-05 	 Total distance: 2.612E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([252], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:09:36,588 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.959E-02 	 Total distance: 9.959E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([150], dtype=int64), array([[False]])]] 	 class: [4 6]
10:09:36,588 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:36,588 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -44.80 	 cIDON = [4 6], cIDOFF = [4 6]
10:09:36,588 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:36,588 root DEBUG dOFF/dON = 0.4
10:09:36,588 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.99415390026225, 'dON1': 0.2612150244129866, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.2612150244129866, 'nTON': 1, 'dON': 0.2612150244129866, 'dxOFFAngle': 88.31219446312895, 'dOFF1': 0.09958849463450989, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.09958849463450989, 'nTOFF': 1, 'dOFF': 0.09958849463450989, 'SUCCESS': False}
10:09:36,599 root DEBUG 

=================== Experiment ID #110 	 Dual Point ID: 112 ===================
10:09:36,606 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.494E-09|<1.000E-06)
10:09:36,607 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:36,880 root DEBUG Side: ON	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.178E-02 	 Total distance: 3.178E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([142], dtype=int64), array([[False]])]] 	 class: [5 6]
10:09:37,118 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.797E-03 	 Total distance: 7.797E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([102], dtype=int64), array([[False]])]] 	 class: [5 6]
10:09:37,247 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.121E+00 	 Total distance: 1.129E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([253], dtype=int64), array([[False]])]] 	 class: [5 6]
10:09:37,247 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:37,247 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 94.52 	 cIDON = [5 6], cIDOFF = [5 6]
10:09:37,247 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:37,247 root DEBUG dOFF/dON = 35.5
10:09:37,247 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.69636544146208, 'dON1': 0.031784458374104076, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.031784458374104076, 'nTON': 1, 'dON': 0.031784458374104076, 'dxOFFAngle': 87.09738205855565, 'dOFF1': 1.1289745180211772, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 1.1289745180211772, 'nTOFF': 1, 'dOFF': 1.1289745180211772, 'SUCCESS': True}
10:09:37,262 root DEBUG 

=================== Experiment ID #111 	 Dual Point ID: 113 ===================
10:09:37,274 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.554E-08|<1.000E-06)
10:09:37,274 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:37,581 root DEBUG Side: ON	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.488E-03 	 Total distance: 8.488E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([17], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:37,811 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.188E-01 	 Total distance: 4.188E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([241], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:37,811 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:37,812 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 96.03 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:37,812 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:37,812 root DEBUG dOFF/dON = 49.3
10:09:37,812 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.06493090656735, 'dON1': 0.008487855187258022, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.008487855187258022, 'nTON': 1, 'dON': 0.008487855187258022, 'dxOFFAngle': 88.09675128130507, 'dOFF1': 0.4187509236465376, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.4187509236465376, 'nTOFF': 1, 'dOFF': 0.4187509236465376, 'SUCCESS': True}
10:09:37,823 root DEBUG 

=================== Experiment ID #112 	 Dual Point ID: 114 ===================
10:09:37,831 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.561E-09|<1.000E-06)
10:09:37,832 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:38,84 root DEBUG Side: ON	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.648E-04 	 Total distance: 6.648E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([6], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:38,387 root DEBUG Side: OFF	 Angle(dx0, dx): 0.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.762E-01 	 Total distance: 1.762E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([92], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:38,387 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:38,387 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.25 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:38,387 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:38,387 root DEBUG dOFF/dON = 265.1
10:09:38,387 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.53605907258546, 'dON1': 0.0006647625462663538, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.0006647625462663538, 'nTON': 1, 'dON': 0.0006647625462663538, 'dxOFFAngle': 89.85693570864535, 'dOFF1': 0.1762318306335428, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.1762318306335428, 'nTOFF': 1, 'dOFF': 0.1762318306335428, 'SUCCESS': True}
10:09:38,397 root DEBUG 

=================== Experiment ID #113 	 Dual Point ID: 115 ===================
10:09:38,408 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.259E-08|<1.000E-06)
10:09:38,408 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:38,664 root DEBUG Side: ON	 Angle(dx0, dx): 1.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.482E-03 	 Total distance: 3.482E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([36], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:38,930 root DEBUG Side: OFF	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.299E-01 	 Total distance: 1.299E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([27], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:38,930 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:38,931 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 94.78 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:38,931 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:38,931 root DEBUG dOFF/dON = 37.3
10:09:38,931 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.42332224915091, 'dON1': 0.0034817740754878447, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.0034817740754878447, 'nTON': 1, 'dON': 0.0034817740754878447, 'dxOFFAngle': 89.1700396573961, 'dOFF1': 0.1298572477008957, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.1298572477008957, 'nTOFF': 1, 'dOFF': 0.1298572477008957, 'SUCCESS': True}
10:09:38,944 root DEBUG 

=================== Experiment ID #114 	 Dual Point ID: 116 ===================
10:09:38,953 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.827E-08|<1.000E-06)
10:09:38,954 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:39,225 root DEBUG Side: ON	 Angle(dx0, dx): 0.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.576E-01 	 Total distance: 1.576E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([78], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:09:39,478 root DEBUG Side: OFF	 Angle(dx0, dx): 1.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.935E-06 	 Total distance: 7.935E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 9]
10:09:39,479 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:39,479 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.99 	 cIDON = [1 9], cIDOFF = [1 9]
10:09:39,479 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:39,479 root DEBUG dOFF/dON = 0.0
10:09:39,479 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.51062114189394, 'dON1': 0.15756218241968792, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.15756218241968792, 'nTON': 1, 'dON': 0.15756218241968792, 'dxOFFAngle': 88.17692096811913, 'dOFF1': 7.934762879509558e-06, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 7.934762879509558e-06, 'nTOFF': 1, 'dOFF': 7.934762879509558e-06, 'SUCCESS': False}
10:09:39,488 root DEBUG 

=================== Experiment ID #115 	 Dual Point ID: 117 ===================
10:09:39,498 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.315E-08|<1.000E-06)
10:09:39,498 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:39,830 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.028E-01 	 Total distance: 2.028E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([53], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:09:40,66 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.380E-01 	 Total distance: 1.380E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([148], dtype=int64), array([[False]])]] 	 class: [3 4]
10:09:40,67 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:40,67 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -19.02 	 cIDON = [3 4], cIDOFF = [3 4]
10:09:40,68 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:40,68 root DEBUG dOFF/dON = 0.7
10:09:40,68 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.73113051584855, 'dON1': 0.20284181146522454, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.20284181146522454, 'nTON': 1, 'dON': 0.20284181146522454, 'dxOFFAngle': 88.75781028723033, 'dOFF1': 0.1380252635528952, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.1380252635528952, 'nTOFF': 1, 'dOFF': 0.1380252635528952, 'SUCCESS': False}
10:09:40,85 root DEBUG 

=================== Experiment ID #116 	 Dual Point ID: 118 ===================
10:09:40,93 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.069E-08|<1.000E-06)
10:09:40,94 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:40,398 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.547E-01 	 Total distance: 1.547E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([26], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:40,596 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.439E-01 	 Total distance: 4.986E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([247], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:40,888 root DEBUG Side: OFF	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.457E-01 	 Total distance: 2.457E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([38], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:40,888 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:40,888 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -33.98 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:40,889 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:40,889 root DEBUG dOFF/dON = 0.5
10:09:40,889 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.24143895546224, 'dON1': 0.4986160539388228, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.4986160539388228, 'nTON': 1, 'dON': 0.4986160539388228, 'dxOFFAngle': 89.90761680330635, 'dOFF1': 0.24570133523550788, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.24570133523550788, 'nTOFF': 1, 'dOFF': 0.24570133523550788, 'SUCCESS': False}
10:09:40,898 root DEBUG 

=================== Experiment ID #117 	 Dual Point ID: 119 ===================
10:09:40,906 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.600E-08|<1.000E-06)
10:09:40,906 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:41,268 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.403E-01 	 Total distance: 1.403E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([225], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:41,501 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.035E-01 	 Total distance: 2.035E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([146], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:41,501 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:41,501 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 18.38 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:41,502 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:41,502 root DEBUG dOFF/dON = 1.5
10:09:41,502 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.27569159416049, 'dON1': 0.14034331505737024, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.14034331505737024, 'nTON': 1, 'dON': 0.14034331505737024, 'dxOFFAngle': 88.45045235032754, 'dOFF1': 0.20354999381733682, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.20354999381733682, 'nTOFF': 1, 'dOFF': 0.20354999381733682, 'SUCCESS': True}
10:09:41,512 root DEBUG 

=================== Experiment ID #118 	 Dual Point ID: 120 ===================
10:09:41,523 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.141E-08|<1.000E-06)
10:09:41,523 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:41,862 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.711E-01 	 Total distance: 3.711E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([243], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:42,134 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.137E-01 	 Total distance: 9.137E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([119], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:42,307 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.734E-01 	 Total distance: 1.187E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([247], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:42,308 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:42,308 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 52.37 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:42,308 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:42,308 root DEBUG dOFF/dON = 3.2
10:09:42,308 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.52242985728218, 'dON1': 0.37108476866879486, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.37108476866879486, 'nTON': 1, 'dON': 0.37108476866879486, 'dxOFFAngle': 87.48110047166574, 'dOFF1': 1.1870403339927365, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 1.1870403339927365, 'nTOFF': 1, 'dOFF': 1.1870403339927365, 'SUCCESS': True}
10:09:42,318 root DEBUG 

=================== Experiment ID #119 	 Dual Point ID: 121 ===================
10:09:42,332 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.030E-08|<1.000E-06)
10:09:42,332 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:42,596 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.886E-01 	 Total distance: 4.886E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([97], dtype=int64), array([[False]])]] 	 class: [4 6]
10:09:42,843 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.191E-01 	 Total distance: 8.077E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([44], dtype=int64), array([[False]])]] 	 class: [4 6]
10:09:43,47 root DEBUG Side: ON	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.031E-02 	 Total distance: 8.980E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([241], dtype=int64), array([[False]])]] 	 class: [4 6]
10:09:43,310 root DEBUG Side: OFF	 Angle(dx0, dx): 0.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.438E-01 	 Total distance: 5.438E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([74], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:09:43,485 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.196E-01 	 Total distance: 8.634E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([124], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:09:43,485 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:43,485 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -1.97 	 cIDON = [4 6], cIDOFF = [4 6]
10:09:43,485 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:43,485 root DEBUG dOFF/dON = 1.0
10:09:43,485 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.53135444697625, 'dON1': 0.8980436200655426, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.8980436200655426, 'nTON': 1, 'dON': 0.8980436200655426, 'dxOFFAngle': 87.18023255899068, 'dOFF1': 0.8633805077299936, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.8633805077299936, 'nTOFF': 1, 'dOFF': 0.8633805077299936, 'SUCCESS': False}
10:09:43,494 root DEBUG 

=================== Experiment ID #120 	 Dual Point ID: 122 ===================
10:09:43,504 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.106E-08|<1.000E-06)
10:09:43,504 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:43,761 root DEBUG Side: ON	 Angle(dx0, dx): 0.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.463E-02 	 Total distance: 4.463E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([15], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:44,16 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.016E+00 	 Total distance: 1.016E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([0], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:44,183 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.843E-01 	 Total distance: 1.200E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([218], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:44,183 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:44,183 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 92.83 	 cIDON = [7 9], cIDOFF = [7 9]
10:09:44,183 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:44,183 root DEBUG dOFF/dON = 26.9
10:09:44,184 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.98419330614281, 'dON1': 0.04463332511177309, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.04463332511177309, 'nTON': 1, 'dON': 0.04463332511177309, 'dxOFFAngle': 89.1743016246911, 'dOFF1': 1.1999057485753546, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 1.1999057485753546, 'nTOFF': 1, 'dOFF': 1.1999057485753546, 'SUCCESS': True}
10:09:44,192 root DEBUG 

=================== Experiment ID #121 	 Dual Point ID: 123 ===================
10:09:44,201 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.362E-09|<1.000E-06)
10:09:44,202 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:44,486 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.207E-02 	 Total distance: 1.207E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([30], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:44,702 root DEBUG Side: OFF	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.673E-03 	 Total distance: 2.673E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([0], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:44,702 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:44,703 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -63.75 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:44,703 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:44,703 root DEBUG dOFF/dON = 0.2
10:09:44,703 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.93847482448619, 'dON1': 0.012074929020270072, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.012074929020270072, 'nTON': 1, 'dON': 0.012074929020270072, 'dxOFFAngle': 89.90787136364999, 'dOFF1': 0.002673386008749183, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.002673386008749183, 'nTOFF': 1, 'dOFF': 0.002673386008749183, 'SUCCESS': False}
10:09:44,711 root DEBUG 

=================== Experiment ID #122 	 Dual Point ID: 124 ===================
10:09:44,720 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.074E-08|<1.000E-06)
10:09:44,720 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:45,1 root DEBUG Side: ON	 Angle(dx0, dx): 0.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.562E-02 	 Total distance: 3.562E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([3], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:45,204 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.736E-03 	 Total distance: 1.736E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([65], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:45,205 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:45,205 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -90.71 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:45,205 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:45,205 root DEBUG dOFF/dON = 0.0
10:09:45,205 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.05231124612476, 'dON1': 0.03562041307383686, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.03562041307383686, 'nTON': 1, 'dON': 0.03562041307383686, 'dxOFFAngle': 88.5052722975608, 'dOFF1': 0.00173598223652981, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.00173598223652981, 'nTOFF': 1, 'dOFF': 0.00173598223652981, 'SUCCESS': False}
10:09:45,218 root DEBUG 

=================== Experiment ID #123 	 Dual Point ID: 125 ===================
10:09:45,228 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.104E-08|<1.000E-06)
10:09:45,228 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:45,511 root DEBUG Side: ON	 Angle(dx0, dx): 0.85 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.664E-02 	 Total distance: 9.664E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([180], dtype=int64), array([[False]])]] 	 class: [2 9]
10:09:45,761 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.674E-01 	 Total distance: 1.674E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([153], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:09:45,761 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:45,761 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 26.79 	 cIDON = [2 9], cIDOFF = [2 9]
10:09:45,761 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:45,761 root DEBUG dOFF/dON = 1.7
10:09:45,761 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.78311415425915, 'dON1': 0.09663611766706713, 'cIDON1': array([2, 9], dtype=int64), 'dON_patch_1': 0.09663611766706713, 'nTON': 1, 'dON': 0.09663611766706713, 'dxOFFAngle': 89.85059523757072, 'dOFF1': 0.1673508560712362, 'cIDOFF1': array([2, 9], dtype=int64), 'dOFF_patch_1': 0.1673508560712362, 'nTOFF': 1, 'dOFF': 0.1673508560712362, 'SUCCESS': True}
10:09:45,771 root DEBUG 

=================== Experiment ID #124 	 Dual Point ID: 126 ===================
10:09:45,781 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.751E-09|<1.000E-06)
10:09:45,781 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:46,50 root DEBUG Side: ON	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.170E-02 	 Total distance: 8.170E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([242], dtype=int64), array([[False]])]] 	 class: [4 5]
10:09:46,259 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.574E-01 	 Total distance: 2.391E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([109], dtype=int64), array([[False]])]] 	 class: [4 5]
10:09:46,537 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.679E-02 	 Total distance: 3.679E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([13], dtype=int64), array([[False]])]] 	 class: [4 5]
10:09:46,538 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:46,538 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -73.33 	 cIDON = [4 5], cIDOFF = [4 5]
10:09:46,538 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:46,538 root DEBUG dOFF/dON = 0.2
10:09:46,538 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.78769632817381, 'dON1': 0.239119833851844, 'cIDON1': array([4, 5], dtype=int64), 'dON_patch_1': 0.239119833851844, 'nTON': 1, 'dON': 0.239119833851844, 'dxOFFAngle': 89.82710786366302, 'dOFF1': 0.03678513274444622, 'cIDOFF1': array([4, 5], dtype=int64), 'dOFF_patch_1': 0.03678513274444622, 'nTOFF': 1, 'dOFF': 0.03678513274444622, 'SUCCESS': False}
10:09:46,552 root DEBUG 

=================== Experiment ID #125 	 Dual Point ID: 127 ===================
10:09:46,565 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.429E-08|<1.000E-06)
10:09:46,565 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:46,845 root DEBUG Side: ON	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.755E-02 	 Total distance: 2.755E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([171], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:47,117 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.538E-01 	 Total distance: 1.538E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([57], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:47,117 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:47,117 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 69.62 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:47,117 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:47,117 root DEBUG dOFF/dON = 5.6
10:09:47,117 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.79659154615125, 'dON1': 0.027552443637549353, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.027552443637549353, 'nTON': 1, 'dON': 0.027552443637549353, 'dxOFFAngle': 88.81044658392747, 'dOFF1': 0.15384349542399758, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.15384349542399758, 'nTOFF': 1, 'dOFF': 0.15384349542399758, 'SUCCESS': True}
10:09:47,127 root DEBUG 

=================== Experiment ID #126 	 Dual Point ID: 128 ===================
10:09:47,136 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.164E-08|<1.000E-06)
10:09:47,136 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:47,496 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.928E-01 	 Total distance: 2.928E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([205], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:47,660 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.436E-01 	 Total distance: 6.363E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([159], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:47,947 root DEBUG Side: OFF	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.799E-01 	 Total distance: 1.799E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([47], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:48,206 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.597E-01 	 Total distance: 4.395E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([128], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:48,391 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.139E-02 	 Total distance: 5.209E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([59], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:48,391 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:48,391 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -9.97 	 cIDON = [5 7], cIDOFF = [5 7]
10:09:48,391 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:48,391 root DEBUG dOFF/dON = 0.8
10:09:48,391 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.6161059918935, 'dON1': 0.6363480370402643, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.6363480370402643, 'nTON': 1, 'dON': 0.6363480370402643, 'dxOFFAngle': 87.83256208406843, 'dOFF1': 0.5209314532939534, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.5209314532939534, 'nTOFF': 1, 'dOFF': 0.5209314532939534, 'SUCCESS': False}
10:09:48,400 root DEBUG 

=================== Experiment ID #127 	 Dual Point ID: 129 ===================
10:09:48,411 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.945E-09|<1.000E-06)
10:09:48,411 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:48,703 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.822E-01 	 Total distance: 2.822E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([39], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:48,863 root DEBUG Side: ON	 Angle(dx0, dx): 0.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.110E-02 	 Total distance: 2.933E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([255], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:49,145 root DEBUG Side: OFF	 Angle(dx0, dx): 0.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.084E-01 	 Total distance: 1.084E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([132], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:49,310 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.823E-01 	 Total distance: 4.907E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([178], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:49,459 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.510E-03 	 Total distance: 4.922E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([176], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:49,647 root DEBUG Side: OFF	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.072E-02 	 Total distance: 5.129E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([162], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:49,842 root DEBUG Side: OFF	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.155E-02 	 Total distance: 5.645E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([107], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:49,842 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:49,842 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 31.62 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:49,842 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:49,842 root DEBUG dOFF/dON = 1.9
10:09:49,842 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.89982882295716, 'dON1': 0.2932946553897511, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.2932946553897511, 'nTON': 1, 'dON': 0.2932946553897511, 'dxOFFAngle': 87.01382545954908, 'dOFF1': 0.5644923137215674, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.5644923137215674, 'nTOFF': 1, 'dOFF': 0.5644923137215674, 'SUCCESS': True}
10:09:49,855 root DEBUG 

=================== Experiment ID #128 	 Dual Point ID: 130 ===================
10:09:49,862 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.376E-09|<1.000E-06)
10:09:49,862 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:50,200 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.331E-01 	 Total distance: 2.331E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([141], dtype=int64), array([[False]])]] 	 class: [3 4]
10:09:50,363 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.015E-01 	 Total distance: 6.346E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([54], dtype=int64), array([[False]])]] 	 class: [3 4]
10:09:50,625 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.726E-01 	 Total distance: 1.726E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([44], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:09:50,818 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.661E-02 	 Total distance: 1.892E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([97], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:09:50,975 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.715E-04 	 Total distance: 1.900E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([39], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:09:50,975 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:50,976 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -53.91 	 cIDON = [3 4], cIDOFF = [3 4]
10:09:50,976 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:50,976 root DEBUG dOFF/dON = 0.3
10:09:50,976 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.22853258858228, 'dON1': 0.6346098151979108, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.6346098151979108, 'nTON': 1, 'dON': 0.6346098151979108, 'dxOFFAngle': 89.18380596706288, 'dOFF1': 0.19001584221328693, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.19001584221328693, 'nTOFF': 1, 'dOFF': 0.19001584221328693, 'SUCCESS': False}
10:09:50,987 root DEBUG 

=================== Experiment ID #129 	 Dual Point ID: 131 ===================
10:09:50,996 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.414E-11|<1.000E-06)
10:09:50,996 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:51,257 root DEBUG Side: ON	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.079E-01 	 Total distance: 2.079E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([27], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:51,555 root DEBUG Side: OFF	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.223E-02 	 Total distance: 6.223E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([160], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:51,555 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:51,555 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -53.92 	 cIDON = [5 7], cIDOFF = [5 7]
10:09:51,555 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:51,555 root DEBUG dOFF/dON = 0.3
10:09:51,555 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.9978662125824, 'dON1': 0.20789712439877941, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.20789712439877941, 'nTON': 1, 'dON': 0.20789712439877941, 'dxOFFAngle': 86.58815920129955, 'dOFF1': 0.06223472929245485, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.06223472929245485, 'nTOFF': 1, 'dOFF': 0.06223472929245485, 'SUCCESS': False}
10:09:51,569 root DEBUG 

=================== Experiment ID #130 	 Dual Point ID: 132 ===================
10:09:51,577 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.614E-08|<1.000E-06)
10:09:51,578 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:51,875 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.934E-01 	 Total distance: 2.934E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([54], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:52,171 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.405E-01 	 Total distance: 1.405E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([166], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:52,288 root DEBUG Side: OFF	 Angle(dx0, dx): 0.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.052E-01 	 Total distance: 5.457E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([146], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:52,288 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:52,289 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 30.07 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:52,289 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:52,289 root DEBUG dOFF/dON = 1.9
10:09:52,289 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.96395563962876, 'dON1': 0.29339376732762257, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.29339376732762257, 'nTON': 1, 'dON': 0.29339376732762257, 'dxOFFAngle': 87.36334249450056, 'dOFF1': 0.545709836643904, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.545709836643904, 'nTOFF': 1, 'dOFF': 0.545709836643904, 'SUCCESS': True}
10:09:52,300 root DEBUG 

=================== Experiment ID #131 	 Dual Point ID: 133 ===================
10:09:52,310 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.852E-10|<1.000E-06)
10:09:52,310 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:52,624 root DEBUG Side: ON	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.909E-01 	 Total distance: 3.909E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([95], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:52,884 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.549E-02 	 Total distance: 5.549E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([159], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:53,104 root DEBUG Side: OFF	 Angle(dx0, dx): 0.77 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.233E-02 	 Total distance: 1.478E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([42], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:53,104 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:53,104 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -45.12 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:53,104 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:53,104 root DEBUG dOFF/dON = 0.4
10:09:53,104 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.12660664945946, 'dON1': 0.39090294721403124, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.39090294721403124, 'nTON': 1, 'dON': 0.39090294721403124, 'dxOFFAngle': 85.04255803544388, 'dOFF1': 0.14781541907707685, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.14781541907707685, 'nTOFF': 1, 'dOFF': 0.14781541907707685, 'SUCCESS': False}
10:09:53,113 root DEBUG 

=================== Experiment ID #132 	 Dual Point ID: 134 ===================
10:09:53,122 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.120E-08|<1.000E-06)
10:09:53,123 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:53,359 root DEBUG Side: ON	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.254E-01 	 Total distance: 5.254E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([196], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:09:53,706 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.148E+00 	 Total distance: 1.148E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([255], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:09:53,873 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.605E-02 	 Total distance: 1.174E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([33], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:09:53,873 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:53,873 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 38.17 	 cIDON = [2 5], cIDOFF = [2 5]
10:09:53,874 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:53,874 root DEBUG dOFF/dON = 2.2
10:09:53,874 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.62639220126313, 'dON1': 0.5253719364954642, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.5253719364954642, 'nTON': 1, 'dON': 0.5253719364954642, 'dxOFFAngle': 89.7959923722472, 'dOFF1': 1.1739806861530522, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 1.1739806861530522, 'nTOFF': 1, 'dOFF': 1.1739806861530522, 'SUCCESS': True}
10:09:53,882 root DEBUG 

=================== Experiment ID #133 	 Dual Point ID: 135 ===================
10:09:53,890 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.448E-09|<1.000E-06)
10:09:53,890 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:54,156 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.957E-01 	 Total distance: 6.957E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([101], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:09:54,459 root DEBUG Side: OFF	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.425E-01 	 Total distance: 1.425E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([11], dtype=int64), array([[False]])]] 	 class: [5 6]
10:09:54,459 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:54,459 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -66.00 	 cIDON = [5 6], cIDOFF = [5 6]
10:09:54,459 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:54,459 root DEBUG dOFF/dON = 0.2
10:09:54,460 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.552502126915, 'dON1': 0.6957272125925572, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.6957272125925572, 'nTON': 1, 'dON': 0.6957272125925572, 'dxOFFAngle': 89.32723330586306, 'dOFF1': 0.14251019851306804, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.14251019851306804, 'nTOFF': 1, 'dOFF': 0.14251019851306804, 'SUCCESS': False}
10:09:54,469 root DEBUG 

=================== Experiment ID #134 	 Dual Point ID: 136 ===================
10:09:54,476 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.305E-08|<1.000E-06)
10:09:54,476 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:54,777 root DEBUG Side: ON	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.771E-01 	 Total distance: 1.771E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([2], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:55,23 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.117E-01 	 Total distance: 1.117E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([236], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:55,242 root DEBUG Side: OFF	 Angle(dx0, dx): 0.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.980E-01 	 Total distance: 8.097E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([48], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:55,243 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:55,243 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 64.10 	 cIDON = [2 6], cIDOFF = [2 6]
10:09:55,243 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:55,243 root DEBUG dOFF/dON = 4.6
10:09:55,243 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.88082857857681, 'dON1': 0.17712279190044738, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.17712279190044738, 'nTON': 1, 'dON': 0.17712279190044738, 'dxOFFAngle': 89.57799473594919, 'dOFF1': 0.8097190474192777, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.8097190474192777, 'nTOFF': 1, 'dOFF': 0.8097190474192777, 'SUCCESS': True}
10:09:55,253 root DEBUG 

=================== Experiment ID #135 	 Dual Point ID: 137 ===================
10:09:55,263 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.202E-08|<1.000E-06)
10:09:55,264 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:55,547 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.310E-01 	 Total distance: 1.310E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([166], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:09:55,741 root DEBUG Side: ON	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.528E-01 	 Total distance: 2.838E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([136], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:55,998 root DEBUG Side: OFF	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.895E-01 	 Total distance: 3.895E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([42], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:55,998 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:55,999 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 15.70 	 cIDON = [7 9], cIDOFF = [7 9]
10:09:55,999 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:55,999 root DEBUG dOFF/dON = 1.4
10:09:55,999 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.51324156399993, 'dON1': 0.28379445798476133, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.28379445798476133, 'nTON': 1, 'dON': 0.28379445798476133, 'dxOFFAngle': 85.56169738659366, 'dOFF1': 0.3894666382057547, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.3894666382057547, 'nTOFF': 1, 'dOFF': 0.3894666382057547, 'SUCCESS': True}
10:09:56,6 root DEBUG 

=================== Experiment ID #136 	 Dual Point ID: 138 ===================
10:09:56,15 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.918E-08|<1.000E-06)
10:09:56,16 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:56,245 root DEBUG Side: ON	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.449E-02 	 Total distance: 5.449E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([32], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:09:56,553 root DEBUG Side: OFF	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.166E-01 	 Total distance: 5.166E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([225], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:09:56,553 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:56,554 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 80.92 	 cIDON = [7 9], cIDOFF = [7 9]
10:09:56,554 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:56,554 root DEBUG dOFF/dON = 9.5
10:09:56,554 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.6960048999438, 'dON1': 0.05449081865723444, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.05449081865723444, 'nTON': 1, 'dON': 0.05449081865723444, 'dxOFFAngle': 85.87125921932079, 'dOFF1': 0.5165665915639125, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.5165665915639125, 'nTOFF': 1, 'dOFF': 0.5165665915639125, 'SUCCESS': True}
10:09:56,563 root DEBUG 

=================== Experiment ID #137 	 Dual Point ID: 139 ===================
10:09:56,573 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.411E-09|<1.000E-06)
10:09:56,573 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:56,824 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.185E-01 	 Total distance: 1.185E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([239], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:56,968 root DEBUG Side: ON	 Angle(dx0, dx): 0.77 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.225E-03 	 Total distance: 1.247E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([3, 6], dtype=int64), array([[0.],
       [1.]])]] 	 class: [5 6]
10:09:57,217 root DEBUG Side: OFF	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.034E-01 	 Total distance: 1.034E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([15], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:57,217 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:57,217 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -9.35 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:57,218 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:57,218 root DEBUG dOFF/dON = 0.8
10:09:57,218 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.33630888284078, 'dON1': 0.1246864240183092, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.1246864240183092, 'nTON': 1, 'dON': 0.1246864240183092, 'dxOFFAngle': 88.18252934182823, 'dOFF1': 0.10335501438017307, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.10335501438017307, 'nTOFF': 1, 'dOFF': 0.10335501438017307, 'SUCCESS': False}
10:09:57,230 root DEBUG 

=================== Experiment ID #138 	 Dual Point ID: 140 ===================
10:09:57,240 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.425E-09|<1.000E-06)
10:09:57,240 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:57,516 root DEBUG Side: ON	 Angle(dx0, dx): 0.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.150E-02 	 Total distance: 9.150E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([209], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:57,763 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.455E-01 	 Total distance: 2.455E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([0], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:57,764 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:57,764 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 45.70 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:57,764 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:57,764 root DEBUG dOFF/dON = 2.7
10:09:57,764 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.53402483437846, 'dON1': 0.09150304029733795, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.09150304029733795, 'nTON': 1, 'dON': 0.09150304029733795, 'dxOFFAngle': 85.28569972063666, 'dOFF1': 0.24551648589140299, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.24551648589140299, 'nTOFF': 1, 'dOFF': 0.24551648589140299, 'SUCCESS': True}
10:09:57,776 root DEBUG 

=================== Experiment ID #139 	 Dual Point ID: 141 ===================
10:09:57,789 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.228E-09|<1.000E-06)
10:09:57,790 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:58,40 root DEBUG Side: ON	 Angle(dx0, dx): 0.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.348E-01 	 Total distance: 3.348E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([90], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:58,306 root DEBUG Side: OFF	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.008E-01 	 Total distance: 3.008E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([161], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:58,306 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:58,306 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -5.35 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:58,306 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:58,306 root DEBUG dOFF/dON = 0.9
10:09:58,306 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.45743439091196, 'dON1': 0.33481758558625757, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.33481758558625757, 'nTON': 1, 'dON': 0.33481758558625757, 'dxOFFAngle': 88.25013265491108, 'dOFF1': 0.30081939728012347, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.30081939728012347, 'nTOFF': 1, 'dOFF': 0.30081939728012347, 'SUCCESS': False}
10:09:58,313 root DEBUG 

=================== Experiment ID #140 	 Dual Point ID: 142 ===================
10:09:58,327 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.276E-09|<1.000E-06)
10:09:58,328 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:58,583 root DEBUG Side: ON	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.211E-01 	 Total distance: 4.211E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([171], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:58,856 root DEBUG Side: OFF	 Angle(dx0, dx): 0.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.805E-01 	 Total distance: 1.805E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([50], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:58,856 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:58,856 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -40.00 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:58,856 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:58,856 root DEBUG dOFF/dON = 0.4
10:09:58,856 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.39902108202064, 'dON1': 0.42107337748733764, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.42107337748733764, 'nTON': 1, 'dON': 0.42107337748733764, 'dxOFFAngle': 87.7078866672531, 'dOFF1': 0.1804657724366752, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.1804657724366752, 'nTOFF': 1, 'dOFF': 0.1804657724366752, 'SUCCESS': False}
10:09:58,868 root DEBUG 

=================== Experiment ID #141 	 Dual Point ID: 143 ===================
10:09:58,880 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.011E-09|<1.000E-06)
10:09:58,881 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:59,261 root DEBUG Side: ON	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.024E-01 	 Total distance: 1.024E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([14], dtype=int64), array([[False]])]] 	 class: [3 4]
10:09:59,529 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.611E-02 	 Total distance: 5.611E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([90], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:09:59,754 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.624E-01 	 Total distance: 3.185E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([211], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:09:59,754 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:59,754 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 51.36 	 cIDON = [3 4], cIDOFF = [3 4]
10:09:59,754 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:59,754 root DEBUG dOFF/dON = 3.1
10:09:59,754 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.9037577391383, 'dON1': 0.10237131394182578, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.10237131394182578, 'nTON': 1, 'dON': 0.10237131394182578, 'dxOFFAngle': 86.21805827006267, 'dOFF1': 0.3185387560144316, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.3185387560144316, 'nTOFF': 1, 'dOFF': 0.3185387560144316, 'SUCCESS': True}
10:09:59,761 root DEBUG 

=================== Experiment ID #142 	 Dual Point ID: 144 ===================
10:09:59,771 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.273E-08|<1.000E-06)
10:09:59,771 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:00,51 root DEBUG Side: ON	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.184E-01 	 Total distance: 3.184E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([212], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:10:00,339 root DEBUG Side: OFF	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.900E-01 	 Total distance: 3.900E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([110], dtype=int64), array([[False]])]] 	 class: [2 4]
10:10:00,552 root DEBUG Side: OFF	 Angle(dx0, dx): 0.77 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.417E-01 	 Total distance: 7.317E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([38], dtype=int64), array([[False]])]] 	 class: [2 4]
10:10:00,552 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:00,552 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 39.36 	 cIDON = [2 4], cIDOFF = [2 4]
10:10:00,552 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:00,553 root DEBUG dOFF/dON = 2.3
10:10:00,553 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.84476283612223, 'dON1': 0.318355805369821, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.318355805369821, 'nTON': 1, 'dON': 0.318355805369821, 'dxOFFAngle': 85.6150183466435, 'dOFF1': 0.7316716695504991, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.7316716695504991, 'nTOFF': 1, 'dOFF': 0.7316716695504991, 'SUCCESS': True}
10:10:00,564 root DEBUG 

=================== Experiment ID #143 	 Dual Point ID: 145 ===================
10:10:00,572 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.367E-09|<1.000E-06)
10:10:00,572 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:00,841 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.760E-01 	 Total distance: 2.760E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([254], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:01,46 root DEBUG Side: ON	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.735E-01 	 Total distance: 7.496E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([250], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:01,317 root DEBUG Side: OFF	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.840E-02 	 Total distance: 3.840E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([215], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:01,317 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:01,318 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -90.25 	 cIDON = [5 7], cIDOFF = [5 7]
10:10:01,318 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:01,318 root DEBUG dOFF/dON = 0.1
10:10:01,318 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.79221239650553, 'dON1': 0.7495519317436539, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.7495519317436539, 'nTON': 1, 'dON': 0.7495519317436539, 'dxOFFAngle': 88.81763676868334, 'dOFF1': 0.03840092010647991, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.03840092010647991, 'nTOFF': 1, 'dOFF': 0.03840092010647991, 'SUCCESS': False}
10:10:01,330 root DEBUG 

=================== Experiment ID #144 	 Dual Point ID: 146 ===================
10:10:01,339 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.842E-09|<1.000E-06)
10:10:01,339 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:01,638 root DEBUG Side: ON	 Angle(dx0, dx): 1.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.602E-02 	 Total distance: 1.602E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([191], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:10:01,944 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.621E-01 	 Total distance: 2.621E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([128], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:10:02,157 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.675E-01 	 Total distance: 4.296E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([21], dtype=int64), array([[False]])]] 	 class: [2 9]
10:10:02,356 root DEBUG Side: OFF	 Angle(dx0, dx): 1.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.533E+00 	 Total distance: 1.962E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([17], dtype=int64), array([[False]])]] 	 class: [2 9]
10:10:02,356 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:02,357 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 98.38 	 cIDON = [2 9], cIDOFF = [2 9]
10:10:02,357 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:02,357 root DEBUG dOFF/dON = 122.5
10:10:02,357 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.76361017738066, 'dON1': 0.016019175608752465, 'cIDON1': array([2, 9], dtype=int64), 'dON_patch_1': 0.016019175608752465, 'nTON': 1, 'dON': 0.016019175608752465, 'dxOFFAngle': 85.63536697934528, 'dOFF1': 1.9622366984007122, 'cIDOFF1': array([2, 9], dtype=int64), 'dOFF_patch_1': 1.9622366984007122, 'nTOFF': 1, 'dOFF': 1.9622366984007122, 'SUCCESS': True}
10:10:02,367 root DEBUG 

=================== Experiment ID #145 	 Dual Point ID: 147 ===================
10:10:02,378 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.297E-09|<1.000E-06)
10:10:02,379 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:02,680 root DEBUG Side: ON	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.224E-01 	 Total distance: 4.224E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([48], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:10:02,957 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.368E-01 	 Total distance: 2.368E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([7], dtype=int64), array([[False]])]] 	 class: [2 8]
10:10:03,133 root DEBUG Side: OFF	 Angle(dx0, dx): 0.60 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.573E-02 	 Total distance: 2.725E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([242], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:10:03,133 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:03,134 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -21.57 	 cIDON = [2 8], cIDOFF = [2 8]
10:10:03,134 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:03,134 root DEBUG dOFF/dON = 0.6
10:10:03,134 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.92166667777671, 'dON1': 0.42241229526848995, 'cIDON1': array([2, 8], dtype=int64), 'dON_patch_1': 0.42241229526848995, 'nTON': 1, 'dON': 0.42241229526848995, 'dxOFFAngle': 89.01919090464459, 'dOFF1': 0.2725152087557807, 'cIDOFF1': array([2, 8], dtype=int64), 'dOFF_patch_1': 0.2725152087557807, 'nTOFF': 1, 'dOFF': 0.2725152087557807, 'SUCCESS': False}
10:10:03,144 root DEBUG 

=================== Experiment ID #146 	 Dual Point ID: 148 ===================
10:10:03,152 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.107E-08|<1.000E-06)
10:10:03,152 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:03,464 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.514E-01 	 Total distance: 8.514E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([186], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:10:03,732 root DEBUG Side: OFF	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.658E-01 	 Total distance: 1.658E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([17], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:10:03,732 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:03,732 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -67.41 	 cIDON = [6 7], cIDOFF = [6 7]
10:10:03,732 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:03,732 root DEBUG dOFF/dON = 0.2
10:10:03,732 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.90317028588807, 'dON1': 0.8513940240591156, 'cIDON1': array([6, 7], dtype=int64), 'dON_patch_1': 0.8513940240591156, 'nTON': 1, 'dON': 0.8513940240591156, 'dxOFFAngle': 89.51582474591741, 'dOFF1': 0.16576068357021154, 'cIDOFF1': array([6, 7], dtype=int64), 'dOFF_patch_1': 0.16576068357021154, 'nTOFF': 1, 'dOFF': 0.16576068357021154, 'SUCCESS': False}
10:10:03,739 root DEBUG 

=================== Experiment ID #147 	 Dual Point ID: 149 ===================
10:10:03,749 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.538E-09|<1.000E-06)
10:10:03,749 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:04,62 root DEBUG Side: ON	 Angle(dx0, dx): 0.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.420E-01 	 Total distance: 1.420E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([0], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:04,368 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.789E-03 	 Total distance: 3.789E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([59], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:04,520 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.971E-01 	 Total distance: 2.009E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([7], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:04,713 root DEBUG Side: OFF	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.705E-01 	 Total distance: 4.714E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([55], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:04,878 root DEBUG Side: OFF	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.476E-01 	 Total distance: 6.190E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([158], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:04,878 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:04,878 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 62.67 	 cIDON = [2 6], cIDOFF = [2 6]
10:10:04,878 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:04,878 root DEBUG dOFF/dON = 4.4
10:10:04,878 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.80298487220439, 'dON1': 0.1420357797030635, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.1420357797030635, 'nTON': 1, 'dON': 0.1420357797030635, 'dxOFFAngle': 86.66702631694018, 'dOFF1': 0.6189673544538901, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.6189673544538901, 'nTOFF': 1, 'dOFF': 0.6189673544538901, 'SUCCESS': True}
10:10:04,888 root DEBUG 

=================== Experiment ID #148 	 Dual Point ID: 150 ===================
10:10:04,894 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.799E-08|<1.000E-06)
10:10:04,895 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:05,166 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.470E-03 	 Total distance: 7.470E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([48], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:05,346 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.671E-01 	 Total distance: 3.746E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([179], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:05,488 root DEBUG Side: ON	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.195E-01 	 Total distance: 8.941E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([68], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:05,726 root DEBUG Side: OFF	 Angle(dx0, dx): 0.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.823E-01 	 Total distance: 2.823E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([197], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:05,953 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.003E-01 	 Total distance: 3.826E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([120], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:06,150 root DEBUG Side: OFF	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.556E-03 	 Total distance: 3.872E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([136], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:06,150 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:06,150 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -39.56 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:06,151 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:06,151 root DEBUG dOFF/dON = 0.4
10:10:06,151 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.2043905693839, 'dON1': 0.8940954741340127, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.8940954741340127, 'nTON': 1, 'dON': 0.8940954741340127, 'dxOFFAngle': 87.84731400040458, 'dOFF1': 0.38716594120111697, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.38716594120111697, 'nTOFF': 1, 'dOFF': 0.38716594120111697, 'SUCCESS': False}
10:10:06,161 root DEBUG 

=================== Experiment ID #149 	 Dual Point ID: 151 ===================
10:10:06,169 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.877E-08|<1.000E-06)
10:10:06,169 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:06,437 root DEBUG Side: ON	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.455E-02 	 Total distance: 6.455E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([98], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:06,639 root DEBUG Side: ON	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.575E-02 	 Total distance: 1.103E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([36], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:06,865 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.729E-01 	 Total distance: 1.729E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([225], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:07,137 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.657E-02 	 Total distance: 1.894E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([204], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:07,137 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:07,137 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 26.40 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:07,137 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:07,137 root DEBUG dOFF/dON = 1.7
10:10:07,137 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.3821079846117, 'dON1': 0.11030158105480717, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.11030158105480717, 'nTON': 1, 'dON': 0.11030158105480717, 'dxOFFAngle': 89.23893846382671, 'dOFF1': 0.18943899618580504, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.18943899618580504, 'nTOFF': 1, 'dOFF': 0.18943899618580504, 'SUCCESS': True}
10:10:07,147 root DEBUG 

=================== Experiment ID #150 	 Dual Point ID: 152 ===================
10:10:07,154 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.058E-08|<1.000E-06)
10:10:07,154 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:07,416 root DEBUG Side: ON	 Angle(dx0, dx): 1.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.328E-06 	 Total distance: 4.328E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 7]
10:10:07,700 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.155E-01 	 Total distance: 6.155E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([38], dtype=int64), array([[ True]])]] 	 class: [1 7]
10:10:07,701 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:07,701 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [1 7], cIDOFF = [1 7]
10:10:07,701 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:07,701 root DEBUG dOFF/dON = 142211.9
10:10:07,701 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.20017889552382, 'dON1': 4.327996916322215e-06, 'cIDON1': array([1, 7], dtype=int64), 'dON_patch_1': 4.327996916322215e-06, 'nTON': 1, 'dON': 4.327996916322215e-06, 'dxOFFAngle': 87.82542890087227, 'dOFF1': 0.6154928236021361, 'cIDOFF1': array([1, 7], dtype=int64), 'dOFF_patch_1': 0.6154928236021361, 'nTOFF': 1, 'dOFF': 0.6154928236021361, 'SUCCESS': True}
10:10:07,712 root DEBUG 

=================== Experiment ID #151 	 Dual Point ID: 153 ===================
10:10:07,721 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.367E-08|<1.000E-06)
10:10:07,721 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:08,30 root DEBUG Side: ON	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.891E-01 	 Total distance: 8.891E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([26], dtype=int64), array([[False]])]] 	 class: [2 8]
10:10:08,276 root DEBUG Side: OFF	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.736E-02 	 Total distance: 1.736E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([198], dtype=int64), array([[False]])]] 	 class: [2 8]
10:10:08,277 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:08,277 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -96.17 	 cIDON = [2 8], cIDOFF = [2 8]
10:10:08,277 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:08,277 root DEBUG dOFF/dON = 0.0
10:10:08,277 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.4135552454643, 'dON1': 0.8891006278656775, 'cIDON1': array([2, 8], dtype=int64), 'dON_patch_1': 0.8891006278656775, 'nTON': 1, 'dON': 0.8891006278656775, 'dxOFFAngle': 88.19009689404533, 'dOFF1': 0.01736401990983554, 'cIDOFF1': array([2, 8], dtype=int64), 'dOFF_patch_1': 0.01736401990983554, 'nTOFF': 1, 'dOFF': 0.01736401990983554, 'SUCCESS': False}
10:10:08,283 root DEBUG 

=================== Experiment ID #152 	 Dual Point ID: 154 ===================
10:10:08,291 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.487E-08|<1.000E-06)
10:10:08,292 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:08,570 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.315E-01 	 Total distance: 2.315E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([93], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:08,725 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.351E-01 	 Total distance: 4.666E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([52], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:08,894 root DEBUG Side: ON	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.887E-02 	 Total distance: 5.354E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([50], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:09,191 root DEBUG Side: OFF	 Angle(dx0, dx): 0.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.895E-01 	 Total distance: 6.895E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([108], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:09,191 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:09,192 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 12.58 	 cIDON = [2 7], cIDOFF = [2 7]
10:10:09,192 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:09,192 root DEBUG dOFF/dON = 1.3
10:10:09,192 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.49203880290608, 'dON1': 0.5354256709227239, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.5354256709227239, 'nTON': 1, 'dON': 0.5354256709227239, 'dxOFFAngle': 86.90396750887778, 'dOFF1': 0.6895192191059709, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.6895192191059709, 'nTOFF': 1, 'dOFF': 0.6895192191059709, 'SUCCESS': True}
10:10:09,202 root DEBUG 

=================== Experiment ID #153 	 Dual Point ID: 155 ===================
10:10:09,209 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.618E-09|<1.000E-06)
10:10:09,210 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:09,479 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.218E-01 	 Total distance: 1.218E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([20], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:09,692 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.065E-01 	 Total distance: 4.283E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([243], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:09,945 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.806E-01 	 Total distance: 2.806E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([0], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:10,121 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.165E-03 	 Total distance: 2.898E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([1], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:10,297 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.532E-01 	 Total distance: 4.429E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([31], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:10,298 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:10,298 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 1.68 	 cIDON = [3 6], cIDOFF = [3 6]
10:10:10,298 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:10,298 root DEBUG dOFF/dON = 1.0
10:10:10,298 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.83990561388326, 'dON1': 0.4282633067378582, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.4282633067378582, 'nTON': 1, 'dON': 0.4282633067378582, 'dxOFFAngle': 88.45260185960872, 'dOFF1': 0.44290873164667244, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.44290873164667244, 'nTOFF': 1, 'dOFF': 0.44290873164667244, 'SUCCESS': True}
10:10:10,309 root DEBUG 

=================== Experiment ID #154 	 Dual Point ID: 156 ===================
10:10:10,319 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.120E-08|<1.000E-06)
10:10:10,320 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:10,532 root DEBUG Side: ON	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.289E-01 	 Total distance: 3.289E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([42], dtype=int64), array([[False]])]] 	 class: [6 8]
10:10:10,858 root DEBUG Side: OFF	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.167E-01 	 Total distance: 2.167E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([162], dtype=int64), array([[ True]])]] 	 class: [6 8]
10:10:10,859 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:10,859 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -20.56 	 cIDON = [6 8], cIDOFF = [6 8]
10:10:10,859 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:10,859 root DEBUG dOFF/dON = 0.7
10:10:10,859 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.9845609978887, 'dON1': 0.3289430252923183, 'cIDON1': array([6, 8], dtype=int64), 'dON_patch_1': 0.3289430252923183, 'nTON': 1, 'dON': 0.3289430252923183, 'dxOFFAngle': 88.52724923121575, 'dOFF1': 0.2167410346950411, 'cIDOFF1': array([6, 8], dtype=int64), 'dOFF_patch_1': 0.2167410346950411, 'nTOFF': 1, 'dOFF': 0.2167410346950411, 'SUCCESS': False}
10:10:10,868 root DEBUG 

=================== Experiment ID #155 	 Dual Point ID: 157 ===================
10:10:10,875 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.674E-09|<1.000E-06)
10:10:10,875 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:11,141 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.277E-03 	 Total distance: 1.277E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([141], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:10:11,396 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.280E-01 	 Total distance: 1.280E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([159], dtype=int64), array([[False]])]] 	 class: [6 7]
10:10:11,638 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.038E-01 	 Total distance: 3.318E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([82], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:10:11,638 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:11,639 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.23 	 cIDON = [6 7], cIDOFF = [6 7]
10:10:11,639 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:11,639 root DEBUG dOFF/dON = 259.9
10:10:11,639 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.25975313550416, 'dON1': 0.0012767180666711981, 'cIDON1': array([6, 7], dtype=int64), 'dON_patch_1': 0.0012767180666711981, 'nTON': 1, 'dON': 0.0012767180666711981, 'dxOFFAngle': 88.19377093644928, 'dOFF1': 0.3318088580397561, 'cIDOFF1': array([6, 7], dtype=int64), 'dOFF_patch_1': 0.3318088580397561, 'nTOFF': 1, 'dOFF': 0.3318088580397561, 'SUCCESS': True}
10:10:11,649 root DEBUG 

=================== Experiment ID #156 	 Dual Point ID: 158 ===================
10:10:11,659 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.721E-08|<1.000E-06)
10:10:11,659 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:11,980 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.241E-01 	 Total distance: 2.241E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([139], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:10:12,215 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.938E-01 	 Total distance: 8.178E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([7], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:10:12,391 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.558E-01 	 Total distance: 1.274E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([46], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:10:12,659 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.035E-01 	 Total distance: 2.035E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([175], dtype=int64), array([[False]])]] 	 class: [4 8]
10:10:12,874 root DEBUG Side: OFF	 Angle(dx0, dx): 0.96 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.799E-01 	 Total distance: 6.834E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([20], dtype=int64), array([[False]])]] 	 class: [4 8]
10:10:12,875 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:12,875 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -30.16 	 cIDON = [4 8], cIDOFF = [4 8]
10:10:12,875 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:12,875 root DEBUG dOFF/dON = 0.5
10:10:12,875 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.94226414699502, 'dON1': 1.273676893801433, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 1.273676893801433, 'nTON': 1, 'dON': 1.273676893801433, 'dxOFFAngle': 87.92404647919804, 'dOFF1': 0.6833870534139405, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.6833870534139405, 'nTOFF': 1, 'dOFF': 0.6833870534139405, 'SUCCESS': False}
10:10:12,885 root DEBUG 

=================== Experiment ID #157 	 Dual Point ID: 159 ===================
10:10:12,894 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.236E-08|<1.000E-06)
10:10:12,894 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:13,181 root DEBUG Side: ON	 Angle(dx0, dx): 2.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.444E-06 	 Total distance: 1.444E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 7]
10:10:13,434 root DEBUG Side: OFF	 Angle(dx0, dx): 0.83 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.926E-01 	 Total distance: 7.926E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([215], dtype=int64), array([[ True]])]] 	 class: [1 7]
10:10:13,434 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:13,434 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [1 7], cIDOFF = [1 7]
10:10:13,435 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:13,435 root DEBUG dOFF/dON = 548855.1
10:10:13,435 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.93892026103008, 'dON1': 1.44401426768621e-06, 'cIDON1': array([1, 7], dtype=int64), 'dON_patch_1': 1.44401426768621e-06, 'nTON': 1, 'dON': 1.44401426768621e-06, 'dxOFFAngle': 86.89224690582682, 'dOFF1': 0.7925545830713635, 'cIDOFF1': array([1, 7], dtype=int64), 'dOFF_patch_1': 0.7925545830713635, 'nTOFF': 1, 'dOFF': 0.7925545830713635, 'SUCCESS': True}
10:10:13,446 root DEBUG 

=================== Experiment ID #158 	 Dual Point ID: 160 ===================
10:10:13,453 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.055E-08|<1.000E-06)
10:10:13,453 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:13,702 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.564E-02 	 Total distance: 9.564E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([225], dtype=int64), array([[False]])]] 	 class: [4 7]
10:10:14,16 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.246E-02 	 Total distance: 7.246E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([237], dtype=int64), array([[False]])]] 	 class: [4 7]
10:10:14,16 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:14,16 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -13.79 	 cIDON = [4 7], cIDOFF = [4 7]
10:10:14,16 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:14,16 root DEBUG dOFF/dON = 0.8
10:10:14,16 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.57197459085292, 'dON1': 0.09563701516526905, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.09563701516526905, 'nTON': 1, 'dON': 0.09563701516526905, 'dxOFFAngle': 88.63094270231196, 'dOFF1': 0.07245579614218388, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.07245579614218388, 'nTOFF': 1, 'dOFF': 0.07245579614218388, 'SUCCESS': False}
10:10:14,23 root DEBUG 

=================== Experiment ID #159 	 Dual Point ID: 161 ===================
10:10:14,30 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.232E-08|<1.000E-06)
10:10:14,30 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:14,283 root DEBUG Side: ON	 Angle(dx0, dx): 0.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.996E-02 	 Total distance: 6.996E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([162], dtype=int64), array([[ True]])]] 	 class: [0 7]
10:10:14,527 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.368E-01 	 Total distance: 4.368E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([193], dtype=int64), array([[False]])]] 	 class: [1 7]
10:10:14,712 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.103E-03 	 Total distance: 4.399E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([146], dtype=int64), array([[False]])]] 	 class: [1 7]
10:10:14,713 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:14,713 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 72.56 	 cIDON = [0 7], cIDOFF = [1 7]
10:10:14,713 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:14,713 root DEBUG dOFF/dON = 6.3
10:10:14,713 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.70994089706242, 'dON1': 0.06995512753680214, 'cIDON1': array([0, 7], dtype=int64), 'dON_patch_1': 0.06995512753680214, 'nTON': 1, 'dON': 0.06995512753680214, 'dxOFFAngle': 89.0709481582046, 'dOFF1': 0.43987177325030036, 'cIDOFF1': array([1, 7], dtype=int64), 'dOFF_patch_1': 0.43987177325030036, 'nTOFF': 1, 'dOFF': 0.43987177325030036, 'SUCCESS': True}
10:10:14,721 root DEBUG 

=================== Experiment ID #160 	 Dual Point ID: 162 ===================
10:10:14,729 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.326E-08|<1.000E-06)
10:10:14,729 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:15,55 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.785E-01 	 Total distance: 3.785E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([150], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:10:15,335 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.694E-02 	 Total distance: 4.694E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([253], dtype=int64), array([[False]])]] 	 class: [5 6]
10:10:15,336 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:15,336 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -77.93 	 cIDON = [5 6], cIDOFF = [5 6]
10:10:15,336 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:15,336 root DEBUG dOFF/dON = 0.1
10:10:15,336 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.68068044149392, 'dON1': 0.3784820099280903, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.3784820099280903, 'nTON': 1, 'dON': 0.3784820099280903, 'dxOFFAngle': 89.96963870939034, 'dOFF1': 0.046939932285679616, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.046939932285679616, 'nTOFF': 1, 'dOFF': 0.046939932285679616, 'SUCCESS': False}
10:10:15,341 root DEBUG 

=================== Experiment ID #161 	 Dual Point ID: 163 ===================
10:10:15,350 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.976E-08|<1.000E-06)
10:10:15,350 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:15,653 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.385E-01 	 Total distance: 2.385E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([242], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:15,931 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.517E-01 	 Total distance: 4.517E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([55], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:15,931 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:15,931 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 30.89 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:15,931 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:15,931 root DEBUG dOFF/dON = 1.9
10:10:15,931 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.024102831646, 'dON1': 0.2385119366125216, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.2385119366125216, 'nTON': 1, 'dON': 0.2385119366125216, 'dxOFFAngle': 88.33221011931148, 'dOFF1': 0.45169523519148497, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.45169523519148497, 'nTOFF': 1, 'dOFF': 0.45169523519148497, 'SUCCESS': True}
10:10:15,941 root DEBUG 

=================== Experiment ID #162 	 Dual Point ID: 164 ===================
10:10:15,947 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.276E-09|<1.000E-06)
10:10:15,947 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:16,256 root DEBUG Side: ON	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.664E-01 	 Total distance: 9.664E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([33], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:16,392 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.720E-01 	 Total distance: 1.638E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([132], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:16,593 root DEBUG Side: ON	 Angle(dx0, dx): 0.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.886E-02 	 Total distance: 1.677E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([244], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:16,841 root DEBUG Side: OFF	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.281E-02 	 Total distance: 2.281E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([39], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:16,972 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.533E-01 	 Total distance: 1.761E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([241], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:16,972 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:16,972 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -80.99 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:16,972 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:16,972 root DEBUG dOFF/dON = 0.1
10:10:16,972 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.41186216921982, 'dON1': 1.6773234256133462, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 1.6773234256133462, 'nTON': 1, 'dON': 1.6773234256133462, 'dxOFFAngle': 89.24720133485835, 'dOFF1': 0.17614718989684558, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.17614718989684558, 'nTOFF': 1, 'dOFF': 0.17614718989684558, 'SUCCESS': False}
10:10:16,982 root DEBUG 

=================== Experiment ID #163 	 Dual Point ID: 165 ===================
10:10:16,993 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.928E-08|<1.000E-06)
10:10:16,993 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:17,322 root DEBUG Side: ON	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.510E-01 	 Total distance: 2.510E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([139], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:17,583 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.170E-01 	 Total distance: 4.170E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([159], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:17,744 root DEBUG Side: OFF	 Angle(dx0, dx): 2.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.924E-01 	 Total distance: 7.094E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([40], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:17,745 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:17,745 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 47.72 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:17,745 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:17,745 root DEBUG dOFF/dON = 2.8
10:10:17,745 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.40976969353139, 'dON1': 0.2510175655327344, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.2510175655327344, 'nTON': 1, 'dON': 0.2510175655327344, 'dxOFFAngle': 88.3307761345034, 'dOFF1': 0.7093549664506618, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.7093549664506618, 'nTOFF': 1, 'dOFF': 0.7093549664506618, 'SUCCESS': True}
10:10:17,752 root DEBUG 

=================== Experiment ID #164 	 Dual Point ID: 166 ===================
10:10:17,764 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.079E-08|<1.000E-06)
10:10:17,764 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:18,107 root DEBUG Side: ON	 Angle(dx0, dx): 0.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.482E-01 	 Total distance: 2.482E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([51], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:18,364 root DEBUG Side: OFF	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.988E-01 	 Total distance: 1.988E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([192], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:18,364 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:18,364 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -11.05 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:18,364 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:18,364 root DEBUG dOFF/dON = 0.8
10:10:18,364 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.61814792551041, 'dON1': 0.24824688336257872, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.24824688336257872, 'nTON': 1, 'dON': 0.24824688336257872, 'dxOFFAngle': 88.5772545638757, 'dOFF1': 0.19884834791142594, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.19884834791142594, 'nTOFF': 1, 'dOFF': 0.19884834791142594, 'SUCCESS': False}
10:10:18,371 root DEBUG 

=================== Experiment ID #165 	 Dual Point ID: 167 ===================
10:10:18,381 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.380E-09|<1.000E-06)
10:10:18,381 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:18,693 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.016E-01 	 Total distance: 3.016E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([201], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:18,946 root DEBUG Side: OFF	 Angle(dx0, dx): 0.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.308E-01 	 Total distance: 1.308E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([24], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:18,946 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:18,946 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -39.50 	 cIDON = [3 6], cIDOFF = [3 6]
10:10:18,946 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:18,946 root DEBUG dOFF/dON = 0.4
10:10:18,946 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.13190515308503, 'dON1': 0.3016366166595583, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.3016366166595583, 'nTON': 1, 'dON': 0.3016366166595583, 'dxOFFAngle': 86.89799091076002, 'dOFF1': 0.13082622569141023, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.13082622569141023, 'nTOFF': 1, 'dOFF': 0.13082622569141023, 'SUCCESS': False}
10:10:18,953 root DEBUG 

=================== Experiment ID #166 	 Dual Point ID: 168 ===================
10:10:18,963 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.858E-09|<1.000E-06)
10:10:18,963 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:19,208 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.699E-02 	 Total distance: 3.699E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([205], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:19,520 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.225E-01 	 Total distance: 2.225E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([237], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:19,520 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:19,520 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 71.49 	 cIDON = [3 6], cIDOFF = [3 6]
10:10:19,520 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:19,520 root DEBUG dOFF/dON = 6.0
10:10:19,520 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.37837792200952, 'dON1': 0.03699311259649675, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.03699311259649675, 'nTON': 1, 'dON': 0.03699311259649675, 'dxOFFAngle': 87.19342494368183, 'dOFF1': 0.22253980060386178, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.22253980060386178, 'nTOFF': 1, 'dOFF': 0.22253980060386178, 'SUCCESS': True}
10:10:19,526 root DEBUG 

=================== Experiment ID #167 	 Dual Point ID: 169 ===================
10:10:19,534 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.614E-08|<1.000E-06)
10:10:19,534 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:19,867 root DEBUG Side: ON	 Angle(dx0, dx): 0.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.027E-01 	 Total distance: 2.027E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([245], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:10:20,147 root DEBUG Side: OFF	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.930E-01 	 Total distance: 3.930E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([177], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:10:20,147 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:20,147 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 31.96 	 cIDON = [4 8], cIDOFF = [4 8]
10:10:20,147 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:20,147 root DEBUG dOFF/dON = 1.9
10:10:20,147 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.94278695799744, 'dON1': 0.20266939985550425, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.20266939985550425, 'nTON': 1, 'dON': 0.20266939985550425, 'dxOFFAngle': 88.95497992226717, 'dOFF1': 0.39302592981022244, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.39302592981022244, 'nTOFF': 1, 'dOFF': 0.39302592981022244, 'SUCCESS': True}
10:10:20,154 root DEBUG 

=================== Experiment ID #168 	 Dual Point ID: 170 ===================
10:10:20,162 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.487E-08|<1.000E-06)
10:10:20,162 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:20,493 root DEBUG Side: ON	 Angle(dx0, dx): 1.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.504E-01 	 Total distance: 5.504E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([172], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:20,710 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.007E-01 	 Total distance: 3.007E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([89], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:20,711 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:20,711 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -29.34 	 cIDON = [2 6], cIDOFF = [2 6]
10:10:20,711 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:20,711 root DEBUG dOFF/dON = 0.5
10:10:20,711 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.6323777034453, 'dON1': 0.5503957480599205, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.5503957480599205, 'nTON': 1, 'dON': 0.5503957480599205, 'dxOFFAngle': 87.68897317920583, 'dOFF1': 0.300667713967162, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.300667713967162, 'nTOFF': 1, 'dOFF': 0.300667713967162, 'SUCCESS': False}
10:10:20,717 root DEBUG 

=================== Experiment ID #169 	 Dual Point ID: 171 ===================
10:10:20,728 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.683E-08|<1.000E-06)
10:10:20,728 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:21,48 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.290E-01 	 Total distance: 1.290E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([58], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:21,338 root DEBUG Side: OFF	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.159E-01 	 Total distance: 3.159E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([35], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:21,338 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:21,339 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 42.02 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:21,339 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:21,339 root DEBUG dOFF/dON = 2.4
10:10:21,339 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.61858318588357, 'dON1': 0.1289906823861242, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.1289906823861242, 'nTON': 1, 'dON': 0.1289906823861242, 'dxOFFAngle': 89.93364690407583, 'dOFF1': 0.31594384960098326, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.31594384960098326, 'nTOFF': 1, 'dOFF': 0.31594384960098326, 'SUCCESS': True}
10:10:21,348 root DEBUG 

=================== Experiment ID #170 	 Dual Point ID: 172 ===================
10:10:21,355 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.420E-08|<1.000E-06)
10:10:21,355 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:21,635 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.675E-01 	 Total distance: 2.675E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([15], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:21,993 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.927E-01 	 Total distance: 1.927E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([239], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:22,252 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.220E-01 	 Total distance: 4.148E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([87], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:22,252 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:22,252 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 21.58 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:22,253 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:22,253 root DEBUG dOFF/dON = 1.6
10:10:22,253 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.26774164145672, 'dON1': 0.26750898007502494, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.26750898007502494, 'nTON': 1, 'dON': 0.26750898007502494, 'dxOFFAngle': 86.8653946169525, 'dOFF1': 0.4147701280904772, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.4147701280904772, 'nTOFF': 1, 'dOFF': 0.4147701280904772, 'SUCCESS': True}
10:10:22,263 root DEBUG 

=================== Experiment ID #171 	 Dual Point ID: 173 ===================
10:10:22,272 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.667E-08|<1.000E-06)
10:10:22,273 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:22,623 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.232E-01 	 Total distance: 1.232E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([52], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:22,853 root DEBUG Side: OFF	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.127E-01 	 Total distance: 3.127E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([47], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:22,854 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:22,854 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 43.47 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:22,854 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:22,854 root DEBUG dOFF/dON = 2.5
10:10:22,854 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.89770238179092, 'dON1': 0.12321036577864851, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.12321036577864851, 'nTON': 1, 'dON': 0.12321036577864851, 'dxOFFAngle': 88.89771850901286, 'dOFF1': 0.3126662582003983, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.3126662582003983, 'nTOFF': 1, 'dOFF': 0.3126662582003983, 'SUCCESS': True}
10:10:22,860 root DEBUG 

=================== Experiment ID #172 	 Dual Point ID: 174 ===================
10:10:22,869 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.506E-08|<1.000E-06)
10:10:22,869 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:23,173 root DEBUG Side: ON	 Angle(dx0, dx): 0.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.288E-01 	 Total distance: 2.288E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([129], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:23,431 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.573E-01 	 Total distance: 2.573E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([162], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:23,595 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.980E-01 	 Total distance: 4.553E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([0], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:23,595 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:23,596 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 33.10 	 cIDON = [2 6], cIDOFF = [2 6]
10:10:23,596 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:23,596 root DEBUG dOFF/dON = 2.0
10:10:23,596 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.44456964843732, 'dON1': 0.22882411157736451, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.22882411157736451, 'nTON': 1, 'dON': 0.22882411157736451, 'dxOFFAngle': 87.30220607325329, 'dOFF1': 0.45528010113359296, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.45528010113359296, 'nTOFF': 1, 'dOFF': 0.45528010113359296, 'SUCCESS': True}
10:10:23,607 root DEBUG 

=================== Experiment ID #173 	 Dual Point ID: 175 ===================
10:10:23,616 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.872E-08|<1.000E-06)
10:10:23,617 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:23,930 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.017E-02 	 Total distance: 1.017E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([203], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:10:24,164 root DEBUG Side: ON	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.146E-01 	 Total distance: 4.248E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([146], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:10:24,407 root DEBUG Side: OFF	 Angle(dx0, dx): 0.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.004E-01 	 Total distance: 1.004E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([123], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:10:24,408 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:24,408 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -61.76 	 cIDON = [7 9], cIDOFF = [7 9]
10:10:24,408 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:24,408 root DEBUG dOFF/dON = 0.2
10:10:24,408 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.84354062413857, 'dON1': 0.4248157021542346, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.4248157021542346, 'nTON': 1, 'dON': 0.4248157021542346, 'dxOFFAngle': 89.45398675435541, 'dOFF1': 0.10042078833273542, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.10042078833273542, 'nTOFF': 1, 'dOFF': 0.10042078833273542, 'SUCCESS': False}
10:10:24,415 root DEBUG 

=================== Experiment ID #174 	 Dual Point ID: 176 ===================
10:10:24,423 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.042E-08|<1.000E-06)
10:10:24,423 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:24,758 root DEBUG Side: ON	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.792E-02 	 Total distance: 6.792E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([175], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:24,952 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.106E-01 	 Total distance: 1.786E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([64], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:25,187 root DEBUG Side: ON	 Angle(dx0, dx): 0.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.789E+00 	 Total distance: 2.968E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([242], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:25,412 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.818E-01 	 Total distance: 6.818E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([91], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:25,413 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:25,413 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -62.63 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:25,413 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:25,413 root DEBUG dOFF/dON = 0.2
10:10:25,413 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.98171623973064, 'dON1': 2.9675771864753413, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 2.9675771864753413, 'nTON': 1, 'dON': 2.9675771864753413, 'dxOFFAngle': 89.11110872157546, 'dOFF1': 0.6818335361763291, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.6818335361763291, 'nTOFF': 1, 'dOFF': 0.6818335361763291, 'SUCCESS': False}
10:10:25,420 root DEBUG 

=================== Experiment ID #175 	 Dual Point ID: 177 ===================
10:10:25,426 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.735E-08|<1.000E-06)
10:10:25,426 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:25,745 root DEBUG Side: ON	 Angle(dx0, dx): 0.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.516E-02 	 Total distance: 2.516E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([74], dtype=int64), array([[False]])]] 	 class: [2 3]
10:10:25,983 root DEBUG Side: ON	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.793E-02 	 Total distance: 5.309E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([161], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:10:26,263 root DEBUG Side: OFF	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.521E-01 	 Total distance: 1.521E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([125], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:10:26,263 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:26,263 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 48.25 	 cIDON = [2 3], cIDOFF = [2 3]
10:10:26,263 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:26,263 root DEBUG dOFF/dON = 2.9
10:10:26,264 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.50420210911963, 'dON1': 0.05309424771175368, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.05309424771175368, 'nTON': 1, 'dON': 0.05309424771175368, 'dxOFFAngle': 88.5169190236431, 'dOFF1': 0.15211436931643313, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.15211436931643313, 'nTOFF': 1, 'dOFF': 0.15211436931643313, 'SUCCESS': True}
10:10:26,270 root DEBUG 

=================== Experiment ID #176 	 Dual Point ID: 178 ===================
10:10:26,279 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.775E-08|<1.000E-06)
10:10:26,280 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:26,510 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.410E-02 	 Total distance: 7.410E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([121], dtype=int64), array([[False]])]] 	 class: [4 7]
10:10:26,838 root DEBUG Side: OFF	 Angle(dx0, dx): 0.96 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.045E-02 	 Total distance: 7.045E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([160], dtype=int64), array([[False]])]] 	 class: [4 7]
10:10:26,838 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:26,838 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -2.53 	 cIDON = [4 7], cIDOFF = [4 7]
10:10:26,838 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:26,838 root DEBUG dOFF/dON = 1.0
10:10:26,839 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.88589367861145, 'dON1': 0.07410256936915584, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.07410256936915584, 'nTON': 1, 'dON': 0.07410256936915584, 'dxOFFAngle': 86.72617837950001, 'dOFF1': 0.07044915804812026, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.07044915804812026, 'nTOFF': 1, 'dOFF': 0.07044915804812026, 'SUCCESS': False}
10:10:26,848 root DEBUG 

=================== Experiment ID #177 	 Dual Point ID: 179 ===================
10:10:26,854 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.437E-09|<1.000E-06)
10:10:26,854 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:27,177 root DEBUG Side: ON	 Angle(dx0, dx): 0.85 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.584E-01 	 Total distance: 3.584E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([30], dtype=int64), array([[False]])]] 	 class: [4 6]
10:10:27,488 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.606E-02 	 Total distance: 5.606E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([36], dtype=int64), array([[False]])]] 	 class: [4 6]
10:10:27,488 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:27,488 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -72.95 	 cIDON = [4 6], cIDOFF = [4 6]
10:10:27,488 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:27,488 root DEBUG dOFF/dON = 0.2
10:10:27,488 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.75713889937745, 'dON1': 0.3584206847550062, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.3584206847550062, 'nTON': 1, 'dON': 0.3584206847550062, 'dxOFFAngle': 88.56298848590717, 'dOFF1': 0.05605989067395611, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.05605989067395611, 'nTOFF': 1, 'dOFF': 0.05605989067395611, 'SUCCESS': False}
10:10:27,494 root DEBUG 

=================== Experiment ID #178 	 Dual Point ID: 180 ===================
10:10:27,501 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.223E-09|<1.000E-06)
10:10:27,502 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:27,852 root DEBUG Side: ON	 Angle(dx0, dx): 0.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.036E-01 	 Total distance: 2.036E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([59], dtype=int64), array([[False]])]] 	 class: [7 9]
10:10:28,35 root DEBUG Side: ON	 Angle(dx0, dx): 1.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.528E-01 	 Total distance: 3.564E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([6], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:10:28,371 root DEBUG Side: OFF	 Angle(dx0, dx): 0.71 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.549E-01 	 Total distance: 3.549E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([120], dtype=int64), array([[False]])]] 	 class: [7 9]
10:10:28,371 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:28,371 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -0.21 	 cIDON = [7 9], cIDOFF = [7 9]
10:10:28,371 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:28,371 root DEBUG dOFF/dON = 1.0
10:10:28,371 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.71758068996981, 'dON1': 0.3563589416156232, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.3563589416156232, 'nTON': 1, 'dON': 0.3563589416156232, 'dxOFFAngle': 85.66008607474268, 'dOFF1': 0.3548520634648108, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.3548520634648108, 'nTOFF': 1, 'dOFF': 0.3548520634648108, 'SUCCESS': False}
10:10:28,377 root DEBUG 

=================== Experiment ID #179 	 Dual Point ID: 181 ===================
10:10:28,383 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.513E-07|<1.000E-06)
10:10:28,383 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:28,684 root DEBUG Side: ON	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.095E-01 	 Total distance: 8.095E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([11], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:28,982 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.591E-01 	 Total distance: 5.591E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([8], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:28,982 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:28,983 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -18.30 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:28,983 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:28,983 root DEBUG dOFF/dON = 0.7
10:10:28,983 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.74773625428884, 'dON1': 0.8095095668805501, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.8095095668805501, 'nTON': 1, 'dON': 0.8095095668805501, 'dxOFFAngle': 86.844300491005, 'dOFF1': 0.559095929491638, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.559095929491638, 'nTOFF': 1, 'dOFF': 0.559095929491638, 'SUCCESS': False}
10:10:28,992 root DEBUG 

=================== Experiment ID #180 	 Dual Point ID: 182 ===================
10:10:29,0 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.179E-09|<1.000E-06)
10:10:29,0 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:29,287 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.240E-03 	 Total distance: 1.240E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([123], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:29,548 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.077E-02 	 Total distance: 8.077E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([42], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:29,549 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:29,549 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 96.98 	 cIDON = [3 6], cIDOFF = [3 6]
10:10:29,549 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:29,549 root DEBUG dOFF/dON = 65.1
10:10:29,549 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.15242465989087, 'dON1': 0.0012400040232516244, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.0012400040232516244, 'nTON': 1, 'dON': 0.0012400040232516244, 'dxOFFAngle': 88.16432810749815, 'dOFF1': 0.0807721250688833, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.0807721250688833, 'nTOFF': 1, 'dOFF': 0.0807721250688833, 'SUCCESS': True}
10:10:29,556 root DEBUG 

=================== Experiment ID #181 	 Dual Point ID: 183 ===================
10:10:29,567 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.309E-08|<1.000E-06)
10:10:29,567 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:29,868 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.525E-01 	 Total distance: 2.525E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([82], dtype=int64), array([[False]])]] 	 class: [4 7]
10:10:30,124 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.162E-01 	 Total distance: 4.162E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([74], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:10:30,302 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.235E-01 	 Total distance: 6.397E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([119], dtype=int64), array([[False]])]] 	 class: [4 7]
10:10:30,525 root DEBUG Side: OFF	 Angle(dx0, dx): 0.85 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.975E-01 	 Total distance: 1.037E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([18], dtype=int64), array([[False]])]] 	 class: [4 7]
10:10:30,525 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:30,525 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 60.84 	 cIDON = [4 7], cIDOFF = [4 7]
10:10:30,525 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:30,526 root DEBUG dOFF/dON = 4.1
10:10:30,526 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.27316104655273, 'dON1': 0.2525107735736959, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.2525107735736959, 'nTON': 1, 'dON': 0.2525107735736959, 'dxOFFAngle': 89.62499645266823, 'dOFF1': 1.0371876334077559, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 1.0371876334077559, 'nTOFF': 1, 'dOFF': 1.0371876334077559, 'SUCCESS': True}
10:10:30,534 root DEBUG 

=================== Experiment ID #182 	 Dual Point ID: 184 ===================
10:10:30,543 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.039E-09|<1.000E-06)
10:10:30,544 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:30,797 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.459E-02 	 Total distance: 4.459E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([115], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:30,994 root DEBUG Side: ON	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.429E-02 	 Total distance: 9.888E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([227], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:31,288 root DEBUG Side: OFF	 Angle(dx0, dx): 0.94 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.061E-01 	 Total distance: 2.061E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([243], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:31,288 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:31,288 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 35.15 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:31,288 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:31,288 root DEBUG dOFF/dON = 2.1
10:10:31,288 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.99173807442776, 'dON1': 0.09888361214155184, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.09888361214155184, 'nTON': 1, 'dON': 0.09888361214155184, 'dxOFFAngle': 87.80313299749231, 'dOFF1': 0.2060927749602356, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.2060927749602356, 'nTOFF': 1, 'dOFF': 0.2060927749602356, 'SUCCESS': True}
10:10:31,295 root DEBUG 

=================== Experiment ID #183 	 Dual Point ID: 185 ===================
10:10:31,302 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.328E-08|<1.000E-06)
10:10:31,303 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:31,557 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.015E-01 	 Total distance: 2.015E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([132], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:31,701 root DEBUG Side: ON	 Angle(dx0, dx): 4.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.256E-01 	 Total distance: 4.271E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([6, 9], dtype=int64), array([[0.],
       [1.]])]] 	 class: [3 9]
10:10:31,933 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.852E-02 	 Total distance: 8.852E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([249], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:32,188 root DEBUG Side: OFF	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.309E-01 	 Total distance: 2.194E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([9], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:32,188 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:32,189 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -32.13 	 cIDON = [3 6], cIDOFF = [3 6]
10:10:32,189 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:32,189 root DEBUG dOFF/dON = 0.5
10:10:32,189 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.05870816700052, 'dON1': 0.4271108922336076, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.4271108922336076, 'nTON': 1, 'dON': 0.4271108922336076, 'dxOFFAngle': 89.31873246045099, 'dOFF1': 0.2194027661499195, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.2194027661499195, 'nTOFF': 1, 'dOFF': 0.2194027661499195, 'SUCCESS': False}
10:10:32,200 root DEBUG 

=================== Experiment ID #184 	 Dual Point ID: 186 ===================
10:10:32,208 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.513E-08|<1.000E-06)
10:10:32,208 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:32,434 root DEBUG Side: ON	 Angle(dx0, dx): 1.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.608E-02 	 Total distance: 5.608E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([186], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:10:32,740 root DEBUG Side: OFF	 Angle(dx0, dx): 0.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.728E-02 	 Total distance: 8.728E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([32], dtype=int64), array([[False]])]] 	 class: [4 9]
10:10:32,741 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:32,741 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 21.77 	 cIDON = [4 9], cIDOFF = [4 9]
10:10:32,741 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:32,741 root DEBUG dOFF/dON = 1.6
10:10:32,741 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.85412254562809, 'dON1': 0.056075816104795125, 'cIDON1': array([4, 9], dtype=int64), 'dON_patch_1': 0.056075816104795125, 'nTON': 1, 'dON': 0.056075816104795125, 'dxOFFAngle': 88.61792748675082, 'dOFF1': 0.08728306995915983, 'cIDOFF1': array([4, 9], dtype=int64), 'dOFF_patch_1': 0.08728306995915983, 'nTOFF': 1, 'dOFF': 0.08728306995915983, 'SUCCESS': True}
10:10:32,748 root DEBUG 

=================== Experiment ID #185 	 Dual Point ID: 187 ===================
10:10:32,759 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.200E-08|<1.000E-06)
10:10:32,759 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:32,980 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.631E-02 	 Total distance: 7.631E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([31], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:33,203 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.976E-02 	 Total distance: 6.976E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([146], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:33,203 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:33,204 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -4.48 	 cIDON = [3 6], cIDOFF = [3 6]
10:10:33,204 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:33,204 root DEBUG dOFF/dON = 0.9
10:10:33,204 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.15322624105067, 'dON1': 0.07631365111874541, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.07631365111874541, 'nTON': 1, 'dON': 0.07631365111874541, 'dxOFFAngle': 89.4337928702029, 'dOFF1': 0.06976441576256918, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.06976441576256918, 'nTOFF': 1, 'dOFF': 0.06976441576256918, 'SUCCESS': False}
10:10:33,210 root DEBUG 

=================== Experiment ID #186 	 Dual Point ID: 188 ===================
10:10:33,223 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.635E-09|<1.000E-06)
10:10:33,223 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:33,490 root DEBUG Side: ON	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.148E-02 	 Total distance: 2.148E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([14], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:33,830 root DEBUG Side: OFF	 Angle(dx0, dx): 0.73 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.226E-02 	 Total distance: 8.226E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([234], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:33,830 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:33,831 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 58.60 	 cIDON = [2 7], cIDOFF = [2 7]
10:10:33,831 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:33,831 root DEBUG dOFF/dON = 3.8
10:10:33,831 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.99554072501974, 'dON1': 0.021475539261234907, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.021475539261234907, 'nTON': 1, 'dON': 0.021475539261234907, 'dxOFFAngle': 85.74842718068508, 'dOFF1': 0.08225984575236028, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.08225984575236028, 'nTOFF': 1, 'dOFF': 0.08225984575236028, 'SUCCESS': True}
10:10:33,842 root DEBUG 

=================== Experiment ID #187 	 Dual Point ID: 189 ===================
10:10:33,849 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.000E-08|<1.000E-06)
10:10:33,849 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:34,114 root DEBUG Side: ON	 Angle(dx0, dx): 0.73 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.659E-01 	 Total distance: 1.659E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([225], dtype=int64), array([[False]])]] 	 class: [5 9]
10:10:34,406 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.223E-01 	 Total distance: 3.223E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([60], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:10:34,407 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:34,407 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 32.04 	 cIDON = [5 9], cIDOFF = [5 9]
10:10:34,407 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:34,407 root DEBUG dOFF/dON = 1.9
10:10:34,407 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.69496616001408, 'dON1': 0.16588070488572634, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.16588070488572634, 'nTON': 1, 'dON': 0.16588070488572634, 'dxOFFAngle': 88.5530045760706, 'dOFF1': 0.3222915145043637, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.3222915145043637, 'nTOFF': 1, 'dOFF': 0.3222915145043637, 'SUCCESS': True}
10:10:34,417 root DEBUG 

=================== Experiment ID #188 	 Dual Point ID: 190 ===================
10:10:34,427 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.383E-08|<1.000E-06)
10:10:34,428 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:34,667 root DEBUG Side: ON	 Angle(dx0, dx): 0.89 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.442E-06 	 Total distance: 1.442E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 9]
10:10:34,887 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.209E-02 	 Total distance: 3.209E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([150], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:10:34,888 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:34,888 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.99 	 cIDON = [0 9], cIDOFF = [0 9]
10:10:34,888 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:34,888 root DEBUG dOFF/dON = 22254.9
10:10:34,888 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.84678104081188, 'dON1': 1.4419590677997255e-06, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 1.4419590677997255e-06, 'nTON': 1, 'dON': 1.4419590677997255e-06, 'dxOFFAngle': 89.98966729752591, 'dOFF1': 0.0320906848320298, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.0320906848320298, 'nTOFF': 1, 'dOFF': 0.0320906848320298, 'SUCCESS': True}
10:10:34,897 root DEBUG 

=================== Experiment ID #189 	 Dual Point ID: 191 ===================
10:10:34,907 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.373E-09|<1.000E-06)
10:10:34,907 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:35,119 root DEBUG Side: ON	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.486E-01 	 Total distance: 3.486E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([103], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:35,372 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.505E-01 	 Total distance: 8.505E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([62], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:35,372 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:35,373 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 41.86 	 cIDON = [2 6], cIDOFF = [2 6]
10:10:35,373 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:35,373 root DEBUG dOFF/dON = 2.4
10:10:35,373 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.86502315014445, 'dON1': 0.3485608814603613, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.3485608814603613, 'nTON': 1, 'dON': 0.3485608814603613, 'dxOFFAngle': 89.72580890485088, 'dOFF1': 0.8504604570347211, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.8504604570347211, 'nTOFF': 1, 'dOFF': 0.8504604570347211, 'SUCCESS': True}
10:10:35,384 root DEBUG 

=================== Experiment ID #190 	 Dual Point ID: 192 ===================
10:10:35,394 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.924E-08|<1.000E-06)
10:10:35,394 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:35,702 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.482E-01 	 Total distance: 1.482E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([193], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:35,952 root DEBUG Side: ON	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.124E-01 	 Total distance: 8.606E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([129], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:36,234 root DEBUG Side: OFF	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.254E-01 	 Total distance: 4.254E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([243], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:36,234 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:36,234 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -33.84 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:36,234 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:36,235 root DEBUG dOFF/dON = 0.5
10:10:36,235 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.95051214366097, 'dON1': 0.8605627178451378, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.8605627178451378, 'nTON': 1, 'dON': 0.8605627178451378, 'dxOFFAngle': 87.71967084564433, 'dOFF1': 0.4254090270652871, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.4254090270652871, 'nTOFF': 1, 'dOFF': 0.4254090270652871, 'SUCCESS': False}
10:10:36,244 root DEBUG 

=================== Experiment ID #191 	 Dual Point ID: 193 ===================
10:10:36,253 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.274E-09|<1.000E-06)
10:10:36,253 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:36,490 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.024E+00 	 Total distance: 1.024E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([198], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:36,695 root DEBUG Side: ON	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.057E-01 	 Total distance: 1.129E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([106], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:36,915 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.675E-02 	 Total distance: 2.675E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([189], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:37,62 root DEBUG Side: OFF	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.236E-01 	 Total distance: 3.503E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([129], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:37,62 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:37,63 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -52.65 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:37,63 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:37,63 root DEBUG dOFF/dON = 0.3
10:10:37,63 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.04176116021489, 'dON1': 1.1294877645075927, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 1.1294877645075927, 'nTON': 1, 'dON': 1.1294877645075927, 'dxOFFAngle': 86.94762839821266, 'dOFF1': 0.3503240440137886, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.3503240440137886, 'nTOFF': 1, 'dOFF': 0.3503240440137886, 'SUCCESS': False}
10:10:37,78 root DEBUG 

=================== Experiment ID #192 	 Dual Point ID: 194 ===================
10:10:37,86 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.016E-07|<1.000E-06)
10:10:37,87 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:37,398 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.773E-02 	 Total distance: 1.773E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([122], dtype=int64), array([[False]])]] 	 class: [4 7]
10:10:37,581 root DEBUG Side: ON	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.249E-02 	 Total distance: 1.002E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([138], dtype=int64), array([[False]])]] 	 class: [4 7]
10:10:37,891 root DEBUG Side: OFF	 Angle(dx0, dx): 0.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.318E-02 	 Total distance: 5.318E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([208], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:10:37,891 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:37,891 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -30.66 	 cIDON = [4 7], cIDOFF = [4 7]
10:10:37,891 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:37,891 root DEBUG dOFF/dON = 0.5
10:10:37,891 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.18642619191372, 'dON1': 0.10021348536828763, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.10021348536828763, 'nTON': 1, 'dON': 0.10021348536828763, 'dxOFFAngle': 88.72278723303435, 'dOFF1': 0.05318165842626135, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.05318165842626135, 'nTOFF': 1, 'dOFF': 0.05318165842626135, 'SUCCESS': False}
10:10:37,899 root DEBUG 

=================== Experiment ID #193 	 Dual Point ID: 195 ===================
10:10:37,907 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.498E-08|<1.000E-06)
10:10:37,908 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:38,232 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.787E-02 	 Total distance: 7.787E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([6], dtype=int64), array([[ True]])]] 	 class: [0 5]
10:10:38,512 root DEBUG Side: OFF	 Angle(dx0, dx): 0.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.605E-02 	 Total distance: 2.605E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([186], dtype=int64), array([[False]])]] 	 class: [1 5]
10:10:38,512 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:38,513 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -49.87 	 cIDON = [0 5], cIDOFF = [1 5]
10:10:38,513 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:38,513 root DEBUG dOFF/dON = 0.3
10:10:38,513 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.09089442266927, 'dON1': 0.07787141582798428, 'cIDON1': array([0, 5], dtype=int64), 'dON_patch_1': 0.07787141582798428, 'nTON': 1, 'dON': 0.07787141582798428, 'dxOFFAngle': 87.49537250484134, 'dOFF1': 0.02604782585655456, 'cIDOFF1': array([1, 5], dtype=int64), 'dOFF_patch_1': 0.02604782585655456, 'nTOFF': 1, 'dOFF': 0.02604782585655456, 'SUCCESS': False}
10:10:38,523 root DEBUG 

=================== Experiment ID #194 	 Dual Point ID: 196 ===================
10:10:38,533 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.380E-09|<1.000E-06)
10:10:38,533 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:38,841 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.688E-01 	 Total distance: 1.688E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([222], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:39,15 root DEBUG Side: ON	 Angle(dx0, dx): 0.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.209E-01 	 Total distance: 3.897E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([224], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:39,337 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.847E-02 	 Total distance: 1.847E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([115], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:39,337 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:39,338 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -90.95 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:39,338 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:39,338 root DEBUG dOFF/dON = 0.0
10:10:39,338 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.82944796622785, 'dON1': 0.3896769781921742, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.3896769781921742, 'nTON': 1, 'dON': 0.3896769781921742, 'dxOFFAngle': 89.72097461759583, 'dOFF1': 0.018473811605190262, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.018473811605190262, 'nTOFF': 1, 'dOFF': 0.018473811605190262, 'SUCCESS': False}
10:10:39,353 root DEBUG 

=================== Experiment ID #195 	 Dual Point ID: 197 ===================
10:10:39,361 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.895E-08|<1.000E-06)
10:10:39,361 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:39,635 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.806E-02 	 Total distance: 6.806E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([224], dtype=int64), array([[False]])]] 	 class: [6 7]
10:10:39,828 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.017E-02 	 Total distance: 1.182E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([114], dtype=int64), array([[False]])]] 	 class: [6 7]
10:10:40,51 root DEBUG Side: ON	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.442E-01 	 Total distance: 2.624E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([38], dtype=int64), array([[False]])]] 	 class: [6 7]
10:10:40,227 root DEBUG Side: ON	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.079E-01 	 Total distance: 3.703E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([114], dtype=int64), array([[False]])]] 	 class: [6 7]
10:10:40,485 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.894E-01 	 Total distance: 2.894E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([130], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:10:40,641 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.380E-01 	 Total distance: 5.274E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([27], dtype=int64), array([[False]])]] 	 class: [6 7]
10:10:40,831 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.396E-02 	 Total distance: 6.013E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([160], dtype=int64), array([[False]])]] 	 class: [6 7]
10:10:40,831 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:40,831 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 23.78 	 cIDON = [6 7], cIDOFF = [6 7]
10:10:40,831 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:40,831 root DEBUG dOFF/dON = 1.6
10:10:40,831 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.19472297696953, 'dON1': 0.37027264262585957, 'cIDON1': array([6, 7], dtype=int64), 'dON_patch_1': 0.37027264262585957, 'nTON': 1, 'dON': 0.37027264262585957, 'dxOFFAngle': 88.07113923950439, 'dOFF1': 0.6013424260382356, 'cIDOFF1': array([6, 7], dtype=int64), 'dOFF_patch_1': 0.6013424260382356, 'nTOFF': 1, 'dOFF': 0.6013424260382356, 'SUCCESS': True}
10:10:40,841 root DEBUG 

=================== Experiment ID #196 	 Dual Point ID: 198 ===================
10:10:40,848 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.242E-09|<1.000E-06)
10:10:40,849 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:41,128 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.220E-01 	 Total distance: 2.220E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([56], dtype=int64), array([[False]])]] 	 class: [3 4]
10:10:41,420 root DEBUG Side: OFF	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.123E-03 	 Total distance: 2.123E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([207], dtype=int64), array([[False]])]] 	 class: [3 4]
10:10:41,421 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:41,421 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -98.11 	 cIDON = [3 4], cIDOFF = [3 4]
10:10:41,422 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:41,422 root DEBUG dOFF/dON = 0.0
10:10:41,422 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.8148706484098, 'dON1': 0.22204043219273728, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.22204043219273728, 'nTON': 1, 'dON': 0.22204043219273728, 'dxOFFAngle': 89.99929987385457, 'dOFF1': 0.002122556158532358, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.002122556158532358, 'nTOFF': 1, 'dOFF': 0.002122556158532358, 'SUCCESS': False}
10:10:41,430 root DEBUG 

=================== Experiment ID #197 	 Dual Point ID: 199 ===================
10:10:41,436 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.496E-08|<1.000E-06)
10:10:41,436 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:41,705 root DEBUG Side: ON	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.383E-02 	 Total distance: 8.383E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([46], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:41,945 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.915E-03 	 Total distance: 6.915E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([118], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:42,118 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.950E-01 	 Total distance: 2.019E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([133], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:42,325 root DEBUG Side: OFF	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.887E-01 	 Total distance: 5.906E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([55], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:42,501 root DEBUG Side: OFF	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.380E-01 	 Total distance: 7.285E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([113], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:42,501 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:42,501 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 79.36 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:42,501 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:42,501 root DEBUG dOFF/dON = 8.7
10:10:42,501 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.08020559594587, 'dON1': 0.08383178667339229, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.08383178667339229, 'nTON': 1, 'dON': 0.08383178667339229, 'dxOFFAngle': 88.013051720025, 'dOFF1': 0.7285297825727013, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.7285297825727013, 'nTOFF': 1, 'dOFF': 0.7285297825727013, 'SUCCESS': True}
10:10:42,509 root DEBUG 

=================== Experiment ID #198 	 Dual Point ID: 200 ===================
10:10:42,517 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.476E-08|<1.000E-06)
10:10:42,517 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:42,788 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.360E-02 	 Total distance: 6.360E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([117], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:42,972 root DEBUG Side: ON	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.083E-01 	 Total distance: 1.719E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([134], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:43,285 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.982E-02 	 Total distance: 7.982E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([139], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:43,456 root DEBUG Side: OFF	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.413E-01 	 Total distance: 2.212E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([201], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:43,686 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.101E-01 	 Total distance: 5.312E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([58], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:43,687 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:43,687 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 51.11 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:43,687 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:43,687 root DEBUG dOFF/dON = 3.1
10:10:43,687 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.5068813097488, 'dON1': 0.17186495037564867, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.17186495037564867, 'nTON': 1, 'dON': 0.17186495037564867, 'dxOFFAngle': 89.3169080007106, 'dOFF1': 0.5312075318578334, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.5312075318578334, 'nTOFF': 1, 'dOFF': 0.5312075318578334, 'SUCCESS': True}
10:10:43,697 root DEBUG 

=================== Experiment ID #199 	 Dual Point ID: 201 ===================
10:10:43,709 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.332E-09|<1.000E-06)
10:10:43,710 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:44,66 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.104E-01 	 Total distance: 1.104E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([158], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:44,263 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.988E-01 	 Total distance: 3.093E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([203], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:44,444 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.452E-01 	 Total distance: 5.545E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([222], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:44,668 root DEBUG Side: ON	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.080E-02 	 Total distance: 5.953E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([48], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:44,948 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.421E-01 	 Total distance: 1.421E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([67], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:45,112 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.314E-01 	 Total distance: 5.735E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([23], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:45,112 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:45,113 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -1.87 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:45,113 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:45,113 root DEBUG dOFF/dON = 1.0
10:10:45,113 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.86761666435831, 'dON1': 0.5952912863386829, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.5952912863386829, 'nTON': 1, 'dON': 0.5952912863386829, 'dxOFFAngle': 88.82590529554184, 'dOFF1': 0.573476392486996, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.573476392486996, 'nTOFF': 1, 'dOFF': 0.573476392486996, 'SUCCESS': False}
10:10:45,126 root DEBUG 

=================== Experiment ID #200 	 Dual Point ID: 202 ===================
10:10:45,134 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.427E-09|<1.000E-06)
10:10:45,134 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:45,396 root DEBUG Side: ON	 Angle(dx0, dx): 1.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.613E-01 	 Total distance: 4.613E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([106], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:10:45,692 root DEBUG Side: OFF	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.509E-01 	 Total distance: 3.509E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([25], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:10:45,692 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:45,692 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -13.58 	 cIDON = [3 9], cIDOFF = [3 9]
10:10:45,692 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:45,692 root DEBUG dOFF/dON = 0.8
10:10:45,692 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.40784794440262, 'dON1': 0.4612622759296996, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.4612622759296996, 'nTON': 1, 'dON': 0.4612622759296996, 'dxOFFAngle': 86.4268953172283, 'dOFF1': 0.35093928731018875, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.35093928731018875, 'nTOFF': 1, 'dOFF': 0.35093928731018875, 'SUCCESS': False}
10:10:45,710 root DEBUG 

=================== Experiment ID #201 	 Dual Point ID: 203 ===================
10:10:45,730 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.336E-08|<1.000E-06)
10:10:45,731 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:46,67 root DEBUG Side: ON	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.239E-02 	 Total distance: 2.239E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([26], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:10:46,299 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.768E-01 	 Total distance: 4.991E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([149], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:10:46,542 root DEBUG Side: ON	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.625E-01 	 Total distance: 6.616E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([255], dtype=int64), array([[False]])]] 	 class: [6 9]
10:10:46,832 root DEBUG Side: OFF	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.404E-01 	 Total distance: 3.404E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([180], dtype=int64), array([[False]])]] 	 class: [6 9]
10:10:46,832 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:46,832 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -32.06 	 cIDON = [6 9], cIDOFF = [6 9]
10:10:46,833 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:46,833 root DEBUG dOFF/dON = 0.5
10:10:46,833 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.38252193637405, 'dON1': 0.6616110589367361, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.6616110589367361, 'nTON': 1, 'dON': 0.6616110589367361, 'dxOFFAngle': 85.52207323964006, 'dOFF1': 0.34036099314865687, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.34036099314865687, 'nTOFF': 1, 'dOFF': 0.34036099314865687, 'SUCCESS': False}
10:10:46,840 root DEBUG 

=================== Experiment ID #202 	 Dual Point ID: 204 ===================
10:10:46,851 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.281E-08|<1.000E-06)
10:10:46,851 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:47,127 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.690E-01 	 Total distance: 5.690E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([6], dtype=int64), array([[ True]])]] 	 class: [1 6]
10:10:47,360 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.878E-01 	 Total distance: 7.568E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([53], dtype=int64), array([[ True]])]] 	 class: [1 6]
10:10:47,610 root DEBUG Side: ON	 Angle(dx0, dx): 1.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.020E-01 	 Total distance: 8.587E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([254], dtype=int64), array([[ True]])]] 	 class: [1 6]
10:10:47,864 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.374E-03 	 Total distance: 3.374E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([246], dtype=int64), array([[ True]])]] 	 class: [0 6]
10:10:48,123 root DEBUG Side: OFF	 Angle(dx0, dx): 1.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.856E-01 	 Total distance: 3.890E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([51], dtype=int64), array([[ True]])]] 	 class: [0 6]
10:10:48,123 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:48,123 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -37.65 	 cIDON = [1 6], cIDOFF = [0 6]
10:10:48,123 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:48,123 root DEBUG dOFF/dON = 0.5
10:10:48,123 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.609072590189, 'dON1': 0.8587437660934131, 'cIDON1': array([1, 6], dtype=int64), 'dON_patch_1': 0.8587437660934131, 'nTON': 1, 'dON': 0.8587437660934131, 'dxOFFAngle': 89.29090722441514, 'dOFF1': 0.3889603183967744, 'cIDOFF1': array([0, 6], dtype=int64), 'dOFF_patch_1': 0.3889603183967744, 'nTOFF': 1, 'dOFF': 0.3889603183967744, 'SUCCESS': False}
10:10:48,134 root DEBUG 

=================== Experiment ID #203 	 Dual Point ID: 205 ===================
10:10:48,143 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.728E-08|<1.000E-06)
10:10:48,144 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:48,480 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.000E-01 	 Total distance: 2.000E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([118], dtype=int64), array([[False]])]] 	 class: [3 4]
10:10:48,778 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.551E-01 	 Total distance: 8.551E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([2], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:10:48,779 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:48,779 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 62.09 	 cIDON = [3 4], cIDOFF = [3 4]
10:10:48,779 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:48,779 root DEBUG dOFF/dON = 4.3
10:10:48,779 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.9155599245499, 'dON1': 0.19997642648240577, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.19997642648240577, 'nTON': 1, 'dON': 0.19997642648240577, 'dxOFFAngle': 88.78829572403033, 'dOFF1': 0.8551256937174061, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.8551256937174061, 'nTOFF': 1, 'dOFF': 0.8551256937174061, 'SUCCESS': True}
10:10:48,791 root DEBUG 

=================== Experiment ID #204 	 Dual Point ID: 206 ===================
10:10:48,804 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.630E-09|<1.000E-06)
10:10:48,804 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:49,99 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.162E-02 	 Total distance: 8.162E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([5], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:49,442 root DEBUG Side: OFF	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.237E-01 	 Total distance: 2.237E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([199], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:49,625 root DEBUG Side: OFF	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.432E-02 	 Total distance: 3.180E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([177], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:49,626 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:49,626 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 59.15 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:49,626 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:49,626 root DEBUG dOFF/dON = 3.9
10:10:49,626 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.5701785018495, 'dON1': 0.08162308607010454, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.08162308607010454, 'nTON': 1, 'dON': 0.08162308607010454, 'dxOFFAngle': 86.49215019194556, 'dOFF1': 0.31799439321791617, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.31799439321791617, 'nTOFF': 1, 'dOFF': 0.31799439321791617, 'SUCCESS': True}
10:10:49,632 root DEBUG 

=================== Experiment ID #205 	 Dual Point ID: 207 ===================
10:10:49,644 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.114E-09|<1.000E-06)
10:10:49,644 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:49,961 root DEBUG Side: ON	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.312E-01 	 Total distance: 5.312E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([147], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:50,276 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.510E-01 	 Total distance: 1.510E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([154], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:50,466 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.696E-01 	 Total distance: 3.206E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([21], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:50,669 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.862E-01 	 Total distance: 6.068E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([167], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:50,669 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:50,670 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 6.65 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:50,670 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:50,670 root DEBUG dOFF/dON = 1.1
10:10:50,670 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.75518505053215, 'dON1': 0.5311593868113271, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.5311593868113271, 'nTON': 1, 'dON': 0.5311593868113271, 'dxOFFAngle': 89.4258438361376, 'dOFF1': 0.6067871685214845, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.6067871685214845, 'nTOFF': 1, 'dOFF': 0.6067871685214845, 'SUCCESS': True}
10:10:50,685 root DEBUG 

=================== Experiment ID #206 	 Dual Point ID: 208 ===================
10:10:50,696 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.256E-08|<1.000E-06)
10:10:50,697 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:51,72 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.217E-01 	 Total distance: 3.217E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([49], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:51,273 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.691E-01 	 Total distance: 1.291E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([103], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:51,504 root DEBUG Side: ON	 Angle(dx0, dx): 0.97 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.302E-01 	 Total distance: 1.521E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([130], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:51,814 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.337E-01 	 Total distance: 2.337E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([238], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:51,996 root DEBUG Side: OFF	 Angle(dx0, dx): 0.94 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.449E-02 	 Total distance: 2.882E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([145], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:51,996 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:51,996 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -68.14 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:51,996 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:51,996 root DEBUG dOFF/dON = 0.2
10:10:51,996 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.17267532058362, 'dON1': 1.5210924562899433, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 1.5210924562899433, 'nTON': 1, 'dON': 1.5210924562899433, 'dxOFFAngle': 87.25080564234167, 'dOFF1': 0.2881838199503805, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.2881838199503805, 'nTOFF': 1, 'dOFF': 0.2881838199503805, 'SUCCESS': False}
10:10:52,8 root DEBUG 

=================== Experiment ID #207 	 Dual Point ID: 209 ===================
10:10:52,18 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.832E-08|<1.000E-06)
10:10:52,18 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:52,412 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.621E-01 	 Total distance: 1.621E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([46], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:10:52,571 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.588E-01 	 Total distance: 3.209E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([15], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:10:52,914 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.246E-01 	 Total distance: 6.246E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([0], dtype=int64), array([[False]])]] 	 class: [4 7]
10:10:53,274 root DEBUG Side: OFF	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.089E-01 	 Total distance: 9.335E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([139], dtype=int64), array([[False]])]] 	 class: [4 7]
10:10:53,274 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:53,275 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 48.84 	 cIDON = [4 7], cIDOFF = [4 7]
10:10:53,275 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:53,275 root DEBUG dOFF/dON = 2.9
10:10:53,275 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.80575596864989, 'dON1': 0.320886364495503, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.320886364495503, 'nTON': 1, 'dON': 0.320886364495503, 'dxOFFAngle': 89.71185152539275, 'dOFF1': 0.9335082246175415, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.9335082246175415, 'nTOFF': 1, 'dOFF': 0.9335082246175415, 'SUCCESS': True}
10:10:53,287 root DEBUG 

=================== Experiment ID #208 	 Dual Point ID: 210 ===================
10:10:53,301 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.119E-09|<1.000E-06)
10:10:53,301 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:53,629 root DEBUG Side: ON	 Angle(dx0, dx): 1.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.204E-01 	 Total distance: 1.204E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([16], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:10:53,917 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.002E-01 	 Total distance: 4.002E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([175], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:10:53,918 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:53,918 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 53.76 	 cIDON = [4 8], cIDOFF = [4 8]
10:10:53,918 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:53,918 root DEBUG dOFF/dON = 3.3
10:10:53,918 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.68094223530903, 'dON1': 0.12036824809092128, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.12036824809092128, 'nTON': 1, 'dON': 0.12036824809092128, 'dxOFFAngle': 89.59975567232706, 'dOFF1': 0.4002485871700163, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.4002485871700163, 'nTOFF': 1, 'dOFF': 0.4002485871700163, 'SUCCESS': True}
10:10:53,926 root DEBUG 

=================== Experiment ID #209 	 Dual Point ID: 211 ===================
10:10:53,937 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.233E-08|<1.000E-06)
10:10:53,937 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:54,233 root DEBUG Side: ON	 Angle(dx0, dx): 0.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.118E-01 	 Total distance: 1.118E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([20], dtype=int64), array([[False]])]] 	 class: [2 8]
10:10:54,521 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.554E-01 	 Total distance: 6.554E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([158], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:10:54,761 root DEBUG Side: OFF	 Angle(dx0, dx): 1.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.730E-01 	 Total distance: 1.328E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([45], dtype=int64), array([[False]])]] 	 class: [2 8]
10:10:54,762 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:54,762 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 84.48 	 cIDON = [2 8], cIDOFF = [2 8]
10:10:54,762 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:54,762 root DEBUG dOFF/dON = 11.9
10:10:54,762 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.84485438187164, 'dON1': 0.11177053819108966, 'cIDON1': array([2, 8], dtype=int64), 'dON_patch_1': 0.11177053819108966, 'nTON': 1, 'dON': 0.11177053819108966, 'dxOFFAngle': 88.5719744249889, 'dOFF1': 1.328453568817694, 'cIDOFF1': array([2, 8], dtype=int64), 'dOFF_patch_1': 1.328453568817694, 'nTOFF': 1, 'dOFF': 1.328453568817694, 'SUCCESS': True}
10:10:54,777 root DEBUG 

=================== Experiment ID #210 	 Dual Point ID: 212 ===================
10:10:54,786 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.193E-09|<1.000E-06)
10:10:54,787 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:55,14 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.821E-03 	 Total distance: 8.821E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([128], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:55,296 root DEBUG Side: ON	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.204E-01 	 Total distance: 5.292E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([244], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:55,593 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.091E-02 	 Total distance: 1.091E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([7], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:55,824 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.236E-01 	 Total distance: 3.345E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([159], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:56,34 root DEBUG Side: OFF	 Angle(dx0, dx): 0.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.762E-01 	 Total distance: 8.107E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([49], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:56,35 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:56,35 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 21.01 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:56,35 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:56,35 root DEBUG dOFF/dON = 1.5
10:10:56,35 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.88758339286709, 'dON1': 0.529212346964815, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.529212346964815, 'nTON': 1, 'dON': 0.529212346964815, 'dxOFFAngle': 86.70845139324032, 'dOFF1': 0.8106925880799913, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.8106925880799913, 'nTOFF': 1, 'dOFF': 0.8106925880799913, 'SUCCESS': True}
10:10:56,47 root DEBUG 

=================== Experiment ID #211 	 Dual Point ID: 213 ===================
10:10:56,58 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.400E-08|<1.000E-06)
10:10:56,58 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:56,407 root DEBUG Side: ON	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.607E+00 	 Total distance: 1.607E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([242], dtype=int64), array([[False]])]] 	 class: [6 7]
10:10:56,675 root DEBUG Side: OFF	 Angle(dx0, dx): 4.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.315E-03 	 Total distance: 5.315E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([7, 9], dtype=int64), array([[0.],
       [1.]])]] 	 class: [6 9]
10:10:56,675 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:56,676 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.34 	 cIDON = [6 7], cIDOFF = [6 7]
10:10:56,676 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:56,676 root DEBUG dOFF/dON = 0.0
10:10:56,677 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.47110030805581, 'dON1': 1.6074067817070858, 'cIDON1': array([6, 7], dtype=int64), 'dON_patch_1': 1.6074067817070858, 'nTON': 1, 'dON': 1.6074067817070858, 'dxOFFAngle': 85.72859906822269, 'dOFF1': 0.005314663427653727, 'cIDOFF1': array([6, 7], dtype=int64), 'dOFF_patch_1': 0.005314663427653727, 'nTOFF': 1, 'dOFF': 0.005314663427653727, 'SUCCESS': False}
10:10:56,690 root DEBUG 

=================== Experiment ID #212 	 Dual Point ID: 214 ===================
10:10:56,701 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.110E-08|<1.000E-06)
10:10:56,701 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:56,988 root DEBUG Side: ON	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.218E-02 	 Total distance: 6.218E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([132], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:57,202 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.297E-02 	 Total distance: 1.451E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([4], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:57,504 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.941E-01 	 Total distance: 4.941E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([170], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:57,505 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:57,505 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 54.59 	 cIDON = [3 6], cIDOFF = [3 6]
10:10:57,505 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:57,505 root DEBUG dOFF/dON = 3.4
10:10:57,505 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.15199134095673, 'dON1': 0.1451462137812748, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.1451462137812748, 'nTON': 1, 'dON': 0.1451462137812748, 'dxOFFAngle': 89.30815490926491, 'dOFF1': 0.4941258563638405, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.4941258563638405, 'nTOFF': 1, 'dOFF': 0.4941258563638405, 'SUCCESS': True}
10:10:57,516 root DEBUG 

=================== Experiment ID #213 	 Dual Point ID: 215 ===================
10:10:57,524 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.135E-08|<1.000E-06)
10:10:57,524 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:57,823 root DEBUG Side: ON	 Angle(dx0, dx): 0.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.571E-01 	 Total distance: 1.571E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([125], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:58,64 root DEBUG Side: OFF	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.723E-01 	 Total distance: 2.723E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([84], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:58,64 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:58,64 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 26.82 	 cIDON = [2 7], cIDOFF = [2 7]
10:10:58,65 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:58,65 root DEBUG dOFF/dON = 1.7
10:10:58,65 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.5635308175641, 'dON1': 0.15713622942422453, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.15713622942422453, 'nTON': 1, 'dON': 0.15713622942422453, 'dxOFFAngle': 87.94296235622822, 'dOFF1': 0.27230967318126037, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.27230967318126037, 'nTOFF': 1, 'dOFF': 0.27230967318126037, 'SUCCESS': True}
10:10:58,76 root DEBUG 

=================== Experiment ID #214 	 Dual Point ID: 216 ===================
10:10:58,82 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.627E-08|<1.000E-06)
10:10:58,82 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:58,363 root DEBUG Side: ON	 Angle(dx0, dx): 0.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.338E-01 	 Total distance: 4.338E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([92], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:58,590 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.242E-01 	 Total distance: 1.242E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([174], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:58,590 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:58,590 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -55.48 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:58,590 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:58,590 root DEBUG dOFF/dON = 0.3
10:10:58,590 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.57058918441031, 'dON1': 0.4338045512680882, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.4338045512680882, 'nTON': 1, 'dON': 0.4338045512680882, 'dxOFFAngle': 89.59751204609871, 'dOFF1': 0.12420648577618576, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.12420648577618576, 'nTOFF': 1, 'dOFF': 0.12420648577618576, 'SUCCESS': False}
10:10:58,601 root DEBUG 

=================== Experiment ID #215 	 Dual Point ID: 217 ===================
10:10:58,608 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.336E-08|<1.000E-06)
10:10:58,608 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:58,867 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.568E-02 	 Total distance: 2.568E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([5], dtype=int64), array([[False]])]] 	 class: [3 8]
10:10:59,41 root DEBUG Side: ON	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.467E-02 	 Total distance: 4.034E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([101], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:10:59,327 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.331E-01 	 Total distance: 4.331E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([116], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:10:59,328 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:59,328 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 82.96 	 cIDON = [3 8], cIDOFF = [3 8]
10:10:59,328 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:59,328 root DEBUG dOFF/dON = 10.7
10:10:59,328 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.57417749239205, 'dON1': 0.040344092167968096, 'cIDON1': array([3, 8], dtype=int64), 'dON_patch_1': 0.040344092167968096, 'nTON': 1, 'dON': 0.040344092167968096, 'dxOFFAngle': 89.47735367110005, 'dOFF1': 0.4330576851204522, 'cIDOFF1': array([3, 8], dtype=int64), 'dOFF_patch_1': 0.4330576851204522, 'nTOFF': 1, 'dOFF': 0.4330576851204522, 'SUCCESS': True}
10:10:59,338 root DEBUG 

=================== Experiment ID #216 	 Dual Point ID: 218 ===================
10:10:59,343 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.597E-08|<1.000E-06)
10:10:59,343 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:59,603 root DEBUG Side: ON	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.662E-01 	 Total distance: 1.662E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([183], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:59,881 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.596E-02 	 Total distance: 5.596E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([71], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:59,882 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:59,882 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -49.63 	 cIDON = [5 7], cIDOFF = [5 7]
10:10:59,882 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:59,882 root DEBUG dOFF/dON = 0.3
10:10:59,882 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.3756079228425, 'dON1': 0.16624227521807908, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.16624227521807908, 'nTON': 1, 'dON': 0.16624227521807908, 'dxOFFAngle': 86.74485046750945, 'dOFF1': 0.055958067699848034, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.055958067699848034, 'nTOFF': 1, 'dOFF': 0.055958067699848034, 'SUCCESS': False}
10:10:59,891 root DEBUG 

=================== Experiment ID #217 	 Dual Point ID: 219 ===================
10:10:59,900 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.813E-08|<1.000E-06)
10:10:59,901 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:00,197 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.406E-02 	 Total distance: 4.406E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([68], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:00,333 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.695E-01 	 Total distance: 5.135E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([154], dtype=int64), array([[False]])]] 	 class: [2 7]
10:11:00,489 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.901E-01 	 Total distance: 9.036E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([158], dtype=int64), array([[False]])]] 	 class: [2 7]
10:11:00,745 root DEBUG Side: OFF	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.518E-02 	 Total distance: 9.518E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([130], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:00,950 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.040E-01 	 Total distance: 1.991E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([198], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:01,59 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.073E-01 	 Total distance: 5.065E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([144], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:01,226 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.958E-01 	 Total distance: 1.402E+00 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([103], dtype=int64), array([[False]])]] 	 class: [2 7]
10:11:01,478 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.049E-01 	 Total distance: 1.707E+00 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([80], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:01,625 root DEBUG Side: OFF	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.341E-02 	 Total distance: 1.721E+00 	 Future toggles: 0 	 Past toggles: 6 	 Toggled: [[1, array([162], dtype=int64), array([[False]])]] 	 class: [2 7]
10:11:01,749 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.523E-01 	 Total distance: 1.873E+00 	 Future toggles: 0 	 Past toggles: 7 	 Toggled: [[1, array([48], dtype=int64), array([[False]])]] 	 class: [2 7]
10:11:01,892 root DEBUG Side: OFF	 Angle(dx0, dx): 0.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.538E-02 	 Total distance: 1.898E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([48], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:01,892 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:01,892 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 35.50 	 cIDON = [2 7], cIDOFF = [2 7]
10:11:01,893 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:01,893 root DEBUG dOFF/dON = 2.1
10:11:01,893 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.82885850489039, 'dON1': 0.9036230004943014, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.9036230004943014, 'nTON': 1, 'dON': 0.9036230004943014, 'dxOFFAngle': 89.70566420872751, 'dOFF1': 1.898329787241705, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 1.898329787241705, 'nTOFF': 1, 'dOFF': 1.898329787241705, 'SUCCESS': True}
10:11:01,902 root DEBUG 

=================== Experiment ID #218 	 Dual Point ID: 220 ===================
10:11:01,911 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.508E-08|<1.000E-06)
10:11:01,911 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:02,209 root DEBUG Side: ON	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.242E-01 	 Total distance: 1.242E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([251], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:11:02,436 root DEBUG Side: OFF	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.132E-01 	 Total distance: 2.132E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([12], dtype=int64), array([[False]])]] 	 class: [3 8]
10:11:02,437 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:02,437 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 26.40 	 cIDON = [3 8], cIDOFF = [3 8]
10:11:02,437 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:02,437 root DEBUG dOFF/dON = 1.7
10:11:02,437 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.30243974850899, 'dON1': 0.12416562963868656, 'cIDON1': array([3, 8], dtype=int64), 'dON_patch_1': 0.12416562963868656, 'nTON': 1, 'dON': 0.12416562963868656, 'dxOFFAngle': 88.3381366161433, 'dOFF1': 0.21324725303850145, 'cIDOFF1': array([3, 8], dtype=int64), 'dOFF_patch_1': 0.21324725303850145, 'nTOFF': 1, 'dOFF': 0.21324725303850145, 'SUCCESS': True}
10:11:02,444 root DEBUG 

=================== Experiment ID #219 	 Dual Point ID: 221 ===================
10:11:02,459 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.061E-09|<1.000E-06)
10:11:02,459 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:02,729 root DEBUG Side: ON	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.656E-03 	 Total distance: 4.656E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([69], dtype=int64), array([[False]])]] 	 class: [2 4]
10:11:03,62 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.911E-01 	 Total distance: 1.911E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([57], dtype=int64), array([[False]])]] 	 class: [2 4]
10:11:03,264 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.046E-01 	 Total distance: 3.957E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([127], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:11:03,264 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:03,264 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 97.67 	 cIDON = [2 4], cIDOFF = [2 4]
10:11:03,264 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:03,264 root DEBUG dOFF/dON = 85.0
10:11:03,264 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.38788111367441, 'dON1': 0.004655613890971089, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.004655613890971089, 'nTON': 1, 'dON': 0.004655613890971089, 'dxOFFAngle': 89.54967056261545, 'dOFF1': 0.3957126202737338, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.3957126202737338, 'nTOFF': 1, 'dOFF': 0.3957126202737338, 'SUCCESS': True}
10:11:03,274 root DEBUG 

=================== Experiment ID #220 	 Dual Point ID: 222 ===================
10:11:03,283 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.683E-10|<1.000E-06)
10:11:03,284 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:03,570 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.015E-02 	 Total distance: 7.015E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([169], dtype=int64), array([[False]])]] 	 class: [4 5]
10:11:03,721 root DEBUG Side: ON	 Angle(dx0, dx): 0.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.768E-02 	 Total distance: 1.078E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([217], dtype=int64), array([[False]])]] 	 class: [4 5]
10:11:03,914 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.562E-02 	 Total distance: 1.535E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([158], dtype=int64), array([[False]])]] 	 class: [4 5]
10:11:04,154 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.813E-02 	 Total distance: 1.816E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([85], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:11:04,434 root DEBUG Side: OFF	 Angle(dx0, dx): 1.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.595E-01 	 Total distance: 2.595E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([30], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:11:04,434 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:04,435 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 17.66 	 cIDON = [4 5], cIDOFF = [4 5]
10:11:04,435 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:04,435 root DEBUG dOFF/dON = 1.4
10:11:04,435 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.31207338908035, 'dON1': 0.18158377976389103, 'cIDON1': array([4, 5], dtype=int64), 'dON_patch_1': 0.18158377976389103, 'nTON': 1, 'dON': 0.18158377976389103, 'dxOFFAngle': 85.14741875023549, 'dOFF1': 0.25948829551630775, 'cIDOFF1': array([4, 5], dtype=int64), 'dOFF_patch_1': 0.25948829551630775, 'nTOFF': 1, 'dOFF': 0.25948829551630775, 'SUCCESS': True}
10:11:04,445 root DEBUG 

=================== Experiment ID #221 	 Dual Point ID: 223 ===================
10:11:04,455 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.403E-08|<1.000E-06)
10:11:04,456 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:04,784 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.209E-01 	 Total distance: 1.209E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([154], dtype=int64), array([[False]])]] 	 class: [5 7]
10:11:04,941 root DEBUG Side: ON	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.077E+00 	 Total distance: 1.198E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([65], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:11:05,184 root DEBUG Side: OFF	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.078E-02 	 Total distance: 9.078E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([195], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:11:05,185 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:05,185 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -85.91 	 cIDON = [5 7], cIDOFF = [5 7]
10:11:05,185 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:05,185 root DEBUG dOFF/dON = 0.1
10:11:05,185 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.65211260694149, 'dON1': 1.1977100138341772, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 1.1977100138341772, 'nTON': 1, 'dON': 1.1977100138341772, 'dxOFFAngle': 87.85223783198958, 'dOFF1': 0.09078286336726181, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.09078286336726181, 'nTOFF': 1, 'dOFF': 0.09078286336726181, 'SUCCESS': False}
10:11:05,195 root DEBUG 

=================== Experiment ID #222 	 Dual Point ID: 224 ===================
10:11:05,205 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.625E-08|<1.000E-06)
10:11:05,205 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:05,547 root DEBUG Side: ON	 Angle(dx0, dx): 0.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.168E-01 	 Total distance: 2.168E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([71], dtype=int64), array([[False]])]] 	 class: [3 6]
10:11:05,770 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.825E-01 	 Total distance: 7.825E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([132], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:11:05,770 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:05,770 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 56.61 	 cIDON = [3 6], cIDOFF = [3 6]
10:11:05,770 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:05,770 root DEBUG dOFF/dON = 3.6
10:11:05,770 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.58704585598558, 'dON1': 0.21675636401918308, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.21675636401918308, 'nTON': 1, 'dON': 0.21675636401918308, 'dxOFFAngle': 87.723922187371, 'dOFF1': 0.7824569762277865, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.7824569762277865, 'nTOFF': 1, 'dOFF': 0.7824569762277865, 'SUCCESS': True}
10:11:05,777 root DEBUG 

=================== Experiment ID #223 	 Dual Point ID: 225 ===================
10:11:05,784 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.114E-09|<1.000E-06)
10:11:05,785 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:06,65 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.375E-01 	 Total distance: 1.375E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([122], dtype=int64), array([[False]])]] 	 class: [7 9]
10:11:06,274 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.398E-01 	 Total distance: 3.772E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([111], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:11:06,480 root DEBUG Side: ON	 Angle(dx0, dx): 1.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.305E-01 	 Total distance: 5.077E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([58], dtype=int64), array([[False]])]] 	 class: [7 9]
10:11:06,688 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.963E-01 	 Total distance: 1.963E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([102], dtype=int64), array([[False]])]] 	 class: [7 9]
10:11:06,688 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:06,688 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -44.23 	 cIDON = [7 9], cIDOFF = [7 9]
10:11:06,688 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:06,688 root DEBUG dOFF/dON = 0.4
10:11:06,688 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.68947599568872, 'dON1': 0.5077270588460009, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.5077270588460009, 'nTON': 1, 'dON': 0.5077270588460009, 'dxOFFAngle': 88.26107721595896, 'dOFF1': 0.19634900251021867, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.19634900251021867, 'nTOFF': 1, 'dOFF': 0.19634900251021867, 'SUCCESS': False}
10:11:06,699 root DEBUG 

=================== Experiment ID #224 	 Dual Point ID: 226 ===================
10:11:06,711 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.999E-08|<1.000E-06)
10:11:06,711 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:07,0 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.558E-01 	 Total distance: 5.558E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([150], dtype=int64), array([[False]])]] 	 class: [3 4]
10:11:07,249 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.454E-01 	 Total distance: 3.454E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([188], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:11:07,491 root DEBUG Side: OFF	 Angle(dx0, dx): 0.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.469E-01 	 Total distance: 6.922E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([220], dtype=int64), array([[False]])]] 	 class: [3 4]
10:11:07,491 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:07,492 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 10.93 	 cIDON = [3 4], cIDOFF = [3 4]
10:11:07,492 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:07,492 root DEBUG dOFF/dON = 1.2
10:11:07,492 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.89239860095654, 'dON1': 0.5558043788805584, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.5558043788805584, 'nTON': 1, 'dON': 0.5558043788805584, 'dxOFFAngle': 88.11718652701185, 'dOFF1': 0.692236464335868, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.692236464335868, 'nTOFF': 1, 'dOFF': 0.692236464335868, 'SUCCESS': True}
10:11:07,499 root DEBUG 

=================== Experiment ID #225 	 Dual Point ID: 227 ===================
10:11:07,508 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.880E-08|<1.000E-06)
10:11:07,509 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:07,780 root DEBUG Side: ON	 Angle(dx0, dx): 0.95 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.646E-01 	 Total distance: 3.646E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([31], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:07,987 root DEBUG Side: OFF	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.421E-02 	 Total distance: 4.421E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([218], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:07,987 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:07,987 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -78.37 	 cIDON = [2 7], cIDOFF = [2 7]
10:11:07,987 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:07,987 root DEBUG dOFF/dON = 0.1
10:11:07,987 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.99017598312182, 'dON1': 0.3645720968223298, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.3645720968223298, 'nTON': 1, 'dON': 0.3645720968223298, 'dxOFFAngle': 89.81015166197275, 'dOFF1': 0.04420838669399177, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.04420838669399177, 'nTOFF': 1, 'dOFF': 0.04420838669399177, 'SUCCESS': False}
10:11:07,997 root DEBUG 

=================== Experiment ID #226 	 Dual Point ID: 228 ===================
10:11:08,6 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.343E-08|<1.000E-06)
10:11:08,6 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:08,235 root DEBUG Side: ON	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.253E-02 	 Total distance: 2.253E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([250], dtype=int64), array([[False]])]] 	 class: [4 6]
10:11:08,526 root DEBUG Side: OFF	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.245E-01 	 Total distance: 2.245E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([214], dtype=int64), array([[False]])]] 	 class: [4 6]
10:11:08,756 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.008E-01 	 Total distance: 4.253E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([213], dtype=int64), array([[False]])]] 	 class: [4 6]
10:11:08,951 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.298E-01 	 Total distance: 5.551E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([157], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:11:09,82 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.028E-01 	 Total distance: 7.579E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([181], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:11:09,82 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:09,82 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 94.23 	 cIDON = [4 6], cIDOFF = [4 6]
10:11:09,82 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:09,82 root DEBUG dOFF/dON = 33.6
10:11:09,82 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.0971895721833, 'dON1': 0.022529000744081738, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.022529000744081738, 'nTON': 1, 'dON': 0.022529000744081738, 'dxOFFAngle': 89.15613889609146, 'dOFF1': 0.7579223122062868, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.7579223122062868, 'nTOFF': 1, 'dOFF': 0.7579223122062868, 'SUCCESS': True}
10:11:09,90 root DEBUG 

=================== Experiment ID #227 	 Dual Point ID: 229 ===================
10:11:09,98 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.282E-08|<1.000E-06)
10:11:09,98 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:09,400 root DEBUG Side: ON	 Angle(dx0, dx): 0.60 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.444E+00 	 Total distance: 2.444E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([229], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:09,631 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.383E+00 	 Total distance: 1.383E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([233], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:09,827 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.942E-01 	 Total distance: 1.877E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([7], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:10,20 root DEBUG Side: OFF	 Angle(dx0, dx): 0.85 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.012E+00 	 Total distance: 2.889E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([132], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:10,147 root DEBUG Side: OFF	 Angle(dx0, dx): 0.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.359E+00 	 Total distance: 4.248E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([128], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:10,147 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:10,148 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 26.96 	 cIDON = [8 9], cIDOFF = [8 9]
10:11:10,148 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:10,149 root DEBUG dOFF/dON = 1.7
10:11:10,149 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.36801135923865, 'dON1': 2.4442814772658905, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 2.4442814772658905, 'nTON': 1, 'dON': 2.4442814772658905, 'dxOFFAngle': 86.64331029710304, 'dOFF1': 4.248491317992132, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 4.248491317992132, 'nTOFF': 1, 'dOFF': 4.248491317992132, 'SUCCESS': True}
10:11:10,159 root DEBUG 

=================== Experiment ID #228 	 Dual Point ID: 230 ===================
10:11:10,172 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.182E-10|<1.000E-06)
10:11:10,173 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:10,526 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.148E-02 	 Total distance: 8.148E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([251], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:11:10,691 root DEBUG Side: ON	 Angle(dx0, dx): 0.60 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.603E-01 	 Total distance: 3.418E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([240], dtype=int64), array([[False]])]] 	 class: [3 4]
10:11:11,3 root DEBUG Side: OFF	 Angle(dx0, dx): 0.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.148E-01 	 Total distance: 1.148E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([108], dtype=int64), array([[False]])]] 	 class: [3 4]
10:11:11,190 root DEBUG Side: OFF	 Angle(dx0, dx): 0.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.829E-02 	 Total distance: 1.630E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([134], dtype=int64), array([[False]])]] 	 class: [3 4]
10:11:11,190 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:11,190 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -35.41 	 cIDON = [3 4], cIDOFF = [3 4]
10:11:11,190 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:11,191 root DEBUG dOFF/dON = 0.5
10:11:11,191 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.29511418548174, 'dON1': 0.3417862408649551, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.3417862408649551, 'nTON': 1, 'dON': 0.3417862408649551, 'dxOFFAngle': 86.22080557820351, 'dOFF1': 0.1630406919064975, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.1630406919064975, 'nTOFF': 1, 'dOFF': 0.1630406919064975, 'SUCCESS': False}
10:11:11,201 root DEBUG 

=================== Experiment ID #229 	 Dual Point ID: 231 ===================
10:11:11,208 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.193E-08|<1.000E-06)
10:11:11,208 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:11,453 root DEBUG Side: ON	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.243E-01 	 Total distance: 1.243E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([33], dtype=int64), array([[False]])]] 	 class: [2 7]
10:11:11,634 root DEBUG Side: ON	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.689E-01 	 Total distance: 7.932E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([107], dtype=int64), array([[False]])]] 	 class: [2 7]
10:11:11,983 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.988E-01 	 Total distance: 1.988E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([165], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:12,160 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.765E-01 	 Total distance: 3.753E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([213], dtype=int64), array([[False]])]] 	 class: [2 7]
10:11:12,355 root DEBUG Side: OFF	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.535E-01 	 Total distance: 5.287E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([28], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:12,355 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:12,355 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -20.00 	 cIDON = [2 7], cIDOFF = [2 7]
10:11:12,355 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:12,355 root DEBUG dOFF/dON = 0.7
10:11:12,355 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.47649402831935, 'dON1': 0.7931804761259493, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.7931804761259493, 'nTON': 1, 'dON': 0.7931804761259493, 'dxOFFAngle': 89.50559176787372, 'dOFF1': 0.528739589385141, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.528739589385141, 'nTOFF': 1, 'dOFF': 0.528739589385141, 'SUCCESS': False}
10:11:12,370 root DEBUG 

=================== Experiment ID #230 	 Dual Point ID: 232 ===================
10:11:12,380 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.187E-09|<1.000E-06)
10:11:12,380 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:12,603 root DEBUG Side: ON	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.837E-01 	 Total distance: 5.837E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([147], dtype=int64), array([[False]])]] 	 class: [6 9]
10:11:12,929 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.208E-01 	 Total distance: 3.208E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([33], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:11:12,929 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:12,930 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -29.06 	 cIDON = [6 9], cIDOFF = [6 9]
10:11:12,930 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:12,930 root DEBUG dOFF/dON = 0.5
10:11:12,930 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.82094994628184, 'dON1': 0.5837454476262799, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.5837454476262799, 'nTON': 1, 'dON': 0.5837454476262799, 'dxOFFAngle': 89.58592136964546, 'dOFF1': 0.32084240319897445, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.32084240319897445, 'nTOFF': 1, 'dOFF': 0.32084240319897445, 'SUCCESS': False}
10:11:12,946 root DEBUG 

=================== Experiment ID #231 	 Dual Point ID: 233 ===================
10:11:12,956 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.240E-09|<1.000E-06)
10:11:12,956 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:13,249 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.475E-01 	 Total distance: 2.475E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([45], dtype=int64), array([[False]])]] 	 class: [4 8]
10:11:13,601 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.899E-01 	 Total distance: 1.899E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([78], dtype=int64), array([[False]])]] 	 class: [4 8]
10:11:13,601 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:13,602 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -13.15 	 cIDON = [4 8], cIDOFF = [4 8]
10:11:13,602 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:13,602 root DEBUG dOFF/dON = 0.8
10:11:13,602 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.97916726044527, 'dON1': 0.247469196064851, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.247469196064851, 'nTON': 1, 'dON': 0.247469196064851, 'dxOFFAngle': 88.88586294463455, 'dOFF1': 0.18994845068653712, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.18994845068653712, 'nTOFF': 1, 'dOFF': 0.18994845068653712, 'SUCCESS': False}
10:11:13,613 root DEBUG 

=================== Experiment ID #232 	 Dual Point ID: 234 ===================
10:11:13,623 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.427E-08|<1.000E-06)
10:11:13,623 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:13,882 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.996E-02 	 Total distance: 7.996E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([165], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:11:14,155 root DEBUG Side: OFF	 Angle(dx0, dx): 1.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.082E-05 	 Total distance: 1.082E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 9]
10:11:14,155 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:14,155 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.97 	 cIDON = [1 9], cIDOFF = [1 9]
10:11:14,156 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:14,156 root DEBUG dOFF/dON = 0.0
10:11:14,156 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.83315355732422, 'dON1': 0.07995850553776547, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.07995850553776547, 'nTON': 1, 'dON': 0.07995850553776547, 'dxOFFAngle': 88.69772089104413, 'dOFF1': 1.0817448420861207e-05, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 1.0817448420861207e-05, 'nTOFF': 1, 'dOFF': 1.0817448420861207e-05, 'SUCCESS': False}
10:11:14,163 root DEBUG 

=================== Experiment ID #233 	 Dual Point ID: 235 ===================
10:11:14,171 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.873E-08|<1.000E-06)
10:11:14,171 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:14,514 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.436E-01 	 Total distance: 2.436E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([61], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:14,659 root DEBUG Side: ON	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.063E-01 	 Total distance: 5.499E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([249], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:14,958 root DEBUG Side: OFF	 Angle(dx0, dx): 3.98 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.773E-01 	 Total distance: 8.773E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([1, 7], dtype=int64), array([[1.],
       [0.]])]] 	 class: [1 2]
10:11:14,958 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:14,958 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 22.94 	 cIDON = [2 7], cIDOFF = [2 7]
10:11:14,958 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:14,958 root DEBUG dOFF/dON = 1.6
10:11:14,958 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.28736414256501, 'dON1': 0.549949973975931, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.549949973975931, 'nTON': 1, 'dON': 0.549949973975931, 'dxOFFAngle': 89.18738594363417, 'dOFF1': 0.8773109907616039, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.8773109907616039, 'nTOFF': 1, 'dOFF': 0.8773109907616039, 'SUCCESS': True}
10:11:14,969 root DEBUG 

=================== Experiment ID #234 	 Dual Point ID: 236 ===================
10:11:14,976 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.791E-10|<1.000E-06)
10:11:14,976 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:15,198 root DEBUG Side: ON	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.412E-03 	 Total distance: 1.412E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([2], dtype=int64), array([[False]])]] 	 class: [3 6]
10:11:15,493 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.423E-02 	 Total distance: 5.423E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([250], dtype=int64), array([[False]])]] 	 class: [3 6]
10:11:15,493 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:15,494 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 94.92 	 cIDON = [3 6], cIDOFF = [3 6]
10:11:15,494 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:15,494 root DEBUG dOFF/dON = 38.4
10:11:15,494 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.76422419776279, 'dON1': 0.001412001294324843, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.001412001294324843, 'nTON': 1, 'dON': 0.001412001294324843, 'dxOFFAngle': 87.98404586897104, 'dOFF1': 0.05422795911337758, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.05422795911337758, 'nTOFF': 1, 'dOFF': 0.05422795911337758, 'SUCCESS': True}
10:11:15,503 root DEBUG 

=================== Experiment ID #235 	 Dual Point ID: 237 ===================
10:11:15,513 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.051E-09|<1.000E-06)
10:11:15,513 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:15,775 root DEBUG Side: ON	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.061E-01 	 Total distance: 2.061E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([39], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:16,33 root DEBUG Side: OFF	 Angle(dx0, dx): 1.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.623E-02 	 Total distance: 1.623E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([197], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:16,206 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.551E-03 	 Total distance: 2.178E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([101], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:16,206 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:16,206 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -80.88 	 cIDON = [3 5], cIDOFF = [3 5]
10:11:16,206 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:16,207 root DEBUG dOFF/dON = 0.1
10:11:16,207 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.05349708866315, 'dON1': 0.20609699217542435, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.20609699217542435, 'nTON': 1, 'dON': 0.20609699217542435, 'dxOFFAngle': 87.6403501411859, 'dOFF1': 0.02178493971703223, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.02178493971703223, 'nTOFF': 1, 'dOFF': 0.02178493971703223, 'SUCCESS': False}
10:11:16,215 root DEBUG 

=================== Experiment ID #236 	 Dual Point ID: 238 ===================
10:11:16,222 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.363E-10|<1.000E-06)
10:11:16,222 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:16,559 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.879E-01 	 Total distance: 2.879E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([186], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:16,726 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.091E-02 	 Total distance: 3.689E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([165], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:16,977 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.208E-02 	 Total distance: 3.208E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([199], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:17,189 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.685E-02 	 Total distance: 1.189E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([134], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:17,189 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:17,189 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -51.24 	 cIDON = [8 9], cIDOFF = [8 9]
10:11:17,189 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:17,189 root DEBUG dOFF/dON = 0.3
10:11:17,189 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.77641537420023, 'dON1': 0.36886418192888254, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.36886418192888254, 'nTON': 1, 'dON': 0.36886418192888254, 'dxOFFAngle': 88.9837860991799, 'dOFF1': 0.11892349981402034, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.11892349981402034, 'nTOFF': 1, 'dOFF': 0.11892349981402034, 'SUCCESS': False}
10:11:17,197 root DEBUG 

=================== Experiment ID #237 	 Dual Point ID: 239 ===================
10:11:17,205 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.357E-08|<1.000E-06)
10:11:17,205 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:17,542 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.751E-01 	 Total distance: 6.751E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([32], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:11:17,762 root DEBUG Side: OFF	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.836E-01 	 Total distance: 3.836E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([141], dtype=int64), array([[False]])]] 	 class: [3 8]
10:11:17,762 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:17,762 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -27.54 	 cIDON = [3 8], cIDOFF = [3 8]
10:11:17,762 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:17,762 root DEBUG dOFF/dON = 0.6
10:11:17,762 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.94608807284501, 'dON1': 0.675075634810224, 'cIDON1': array([3, 8], dtype=int64), 'dON_patch_1': 0.675075634810224, 'nTON': 1, 'dON': 0.675075634810224, 'dxOFFAngle': 87.97223606217193, 'dOFF1': 0.38355767676364855, 'cIDOFF1': array([3, 8], dtype=int64), 'dOFF_patch_1': 0.38355767676364855, 'nTOFF': 1, 'dOFF': 0.38355767676364855, 'SUCCESS': False}
10:11:17,769 root DEBUG 

=================== Experiment ID #238 	 Dual Point ID: 240 ===================
10:11:17,774 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.542E-08|<1.000E-06)
10:11:17,775 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:18,79 root DEBUG Side: ON	 Angle(dx0, dx): 0.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.315E-02 	 Total distance: 9.315E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([30], dtype=int64), array([[False]])]] 	 class: [2 9]
10:11:18,312 root DEBUG Side: OFF	 Angle(dx0, dx): 0.79 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.001E-01 	 Total distance: 2.001E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([219], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:11:18,312 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:18,312 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 36.46 	 cIDON = [2 9], cIDOFF = [2 9]
10:11:18,312 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:18,312 root DEBUG dOFF/dON = 2.1
10:11:18,313 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.56740283858989, 'dON1': 0.09315143584924897, 'cIDON1': array([2, 9], dtype=int64), 'dON_patch_1': 0.09315143584924897, 'nTON': 1, 'dON': 0.09315143584924897, 'dxOFFAngle': 89.69941479669997, 'dOFF1': 0.20006376473828713, 'cIDOFF1': array([2, 9], dtype=int64), 'dOFF_patch_1': 0.20006376473828713, 'nTOFF': 1, 'dOFF': 0.20006376473828713, 'SUCCESS': True}
10:11:18,328 root DEBUG 

=================== Experiment ID #239 	 Dual Point ID: 241 ===================
10:11:18,338 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.419E-08|<1.000E-06)
10:11:18,338 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:18,591 root DEBUG Side: ON	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.527E-01 	 Total distance: 5.527E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([117], dtype=int64), array([[False]])]] 	 class: [6 9]
10:11:18,790 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.113E-01 	 Total distance: 9.639E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([254], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:11:19,22 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.475E+00 	 Total distance: 1.475E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([44], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:11:19,173 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.494E-01 	 Total distance: 1.824E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([108], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:11:19,174 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:19,174 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 30.86 	 cIDON = [6 9], cIDOFF = [6 9]
10:11:19,174 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:19,174 root DEBUG dOFF/dON = 1.9
10:11:19,174 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.20457897188844, 'dON1': 0.9639271713785025, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.9639271713785025, 'nTON': 1, 'dON': 0.9639271713785025, 'dxOFFAngle': 89.44454891721395, 'dOFF1': 1.8244544117544446, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 1.8244544117544446, 'nTOFF': 1, 'dOFF': 1.8244544117544446, 'SUCCESS': True}
10:11:19,186 root DEBUG 

=================== Experiment ID #240 	 Dual Point ID: 242 ===================
10:11:19,198 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.615E-10|<1.000E-06)
10:11:19,199 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:19,487 root DEBUG Side: ON	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.222E-01 	 Total distance: 2.222E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([142], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:11:19,802 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.107E-01 	 Total distance: 3.107E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([204], dtype=int64), array([[False]])]] 	 class: [3 7]
10:11:19,802 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:19,802 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 16.60 	 cIDON = [3 7], cIDOFF = [3 7]
10:11:19,802 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:19,802 root DEBUG dOFF/dON = 1.4
10:11:19,802 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.63282421609226, 'dON1': 0.22224919977300725, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.22224919977300725, 'nTON': 1, 'dON': 0.22224919977300725, 'dxOFFAngle': 86.69667340426656, 'dOFF1': 0.3107093776305641, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.3107093776305641, 'nTOFF': 1, 'dOFF': 0.3107093776305641, 'SUCCESS': True}
10:11:19,813 root DEBUG 

=================== Experiment ID #241 	 Dual Point ID: 243 ===================
10:11:19,827 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.023E-09|<1.000E-06)
10:11:19,828 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:20,64 root DEBUG Side: ON	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.085E-01 	 Total distance: 1.085E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([74], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:20,334 root DEBUG Side: OFF	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.511E-01 	 Total distance: 3.511E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([119], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:20,334 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:20,334 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 52.78 	 cIDON = [3 5], cIDOFF = [3 5]
10:11:20,334 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:20,334 root DEBUG dOFF/dON = 3.2
10:11:20,334 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.05198470237869, 'dON1': 0.1085211654625612, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.1085211654625612, 'nTON': 1, 'dON': 0.1085211654625612, 'dxOFFAngle': 88.76559958684331, 'dOFF1': 0.35114607886179483, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.35114607886179483, 'nTOFF': 1, 'dOFF': 0.35114607886179483, 'SUCCESS': True}
10:11:20,346 root DEBUG 

=================== Experiment ID #242 	 Dual Point ID: 244 ===================
10:11:20,354 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.613E-08|<1.000E-06)
10:11:20,354 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:20,693 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.343E-02 	 Total distance: 4.343E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([220], dtype=int64), array([[False]])]] 	 class: [7 8]
10:11:20,873 root DEBUG Side: OFF	 Angle(dx0, dx): 2.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.406E-02 	 Total distance: 8.406E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([34], dtype=int64), array([[ True]])]] 	 class: [7 8]
10:11:20,873 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:20,873 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 31.87 	 cIDON = [7 8], cIDOFF = [7 8]
10:11:20,873 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:20,873 root DEBUG dOFF/dON = 1.9
10:11:20,873 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.4722902585654, 'dON1': 0.04342886743139866, 'cIDON1': array([7, 8], dtype=int64), 'dON_patch_1': 0.04342886743139866, 'nTON': 1, 'dON': 0.04342886743139866, 'dxOFFAngle': 86.25731735249808, 'dOFF1': 0.08406062175516427, 'cIDOFF1': array([7, 8], dtype=int64), 'dOFF_patch_1': 0.08406062175516427, 'nTOFF': 1, 'dOFF': 0.08406062175516427, 'SUCCESS': True}
10:11:20,885 root DEBUG 

=================== Experiment ID #243 	 Dual Point ID: 245 ===================
10:11:20,895 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.781E-09|<1.000E-06)
10:11:20,895 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:21,114 root DEBUG Side: ON	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.091E-01 	 Total distance: 5.091E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([12], dtype=int64), array([[False]])]] 	 class: [3 9]
10:11:21,355 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.678E-01 	 Total distance: 2.678E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([230], dtype=int64), array([[False]])]] 	 class: [3 9]
10:11:21,355 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:21,356 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -31.06 	 cIDON = [3 9], cIDOFF = [3 9]
10:11:21,356 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:21,356 root DEBUG dOFF/dON = 0.5
10:11:21,356 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.04533600459209, 'dON1': 0.5090550353860608, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.5090550353860608, 'nTON': 1, 'dON': 0.5090550353860608, 'dxOFFAngle': 87.51892846458153, 'dOFF1': 0.26778178082999876, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.26778178082999876, 'nTOFF': 1, 'dOFF': 0.26778178082999876, 'SUCCESS': False}
10:11:21,362 root DEBUG 

=================== Experiment ID #244 	 Dual Point ID: 246 ===================
10:11:21,368 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.416E-09|<1.000E-06)
10:11:21,369 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:21,614 root DEBUG Side: ON	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.037E-02 	 Total distance: 4.037E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([77], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:11:21,840 root DEBUG Side: OFF	 Angle(dx0, dx): 3.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.589E-05 	 Total distance: 1.589E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 9]
10:11:21,840 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:21,840 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.92 	 cIDON = [1 9], cIDOFF = [1 9]
10:11:21,840 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:21,840 root DEBUG dOFF/dON = 0.0
10:11:21,840 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.660002873298, 'dON1': 0.04037479780005791, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.04037479780005791, 'nTON': 1, 'dON': 0.04037479780005791, 'dxOFFAngle': 86.6059351867276, 'dOFF1': 1.58893635145525e-05, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 1.58893635145525e-05, 'nTOFF': 1, 'dOFF': 1.58893635145525e-05, 'SUCCESS': False}
10:11:21,849 root DEBUG 

=================== Experiment ID #245 	 Dual Point ID: 247 ===================
10:11:21,856 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.400E-08|<1.000E-06)
10:11:21,857 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:22,81 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.131E-01 	 Total distance: 3.131E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([169], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:11:22,293 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.561E-02 	 Total distance: 8.561E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([74], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:11:22,457 root DEBUG Side: OFF	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.357E-01 	 Total distance: 4.213E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([38], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:11:22,457 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:22,457 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 14.73 	 cIDON = [2 5], cIDOFF = [2 5]
10:11:22,457 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:22,457 root DEBUG dOFF/dON = 1.3
10:11:22,457 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.78002476359826, 'dON1': 0.313138461323864, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.313138461323864, 'nTON': 1, 'dON': 0.313138461323864, 'dxOFFAngle': 89.6883457354513, 'dOFF1': 0.42132928359125477, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.42132928359125477, 'nTOFF': 1, 'dOFF': 0.42132928359125477, 'SUCCESS': True}
10:11:22,464 root DEBUG 

=================== Experiment ID #246 	 Dual Point ID: 248 ===================
10:11:22,478 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.998E-08|<1.000E-06)
10:11:22,479 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:22,723 root DEBUG Side: ON	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.269E-01 	 Total distance: 3.269E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([243], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:23,3 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.955E-02 	 Total distance: 8.955E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([47], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:23,207 root DEBUG Side: OFF	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.272E-02 	 Total distance: 1.423E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([165], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:23,208 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:23,208 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -39.35 	 cIDON = [2 7], cIDOFF = [2 7]
10:11:23,209 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:23,209 root DEBUG dOFF/dON = 0.4
10:11:23,209 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.86151804542384, 'dON1': 0.32686174965998216, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.32686174965998216, 'nTON': 1, 'dON': 0.32686174965998216, 'dxOFFAngle': 88.40561089810463, 'dOFF1': 0.14226834039656538, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.14226834039656538, 'nTOFF': 1, 'dOFF': 0.14226834039656538, 'SUCCESS': False}
10:11:23,220 root DEBUG 

=================== Experiment ID #247 	 Dual Point ID: 249 ===================
10:11:23,231 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.444E-09|<1.000E-06)
10:11:23,232 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:23,555 root DEBUG Side: ON	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.295E-01 	 Total distance: 1.295E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([209], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:23,928 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.456E-01 	 Total distance: 4.456E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([29], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:23,928 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:23,928 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 54.98 	 cIDON = [3 5], cIDOFF = [3 5]
10:11:23,928 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:23,928 root DEBUG dOFF/dON = 3.4
10:11:23,928 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.70286165816421, 'dON1': 0.12946079567254754, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.12946079567254754, 'nTON': 1, 'dON': 0.12946079567254754, 'dxOFFAngle': 88.78204601918567, 'dOFF1': 0.4456399281302513, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.4456399281302513, 'nTOFF': 1, 'dOFF': 0.4456399281302513, 'SUCCESS': True}
10:11:23,935 root DEBUG 

=================== Experiment ID #248 	 Dual Point ID: 250 ===================
10:11:23,942 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.106E-09|<1.000E-06)
10:11:23,942 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:24,265 root DEBUG Side: ON	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.112E-01 	 Total distance: 1.112E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([176], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:24,530 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.354E-01 	 Total distance: 2.354E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([59], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:24,749 root DEBUG Side: OFF	 Angle(dx0, dx): 1.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.244E-01 	 Total distance: 5.598E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([58], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:24,749 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:24,749 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 66.85 	 cIDON = [3 5], cIDOFF = [3 5]
10:11:24,749 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:24,749 root DEBUG dOFF/dON = 5.0
10:11:24,749 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.64464768676885, 'dON1': 0.11120575920075175, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.11120575920075175, 'nTON': 1, 'dON': 0.11120575920075175, 'dxOFFAngle': 88.069935646309, 'dOFF1': 0.5597907819870453, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.5597907819870453, 'nTOFF': 1, 'dOFF': 0.5597907819870453, 'SUCCESS': True}
10:11:24,756 root DEBUG 

=================== Experiment ID #249 	 Dual Point ID: 251 ===================
10:11:24,765 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.001E-08|<1.000E-06)
10:11:24,765 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:25,26 root DEBUG Side: ON	 Angle(dx0, dx): 1.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.522E-01 	 Total distance: 2.522E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([133], dtype=int64), array([[False]])]] 	 class: [6 9]
10:11:25,354 root DEBUG Side: OFF	 Angle(dx0, dx): 2.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.911E-01 	 Total distance: 2.911E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([2, 9], dtype=int64), array([[1.],
       [0.]])]] 	 class: [2 6]
10:11:25,355 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:25,355 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 7.16 	 cIDON = [6 9], cIDOFF = [6 9]
10:11:25,355 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:25,355 root DEBUG dOFF/dON = 1.2
10:11:25,355 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.34868438995764, 'dON1': 0.25216067912846185, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.25216067912846185, 'nTON': 1, 'dON': 0.25216067912846185, 'dxOFFAngle': 89.77214675236061, 'dOFF1': 0.2910527678537727, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.2910527678537727, 'nTOFF': 1, 'dOFF': 0.2910527678537727, 'SUCCESS': True}
10:11:25,365 root DEBUG 

=================== Experiment ID #250 	 Dual Point ID: 252 ===================
10:11:25,372 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.551E-08|<1.000E-06)
10:11:25,372 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:25,732 root DEBUG Side: ON	 Angle(dx0, dx): 0.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.843E-01 	 Total distance: 4.843E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([177], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:11:25,934 root DEBUG Side: OFF	 Angle(dx0, dx): 0.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.617E-01 	 Total distance: 1.617E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([80], dtype=int64), array([[False]])]] 	 class: [6 9]
10:11:25,934 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:25,935 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -49.95 	 cIDON = [6 9], cIDOFF = [6 9]
10:11:25,935 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:25,935 root DEBUG dOFF/dON = 0.3
10:11:25,935 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.15722928711317, 'dON1': 0.4843333361309534, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.4843333361309534, 'nTON': 1, 'dON': 0.4843333361309534, 'dxOFFAngle': 88.71969957280231, 'dOFF1': 0.16167330148647358, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.16167330148647358, 'nTOFF': 1, 'dOFF': 0.16167330148647358, 'SUCCESS': False}
10:11:25,954 root DEBUG 

=================== Experiment ID #251 	 Dual Point ID: 253 ===================
10:11:25,965 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.554E-09|<1.000E-06)
10:11:25,965 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:26,202 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.131E-02 	 Total distance: 5.131E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([43], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:11:26,484 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.620E-02 	 Total distance: 2.620E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([132], dtype=int64), array([[False]])]] 	 class: [3 6]
10:11:26,671 root DEBUG Side: OFF	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.623E-02 	 Total distance: 4.243E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([39], dtype=int64), array([[False]])]] 	 class: [3 6]
10:11:26,671 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:26,671 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -9.48 	 cIDON = [3 6], cIDOFF = [3 6]
10:11:26,671 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:26,671 root DEBUG dOFF/dON = 0.8
10:11:26,671 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.98530190488883, 'dON1': 0.0513090477367822, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.0513090477367822, 'nTON': 1, 'dON': 0.0513090477367822, 'dxOFFAngle': 89.74152416423567, 'dOFF1': 0.04242513715401251, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.04242513715401251, 'nTOFF': 1, 'dOFF': 0.04242513715401251, 'SUCCESS': False}
10:11:26,685 root DEBUG 

=================== Experiment ID #252 	 Dual Point ID: 254 ===================
10:11:26,694 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.796E-09|<1.000E-06)
10:11:26,695 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:26,987 root DEBUG Side: ON	 Angle(dx0, dx): 0.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.990E-01 	 Total distance: 1.990E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([119], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:27,215 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.554E-01 	 Total distance: 4.554E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([151], dtype=int64), array([[False]])]] 	 class: [2 7]
10:11:27,332 root DEBUG Side: OFF	 Angle(dx0, dx): 0.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.281E-01 	 Total distance: 5.835E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([31], dtype=int64), array([[False]])]] 	 class: [2 7]
10:11:27,332 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:27,332 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 49.14 	 cIDON = [2 7], cIDOFF = [2 7]
10:11:27,332 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:27,332 root DEBUG dOFF/dON = 2.9
10:11:27,332 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.83925565506102, 'dON1': 0.19898898100745704, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.19898898100745704, 'nTON': 1, 'dON': 0.19898898100745704, 'dxOFFAngle': 89.77311579583792, 'dOFF1': 0.58352364913197, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.58352364913197, 'nTOFF': 1, 'dOFF': 0.58352364913197, 'SUCCESS': True}
10:11:27,343 root DEBUG 

=================== Experiment ID #253 	 Dual Point ID: 255 ===================
10:11:27,349 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.138E-07|<1.000E-06)
10:11:27,350 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:27,621 root DEBUG Side: ON	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.617E-01 	 Total distance: 3.617E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([29], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:11:27,818 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.017E-01 	 Total distance: 5.633E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([18], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:11:28,57 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.609E-02 	 Total distance: 4.609E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([12], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:11:28,57 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:28,57 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -84.87 	 cIDON = [5 7], cIDOFF = [5 7]
10:11:28,58 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:28,58 root DEBUG dOFF/dON = 0.1
10:11:28,58 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.42878396783297, 'dON1': 0.5633289617953374, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.5633289617953374, 'nTON': 1, 'dON': 0.5633289617953374, 'dxOFFAngle': 88.93797190156822, 'dOFF1': 0.046092043953604764, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.046092043953604764, 'nTOFF': 1, 'dOFF': 0.046092043953604764, 'SUCCESS': False}
10:11:28,72 root DEBUG 

=================== Experiment ID #254 	 Dual Point ID: 256 ===================
10:11:28,84 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.330E-08|<1.000E-06)
10:11:28,84 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:28,320 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.092E-01 	 Total distance: 4.092E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([151], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:11:28,481 root DEBUG Side: ON	 Angle(dx0, dx): 0.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.479E-01 	 Total distance: 7.570E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([201], dtype=int64), array([[False]])]] 	 class: [2 4]
10:11:28,726 root DEBUG Side: OFF	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.023E-01 	 Total distance: 1.023E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([197], dtype=int64), array([[False]])]] 	 class: [2 4]
10:11:28,726 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:28,727 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -76.20 	 cIDON = [2 4], cIDOFF = [2 4]
10:11:28,727 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:28,727 root DEBUG dOFF/dON = 0.1
10:11:28,727 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.96846786307692, 'dON1': 0.757048241949186, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.757048241949186, 'nTON': 1, 'dON': 0.757048241949186, 'dxOFFAngle': 89.41885416176339, 'dOFF1': 0.10227944722653869, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.10227944722653869, 'nTOFF': 1, 'dOFF': 0.10227944722653869, 'SUCCESS': False}
10:11:28,737 root DEBUG 

=================== Experiment ID #255 	 Dual Point ID: 257 ===================
10:11:28,746 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.047E-09|<1.000E-06)
10:11:28,746 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:28,969 root DEBUG Side: ON	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.251E-02 	 Total distance: 2.251E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([160], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:11:29,218 root DEBUG Side: OFF	 Angle(dx0, dx): 0.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.790E-02 	 Total distance: 1.790E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([95], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:11:29,218 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:29,218 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -11.41 	 cIDON = [7 9], cIDOFF = [7 9]
10:11:29,218 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:29,218 root DEBUG dOFF/dON = 0.8
10:11:29,218 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.65250006198255, 'dON1': 0.022511931506744638, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.022511931506744638, 'nTON': 1, 'dON': 0.022511931506744638, 'dxOFFAngle': 87.78535679700178, 'dOFF1': 0.01790080887644912, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.01790080887644912, 'nTOFF': 1, 'dOFF': 0.01790080887644912, 'SUCCESS': False}
10:11:29,228 root DEBUG 

=================== Experiment ID #256 	 Dual Point ID: 258 ===================
10:11:29,233 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.845E-09|<1.000E-06)
10:11:29,234 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:29,502 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.822E-02 	 Total distance: 9.822E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([53], dtype=int64), array([[False]])]] 	 class: [2 4]
10:11:29,760 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.595E-01 	 Total distance: 4.595E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([104], dtype=int64), array([[False]])]] 	 class: [2 4]
10:11:29,964 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.737E-02 	 Total distance: 4.969E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([163], dtype=int64), array([[False]])]] 	 class: [2 4]
10:11:29,964 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:29,964 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 66.99 	 cIDON = [2 4], cIDOFF = [2 4]
10:11:29,964 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:29,965 root DEBUG dOFF/dON = 5.1
10:11:29,965 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.56276110088086, 'dON1': 0.0982200307617382, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.0982200307617382, 'nTON': 1, 'dON': 0.0982200307617382, 'dxOFFAngle': 88.79765966751877, 'dOFF1': 0.49689127780361303, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.49689127780361303, 'nTOFF': 1, 'dOFF': 0.49689127780361303, 'SUCCESS': True}
10:11:29,977 root DEBUG 

=================== Experiment ID #257 	 Dual Point ID: 259 ===================
10:11:29,991 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.012E-08|<1.000E-06)
10:11:29,992 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:30,301 root DEBUG Side: ON	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.494E-02 	 Total distance: 2.494E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([87], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:11:30,569 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.864E-02 	 Total distance: 7.864E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([49], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:11:30,698 root DEBUG Side: OFF	 Angle(dx0, dx): 0.92 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.598E-02 	 Total distance: 9.462E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([250], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:11:30,698 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:30,698 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 58.28 	 cIDON = [5 6], cIDOFF = [5 6]
10:11:30,699 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:30,699 root DEBUG dOFF/dON = 3.8
10:11:30,699 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.87334476007688, 'dON1': 0.02494370068978726, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.02494370068978726, 'nTON': 1, 'dON': 0.02494370068978726, 'dxOFFAngle': 89.45385569747638, 'dOFF1': 0.09462029804894383, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.09462029804894383, 'nTOFF': 1, 'dOFF': 0.09462029804894383, 'SUCCESS': True}
10:11:30,705 root DEBUG 

=================== Experiment ID #258 	 Dual Point ID: 260 ===================
10:11:30,712 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.743E-08|<1.000E-06)
10:11:30,712 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:31,42 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.533E+00 	 Total distance: 1.533E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([247], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:11:31,228 root DEBUG Side: ON	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.934E-01 	 Total distance: 2.126E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([29], dtype=int64), array([[False]])]] 	 class: [4 8]
10:11:31,498 root DEBUG Side: OFF	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.972E-01 	 Total distance: 5.972E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([75], dtype=int64), array([[False]])]] 	 class: [4 8]
10:11:31,498 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:31,499 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -56.14 	 cIDON = [4 8], cIDOFF = [4 8]
10:11:31,499 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:31,499 root DEBUG dOFF/dON = 0.3
10:11:31,499 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.14381288138706, 'dON1': 2.12594062087481, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 2.12594062087481, 'nTON': 1, 'dON': 2.12594062087481, 'dxOFFAngle': 88.12351227281093, 'dOFF1': 0.5972394492144062, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.5972394492144062, 'nTOFF': 1, 'dOFF': 0.5972394492144062, 'SUCCESS': False}
10:11:31,510 root DEBUG 

=================== Experiment ID #259 	 Dual Point ID: 261 ===================
10:11:31,517 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.950E-09|<1.000E-06)
10:11:31,517 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:31,810 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.351E-01 	 Total distance: 1.351E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([242], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:31,988 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.363E-02 	 Total distance: 1.787E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([55], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:32,279 root DEBUG Side: OFF	 Angle(dx0, dx): 0.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.392E-01 	 Total distance: 5.392E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([82], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:32,279 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:32,279 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 50.22 	 cIDON = [3 5], cIDOFF = [3 5]
10:11:32,279 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:32,279 root DEBUG dOFF/dON = 3.0
10:11:32,279 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.53443551795988, 'dON1': 0.17868494367619875, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.17868494367619875, 'nTON': 1, 'dON': 0.17868494367619875, 'dxOFFAngle': 88.03938033280022, 'dOFF1': 0.5392084482962919, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.5392084482962919, 'nTOFF': 1, 'dOFF': 0.5392084482962919, 'SUCCESS': True}
10:11:32,287 root DEBUG 

=================== Experiment ID #260 	 Dual Point ID: 262 ===================
10:11:32,293 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.183E-08|<1.000E-06)
10:11:32,293 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:32,543 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.189E-01 	 Total distance: 4.189E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([198], dtype=int64), array([[False]])]] 	 class: [3 7]
10:11:32,784 root DEBUG Side: OFF	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.890E-02 	 Total distance: 8.890E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([206], dtype=int64), array([[False]])]] 	 class: [3 7]
10:11:32,784 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:32,784 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -64.99 	 cIDON = [3 7], cIDOFF = [3 7]
10:11:32,784 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:32,785 root DEBUG dOFF/dON = 0.2
10:11:32,785 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.07202949166542, 'dON1': 0.4189488552796111, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.4189488552796111, 'nTON': 1, 'dON': 0.4189488552796111, 'dxOFFAngle': 87.94010164253822, 'dOFF1': 0.08889694704114784, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.08889694704114784, 'nTOFF': 1, 'dOFF': 0.08889694704114784, 'SUCCESS': False}
10:11:32,793 root DEBUG 

=================== Experiment ID #261 	 Dual Point ID: 263 ===================
10:11:32,805 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.861E-08|<1.000E-06)
10:11:32,806 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:33,88 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.285E-03 	 Total distance: 1.285E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([1], dtype=int64), array([[False]])]] 	 class: [3 7]
10:11:33,257 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.180E-01 	 Total distance: 6.193E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([147], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:11:33,491 root DEBUG Side: ON	 Angle(dx0, dx): 2.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.403E-02 	 Total distance: 6.533E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([191], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:11:33,722 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.060E-01 	 Total distance: 1.060E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([19], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:11:33,723 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:33,724 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -72.09 	 cIDON = [3 7], cIDOFF = [3 7]
10:11:33,724 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:33,724 root DEBUG dOFF/dON = 0.2
10:11:33,724 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.42311888223516, 'dON1': 0.6533317487378794, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.6533317487378794, 'nTON': 1, 'dON': 0.6533317487378794, 'dxOFFAngle': 87.40615523575941, 'dOFF1': 0.10595951493086446, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.10595951493086446, 'nTOFF': 1, 'dOFF': 0.10595951493086446, 'SUCCESS': False}
10:11:33,739 root DEBUG 

=================== Experiment ID #262 	 Dual Point ID: 264 ===================
10:11:33,750 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.444E-08|<1.000E-06)
10:11:33,750 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:34,11 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.436E-02 	 Total distance: 6.436E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([62], dtype=int64), array([[False]])]] 	 class: [2 4]
10:11:34,212 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.165E-02 	 Total distance: 4.165E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([135], dtype=int64), array([[False]])]] 	 class: [2 4]
10:11:34,401 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.169E-02 	 Total distance: 5.333E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([143], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:11:34,401 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:34,401 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -9.37 	 cIDON = [2 4], cIDOFF = [2 4]
10:11:34,401 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:34,401 root DEBUG dOFF/dON = 0.8
10:11:34,401 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.0913332065722, 'dON1': 0.06436033378695727, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.06436033378695727, 'nTON': 1, 'dON': 0.06436033378695727, 'dxOFFAngle': 88.98606614504708, 'dOFF1': 0.05333252590159565, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.05333252590159565, 'nTOFF': 1, 'dOFF': 0.05333252590159565, 'SUCCESS': False}
10:11:34,408 root DEBUG 

=================== Experiment ID #263 	 Dual Point ID: 265 ===================
10:11:34,416 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.895E-08|<1.000E-06)
10:11:34,416 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:34,640 root DEBUG Side: ON	 Angle(dx0, dx): 0.79 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.026E-01 	 Total distance: 1.026E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([230], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:11:34,905 root DEBUG Side: OFF	 Angle(dx0, dx): 0.98 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.669E-01 	 Total distance: 2.669E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([7], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:11:34,905 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:34,906 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 44.46 	 cIDON = [6 9], cIDOFF = [6 9]
10:11:34,906 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:34,906 root DEBUG dOFF/dON = 2.6
10:11:34,906 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.42010135494546, 'dON1': 0.10262466095994749, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.10262466095994749, 'nTON': 1, 'dON': 0.10262466095994749, 'dxOFFAngle': 88.96018172842241, 'dOFF1': 0.2669316016411632, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.2669316016411632, 'nTOFF': 1, 'dOFF': 0.2669316016411632, 'SUCCESS': True}
10:11:34,919 root DEBUG 

=================== Experiment ID #264 	 Dual Point ID: 266 ===================
10:11:34,923 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.018E-08|<1.000E-06)
10:11:34,925 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:35,161 root DEBUG Side: ON	 Angle(dx0, dx): 1.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.490E-06 	 Total distance: 6.490E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 9]
10:11:35,366 root DEBUG Side: OFF	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.863E-01 	 Total distance: 1.863E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([100], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:11:35,366 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:35,366 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.99 	 cIDON = [1 9], cIDOFF = [1 9]
10:11:35,366 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:35,366 root DEBUG dOFF/dON = 28706.8
10:11:35,366 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.05050761212135, 'dON1': 6.489683693226136e-06, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 6.489683693226136e-06, 'nTON': 1, 'dON': 6.489683693226136e-06, 'dxOFFAngle': 88.37538510314775, 'dOFF1': 0.18629818766421471, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.18629818766421471, 'nTOFF': 1, 'dOFF': 0.18629818766421471, 'SUCCESS': True}
10:11:35,372 root DEBUG 

=================== Experiment ID #265 	 Dual Point ID: 267 ===================
10:11:35,379 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.850E-08|<1.000E-06)
10:11:35,379 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:35,698 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.013E-01 	 Total distance: 1.013E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([14], dtype=int64), array([[False]])]] 	 class: [2 5]
10:11:35,885 root DEBUG Side: ON	 Angle(dx0, dx): 0.92 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.577E-02 	 Total distance: 1.571E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([87], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:11:36,206 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.120E-01 	 Total distance: 1.120E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([53], dtype=int64), array([[False]])]] 	 class: [2 5]
10:11:36,441 root DEBUG Side: OFF	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.947E-01 	 Total distance: 8.068E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([17], dtype=int64), array([[False]])]] 	 class: [2 5]
10:11:36,441 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:36,441 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 67.40 	 cIDON = [2 5], cIDOFF = [2 5]
10:11:36,442 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:36,442 root DEBUG dOFF/dON = 5.1
10:11:36,442 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.26982581846362, 'dON1': 0.15708401029769067, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.15708401029769067, 'nTON': 1, 'dON': 0.15708401029769067, 'dxOFFAngle': 86.8621069829232, 'dOFF1': 0.8067506731022404, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.8067506731022404, 'nTOFF': 1, 'dOFF': 0.8067506731022404, 'SUCCESS': True}
10:11:36,453 root DEBUG 

=================== Experiment ID #266 	 Dual Point ID: 268 ===================
10:11:36,464 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.456E-10|<1.000E-06)
10:11:36,464 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:36,734 root DEBUG Side: ON	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.401E-01 	 Total distance: 3.401E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([185], dtype=int64), array([[False]])]] 	 class: [2 6]
10:11:36,944 root DEBUG Side: OFF	 Angle(dx0, dx): 1.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.114E-01 	 Total distance: 4.114E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([39], dtype=int64), array([[False]])]] 	 class: [2 6]
10:11:36,944 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:36,945 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 9.49 	 cIDON = [2 6], cIDOFF = [2 6]
10:11:36,945 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:36,945 root DEBUG dOFF/dON = 1.2
10:11:36,945 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.8907993505254, 'dON1': 0.3401265435712593, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.3401265435712593, 'nTON': 1, 'dON': 0.3401265435712593, 'dxOFFAngle': 89.74289468273089, 'dOFF1': 0.41144910879922236, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.41144910879922236, 'nTOFF': 1, 'dOFF': 0.41144910879922236, 'SUCCESS': True}
10:11:36,955 root DEBUG 

=================== Experiment ID #267 	 Dual Point ID: 269 ===================
10:11:36,965 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.455E-08|<1.000E-06)
10:11:36,966 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:37,298 root DEBUG Side: ON	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.915E-01 	 Total distance: 1.915E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([234], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:37,580 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.634E+00 	 Total distance: 1.634E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([54], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:37,580 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:37,580 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 79.02 	 cIDON = [8 9], cIDOFF = [8 9]
10:11:37,581 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:37,581 root DEBUG dOFF/dON = 8.5
10:11:37,581 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.02896379845347, 'dON1': 0.19152736670633988, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.19152736670633988, 'nTON': 1, 'dON': 0.19152736670633988, 'dxOFFAngle': 86.46040220449906, 'dOFF1': 1.6344075173152082, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 1.6344075173152082, 'nTOFF': 1, 'dOFF': 1.6344075173152082, 'SUCCESS': True}
10:11:37,593 root DEBUG 

=================== Experiment ID #268 	 Dual Point ID: 270 ===================
10:11:37,608 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.795E-10|<1.000E-06)
10:11:37,609 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:37,806 root DEBUG Side: ON	 Angle(dx0, dx): 1.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.326E-06 	 Total distance: 4.326E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 6]
10:11:38,79 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.358E-03 	 Total distance: 6.358E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([200], dtype=int64), array([[False]])]] 	 class: [0 6]
10:11:38,251 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.508E-01 	 Total distance: 8.571E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([28], dtype=int64), array([[False]])]] 	 class: [0 6]
10:11:38,251 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:38,251 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [0 6], cIDOFF = [0 6]
10:11:38,252 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:38,252 root DEBUG dOFF/dON = 198138.3
10:11:38,252 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.66731249707358, 'dON1': 4.325934661067818e-06, 'cIDON1': array([0, 6], dtype=int64), 'dON_patch_1': 4.325934661067818e-06, 'nTON': 1, 'dON': 4.325934661067818e-06, 'dxOFFAngle': 89.70609361622435, 'dOFF1': 0.8571332701307555, 'cIDOFF1': array([0, 6], dtype=int64), 'dOFF_patch_1': 0.8571332701307555, 'nTOFF': 1, 'dOFF': 0.8571332701307555, 'SUCCESS': True}
10:11:38,264 root DEBUG 

=================== Experiment ID #269 	 Dual Point ID: 271 ===================
10:11:38,274 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.491E-08|<1.000E-06)
10:11:38,274 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:38,606 root DEBUG Side: ON	 Angle(dx0, dx): 0.77 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.940E-01 	 Total distance: 6.940E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([193], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:11:38,829 root DEBUG Side: OFF	 Angle(dx0, dx): 3.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.165E-06 	 Total distance: 2.165E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 8]
10:11:38,829 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:38,829 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -100.00 	 cIDON = [0 8], cIDOFF = [0 8]
10:11:38,829 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:38,829 root DEBUG dOFF/dON = 0.0
10:11:38,829 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.94716881295535, 'dON1': 0.6939668050645816, 'cIDON1': array([0, 8], dtype=int64), 'dON_patch_1': 0.6939668050645816, 'nTON': 1, 'dON': 0.6939668050645816, 'dxOFFAngle': 87.66392817652734, 'dOFF1': 2.164729907291134e-06, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 2.164729907291134e-06, 'nTOFF': 1, 'dOFF': 2.164729907291134e-06, 'SUCCESS': False}
10:11:38,836 root DEBUG 

=================== Experiment ID #270 	 Dual Point ID: 272 ===================
10:11:38,843 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.900E-08|<1.000E-06)
10:11:38,843 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:39,113 root DEBUG Side: ON	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.265E-01 	 Total distance: 1.265E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([31], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:11:39,345 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.230E-01 	 Total distance: 3.230E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([16], dtype=int64), array([[False]])]] 	 class: [5 6]
10:11:39,345 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:39,346 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 43.71 	 cIDON = [5 6], cIDOFF = [5 6]
10:11:39,346 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:39,346 root DEBUG dOFF/dON = 2.6
10:11:39,346 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.98818863532101, 'dON1': 0.12651415501389687, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.12651415501389687, 'nTON': 1, 'dON': 0.12651415501389687, 'dxOFFAngle': 89.94157201569635, 'dOFF1': 0.3229827036949661, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.3229827036949661, 'nTOFF': 1, 'dOFF': 0.3229827036949661, 'SUCCESS': True}
10:11:39,354 root DEBUG 

=================== Experiment ID #271 	 Dual Point ID: 273 ===================
10:11:39,361 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.530E-10|<1.000E-06)
10:11:39,361 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:39,605 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.624E-01 	 Total distance: 1.624E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([141], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:11:39,910 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.347E-02 	 Total distance: 3.347E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([36], dtype=int64), array([[False]])]] 	 class: [0 1]
10:11:40,144 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.079E-01 	 Total distance: 7.414E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([98], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:11:40,287 root DEBUG Side: OFF	 Angle(dx0, dx): 0.71 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.320E-02 	 Total distance: 7.946E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([153], dtype=int64), array([[False]])]] 	 class: [0 1]
10:11:40,288 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:40,288 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 66.06 	 cIDON = [0 1], cIDOFF = [0 1]
10:11:40,288 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:40,288 root DEBUG dOFF/dON = 4.9
10:11:40,288 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.87381782824583, 'dON1': 0.1623953795599603, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.1623953795599603, 'nTON': 1, 'dON': 0.1623953795599603, 'dxOFFAngle': 89.41488022828027, 'dOFF1': 0.7945744447601925, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.7945744447601925, 'nTOFF': 1, 'dOFF': 0.7945744447601925, 'SUCCESS': True}
10:11:40,296 root DEBUG 

=================== Experiment ID #272 	 Dual Point ID: 274 ===================
10:11:40,303 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.544E-09|<1.000E-06)
10:11:40,303 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:40,542 root DEBUG Side: ON	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.075E-01 	 Total distance: 2.075E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([173], dtype=int64), array([[False]])]] 	 class: [3 6]
10:11:40,880 root DEBUG Side: OFF	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.104E-01 	 Total distance: 1.104E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([23], dtype=int64), array([[False]])]] 	 class: [3 6]
10:11:40,880 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:40,880 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -30.55 	 cIDON = [3 6], cIDOFF = [3 6]
10:11:40,880 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:40,880 root DEBUG dOFF/dON = 0.5
10:11:40,881 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.8972314340822, 'dON1': 0.2075298380993997, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.2075298380993997, 'nTON': 1, 'dON': 0.2075298380993997, 'dxOFFAngle': 89.00796553137715, 'dOFF1': 0.11039162956781663, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.11039162956781663, 'nTOFF': 1, 'dOFF': 0.11039162956781663, 'SUCCESS': False}
10:11:40,887 root DEBUG 

=================== Experiment ID #273 	 Dual Point ID: 275 ===================
10:11:40,895 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.875E-08|<1.000E-06)
10:11:40,895 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:41,164 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.429E-01 	 Total distance: 2.429E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([46], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:11:41,378 root DEBUG Side: ON	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.127E-02 	 Total distance: 2.542E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([10], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:11:41,620 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.487E-02 	 Total distance: 5.487E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([5], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:11:41,794 root DEBUG Side: OFF	 Angle(dx0, dx): 0.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.364E-01 	 Total distance: 8.913E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([15], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:11:41,794 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:41,794 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 55.62 	 cIDON = [2 5], cIDOFF = [2 5]
10:11:41,795 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:41,795 root DEBUG dOFF/dON = 3.5
10:11:41,795 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.54697667236523, 'dON1': 0.2541580013083642, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.2541580013083642, 'nTON': 1, 'dON': 0.2541580013083642, 'dxOFFAngle': 87.76524908037564, 'dOFF1': 0.8912640988787406, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.8912640988787406, 'nTOFF': 1, 'dOFF': 0.8912640988787406, 'SUCCESS': True}
10:11:41,805 root DEBUG 

=================== Experiment ID #274 	 Dual Point ID: 276 ===================
10:11:41,811 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.666E-08|<1.000E-06)
10:11:41,811 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:42,101 root DEBUG Side: ON	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.831E-03 	 Total distance: 6.831E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([97], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:42,349 root DEBUG Side: ON	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.034E+00 	 Total distance: 1.041E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([75], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:42,581 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.505E-01 	 Total distance: 2.505E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([197], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:42,750 root DEBUG Side: OFF	 Angle(dx0, dx): 0.83 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.120E-02 	 Total distance: 3.317E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([226], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:42,750 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:42,750 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -51.67 	 cIDON = [8 9], cIDOFF = [8 9]
10:11:42,750 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:42,750 root DEBUG dOFF/dON = 0.3
10:11:42,750 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.6173244192516, 'dON1': 1.0408029012937092, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 1.0408029012937092, 'nTON': 1, 'dON': 1.0408029012937092, 'dxOFFAngle': 87.06028543584219, 'dOFF1': 0.33169556380572657, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.33169556380572657, 'nTOFF': 1, 'dOFF': 0.33169556380572657, 'SUCCESS': False}
10:11:42,763 root DEBUG 

=================== Experiment ID #275 	 Dual Point ID: 277 ===================
10:11:42,777 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.127E-08|<1.000E-06)
10:11:42,778 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:43,4 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.774E-01 	 Total distance: 2.774E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([216], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:11:43,264 root DEBUG Side: OFF	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.035E-02 	 Total distance: 3.035E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([227], dtype=int64), array([[False]])]] 	 class: [2 6]
10:11:43,264 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:43,265 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -80.27 	 cIDON = [2 6], cIDOFF = [2 6]
10:11:43,265 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:43,265 root DEBUG dOFF/dON = 0.1
10:11:43,265 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.9886712961934, 'dON1': 0.2773576774521245, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.2773576774521245, 'nTON': 1, 'dON': 0.2773576774521245, 'dxOFFAngle': 89.64002983706936, 'dOFF1': 0.030353007912434286, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.030353007912434286, 'nTOFF': 1, 'dOFF': 0.030353007912434286, 'SUCCESS': False}
10:11:43,277 root DEBUG 

=================== Experiment ID #276 	 Dual Point ID: 278 ===================
10:11:43,290 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.182E-10|<1.000E-06)
10:11:43,290 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:43,609 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.446E-01 	 Total distance: 3.446E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([21], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:11:43,868 root DEBUG Side: OFF	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.973E-02 	 Total distance: 5.973E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([156], dtype=int64), array([[False]])]] 	 class: [4 8]
10:11:43,868 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:43,869 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -70.45 	 cIDON = [4 8], cIDOFF = [4 8]
10:11:43,869 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:43,869 root DEBUG dOFF/dON = 0.2
10:11:43,869 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.36335333516755, 'dON1': 0.3445689487545505, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.3445689487545505, 'nTON': 1, 'dON': 0.3445689487545505, 'dxOFFAngle': 89.36880713274024, 'dOFF1': 0.059734402545896535, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.059734402545896535, 'nTOFF': 1, 'dOFF': 0.059734402545896535, 'SUCCESS': False}
10:11:43,881 root DEBUG 

=================== Experiment ID #277 	 Dual Point ID: 279 ===================
10:11:43,892 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.634E-09|<1.000E-06)
10:11:43,892 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:44,209 root DEBUG Side: ON	 Angle(dx0, dx): 1.83 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.897E-01 	 Total distance: 3.897E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([2], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:44,477 root DEBUG Side: OFF	 Angle(dx0, dx): 0.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.986E-01 	 Total distance: 1.986E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([142], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:44,477 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:44,478 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -32.48 	 cIDON = [3 5], cIDOFF = [3 5]
10:11:44,478 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:44,478 root DEBUG dOFF/dON = 0.5
10:11:44,478 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.15414619585675, 'dON1': 0.38966969931623413, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.38966969931623413, 'nTON': 1, 'dON': 0.38966969931623413, 'dxOFFAngle': 88.35961472211157, 'dOFF1': 0.19859734596193895, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.19859734596193895, 'nTOFF': 1, 'dOFF': 0.19859734596193895, 'SUCCESS': False}
10:11:44,493 root DEBUG 

=================== Experiment ID #278 	 Dual Point ID: 280 ===================
10:11:44,499 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.711E-09|<1.000E-06)
10:11:44,499 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:44,758 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.484E-01 	 Total distance: 1.484E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([250], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:44,946 root DEBUG Side: OFF	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.886E-01 	 Total distance: 1.886E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([29], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:45,150 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.794E-01 	 Total distance: 3.680E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([242], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:45,150 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:45,150 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 42.51 	 cIDON = [3 5], cIDOFF = [3 5]
10:11:45,150 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:45,150 root DEBUG dOFF/dON = 2.5
10:11:45,150 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.14939486438709, 'dON1': 0.14844871645968333, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.14844871645968333, 'nTON': 1, 'dON': 0.14844871645968333, 'dxOFFAngle': 88.05738900251934, 'dOFF1': 0.36802731915202697, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.36802731915202697, 'nTOFF': 1, 'dOFF': 0.36802731915202697, 'SUCCESS': True}
10:11:45,160 root DEBUG 

=================== Experiment ID #279 	 Dual Point ID: 281 ===================
10:11:45,168 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.801E-08|<1.000E-06)
10:11:45,168 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:45,442 root DEBUG Side: ON	 Angle(dx0, dx): 1.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.769E-02 	 Total distance: 5.769E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([186], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:11:45,733 root DEBUG Side: OFF	 Angle(dx0, dx): 1.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.361E-01 	 Total distance: 1.361E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([41], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:11:45,733 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:45,733 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 40.47 	 cIDON = [4 7], cIDOFF = [4 7]
10:11:45,733 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:45,733 root DEBUG dOFF/dON = 2.4
10:11:45,733 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.9814190137515, 'dON1': 0.057688985596364754, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.057688985596364754, 'nTON': 1, 'dON': 0.057688985596364754, 'dxOFFAngle': 87.62879331899417, 'dOFF1': 0.1361281417531041, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.1361281417531041, 'nTOFF': 1, 'dOFF': 0.1361281417531041, 'SUCCESS': True}
10:11:45,742 root DEBUG 

=================== Experiment ID #280 	 Dual Point ID: 282 ===================
10:11:45,751 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.334E-08|<1.000E-06)
10:11:45,752 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:46,87 root DEBUG Side: ON	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.899E-01 	 Total distance: 2.899E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([179], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:11:46,351 root DEBUG Side: OFF	 Angle(dx0, dx): 0.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.827E-02 	 Total distance: 1.827E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([59], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:11:46,578 root DEBUG Side: OFF	 Angle(dx0, dx): 0.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.680E-01 	 Total distance: 4.862E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([179], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:11:46,578 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:46,578 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 25.29 	 cIDON = [1 9], cIDOFF = [0 9]
10:11:46,578 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:46,578 root DEBUG dOFF/dON = 1.7
10:11:46,578 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.29628855653687, 'dON1': 0.2899151648723188, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.2899151648723188, 'nTON': 1, 'dON': 0.2899151648723188, 'dxOFFAngle': 84.57141179480828, 'dOFF1': 0.48623635965978235, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.48623635965978235, 'nTOFF': 1, 'dOFF': 0.48623635965978235, 'SUCCESS': True}
10:11:46,590 root DEBUG 

=================== Experiment ID #281 	 Dual Point ID: 283 ===================
10:11:46,600 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.993E-08|<1.000E-06)
10:11:46,600 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:46,913 root DEBUG Side: ON	 Angle(dx0, dx): 0.84 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.816E-02 	 Total distance: 1.816E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([51], dtype=int64), array([[False]])]] 	 class: [4 7]
10:11:47,153 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.828E-02 	 Total distance: 9.828E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([240], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:11:47,153 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:47,154 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 68.80 	 cIDON = [4 7], cIDOFF = [4 7]
10:11:47,154 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:47,154 root DEBUG dOFF/dON = 5.4
10:11:47,154 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.84170047980066, 'dON1': 0.018162758717589576, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.018162758717589576, 'nTON': 1, 'dON': 0.018162758717589576, 'dxOFFAngle': 88.1270399252214, 'dOFF1': 0.09828129099643322, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.09828129099643322, 'nTOFF': 1, 'dOFF': 0.09828129099643322, 'SUCCESS': True}
10:11:47,165 root DEBUG 

=================== Experiment ID #282 	 Dual Point ID: 284 ===================
10:11:47,171 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.406E-09|<1.000E-06)
10:11:47,171 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:47,467 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.220E-01 	 Total distance: 1.220E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([123], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:47,727 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.950E-03 	 Total distance: 1.950E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([72], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:47,728 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:47,728 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -96.86 	 cIDON = [3 5], cIDOFF = [3 5]
10:11:47,728 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:47,728 root DEBUG dOFF/dON = 0.0
10:11:47,728 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.53233165983247, 'dON1': 0.12203518282664677, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.12203518282664677, 'nTON': 1, 'dON': 0.12203518282664677, 'dxOFFAngle': 89.61407757945311, 'dOFF1': 0.0019495659132486556, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.0019495659132486556, 'nTOFF': 1, 'dOFF': 0.0019495659132486556, 'SUCCESS': False}
10:11:47,741 root DEBUG 

=================== Experiment ID #283 	 Dual Point ID: 285 ===================
10:11:47,750 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.417E-08|<1.000E-06)
10:11:47,750 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:48,52 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.613E-01 	 Total distance: 2.613E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([182], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:48,230 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.510E-01 	 Total distance: 4.123E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([31], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:48,447 root DEBUG Side: OFF	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.699E-01 	 Total distance: 1.699E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([9], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:48,447 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:48,447 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -41.62 	 cIDON = [3 5], cIDOFF = [3 5]
10:11:48,447 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:48,447 root DEBUG dOFF/dON = 0.4
10:11:48,447 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.79765020575466, 'dON1': 0.4122650844454429, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.4122650844454429, 'nTON': 1, 'dON': 0.4122650844454429, 'dxOFFAngle': 89.4957037177971, 'dOFF1': 0.16994157203277202, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.16994157203277202, 'nTOFF': 1, 'dOFF': 0.16994157203277202, 'SUCCESS': False}
10:11:48,460 root DEBUG 

=================== Experiment ID #284 	 Dual Point ID: 286 ===================
10:11:48,468 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.494E-08|<1.000E-06)
10:11:48,468 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:48,744 root DEBUG Side: ON	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.635E-01 	 Total distance: 1.635E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([27], dtype=int64), array([[False]])]] 	 class: [2 8]
10:11:48,988 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.322E-01 	 Total distance: 4.322E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([153], dtype=int64), array([[False]])]] 	 class: [2 8]
10:11:48,988 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:48,988 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 45.11 	 cIDON = [2 8], cIDOFF = [2 8]
10:11:48,988 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:48,989 root DEBUG dOFF/dON = 2.6
10:11:48,989 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.93693935415928, 'dON1': 0.16347932361190945, 'cIDON1': array([2, 8], dtype=int64), 'dON_patch_1': 0.16347932361190945, 'nTON': 1, 'dON': 0.16347932361190945, 'dxOFFAngle': 86.86540052235313, 'dOFF1': 0.43218232777209464, 'cIDOFF1': array([2, 8], dtype=int64), 'dOFF_patch_1': 0.43218232777209464, 'nTOFF': 1, 'dOFF': 0.43218232777209464, 'SUCCESS': True}
10:11:48,998 root DEBUG 

=================== Experiment ID #285 	 Dual Point ID: 287 ===================
10:11:49,6 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.405E-08|<1.000E-06)
10:11:49,7 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:49,242 root DEBUG Side: ON	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.884E-01 	 Total distance: 5.884E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([82], dtype=int64), array([[False]])]] 	 class: [3 9]
10:11:49,491 root DEBUG Side: OFF	 Angle(dx0, dx): 0.94 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.496E-02 	 Total distance: 6.496E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([216], dtype=int64), array([[False]])]] 	 class: [3 9]
10:11:49,492 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:49,492 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -80.11 	 cIDON = [3 9], cIDOFF = [3 9]
10:11:49,493 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:49,493 root DEBUG dOFF/dON = 0.1
10:11:49,493 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.56771907142937, 'dON1': 0.5883764796746812, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.5883764796746812, 'nTON': 1, 'dON': 0.5883764796746812, 'dxOFFAngle': 89.13701892932582, 'dOFF1': 0.06496018224637083, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.06496018224637083, 'nTOFF': 1, 'dOFF': 0.06496018224637083, 'SUCCESS': False}
10:11:49,506 root DEBUG 

=================== Experiment ID #286 	 Dual Point ID: 288 ===================
10:11:49,515 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.847E-09|<1.000E-06)
10:11:49,515 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:49,816 root DEBUG Side: ON	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.043E-01 	 Total distance: 2.043E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([160], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:50,80 root DEBUG Side: OFF	 Angle(dx0, dx): 1.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.141E-02 	 Total distance: 5.141E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([182], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:50,80 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:50,81 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -59.79 	 cIDON = [2 7], cIDOFF = [2 7]
10:11:50,81 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:50,81 root DEBUG dOFF/dON = 0.3
10:11:50,81 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.03311609901976, 'dON1': 0.20431033256549472, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.20431033256549472, 'nTON': 1, 'dON': 0.20431033256549472, 'dxOFFAngle': 86.86090505438794, 'dOFF1': 0.051409977005815746, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.051409977005815746, 'nTOFF': 1, 'dOFF': 0.051409977005815746, 'SUCCESS': False}
10:11:50,91 root DEBUG 

=================== Experiment ID #287 	 Dual Point ID: 289 ===================
10:11:50,98 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.097E-08|<1.000E-06)
10:11:50,98 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:50,307 root DEBUG Side: ON	 Angle(dx0, dx): 1.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.164E-06 	 Total distance: 2.164E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 2]
10:11:50,538 root DEBUG Side: OFF	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.087E-02 	 Total distance: 4.087E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([140], dtype=int64), array([[False]])]] 	 class: [0 2]
10:11:50,751 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.808E-01 	 Total distance: 5.217E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([148], dtype=int64), array([[False]])]] 	 class: [0 2]
10:11:50,752 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:50,752 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [0 2], cIDOFF = [0 2]
10:11:50,752 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:50,752 root DEBUG dOFF/dON = 241097.4
10:11:50,752 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.4813038310046, 'dON1': 2.1636909076992916e-06, 'cIDON1': array([0, 2], dtype=int64), 'dON_patch_1': 2.1636909076992916e-06, 'nTON': 1, 'dON': 2.1636909076992916e-06, 'dxOFFAngle': 88.21918322155622, 'dOFF1': 0.521660207873584, 'cIDOFF1': array([0, 2], dtype=int64), 'dOFF_patch_1': 0.521660207873584, 'nTOFF': 1, 'dOFF': 0.521660207873584, 'SUCCESS': True}
10:11:50,762 root DEBUG 

=================== Experiment ID #288 	 Dual Point ID: 290 ===================
10:11:50,773 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.744E-09|<1.000E-06)
10:11:50,774 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:50,996 root DEBUG Side: ON	 Angle(dx0, dx): 1.60 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.275E-01 	 Total distance: 2.275E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([56], dtype=int64), array([[False]])]] 	 class: [4 7]
10:11:51,296 root DEBUG Side: OFF	 Angle(dx0, dx): 0.98 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.114E-01 	 Total distance: 6.114E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([32], dtype=int64), array([[False]])]] 	 class: [4 7]
10:11:51,297 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:51,297 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 45.77 	 cIDON = [4 7], cIDOFF = [4 7]
10:11:51,297 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:51,297 root DEBUG dOFF/dON = 2.7
10:11:51,297 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.47499359285757, 'dON1': 0.22745499378255077, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.22745499378255077, 'nTON': 1, 'dON': 0.22745499378255077, 'dxOFFAngle': 84.62213902998954, 'dOFF1': 0.6114012625547469, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.6114012625547469, 'nTOFF': 1, 'dOFF': 0.6114012625547469, 'SUCCESS': True}
10:11:51,308 root DEBUG 

=================== Experiment ID #289 	 Dual Point ID: 291 ===================
10:11:51,314 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.502E-09|<1.000E-06)
10:11:51,314 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:51,526 root DEBUG Side: ON	 Angle(dx0, dx): 2.96 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.442E-06 	 Total distance: 1.442E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:11:51,770 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.067E-01 	 Total distance: 2.067E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([200], dtype=int64), array([[False]])]] 	 class: [1 8]
10:11:51,901 root DEBUG Side: OFF	 Angle(dx0, dx): 0.79 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.057E-01 	 Total distance: 5.124E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([27], dtype=int64), array([[False]])]] 	 class: [1 8]
10:11:52,76 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.546E-01 	 Total distance: 7.670E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([57], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:11:52,76 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:52,76 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [1 8], cIDOFF = [1 8]
10:11:52,77 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:52,77 root DEBUG dOFF/dON = 531870.4
10:11:52,77 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.46836230951047, 'dON1': 1.4420159878665554e-06, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 1.4420159878665554e-06, 'nTON': 1, 'dON': 1.4420159878665554e-06, 'dxOFFAngle': 89.29060195921781, 'dOFF1': 0.7669656088181281, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 0.7669656088181281, 'nTOFF': 1, 'dOFF': 0.7669656088181281, 'SUCCESS': True}
10:11:52,86 root DEBUG 

=================== Experiment ID #290 	 Dual Point ID: 292 ===================
10:11:52,95 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.054E-09|<1.000E-06)
10:11:52,95 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:52,329 root DEBUG Side: ON	 Angle(dx0, dx): 0.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.126E-02 	 Total distance: 1.126E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([50], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:11:52,537 root DEBUG Side: OFF	 Angle(dx0, dx): 3.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.011E-04 	 Total distance: 2.011E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:11:52,537 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:52,537 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -96.49 	 cIDON = [0 8], cIDOFF = [1 8]
10:11:52,537 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:52,537 root DEBUG dOFF/dON = 0.0
10:11:52,537 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.43999682664044, 'dON1': 0.011257033154719202, 'cIDON1': array([0, 8], dtype=int64), 'dON_patch_1': 0.011257033154719202, 'nTON': 1, 'dON': 0.011257033154719202, 'dxOFFAngle': 85.32252279470147, 'dOFF1': 0.0002011013578924495, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 0.0002011013578924495, 'nTOFF': 1, 'dOFF': 0.0002011013578924495, 'SUCCESS': False}
10:11:52,546 root DEBUG 

=================== Experiment ID #291 	 Dual Point ID: 293 ===================
10:11:52,553 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.190E-09|<1.000E-06)
10:11:52,554 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:52,821 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.784E-01 	 Total distance: 3.784E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([30], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:11:53,162 root DEBUG Side: OFF	 Angle(dx0, dx): 0.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.592E-01 	 Total distance: 1.592E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([186], dtype=int64), array([[False]])]] 	 class: [3 8]
10:11:53,162 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:53,163 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -40.77 	 cIDON = [3 8], cIDOFF = [3 8]
10:11:53,163 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:53,163 root DEBUG dOFF/dON = 0.4
10:11:53,163 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.40469191095133, 'dON1': 0.37835809525344294, 'cIDON1': array([3, 8], dtype=int64), 'dON_patch_1': 0.37835809525344294, 'nTON': 1, 'dON': 0.37835809525344294, 'dxOFFAngle': 87.1959720159702, 'dOFF1': 0.15918836520194204, 'cIDOFF1': array([3, 8], dtype=int64), 'dOFF_patch_1': 0.15918836520194204, 'nTOFF': 1, 'dOFF': 0.15918836520194204, 'SUCCESS': False}
10:11:53,171 root DEBUG 

=================== Experiment ID #292 	 Dual Point ID: 294 ===================
10:11:53,184 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.422E-08|<1.000E-06)
10:11:53,184 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:53,439 root DEBUG Side: ON	 Angle(dx0, dx): 1.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.327E-02 	 Total distance: 2.327E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([51], dtype=int64), array([[False]])]] 	 class: [3 7]
10:11:53,676 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.164E-01 	 Total distance: 3.164E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([50], dtype=int64), array([[False]])]] 	 class: [3 7]
10:11:53,676 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:53,676 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 86.30 	 cIDON = [3 7], cIDOFF = [3 7]
10:11:53,676 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:53,676 root DEBUG dOFF/dON = 13.6
10:11:53,676 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.11367121538866, 'dON1': 0.0232662777900372, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.0232662777900372, 'nTON': 1, 'dON': 0.0232662777900372, 'dxOFFAngle': 88.2309013885291, 'dOFF1': 0.3164152899974668, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.3164152899974668, 'nTOFF': 1, 'dOFF': 0.3164152899974668, 'SUCCESS': True}
10:11:53,690 root DEBUG 

=================== Experiment ID #293 	 Dual Point ID: 295 ===================
10:11:53,703 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.976E-08|<1.000E-06)
10:11:53,703 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:54,7 root DEBUG Side: ON	 Angle(dx0, dx): 0.84 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.263E-01 	 Total distance: 5.263E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([85], dtype=int64), array([[False]])]] 	 class: [5 9]
10:11:54,223 root DEBUG Side: OFF	 Angle(dx0, dx): 0.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.706E-02 	 Total distance: 6.706E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([186], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:11:54,223 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:54,223 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -77.39 	 cIDON = [5 9], cIDOFF = [5 9]
10:11:54,223 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:54,223 root DEBUG dOFF/dON = 0.1
10:11:54,223 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.75151549448954, 'dON1': 0.5262503418597948, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.5262503418597948, 'nTON': 1, 'dON': 0.5262503418597948, 'dxOFFAngle': 86.37407420857689, 'dOFF1': 0.06706470292693804, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.06706470292693804, 'nTOFF': 1, 'dOFF': 0.06706470292693804, 'SUCCESS': False}
10:11:54,229 root DEBUG 

=================== Experiment ID #294 	 Dual Point ID: 296 ===================
10:11:54,238 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.523E-08|<1.000E-06)
10:11:54,238 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:54,547 root DEBUG Side: ON	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.161E-02 	 Total distance: 5.161E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([254], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:54,777 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.662E-03 	 Total distance: 2.662E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([44], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:54,916 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.304E-01 	 Total distance: 7.331E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([45], dtype=int64), array([[False]])]] 	 class: [2 7]
10:11:55,60 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.137E-02 	 Total distance: 7.744E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([239], dtype=int64), array([[False]])]] 	 class: [2 7]
10:11:55,60 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:55,60 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 87.50 	 cIDON = [2 7], cIDOFF = [2 7]
10:11:55,60 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:55,60 root DEBUG dOFF/dON = 15.0
10:11:55,60 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.26055207270153, 'dON1': 0.05161399178495966, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.05161399178495966, 'nTON': 1, 'dON': 0.05161399178495966, 'dxOFFAngle': 89.3883127518888, 'dOFF1': 0.7744244074307504, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.7744244074307504, 'nTOFF': 1, 'dOFF': 0.7744244074307504, 'SUCCESS': True}
10:11:55,67 root DEBUG 

=================== Experiment ID #295 	 Dual Point ID: 297 ===================
10:11:55,74 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.468E-08|<1.000E-06)
10:11:55,75 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:55,300 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.596E-03 	 Total distance: 8.596E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([129], dtype=int64), array([[False]])]] 	 class: [6 8]
10:11:55,558 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.578E-02 	 Total distance: 1.578E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([105], dtype=int64), array([[ True]])]] 	 class: [6 8]
10:11:55,704 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.247E-01 	 Total distance: 2.405E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([168], dtype=int64), array([[False]])]] 	 class: [6 8]
10:11:55,704 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:55,704 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 93.10 	 cIDON = [6 8], cIDOFF = [6 8]
10:11:55,704 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:55,704 root DEBUG dOFF/dON = 28.0
10:11:55,704 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.50765995113962, 'dON1': 0.00859568766324391, 'cIDON1': array([6, 8], dtype=int64), 'dON_patch_1': 0.00859568766324391, 'nTON': 1, 'dON': 0.00859568766324391, 'dxOFFAngle': 87.83691922218856, 'dOFF1': 0.24047226139415848, 'cIDOFF1': array([6, 8], dtype=int64), 'dOFF_patch_1': 0.24047226139415848, 'nTOFF': 1, 'dOFF': 0.24047226139415848, 'SUCCESS': True}
10:11:55,711 root DEBUG 

=================== Experiment ID #296 	 Dual Point ID: 298 ===================
10:11:55,718 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.172E-09|<1.000E-06)
10:11:55,718 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:56,131 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.382E-01 	 Total distance: 4.382E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([248], dtype=int64), array([[False]])]] 	 class: [4 6]
10:11:56,386 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.901E-02 	 Total distance: 9.901E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([200], dtype=int64), array([[False]])]] 	 class: [4 6]
10:11:56,558 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.906E-02 	 Total distance: 1.181E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([19], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:11:56,558 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:56,559 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -57.54 	 cIDON = [4 6], cIDOFF = [4 6]
10:11:56,559 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:56,559 root DEBUG dOFF/dON = 0.3
10:11:56,559 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.73264845373002, 'dON1': 0.43816193258208774, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.43816193258208774, 'nTON': 1, 'dON': 0.43816193258208774, 'dxOFFAngle': 89.83876428785752, 'dOFF1': 0.11807639587129883, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.11807639587129883, 'nTOFF': 1, 'dOFF': 0.11807639587129883, 'SUCCESS': False}
10:11:56,576 root DEBUG 

=================== Experiment ID #297 	 Dual Point ID: 299 ===================
10:11:56,584 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.626E-09|<1.000E-06)
10:11:56,584 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:56,844 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.713E-02 	 Total distance: 3.713E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([250], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:11:57,127 root DEBUG Side: OFF	 Angle(dx0, dx): 1.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.844E-01 	 Total distance: 2.844E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([49], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:11:57,127 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:57,128 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 76.90 	 cIDON = [3 6], cIDOFF = [3 6]
10:11:57,128 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:57,128 root DEBUG dOFF/dON = 7.7
10:11:57,128 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.49071569217244, 'dON1': 0.03713466411273706, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.03713466411273706, 'nTON': 1, 'dON': 0.03713466411273706, 'dxOFFAngle': 89.43140789917808, 'dOFF1': 0.284425715843987, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.284425715843987, 'nTOFF': 1, 'dOFF': 0.284425715843987, 'SUCCESS': True}
10:11:57,137 root DEBUG 

=================== Experiment ID #298 	 Dual Point ID: 300 ===================
10:11:57,150 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.700E-08|<1.000E-06)
10:11:57,150 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:57,419 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.500E-01 	 Total distance: 3.500E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([195], dtype=int64), array([[False]])]] 	 class: [0 1]
10:11:57,646 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.817E-01 	 Total distance: 4.817E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([52], dtype=int64), array([[False]])]] 	 class: [0 1]
10:11:57,805 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.625E-01 	 Total distance: 6.443E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([14], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:11:57,999 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.675E-02 	 Total distance: 6.810E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([192], dtype=int64), array([[False]])]] 	 class: [0 1]
10:11:58,178 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.892E-01 	 Total distance: 1.070E+00 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([223], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:11:58,354 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.507E-01 	 Total distance: 1.721E+00 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([222], dtype=int64), array([[False]])]] 	 class: [0 1]
10:11:58,528 root DEBUG Side: OFF	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.191E-02 	 Total distance: 1.743E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([42], dtype=int64), array([[False]])]] 	 class: [0 1]
10:11:58,529 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:58,529 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 66.55 	 cIDON = [0 1], cIDOFF = [0 1]
10:11:58,529 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:58,529 root DEBUG dOFF/dON = 5.0
10:11:58,529 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.14874259343033, 'dON1': 0.3500383378500141, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.3500383378500141, 'nTON': 1, 'dON': 0.3500383378500141, 'dxOFFAngle': 89.70202576878143, 'dOFF1': 1.7428508126003739, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 1.7428508126003739, 'nTOFF': 1, 'dOFF': 1.7428508126003739, 'SUCCESS': True}
10:11:58,541 root DEBUG 

=================== Experiment ID #299 	 Dual Point ID: 301 ===================
10:11:58,556 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.626E-08|<1.000E-06)
10:11:58,556 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:58,860 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.285E-01 	 Total distance: 6.285E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([15], dtype=int64), array([[False]])]] 	 class: [2 4]
10:11:59,68 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.172E-01 	 Total distance: 4.172E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([228], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:11:59,278 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.396E-01 	 Total distance: 6.568E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([164], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:11:59,400 root DEBUG Side: OFF	 Angle(dx0, dx): 1.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.922E-01 	 Total distance: 1.049E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([173], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:11:59,401 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:59,401 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 25.07 	 cIDON = [2 4], cIDOFF = [2 4]
10:11:59,401 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:59,401 root DEBUG dOFF/dON = 1.7
10:11:59,401 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.64182071039673, 'dON1': 0.6284893351457475, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.6284893351457475, 'nTON': 1, 'dON': 0.6284893351457475, 'dxOFFAngle': 89.33980975515145, 'dOFF1': 1.049089578145935, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 1.049089578145935, 'nTOFF': 1, 'dOFF': 1.049089578145935, 'SUCCESS': True}
10:11:59,411 root DEBUG 

=================== Experiment ID #300 	 Dual Point ID: 302 ===================
10:11:59,417 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.303E-08|<1.000E-06)
10:11:59,417 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:59,677 root DEBUG Side: ON	 Angle(dx0, dx): 1.84 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.116E-01 	 Total distance: 1.116E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 4], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:11:59,953 root DEBUG Side: OFF	 Angle(dx0, dx): 0.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.042E+00 	 Total distance: 1.042E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([197], dtype=int64), array([[False]])]] 	 class: [4 8]
10:11:59,953 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:59,953 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 80.64 	 cIDON = [4 8], cIDOFF = [4 8]
10:11:59,953 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:59,953 root DEBUG dOFF/dON = 9.3
10:11:59,953 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.29621006773678, 'dON1': 0.11164809955144765, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.11164809955144765, 'nTON': 1, 'dON': 0.11164809955144765, 'dxOFFAngle': 89.56821117110279, 'dOFF1': 1.0416120088850604, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 1.0416120088850604, 'nTOFF': 1, 'dOFF': 1.0416120088850604, 'SUCCESS': True}
10:11:59,960 root DEBUG 

=================== Experiment ID #301 	 Dual Point ID: 303 ===================
10:11:59,972 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.498E-09|<1.000E-06)
10:11:59,972 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:00,309 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.085E-02 	 Total distance: 6.085E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([199], dtype=int64), array([[False]])]] 	 class: [2 3]
10:12:00,611 root DEBUG Side: OFF	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.316E-01 	 Total distance: 1.316E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([46], dtype=int64), array([[False]])]] 	 class: [2 3]
10:12:00,611 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:00,611 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 36.76 	 cIDON = [2 3], cIDOFF = [2 3]
10:12:00,611 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:00,611 root DEBUG dOFF/dON = 2.2
10:12:00,612 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.6607286103756, 'dON1': 0.06085286114818023, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.06085286114818023, 'nTON': 1, 'dON': 0.06085286114818023, 'dxOFFAngle': 87.95896861933366, 'dOFF1': 0.1315968944923162, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.1315968944923162, 'nTOFF': 1, 'dOFF': 0.1315968944923162, 'SUCCESS': True}
10:12:00,620 root DEBUG 

=================== Experiment ID #302 	 Dual Point ID: 304 ===================
10:12:00,628 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.469E-09|<1.000E-06)
10:12:00,628 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:00,908 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.627E-02 	 Total distance: 5.627E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([233], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:12:01,189 root DEBUG Side: OFF	 Angle(dx0, dx): 1.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.217E-01 	 Total distance: 2.217E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([18], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:12:01,189 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:01,189 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 59.51 	 cIDON = [3 7], cIDOFF = [3 7]
10:12:01,189 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:01,189 root DEBUG dOFF/dON = 3.9
10:12:01,190 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.17234346248318, 'dON1': 0.05626505483925021, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.05626505483925021, 'nTON': 1, 'dON': 0.05626505483925021, 'dxOFFAngle': 87.1888744366404, 'dOFF1': 0.22168888995556232, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.22168888995556232, 'nTOFF': 1, 'dOFF': 0.22168888995556232, 'SUCCESS': True}
10:12:01,201 root DEBUG 

=================== Experiment ID #303 	 Dual Point ID: 305 ===================
10:12:01,211 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.766E-08|<1.000E-06)
10:12:01,211 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:01,437 root DEBUG Side: ON	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.131E-02 	 Total distance: 9.131E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([61], dtype=int64), array([[False]])]] 	 class: [2 7]
10:12:01,752 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.210E-01 	 Total distance: 2.210E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([218], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:12:01,900 root DEBUG Side: OFF	 Angle(dx0, dx): 1.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.000E-01 	 Total distance: 5.210E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([197], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:12:02,81 root DEBUG Side: OFF	 Angle(dx0, dx): 1.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.309E-01 	 Total distance: 9.519E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([119], dtype=int64), array([[False]])]] 	 class: [2 7]
10:12:02,288 root DEBUG Side: OFF	 Angle(dx0, dx): 0.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.672E-02 	 Total distance: 9.986E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([60], dtype=int64), array([[False]])]] 	 class: [2 7]
10:12:02,288 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:02,289 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 83.25 	 cIDON = [2 7], cIDOFF = [2 7]
10:12:02,289 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:02,289 root DEBUG dOFF/dON = 10.9
10:12:02,289 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.60894129283743, 'dON1': 0.09130537224906173, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.09130537224906173, 'nTON': 1, 'dON': 0.09130537224906173, 'dxOFFAngle': 84.61135228989944, 'dOFF1': 0.998589552337119, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.998589552337119, 'nTOFF': 1, 'dOFF': 0.998589552337119, 'SUCCESS': True}
10:12:02,309 root DEBUG 

=================== Experiment ID #304 	 Dual Point ID: 306 ===================
10:12:02,319 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.154E-09|<1.000E-06)
10:12:02,319 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:02,523 root DEBUG Side: ON	 Angle(dx0, dx): 0.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.214E-03 	 Total distance: 2.214E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([80], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:12:02,874 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.690E-03 	 Total distance: 5.690E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([54], dtype=int64), array([[False]])]] 	 class: [2 6]
10:12:03,68 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.055E-01 	 Total distance: 5.112E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([247], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:12:03,68 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:03,68 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.14 	 cIDON = [2 6], cIDOFF = [2 6]
10:12:03,68 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:03,68 root DEBUG dOFF/dON = 230.9
10:12:03,68 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.3049459887693, 'dON1': 0.002214283157512927, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.002214283157512927, 'nTON': 1, 'dON': 0.002214283157512927, 'dxOFFAngle': 88.97527549036604, 'dOFF1': 0.5111922786174351, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.5111922786174351, 'nTOFF': 1, 'dOFF': 0.5111922786174351, 'SUCCESS': True}
10:12:03,76 root DEBUG 

=================== Experiment ID #305 	 Dual Point ID: 307 ===================
10:12:03,85 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.156E-08|<1.000E-06)
10:12:03,85 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:03,391 root DEBUG Side: ON	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.303E-02 	 Total distance: 2.303E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([248], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:12:03,700 root DEBUG Side: OFF	 Angle(dx0, dx): 0.79 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.215E+00 	 Total distance: 1.215E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([47], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:12:03,925 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.339E-01 	 Total distance: 1.349E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([1], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:12:03,925 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:03,925 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 96.64 	 cIDON = [3 7], cIDOFF = [3 7]
10:12:03,926 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:03,926 root DEBUG dOFF/dON = 58.6
10:12:03,926 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.3598272036356, 'dON1': 0.02302793449296295, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.02302793449296295, 'nTON': 1, 'dON': 0.02302793449296295, 'dxOFFAngle': 87.23154741346454, 'dOFF1': 1.3486283999090038, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 1.3486283999090038, 'nTOFF': 1, 'dOFF': 1.3486283999090038, 'SUCCESS': True}
10:12:03,932 root DEBUG 

=================== Experiment ID #306 	 Dual Point ID: 308 ===================
10:12:03,938 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.217E-08|<1.000E-06)
10:12:03,938 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:04,242 root DEBUG Side: ON	 Angle(dx0, dx): 0.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.024E-01 	 Total distance: 6.024E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([178], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:12:04,610 root DEBUG Side: OFF	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.604E-01 	 Total distance: 1.604E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([53], dtype=int64), array([[False]])]] 	 class: [5 7]
10:12:04,610 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:04,610 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -57.93 	 cIDON = [5 7], cIDOFF = [5 7]
10:12:04,610 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:04,610 root DEBUG dOFF/dON = 0.3
10:12:04,610 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.60376933584035, 'dON1': 0.602377673290633, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.602377673290633, 'nTON': 1, 'dON': 0.602377673290633, 'dxOFFAngle': 89.20877545518594, 'dOFF1': 0.16044636970843867, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.16044636970843867, 'nTOFF': 1, 'dOFF': 0.16044636970843867, 'SUCCESS': False}
10:12:04,624 root DEBUG 

=================== Experiment ID #307 	 Dual Point ID: 309 ===================
10:12:04,633 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.746E-09|<1.000E-06)
10:12:04,633 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:04,981 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.023E-01 	 Total distance: 3.023E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([213], dtype=int64), array([[False]])]] 	 class: [2 7]
10:12:05,327 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.325E-01 	 Total distance: 3.325E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([69], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:12:05,327 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:05,327 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 4.75 	 cIDON = [2 7], cIDOFF = [2 7]
10:12:05,327 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:05,327 root DEBUG dOFF/dON = 1.1
10:12:05,327 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.39097095594494, 'dON1': 0.30228351577288076, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.30228351577288076, 'nTON': 1, 'dON': 0.30228351577288076, 'dxOFFAngle': 88.38548945580192, 'dOFF1': 0.33246487058412433, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.33246487058412433, 'nTOFF': 1, 'dOFF': 0.33246487058412433, 'SUCCESS': True}
10:12:05,336 root DEBUG 

=================== Experiment ID #308 	 Dual Point ID: 310 ===================
10:12:05,345 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.398E-09|<1.000E-06)
10:12:05,345 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:05,655 root DEBUG Side: ON	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.617E-02 	 Total distance: 5.617E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([33], dtype=int64), array([[False]])]] 	 class: [3 5]
10:12:05,864 root DEBUG Side: ON	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.148E-01 	 Total distance: 1.709E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([219], dtype=int64), array([[False]])]] 	 class: [3 5]
10:12:06,233 root DEBUG Side: OFF	 Angle(dx0, dx): 0.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.687E-01 	 Total distance: 1.687E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([207], dtype=int64), array([[False]])]] 	 class: [3 5]
10:12:06,233 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:06,233 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -0.66 	 cIDON = [3 5], cIDOFF = [3 5]
10:12:06,233 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:06,233 root DEBUG dOFF/dON = 1.0
10:12:06,233 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.19026628658993, 'dON1': 0.17093091140822617, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.17093091140822617, 'nTON': 1, 'dON': 0.17093091140822617, 'dxOFFAngle': 87.74798683494882, 'dOFF1': 0.1686983102883289, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.1686983102883289, 'nTOFF': 1, 'dOFF': 0.1686983102883289, 'SUCCESS': False}
10:12:06,245 root DEBUG 

=================== Experiment ID #309 	 Dual Point ID: 311 ===================
10:12:06,254 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.296E-08|<1.000E-06)
10:12:06,254 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:06,553 root DEBUG Side: ON	 Angle(dx0, dx): 0.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.523E-02 	 Total distance: 5.523E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([0], dtype=int64), array([[False]])]] 	 class: [3 6]
10:12:06,826 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.523E-02 	 Total distance: 6.523E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([57], dtype=int64), array([[False]])]] 	 class: [3 6]
10:12:07,35 root DEBUG Side: OFF	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.012E-01 	 Total distance: 3.664E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([32], dtype=int64), array([[False]])]] 	 class: [3 6]
10:12:07,35 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:07,35 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 73.80 	 cIDON = [3 6], cIDOFF = [3 6]
10:12:07,35 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:07,35 root DEBUG dOFF/dON = 6.6
10:12:07,35 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.53744852672595, 'dON1': 0.055232419434014364, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.055232419434014364, 'nTON': 1, 'dON': 0.055232419434014364, 'dxOFFAngle': 88.10909755953082, 'dOFF1': 0.3664138774526452, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.3664138774526452, 'nTOFF': 1, 'dOFF': 0.3664138774526452, 'SUCCESS': True}
10:12:07,46 root DEBUG 

=================== Experiment ID #310 	 Dual Point ID: 312 ===================
10:12:07,53 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.493E-08|<1.000E-06)
10:12:07,53 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:07,329 root DEBUG Side: ON	 Angle(dx0, dx): 0.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.706E-04 	 Total distance: 8.706E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([91], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:12:07,597 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.158E-01 	 Total distance: 1.158E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([43], dtype=int64), array([[False]])]] 	 class: [2 7]
10:12:07,757 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.414E-01 	 Total distance: 2.572E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([149], dtype=int64), array([[False]])]] 	 class: [2 7]
10:12:07,757 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:07,757 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.33 	 cIDON = [2 7], cIDOFF = [2 7]
10:12:07,757 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:07,757 root DEBUG dOFF/dON = 295.4
10:12:07,757 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.24413358064594, 'dON1': 0.0008706279815535267, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.0008706279815535267, 'nTON': 1, 'dON': 0.0008706279815535267, 'dxOFFAngle': 89.03426741846134, 'dOFF1': 0.25721443745207984, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.25721443745207984, 'nTOFF': 1, 'dOFF': 0.25721443745207984, 'SUCCESS': True}
10:12:07,765 root DEBUG 

=================== Experiment ID #311 	 Dual Point ID: 313 ===================
10:12:07,777 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.867E-08|<1.000E-06)
10:12:07,777 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:08,95 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.286E-01 	 Total distance: 1.286E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([245], dtype=int64), array([[ True]])]] 	 class: [5 8]
10:12:08,303 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.736E-01 	 Total distance: 4.022E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([240], dtype=int64), array([[False]])]] 	 class: [5 8]
10:12:08,623 root DEBUG Side: OFF	 Angle(dx0, dx): 1.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.021E-02 	 Total distance: 2.021E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([56], dtype=int64), array([[ True]])]] 	 class: [5 8]
10:12:08,624 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:08,624 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -90.43 	 cIDON = [5 8], cIDOFF = [5 8]
10:12:08,624 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:08,624 root DEBUG dOFF/dON = 0.1
10:12:08,624 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.87525831294691, 'dON1': 0.4022355616315347, 'cIDON1': array([5, 8], dtype=int64), 'dON_patch_1': 0.4022355616315347, 'nTON': 1, 'dON': 0.4022355616315347, 'dxOFFAngle': 87.0846128455034, 'dOFF1': 0.0202084630529525, 'cIDOFF1': array([5, 8], dtype=int64), 'dOFF_patch_1': 0.0202084630529525, 'nTOFF': 1, 'dOFF': 0.0202084630529525, 'SUCCESS': False}
10:12:08,636 root DEBUG 

=================== Experiment ID #312 	 Dual Point ID: 314 ===================
10:12:08,645 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.028E-09|<1.000E-06)
10:12:08,646 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:08,931 root DEBUG Side: ON	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.145E-02 	 Total distance: 1.145E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([149], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:12:09,213 root DEBUG Side: OFF	 Angle(dx0, dx): 0.71 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.042E-01 	 Total distance: 2.042E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([32], dtype=int64), array([[False]])]] 	 class: [3 9]
10:12:09,213 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:09,213 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 89.38 	 cIDON = [3 9], cIDOFF = [3 9]
10:12:09,214 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:09,214 root DEBUG dOFF/dON = 17.8
10:12:09,214 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.61677602129828, 'dON1': 0.011453172485424308, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.011453172485424308, 'nTON': 1, 'dON': 0.011453172485424308, 'dxOFFAngle': 88.3089590593454, 'dOFF1': 0.20417875340401637, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.20417875340401637, 'nTOFF': 1, 'dOFF': 0.20417875340401637, 'SUCCESS': True}
10:12:09,227 root DEBUG 

=================== Experiment ID #313 	 Dual Point ID: 315 ===================
10:12:09,236 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.312E-08|<1.000E-06)
10:12:09,236 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:09,557 root DEBUG Side: ON	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.587E-01 	 Total distance: 1.587E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([39], dtype=int64), array([[False]])]] 	 class: [3 5]
10:12:09,814 root DEBUG Side: OFF	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.401E-01 	 Total distance: 2.401E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([69], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:12:09,814 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:09,814 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 20.40 	 cIDON = [3 5], cIDOFF = [3 5]
10:12:09,814 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:09,814 root DEBUG dOFF/dON = 1.5
10:12:09,814 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.40491812192438, 'dON1': 0.15872834660600327, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.15872834660600327, 'nTON': 1, 'dON': 0.15872834660600327, 'dxOFFAngle': 88.13103245908242, 'dOFF1': 0.2400861537913754, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.2400861537913754, 'nTOFF': 1, 'dOFF': 0.2400861537913754, 'SUCCESS': True}
10:12:09,821 root DEBUG 

=================== Experiment ID #314 	 Dual Point ID: 316 ===================
10:12:09,829 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.574E-08|<1.000E-06)
10:12:09,829 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:10,103 root DEBUG Side: ON	 Angle(dx0, dx): 1.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.282E-02 	 Total distance: 2.282E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([0], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:12:10,350 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.349E-01 	 Total distance: 2.349E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([72], dtype=int64), array([[False]])]] 	 class: [4 6]
10:12:10,350 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:10,350 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 82.29 	 cIDON = [4 6], cIDOFF = [4 6]
10:12:10,351 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:10,351 root DEBUG dOFF/dON = 10.3
10:12:10,351 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.46093086822991, 'dON1': 0.02282066458048614, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.02282066458048614, 'nTON': 1, 'dON': 0.02282066458048614, 'dxOFFAngle': 87.91583919272433, 'dOFF1': 0.23486797460874706, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.23486797460874706, 'nTOFF': 1, 'dOFF': 0.23486797460874706, 'SUCCESS': True}
10:12:10,362 root DEBUG 

=================== Experiment ID #315 	 Dual Point ID: 317 ===================
10:12:10,372 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.256E-09|<1.000E-06)
10:12:10,372 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:10,635 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.093E-01 	 Total distance: 1.093E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([79], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:12:10,775 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.380E-01 	 Total distance: 9.473E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([45], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:12:11,61 root DEBUG Side: OFF	 Angle(dx0, dx): 1.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.353E-02 	 Total distance: 5.353E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([67], dtype=int64), array([[False]])]] 	 class: [2 5]
10:12:11,61 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:11,61 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -89.30 	 cIDON = [2 5], cIDOFF = [2 5]
10:12:11,61 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:11,62 root DEBUG dOFF/dON = 0.1
10:12:11,62 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.51583349290536, 'dON1': 0.947282295564602, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.947282295564602, 'nTON': 1, 'dON': 0.947282295564602, 'dxOFFAngle': 84.94668617374727, 'dOFF1': 0.053534418849787185, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.053534418849787185, 'nTOFF': 1, 'dOFF': 0.053534418849787185, 'SUCCESS': False}
10:12:11,72 root DEBUG 

=================== Experiment ID #316 	 Dual Point ID: 318 ===================
10:12:11,80 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.153E-10|<1.000E-06)
10:12:11,80 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:11,335 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.560E-01 	 Total distance: 3.560E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([4], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:12:11,617 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.096E-01 	 Total distance: 1.096E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([195], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:12:11,777 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.146E-02 	 Total distance: 1.311E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([174], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:12:11,976 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.631E-02 	 Total distance: 1.474E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([246], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:12:12,159 root DEBUG Side: OFF	 Angle(dx0, dx): 0.79 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.680E-02 	 Total distance: 2.142E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([39], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:12:12,308 root DEBUG Side: OFF	 Angle(dx0, dx): 1.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.474E-02 	 Total distance: 2.589E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([4, 6], dtype=int64), array([[1.],
       [0.]])]] 	 class: [3 4]
10:12:12,308 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:12,308 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -15.79 	 cIDON = [3 6], cIDOFF = [3 6]
10:12:12,308 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:12,308 root DEBUG dOFF/dON = 0.7
10:12:12,308 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.64354975768313, 'dON1': 0.3559885400487859, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.3559885400487859, 'nTON': 1, 'dON': 0.3559885400487859, 'dxOFFAngle': 89.32577396287398, 'dOFF1': 0.25888695427301045, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.25888695427301045, 'nTOFF': 1, 'dOFF': 0.25888695427301045, 'SUCCESS': False}
10:12:12,323 root DEBUG 

=================== Experiment ID #317 	 Dual Point ID: 319 ===================
10:12:12,331 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.976E-09|<1.000E-06)
10:12:12,331 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:12,603 root DEBUG Side: ON	 Angle(dx0, dx): 1.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.051E-06 	 Total distance: 5.051E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 3]
10:12:12,951 root DEBUG Side: OFF	 Angle(dx0, dx): 0.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.270E-02 	 Total distance: 1.270E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([195], dtype=int64), array([[ True]])]] 	 class: [0 3]
10:12:12,951 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:12,951 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.92 	 cIDON = [1 3], cIDOFF = [0 3]
10:12:12,951 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:12,951 root DEBUG dOFF/dON = 2514.7
10:12:12,952 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.78671839555105, 'dON1': 5.050606489895006e-06, 'cIDON1': array([1, 3], dtype=int64), 'dON_patch_1': 5.050606489895006e-06, 'nTON': 1, 'dON': 5.050606489895006e-06, 'dxOFFAngle': 87.98437050431386, 'dOFF1': 0.0127006575910646, 'cIDOFF1': array([0, 3], dtype=int64), 'dOFF_patch_1': 0.0127006575910646, 'nTOFF': 1, 'dOFF': 0.0127006575910646, 'SUCCESS': True}
10:12:12,962 root DEBUG 

=================== Experiment ID #318 	 Dual Point ID: 320 ===================
10:12:12,970 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.725E-07|<1.000E-06)
10:12:12,970 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:13,260 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.339E-01 	 Total distance: 1.339E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([209], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:12:13,426 root DEBUG Side: ON	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.027E-02 	 Total distance: 2.141E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([243], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:12:13,660 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.054E-01 	 Total distance: 5.195E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([90], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:12:13,892 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.753E-01 	 Total distance: 1.753E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([13], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:12:14,36 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.985E-02 	 Total distance: 1.951E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([174], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:12:14,213 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.340E-02 	 Total distance: 2.885E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([107], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:12:14,213 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:14,213 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -28.59 	 cIDON = [2 6], cIDOFF = [2 6]
10:12:14,214 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:14,214 root DEBUG dOFF/dON = 0.6
10:12:14,214 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.37986571457512, 'dON1': 0.519522458095565, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.519522458095565, 'nTON': 1, 'dON': 0.519522458095565, 'dxOFFAngle': 88.51973639128273, 'dOFF1': 0.28850576792138294, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.28850576792138294, 'nTOFF': 1, 'dOFF': 0.28850576792138294, 'SUCCESS': False}
10:12:14,226 root DEBUG 

=================== Experiment ID #319 	 Dual Point ID: 321 ===================
10:12:14,236 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.304E-08|<1.000E-06)
10:12:14,236 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:14,504 root DEBUG Side: ON	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.771E-02 	 Total distance: 1.771E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([133], dtype=int64), array([[False]])]] 	 class: [3 8]
10:12:14,770 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.370E-01 	 Total distance: 5.370E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([123], dtype=int64), array([[False]])]] 	 class: [3 8]
10:12:15,9 root DEBUG Side: OFF	 Angle(dx0, dx): 0.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.926E-02 	 Total distance: 6.263E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([75], dtype=int64), array([[False]])]] 	 class: [3 8]
10:12:15,9 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:15,10 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 94.50 	 cIDON = [3 8], cIDOFF = [3 8]
10:12:15,10 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:15,10 root DEBUG dOFF/dON = 35.4
10:12:15,10 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.78721297506432, 'dON1': 0.01770683477810918, 'cIDON1': array([3, 8], dtype=int64), 'dON_patch_1': 0.01770683477810918, 'nTON': 1, 'dON': 0.01770683477810918, 'dxOFFAngle': 88.40675819069403, 'dOFF1': 0.6263033465401247, 'cIDOFF1': array([3, 8], dtype=int64), 'dOFF_patch_1': 0.6263033465401247, 'nTOFF': 1, 'dOFF': 0.6263033465401247, 'SUCCESS': True}
10:12:15,24 root DEBUG 

=================== Experiment ID #320 	 Dual Point ID: 322 ===================
10:12:15,31 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.026E-08|<1.000E-06)
10:12:15,31 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:15,299 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.473E-01 	 Total distance: 5.473E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([22], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:12:15,508 root DEBUG Side: ON	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.505E-01 	 Total distance: 6.978E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([120], dtype=int64), array([[False]])]] 	 class: [4 8]
10:12:15,788 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.080E-02 	 Total distance: 5.080E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([174], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:12:15,926 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.637E-01 	 Total distance: 3.145E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([103], dtype=int64), array([[False]])]] 	 class: [4 8]
10:12:16,127 root DEBUG Side: OFF	 Angle(dx0, dx): 0.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.923E-02 	 Total distance: 4.137E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([197], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:12:16,353 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.481E-02 	 Total distance: 4.685E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([43], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:12:16,353 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:16,354 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -19.66 	 cIDON = [4 8], cIDOFF = [4 8]
10:12:16,354 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:16,354 root DEBUG dOFF/dON = 0.7
10:12:16,354 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.41953647303527, 'dON1': 0.6977821518118905, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.6977821518118905, 'nTON': 1, 'dON': 0.6977821518118905, 'dxOFFAngle': 87.6068321583695, 'dOFF1': 0.46848769262993106, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.46848769262993106, 'nTOFF': 1, 'dOFF': 0.46848769262993106, 'SUCCESS': False}
10:12:16,362 root DEBUG 

=================== Experiment ID #321 	 Dual Point ID: 323 ===================
10:12:16,369 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.672E-08|<1.000E-06)
10:12:16,369 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:16,601 root DEBUG Side: ON	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.486E-02 	 Total distance: 1.486E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([130], dtype=int64), array([[False]])]] 	 class: [3 4]
10:12:16,831 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.817E-01 	 Total distance: 3.817E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([222], dtype=int64), array([[False]])]] 	 class: [3 4]
10:12:17,37 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.038E-01 	 Total distance: 4.855E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([5], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:12:17,240 root DEBUG Side: OFF	 Angle(dx0, dx): 0.95 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.090E-02 	 Total distance: 5.364E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([244], dtype=int64), array([[False]])]] 	 class: [3 4]
10:12:17,241 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:17,241 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 94.61 	 cIDON = [3 4], cIDOFF = [3 4]
10:12:17,241 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:17,241 root DEBUG dOFF/dON = 36.1
10:12:17,241 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.92699691617238, 'dON1': 0.01485502125893445, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.01485502125893445, 'nTON': 1, 'dON': 0.01485502125893445, 'dxOFFAngle': 89.9868169034374, 'dOFF1': 0.5363900898257399, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.5363900898257399, 'nTOFF': 1, 'dOFF': 0.5363900898257399, 'SUCCESS': True}
10:12:17,248 root DEBUG 

=================== Experiment ID #322 	 Dual Point ID: 324 ===================
10:12:17,254 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.511E-09|<1.000E-06)
10:12:17,255 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:17,461 root DEBUG Side: ON	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.431E-01 	 Total distance: 1.431E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([209], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:12:17,686 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.268E-02 	 Total distance: 3.268E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([127], dtype=int64), array([[False]])]] 	 class: [3 7]
10:12:17,813 root DEBUG Side: OFF	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.421E-01 	 Total distance: 1.747E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([120], dtype=int64), array([[False]])]] 	 class: [3 7]
10:12:17,813 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:17,813 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 9.96 	 cIDON = [3 7], cIDOFF = [3 7]
10:12:17,813 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:17,813 root DEBUG dOFF/dON = 1.2
10:12:17,813 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.34063389615991, 'dON1': 0.1430780358982345, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.1430780358982345, 'nTON': 1, 'dON': 0.1430780358982345, 'dxOFFAngle': 88.42733429820855, 'dOFF1': 0.17474240830107196, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.17474240830107196, 'nTOFF': 1, 'dOFF': 0.17474240830107196, 'SUCCESS': True}
10:12:17,821 root DEBUG 

=================== Experiment ID #323 	 Dual Point ID: 325 ===================
10:12:17,832 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.550E-09|<1.000E-06)
10:12:17,832 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:18,135 root DEBUG Side: ON	 Angle(dx0, dx): 0.89 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.126E-01 	 Total distance: 6.126E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([41], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:12:18,412 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.926E-02 	 Total distance: 1.926E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([158], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:12:18,591 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.382E-01 	 Total distance: 3.575E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([47], dtype=int64), array([[False]])]] 	 class: [2 9]
10:12:18,591 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:18,591 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -26.30 	 cIDON = [2 9], cIDOFF = [2 9]
10:12:18,591 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:18,591 root DEBUG dOFF/dON = 0.6
10:12:18,591 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.56400934833098, 'dON1': 0.6126060730462254, 'cIDON1': array([2, 9], dtype=int64), 'dON_patch_1': 0.6126060730462254, 'nTON': 1, 'dON': 0.6126060730462254, 'dxOFFAngle': 88.143694714155, 'dOFF1': 0.357495947561677, 'cIDOFF1': array([2, 9], dtype=int64), 'dOFF_patch_1': 0.357495947561677, 'nTOFF': 1, 'dOFF': 0.357495947561677, 'SUCCESS': False}
10:12:18,601 root DEBUG 

=================== Experiment ID #324 	 Dual Point ID: 326 ===================
10:12:18,610 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.105E-08|<1.000E-06)
10:12:18,610 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:18,897 root DEBUG Side: ON	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.532E-02 	 Total distance: 6.532E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([22], dtype=int64), array([[False]])]] 	 class: [0 1]
10:12:19,159 root DEBUG Side: OFF	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.741E-02 	 Total distance: 4.741E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([122], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:12:19,159 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:19,160 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -15.89 	 cIDON = [0 1], cIDOFF = [0 1]
10:12:19,160 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:19,160 root DEBUG dOFF/dON = 0.7
10:12:19,160 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.1872796552362, 'dON1': 0.06532059469637669, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.06532059469637669, 'nTON': 1, 'dON': 0.06532059469637669, 'dxOFFAngle': 89.10883216668141, 'dOFF1': 0.04740780628271747, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.04740780628271747, 'nTOFF': 1, 'dOFF': 0.04740780628271747, 'SUCCESS': False}
10:12:19,170 root DEBUG 

=================== Experiment ID #325 	 Dual Point ID: 327 ===================
10:12:19,179 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.084E-08|<1.000E-06)
10:12:19,179 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:19,421 root DEBUG Side: ON	 Angle(dx0, dx): 0.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.147E+00 	 Total distance: 1.147E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([22], dtype=int64), array([[False]])]] 	 class: [4 5]
10:12:19,708 root DEBUG Side: OFF	 Angle(dx0, dx): 0.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.857E-01 	 Total distance: 4.857E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([225], dtype=int64), array([[False]])]] 	 class: [4 5]
10:12:19,709 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:19,709 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -40.52 	 cIDON = [4 5], cIDOFF = [4 5]
10:12:19,709 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:19,709 root DEBUG dOFF/dON = 0.4
10:12:19,709 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.60103306478743, 'dON1': 1.1474287572919062, 'cIDON1': array([4, 5], dtype=int64), 'dON_patch_1': 1.1474287572919062, 'nTON': 1, 'dON': 1.1474287572919062, 'dxOFFAngle': 89.39723169356012, 'dOFF1': 0.48570507347159025, 'cIDOFF1': array([4, 5], dtype=int64), 'dOFF_patch_1': 0.48570507347159025, 'nTOFF': 1, 'dOFF': 0.48570507347159025, 'SUCCESS': False}
10:12:19,717 root DEBUG 

=================== Experiment ID #326 	 Dual Point ID: 328 ===================
10:12:19,726 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.312E-08|<1.000E-06)
10:12:19,726 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:20,31 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.754E-02 	 Total distance: 3.754E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([247], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:12:20,165 root DEBUG Side: ON	 Angle(dx0, dx): 0.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.354E-02 	 Total distance: 8.108E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([80], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:12:20,476 root DEBUG Side: OFF	 Angle(dx0, dx): 0.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.881E-01 	 Total distance: 1.881E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([15], dtype=int64), array([[False]])]] 	 class: [6 9]
10:12:20,476 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:20,476 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 39.76 	 cIDON = [6 9], cIDOFF = [6 9]
10:12:20,476 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:20,476 root DEBUG dOFF/dON = 2.3
10:12:20,477 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.85643293519342, 'dON1': 0.08107902678433736, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.08107902678433736, 'nTON': 1, 'dON': 0.08107902678433736, 'dxOFFAngle': 89.07008980087839, 'dOFF1': 0.18811180129697377, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.18811180129697377, 'nTOFF': 1, 'dOFF': 0.18811180129697377, 'SUCCESS': True}
10:12:20,488 root DEBUG 

=================== Experiment ID #327 	 Dual Point ID: 329 ===================
10:12:20,497 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.985E-08|<1.000E-06)
10:12:20,498 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:20,802 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.012E-02 	 Total distance: 8.012E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([206], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:12:21,93 root DEBUG Side: OFF	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.248E-01 	 Total distance: 2.248E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([74], dtype=int64), array([[False]])]] 	 class: [5 7]
10:12:21,94 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:21,94 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 47.46 	 cIDON = [5 7], cIDOFF = [5 7]
10:12:21,94 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:21,94 root DEBUG dOFF/dON = 2.8
10:12:21,94 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.30492267258802, 'dON1': 0.08011613182824442, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.08011613182824442, 'nTON': 1, 'dON': 0.08011613182824442, 'dxOFFAngle': 87.9789122015225, 'dOFF1': 0.22484531892187584, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.22484531892187584, 'nTOFF': 1, 'dOFF': 0.22484531892187584, 'SUCCESS': True}
10:12:21,106 root DEBUG 

=================== Experiment ID #328 	 Dual Point ID: 330 ===================
10:12:21,115 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.441E-08|<1.000E-06)
10:12:21,115 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:21,470 root DEBUG Side: ON	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.397E-01 	 Total distance: 2.397E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([234], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:12:21,766 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.133E-03 	 Total distance: 3.133E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([209], dtype=int64), array([[False]])]] 	 class: [3 7]
10:12:21,967 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.810E-01 	 Total distance: 4.841E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([247], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:12:21,968 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:21,968 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 33.77 	 cIDON = [3 7], cIDOFF = [3 7]
10:12:21,968 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:21,968 root DEBUG dOFF/dON = 2.0
10:12:21,968 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.5506119907297, 'dON1': 0.2396629957517512, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.2396629957517512, 'nTON': 1, 'dON': 0.2396629957517512, 'dxOFFAngle': 89.1622193756417, 'dOFF1': 0.48411442778565306, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.48411442778565306, 'nTOFF': 1, 'dOFF': 0.48411442778565306, 'SUCCESS': True}
10:12:21,980 root DEBUG 

=================== Experiment ID #329 	 Dual Point ID: 331 ===================
10:12:21,990 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.530E-08|<1.000E-06)
10:12:21,990 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:22,249 root DEBUG Side: ON	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.908E-03 	 Total distance: 4.908E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([21], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:12:22,500 root DEBUG Side: OFF	 Angle(dx0, dx): 1.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.710E-02 	 Total distance: 3.710E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([179], dtype=int64), array([[False]])]] 	 class: [3 4]
10:12:22,500 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:22,500 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 76.63 	 cIDON = [3 4], cIDOFF = [3 4]
10:12:22,501 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:22,501 root DEBUG dOFF/dON = 7.6
10:12:22,501 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.4346484391101, 'dON1': 0.004907561563296681, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.004907561563296681, 'nTON': 1, 'dON': 0.004907561563296681, 'dxOFFAngle': 87.36166511338104, 'dOFF1': 0.037096817365006675, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.037096817365006675, 'nTOFF': 1, 'dOFF': 0.037096817365006675, 'SUCCESS': True}
10:12:22,512 root DEBUG 

=================== Experiment ID #330 	 Dual Point ID: 332 ===================
10:12:22,520 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.849E-09|<1.000E-06)
10:12:22,520 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:22,842 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.731E-01 	 Total distance: 4.731E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([46], dtype=int64), array([[False]])]] 	 class: [3 6]
10:12:23,152 root DEBUG Side: OFF	 Angle(dx0, dx): 1.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.395E-01 	 Total distance: 1.395E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([157], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:12:23,152 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:23,152 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -54.46 	 cIDON = [3 6], cIDOFF = [3 6]
10:12:23,153 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:23,153 root DEBUG dOFF/dON = 0.3
10:12:23,153 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.48119007410695, 'dON1': 0.4731194275313581, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.4731194275313581, 'nTON': 1, 'dON': 0.4731194275313581, 'dxOFFAngle': 89.29364165707179, 'dOFF1': 0.13949873347326547, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.13949873347326547, 'nTOFF': 1, 'dOFF': 0.13949873347326547, 'SUCCESS': False}
10:12:23,164 root DEBUG 

=================== Experiment ID #331 	 Dual Point ID: 333 ===================
10:12:23,173 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.621E-08|<1.000E-06)
10:12:23,173 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:23,448 root DEBUG Side: ON	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.694E-01 	 Total distance: 2.694E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([204], dtype=int64), array([[False]])]] 	 class: [8 9]
10:12:23,697 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.612E-01 	 Total distance: 6.612E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([197], dtype=int64), array([[False]])]] 	 class: [8 9]
10:12:23,697 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:23,697 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 42.11 	 cIDON = [8 9], cIDOFF = [8 9]
10:12:23,697 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:23,697 root DEBUG dOFF/dON = 2.5
10:12:23,697 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.254148888407, 'dON1': 0.26936883850040644, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.26936883850040644, 'nTON': 1, 'dON': 0.26936883850040644, 'dxOFFAngle': 88.34783887533685, 'dOFF1': 0.6611857910377351, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.6611857910377351, 'nTOFF': 1, 'dOFF': 0.6611857910377351, 'SUCCESS': True}
10:12:23,705 root DEBUG 

=================== Experiment ID #332 	 Dual Point ID: 334 ===================
10:12:23,713 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.562E-08|<1.000E-06)
10:12:23,713 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:23,970 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.470E-02 	 Total distance: 5.470E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([161], dtype=int64), array([[False]])]] 	 class: [3 5]
10:12:24,171 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.815E-01 	 Total distance: 1.815E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([171], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:12:24,329 root DEBUG Side: OFF	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.088E-01 	 Total distance: 3.903E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([16], dtype=int64), array([[False]])]] 	 class: [3 5]
10:12:24,329 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:24,330 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 75.42 	 cIDON = [3 5], cIDOFF = [3 5]
10:12:24,330 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:24,330 root DEBUG dOFF/dON = 7.1
10:12:24,330 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.45044844400289, 'dON1': 0.054702316865816066, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.054702316865816066, 'nTON': 1, 'dON': 0.054702316865816066, 'dxOFFAngle': 89.48935277345883, 'dOFF1': 0.3903359777346146, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.3903359777346146, 'nTOFF': 1, 'dOFF': 0.3903359777346146, 'SUCCESS': True}
10:12:24,339 root DEBUG 

=================== Experiment ID #333 	 Dual Point ID: 335 ===================
10:12:24,351 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.288E-09|<1.000E-06)
10:12:24,351 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:24,646 root DEBUG Side: ON	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.227E-02 	 Total distance: 5.227E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([43], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:12:24,897 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.370E-02 	 Total distance: 6.370E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([168], dtype=int64), array([[False]])]] 	 class: [5 6]
10:12:24,897 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:24,897 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 9.85 	 cIDON = [5 6], cIDOFF = [5 6]
10:12:24,897 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:24,897 root DEBUG dOFF/dON = 1.2
10:12:24,898 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.44747036680107, 'dON1': 0.0522710968685843, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.0522710968685843, 'nTON': 1, 'dON': 0.0522710968685843, 'dxOFFAngle': 89.61472855252673, 'dOFF1': 0.06369614919977602, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.06369614919977602, 'nTOFF': 1, 'dOFF': 0.06369614919977602, 'SUCCESS': True}
10:12:24,905 root DEBUG 

=================== Experiment ID #334 	 Dual Point ID: 336 ===================
10:12:24,913 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.946E-08|<1.000E-06)
10:12:24,913 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:25,221 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.497E+00 	 Total distance: 1.497E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([166], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:12:25,394 root DEBUG Side: ON	 Angle(dx0, dx): 0.86 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.565E-02 	 Total distance: 1.523E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([28], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:12:25,642 root DEBUG Side: OFF	 Angle(dx0, dx): 0.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.744E-01 	 Total distance: 4.744E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([49], dtype=int64), array([[False]])]] 	 class: [2 6]
10:12:25,643 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:25,643 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -52.50 	 cIDON = [2 6], cIDOFF = [2 6]
10:12:25,643 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:25,643 root DEBUG dOFF/dON = 0.3
10:12:25,643 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.49148208898997, 'dON1': 1.5230496398949582, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 1.5230496398949582, 'nTON': 1, 'dON': 1.5230496398949582, 'dxOFFAngle': 87.02198103248278, 'dOFF1': 0.4744083260331255, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.4744083260331255, 'nTOFF': 1, 'dOFF': 0.4744083260331255, 'SUCCESS': False}
10:12:25,654 root DEBUG 

=================== Experiment ID #335 	 Dual Point ID: 337 ===================
10:12:25,663 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.034E-08|<1.000E-06)
10:12:25,663 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:25,986 root DEBUG Side: ON	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.781E-02 	 Total distance: 9.781E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([145], dtype=int64), array([[False]])]] 	 class: [3 5]
10:12:26,238 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.432E-02 	 Total distance: 2.432E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([71], dtype=int64), array([[False]])]] 	 class: [3 5]
10:12:26,238 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:26,238 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -60.17 	 cIDON = [3 5], cIDOFF = [3 5]
10:12:26,238 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:26,238 root DEBUG dOFF/dON = 0.2
10:12:26,238 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.20742133772366, 'dON1': 0.0978062768962527, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.0978062768962527, 'nTON': 1, 'dON': 0.0978062768962527, 'dxOFFAngle': 88.96898279251745, 'dOFF1': 0.024318163955715757, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.024318163955715757, 'nTOFF': 1, 'dOFF': 0.024318163955715757, 'SUCCESS': False}
10:12:26,245 root DEBUG 

=================== Experiment ID #336 	 Dual Point ID: 338 ===================
10:12:26,252 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.266E-09|<1.000E-06)
10:12:26,252 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:26,471 root DEBUG Side: ON	 Angle(dx0, dx): 1.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.439E-05 	 Total distance: 7.439E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 2]
10:12:26,777 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.804E-02 	 Total distance: 2.804E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([202], dtype=int64), array([[False]])]] 	 class: [0 2]
10:12:26,777 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:26,777 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.47 	 cIDON = [1 2], cIDOFF = [0 2]
10:12:26,777 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:26,777 root DEBUG dOFF/dON = 376.8
10:12:26,778 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.56502182204474, 'dON1': 7.439428052914084e-05, 'cIDON1': array([1, 2], dtype=int64), 'dON_patch_1': 7.439428052914084e-05, 'nTON': 1, 'dON': 7.439428052914084e-05, 'dxOFFAngle': 86.9590763128286, 'dOFF1': 0.028035011330289156, 'cIDOFF1': array([0, 2], dtype=int64), 'dOFF_patch_1': 0.028035011330289156, 'nTOFF': 1, 'dOFF': 0.028035011330289156, 'SUCCESS': True}
10:12:26,788 root DEBUG 

=================== Experiment ID #337 	 Dual Point ID: 339 ===================
10:12:26,796 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.141E-09|<1.000E-06)
10:12:26,796 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:27,71 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.296E-01 	 Total distance: 2.296E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([30], dtype=int64), array([[False]])]] 	 class: [3 7]
10:12:27,381 root DEBUG Side: OFF	 Angle(dx0, dx): 0.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.304E-02 	 Total distance: 9.304E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([7], dtype=int64), array([[False]])]] 	 class: [3 7]
10:12:27,381 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:27,381 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -42.32 	 cIDON = [3 7], cIDOFF = [3 7]
10:12:27,382 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:27,382 root DEBUG dOFF/dON = 0.4
10:12:27,382 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.0557922569233, 'dON1': 0.22955638723504398, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.22955638723504398, 'nTON': 1, 'dON': 0.22955638723504398, 'dxOFFAngle': 88.50973890289097, 'dOFF1': 0.09304038120776406, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.09304038120776406, 'nTOFF': 1, 'dOFF': 0.09304038120776406, 'SUCCESS': False}
10:12:27,390 root DEBUG 

=================== Experiment ID #338 	 Dual Point ID: 340 ===================
10:12:27,398 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.199E-08|<1.000E-06)
10:12:27,398 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:27,613 root DEBUG Side: ON	 Angle(dx0, dx): 0.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.778E-01 	 Total distance: 1.778E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([64], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:12:27,887 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.967E-01 	 Total distance: 2.967E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([17], dtype=int64), array([[False]])]] 	 class: [2 5]
10:12:27,887 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:27,887 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 25.07 	 cIDON = [2 5], cIDOFF = [2 5]
10:12:27,887 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:27,887 root DEBUG dOFF/dON = 1.7
10:12:27,887 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.109586164898, 'dON1': 0.17776607776553682, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.17776607776553682, 'nTON': 1, 'dON': 0.17776607776553682, 'dxOFFAngle': 89.17416264328949, 'dOFF1': 0.29672076965951316, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.29672076965951316, 'nTOFF': 1, 'dOFF': 0.29672076965951316, 'SUCCESS': True}
10:12:27,894 root DEBUG 

=================== Experiment ID #339 	 Dual Point ID: 341 ===================
10:12:27,900 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.126E-08|<1.000E-06)
10:12:27,900 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:28,199 root DEBUG Side: ON	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.596E-01 	 Total distance: 1.596E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([181], dtype=int64), array([[False]])]] 	 class: [2 4]
10:12:28,471 root DEBUG Side: OFF	 Angle(dx0, dx): 1.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.502E-01 	 Total distance: 1.502E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([123], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:12:28,472 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:28,472 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -3.03 	 cIDON = [2 4], cIDOFF = [2 4]
10:12:28,472 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:28,472 root DEBUG dOFF/dON = 0.9
10:12:28,472 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.82670345738369, 'dON1': 0.15957193164138278, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.15957193164138278, 'nTON': 1, 'dON': 0.15957193164138278, 'dxOFFAngle': 86.9748067700307, 'dOFF1': 0.1501862010118363, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.1501862010118363, 'nTOFF': 1, 'dOFF': 0.1501862010118363, 'SUCCESS': False}
10:12:28,483 root DEBUG 

=================== Experiment ID #340 	 Dual Point ID: 342 ===================
10:12:28,494 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.191E-09|<1.000E-06)
10:12:28,494 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:28,766 root DEBUG Side: ON	 Angle(dx0, dx): 0.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.503E-01 	 Total distance: 1.503E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([247], dtype=int64), array([[False]])]] 	 class: [4 7]
10:12:29,52 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.927E-01 	 Total distance: 1.927E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([239], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:12:29,192 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.257E-01 	 Total distance: 3.184E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([237], dtype=int64), array([[False]])]] 	 class: [4 7]
10:12:29,192 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:29,192 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 35.86 	 cIDON = [4 7], cIDOFF = [4 7]
10:12:29,192 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:29,192 root DEBUG dOFF/dON = 2.1
10:12:29,192 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.10416759557776, 'dON1': 0.1502988073708417, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.1502988073708417, 'nTON': 1, 'dON': 0.1502988073708417, 'dxOFFAngle': 89.20752423745226, 'dOFF1': 0.31839587941590064, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.31839587941590064, 'nTOFF': 1, 'dOFF': 0.31839587941590064, 'SUCCESS': True}
10:12:29,199 root DEBUG 

=================== Experiment ID #341 	 Dual Point ID: 343 ===================
10:12:29,207 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.627E-08|<1.000E-06)
10:12:29,208 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:29,449 root DEBUG Side: ON	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.012E-01 	 Total distance: 3.012E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([5], dtype=int64), array([[False]])]] 	 class: [5 7]
10:12:29,701 root DEBUG Side: OFF	 Angle(dx0, dx): 2.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.194E-02 	 Total distance: 9.194E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([7, 8], dtype=int64), array([[0.],
       [1.]])]] 	 class: [5 8]
10:12:29,701 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:29,701 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -53.23 	 cIDON = [5 7], cIDOFF = [5 7]
10:12:29,701 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:29,701 root DEBUG dOFF/dON = 0.3
10:12:29,701 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.77495506061216, 'dON1': 0.30124221316593924, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.30124221316593924, 'nTON': 1, 'dON': 0.30124221316593924, 'dxOFFAngle': 88.02853954113552, 'dOFF1': 0.09193788544853052, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.09193788544853052, 'nTOFF': 1, 'dOFF': 0.09193788544853052, 'SUCCESS': False}
10:12:29,708 root DEBUG 

=================== Experiment ID #342 	 Dual Point ID: 344 ===================
10:12:29,716 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.285E-09|<1.000E-06)
10:12:29,716 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:29,932 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.746E-01 	 Total distance: 1.746E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([214], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:12:30,246 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.805E-01 	 Total distance: 2.805E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([153], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:12:30,246 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:30,246 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 23.27 	 cIDON = [3 9], cIDOFF = [3 9]
10:12:30,246 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:30,246 root DEBUG dOFF/dON = 1.6
10:12:30,247 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.02931193931161, 'dON1': 0.1745959271005701, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.1745959271005701, 'nTON': 1, 'dON': 0.1745959271005701, 'dxOFFAngle': 89.05540734892233, 'dOFF1': 0.2805190653904576, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.2805190653904576, 'nTOFF': 1, 'dOFF': 0.2805190653904576, 'SUCCESS': True}
10:12:30,256 root DEBUG 

=================== Experiment ID #343 	 Dual Point ID: 345 ===================
10:12:30,263 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.219E-08|<1.000E-06)
10:12:30,263 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:30,514 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.274E-02 	 Total distance: 1.274E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([159], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:12:30,746 root DEBUG Side: ON	 Angle(dx0, dx): 0.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.988E-01 	 Total distance: 3.115E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([33], dtype=int64), array([[False]])]] 	 class: [5 7]
10:12:31,78 root DEBUG Side: OFF	 Angle(dx0, dx): 0.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.005E-01 	 Total distance: 4.005E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([20], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:12:31,78 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:31,78 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 12.50 	 cIDON = [5 7], cIDOFF = [5 7]
10:12:31,79 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:31,79 root DEBUG dOFF/dON = 1.3
10:12:31,79 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.06634043955276, 'dON1': 0.31151313591031526, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.31151313591031526, 'nTON': 1, 'dON': 0.31151313591031526, 'dxOFFAngle': 86.85202468942235, 'dOFF1': 0.4004790355068471, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.4004790355068471, 'nTOFF': 1, 'dOFF': 0.4004790355068471, 'SUCCESS': True}
10:12:31,86 root DEBUG 

=================== Experiment ID #344 	 Dual Point ID: 346 ===================
10:12:31,96 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.534E-08|<1.000E-06)
10:12:31,96 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:31,337 root DEBUG Side: ON	 Angle(dx0, dx): 0.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.630E-01 	 Total distance: 6.630E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([248], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:12:31,596 root DEBUG Side: OFF	 Angle(dx0, dx): 1.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.908E-02 	 Total distance: 8.908E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([72], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:12:31,714 root DEBUG Side: OFF	 Angle(dx0, dx): 1.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.718E-03 	 Total distance: 9.280E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([53], dtype=int64), array([[False]])]] 	 class: [8 9]
10:12:31,715 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:31,715 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -75.44 	 cIDON = [8 9], cIDOFF = [8 9]
10:12:31,715 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:31,715 root DEBUG dOFF/dON = 0.1
10:12:31,715 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.46091544373688, 'dON1': 0.6629733874814574, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.6629733874814574, 'nTON': 1, 'dON': 0.6629733874814574, 'dxOFFAngle': 86.19315187098698, 'dOFF1': 0.0927966275943912, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.0927966275943912, 'nTOFF': 1, 'dOFF': 0.0927966275943912, 'SUCCESS': False}
10:12:31,721 root DEBUG 

=================== Experiment ID #345 	 Dual Point ID: 347 ===================
10:12:31,732 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.670E-09|<1.000E-06)
10:12:31,732 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:32,20 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.512E-01 	 Total distance: 7.512E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([4], dtype=int64), array([[False]])]] 	 class: [2 7]
10:12:32,318 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.174E-01 	 Total distance: 2.174E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([121], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:12:32,485 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.226E-01 	 Total distance: 3.400E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([189], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:12:32,485 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:32,485 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -37.68 	 cIDON = [2 7], cIDOFF = [2 7]
10:12:32,485 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:32,485 root DEBUG dOFF/dON = 0.5
10:12:32,485 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.92621805298388, 'dON1': 0.7512456334184335, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.7512456334184335, 'nTON': 1, 'dON': 0.7512456334184335, 'dxOFFAngle': 89.77571794449561, 'dOFF1': 0.34003133674906005, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.34003133674906005, 'nTOFF': 1, 'dOFF': 0.34003133674906005, 'SUCCESS': False}
10:12:32,497 root DEBUG 

=================== Experiment ID #346 	 Dual Point ID: 348 ===================
10:12:32,510 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.748E-08|<1.000E-06)
10:12:32,510 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:32,825 root DEBUG Side: ON	 Angle(dx0, dx): 0.98 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.385E-02 	 Total distance: 1.385E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([153], dtype=int64), array([[False]])]] 	 class: [5 6]
10:12:33,123 root DEBUG Side: OFF	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.528E-01 	 Total distance: 5.528E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([92], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:12:33,124 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:33,124 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 95.11 	 cIDON = [5 6], cIDOFF = [5 6]
10:12:33,124 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:33,124 root DEBUG dOFF/dON = 39.9
10:12:33,124 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.38395081355121, 'dON1': 0.013849325904602122, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.013849325904602122, 'nTON': 1, 'dON': 0.013849325904602122, 'dxOFFAngle': 89.55622229957413, 'dOFF1': 0.5528350361545129, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.5528350361545129, 'nTOFF': 1, 'dOFF': 0.5528350361545129, 'SUCCESS': True}
10:12:33,133 root DEBUG 

=================== Experiment ID #347 	 Dual Point ID: 349 ===================
10:12:33,139 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.641E-09|<1.000E-06)
10:12:33,139 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:33,425 root DEBUG Side: ON	 Angle(dx0, dx): 1.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.394E-01 	 Total distance: 1.394E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([182], dtype=int64), array([[False]])]] 	 class: [3 5]
10:12:33,700 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.725E-01 	 Total distance: 3.725E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([154], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:12:33,867 root DEBUG Side: OFF	 Angle(dx0, dx): 1.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.127E-02 	 Total distance: 3.838E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([52], dtype=int64), array([[False]])]] 	 class: [3 5]
10:12:33,868 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:33,868 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 46.72 	 cIDON = [3 5], cIDOFF = [3 5]
10:12:33,868 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:33,868 root DEBUG dOFF/dON = 2.8
10:12:33,868 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.74044059465855, 'dON1': 0.1393520715833131, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.1393520715833131, 'nTON': 1, 'dON': 0.1393520715833131, 'dxOFFAngle': 88.36534848185778, 'dOFF1': 0.38378066945192857, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.38378066945192857, 'nTOFF': 1, 'dOFF': 0.38378066945192857, 'SUCCESS': True}
10:12:33,876 root DEBUG 

=================== Experiment ID #348 	 Dual Point ID: 350 ===================
10:12:33,888 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.535E-08|<1.000E-06)
10:12:33,889 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:34,139 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.751E-01 	 Total distance: 2.751E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([144], dtype=int64), array([[False]])]] 	 class: [3 5]
10:12:34,285 root DEBUG Side: ON	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.234E+00 	 Total distance: 1.509E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([79], dtype=int64), array([[False]])]] 	 class: [3 5]
10:12:34,566 root DEBUG Side: OFF	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.492E+00 	 Total distance: 1.492E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([12], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:12:34,566 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:34,567 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -0.58 	 cIDON = [3 5], cIDOFF = [3 5]
10:12:34,567 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:34,567 root DEBUG dOFF/dON = 1.0
10:12:34,567 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.24337536334782, 'dON1': 1.5093894774530632, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 1.5093894774530632, 'nTON': 1, 'dON': 1.5093894774530632, 'dxOFFAngle': 89.38775308707099, 'dOFF1': 1.4919141108994316, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 1.4919141108994316, 'nTOFF': 1, 'dOFF': 1.4919141108994316, 'SUCCESS': False}
10:12:34,578 root DEBUG 

=================== Experiment ID #349 	 Dual Point ID: 351 ===================
10:12:34,588 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.917E-08|<1.000E-06)
10:12:34,588 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:34,797 root DEBUG Side: ON	 Angle(dx0, dx): 3.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.012E-05 	 Total distance: 1.012E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:12:35,69 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.161E-01 	 Total distance: 1.161E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([72], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:12:35,300 root DEBUG Side: OFF	 Angle(dx0, dx): 0.89 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.869E-02 	 Total distance: 1.548E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([5], dtype=int64), array([[False]])]] 	 class: [0 8]
10:12:35,300 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:35,300 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.99 	 cIDON = [1 8], cIDOFF = [0 8]
10:12:35,300 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:35,300 root DEBUG dOFF/dON = 15297.2
10:12:35,300 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.06830429059528, 'dON1': 1.0117488888687442e-05, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 1.0117488888687442e-05, 'nTON': 1, 'dON': 1.0117488888687442e-05, 'dxOFFAngle': 87.79967130957762, 'dOFF1': 0.15476942743852, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.15476942743852, 'nTOFF': 1, 'dOFF': 0.15476942743852, 'SUCCESS': True}
10:12:35,312 root DEBUG 

=================== Experiment ID #350 	 Dual Point ID: 352 ===================
10:12:35,326 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.134E-09|<1.000E-06)
10:12:35,326 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:35,649 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.213E-01 	 Total distance: 5.213E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([50], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:12:35,908 root DEBUG Side: OFF	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.092E-03 	 Total distance: 5.092E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([30], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:12:35,908 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:35,909 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -98.07 	 cIDON = [3 5], cIDOFF = [3 5]
10:12:35,909 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:35,909 root DEBUG dOFF/dON = 0.0
10:12:35,909 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.70520849881609, 'dON1': 0.5213258707042564, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.5213258707042564, 'nTON': 1, 'dON': 0.5213258707042564, 'dxOFFAngle': 89.65419053352163, 'dOFF1': 0.00509235299038723, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.00509235299038723, 'nTOFF': 1, 'dOFF': 0.00509235299038723, 'SUCCESS': False}
10:12:35,918 root DEBUG 

=================== Experiment ID #351 	 Dual Point ID: 353 ===================
10:12:35,928 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.211E-10|<1.000E-06)
10:12:35,928 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:36,202 root DEBUG Side: ON	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.486E-01 	 Total distance: 1.486E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([248], dtype=int64), array([[False]])]] 	 class: [0 1]
10:12:36,474 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.123E-01 	 Total distance: 1.123E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([109], dtype=int64), array([[False]])]] 	 class: [0 1]
10:12:36,755 root DEBUG Side: OFF	 Angle(dx0, dx): 0.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.459E-02 	 Total distance: 1.469E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([5], dtype=int64), array([[False]])]] 	 class: [0 1]
10:12:36,756 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:36,756 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -0.57 	 cIDON = [0 1], cIDOFF = [0 1]
10:12:36,756 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:36,757 root DEBUG dOFF/dON = 1.0
10:12:36,757 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.99779478590631, 'dON1': 0.14860621172392216, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.14860621172392216, 'nTON': 1, 'dON': 0.14860621172392216, 'dxOFFAngle': 87.83932216498233, 'dOFF1': 0.14692062147618376, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.14692062147618376, 'nTOFF': 1, 'dOFF': 0.14692062147618376, 'SUCCESS': False}
10:12:36,778 root DEBUG 

=================== Experiment ID #352 	 Dual Point ID: 354 ===================
10:12:36,788 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.919E-08|<1.000E-06)
10:12:36,788 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:37,134 root DEBUG Side: ON	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.666E-01 	 Total distance: 5.666E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([211], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:12:37,359 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.123E+00 	 Total distance: 1.123E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([197], dtype=int64), array([[False]])]] 	 class: [0 1]
10:12:37,360 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:37,360 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 32.92 	 cIDON = [0 1], cIDOFF = [0 1]
10:12:37,360 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:37,360 root DEBUG dOFF/dON = 2.0
10:12:37,360 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.28210386378422, 'dON1': 0.5665842158326759, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.5665842158326759, 'nTON': 1, 'dON': 0.5665842158326759, 'dxOFFAngle': 88.23528710089526, 'dOFF1': 1.1226141087436252, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 1.1226141087436252, 'nTOFF': 1, 'dOFF': 1.1226141087436252, 'SUCCESS': True}
10:12:37,366 root DEBUG 

=================== Experiment ID #353 	 Dual Point ID: 355 ===================
10:12:37,376 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.415E-09|<1.000E-06)
10:12:37,377 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:37,679 root DEBUG Side: ON	 Angle(dx0, dx): 0.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.660E-02 	 Total distance: 1.660E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([14], dtype=int64), array([[False]])]] 	 class: [2 6]
10:12:37,913 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.578E-01 	 Total distance: 3.578E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([82], dtype=int64), array([[False]])]] 	 class: [2 6]
10:12:38,112 root DEBUG Side: OFF	 Angle(dx0, dx): 0.97 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.537E-02 	 Total distance: 4.132E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([179], dtype=int64), array([[False]])]] 	 class: [2 6]
10:12:38,112 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:38,112 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 92.28 	 cIDON = [2 6], cIDOFF = [2 6]
10:12:38,113 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:38,113 root DEBUG dOFF/dON = 24.9
10:12:38,113 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.12710173300849, 'dON1': 0.016596840491388463, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.016596840491388463, 'nTON': 1, 'dON': 0.016596840491388463, 'dxOFFAngle': 86.93621696003315, 'dOFF1': 0.4132180530384385, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.4132180530384385, 'nTOFF': 1, 'dOFF': 0.4132180530384385, 'SUCCESS': True}
10:12:38,128 root DEBUG 

=================== Experiment ID #354 	 Dual Point ID: 356 ===================
10:12:38,136 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.876E-09|<1.000E-06)
10:12:38,136 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:38,343 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.731E-02 	 Total distance: 1.731E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([237], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:12:38,537 root DEBUG Side: ON	 Angle(dx0, dx): 0.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.683E-01 	 Total distance: 1.856E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([54], dtype=int64), array([[False]])]] 	 class: [2 4]
10:12:38,839 root DEBUG Side: OFF	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.825E-01 	 Total distance: 4.825E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([132], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:12:38,839 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:38,840 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 44.44 	 cIDON = [2 4], cIDOFF = [2 4]
10:12:38,840 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:38,840 root DEBUG dOFF/dON = 2.6
10:12:38,840 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.9961047432137, 'dON1': 0.1855838676714644, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.1855838676714644, 'nTON': 1, 'dON': 0.1855838676714644, 'dxOFFAngle': 88.83736433752932, 'dOFF1': 0.48247544933174835, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.48247544933174835, 'nTOFF': 1, 'dOFF': 0.48247544933174835, 'SUCCESS': True}
10:12:38,854 root DEBUG 

=================== Experiment ID #355 	 Dual Point ID: 357 ===================
10:12:38,865 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.865E-08|<1.000E-06)
10:12:38,865 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:39,207 root DEBUG Side: ON	 Angle(dx0, dx): 0.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.987E-02 	 Total distance: 7.987E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([5], dtype=int64), array([[False]])]] 	 class: [2 3]
10:12:39,531 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.215E-02 	 Total distance: 4.215E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([106], dtype=int64), array([[False]])]] 	 class: [2 3]
10:12:39,531 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:39,531 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -30.92 	 cIDON = [2 3], cIDOFF = [2 3]
10:12:39,531 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:39,532 root DEBUG dOFF/dON = 0.5
10:12:39,532 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.71927279862352, 'dON1': 0.079870785878078, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.079870785878078, 'nTON': 1, 'dON': 0.079870785878078, 'dxOFFAngle': 89.42333422632736, 'dOFF1': 0.04214756366297026, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.04214756366297026, 'nTOFF': 1, 'dOFF': 0.04214756366297026, 'SUCCESS': False}
10:12:39,542 root DEBUG 

=================== Experiment ID #356 	 Dual Point ID: 358 ===================
10:12:39,552 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.290E-08|<1.000E-06)
10:12:39,552 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:39,777 root DEBUG Side: ON	 Angle(dx0, dx): 0.78 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.210E-07 	 Total distance: 7.210E-07 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 8]
10:12:39,996 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.575E-01 	 Total distance: 1.575E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([5], dtype=int64), array([[False]])]] 	 class: [1 8]
10:12:40,155 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.223E-01 	 Total distance: 2.797E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([110], dtype=int64), array([[False]])]] 	 class: [1 8]
10:12:40,445 root DEBUG Side: OFF	 Angle(dx0, dx): 0.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.357E-01 	 Total distance: 2.357E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([8], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:12:40,446 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:40,446 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -8.54 	 cIDON = [1 8], cIDOFF = [0 8]
10:12:40,446 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:40,446 root DEBUG dOFF/dON = 0.8
10:12:40,446 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.72311403662269, 'dON1': 0.27973959998762143, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 0.27973959998762143, 'nTON': 1, 'dON': 0.27973959998762143, 'dxOFFAngle': 89.84021858839004, 'dOFF1': 0.23571063374197973, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.23571063374197973, 'nTOFF': 1, 'dOFF': 0.23571063374197973, 'SUCCESS': False}
10:12:40,452 root DEBUG 

=================== Experiment ID #357 	 Dual Point ID: 359 ===================
10:12:40,460 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.699E-09|<1.000E-06)
10:12:40,461 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:40,679 root DEBUG Side: ON	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.740E-01 	 Total distance: 1.740E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([35], dtype=int64), array([[False]])]] 	 class: [4 7]
10:12:40,826 root DEBUG Side: ON	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.444E-06 	 Total distance: 1.740E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([35], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:12:40,965 root DEBUG Side: ON	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.217E-07 	 Total distance: 1.740E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([35], dtype=int64), array([[False]])]] 	 class: [4 7]
10:12:41,65 root DEBUG Side: ON	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.609E-06 	 Total distance: 1.740E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([35], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:12:41,205 root DEBUG Side: ON	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.217E-07 	 Total distance: 1.740E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([35], dtype=int64), array([[False]])]] 	 class: [4 7]
10:12:41,365 root DEBUG Side: ON	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.331E-06 	 Total distance: 1.740E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([35], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:12:41,535 root DEBUG Side: ON	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.217E-07 	 Total distance: 1.740E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([35], dtype=int64), array([[False]])]] 	 class: [4 7]
10:12:41,710 root DEBUG Side: ON	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.609E-06 	 Total distance: 1.740E-01 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([35], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:12:41,715 root DEBUG Got stuck in too many past-layer relus.
10:12:41,817 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:12:41,818 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:12:41,819 root DEBUG 

=================== Experiment ID #357 	 Dual Point ID: 360 ===================
10:12:41,832 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.345E-09|<1.000E-06)
10:12:41,832 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:42,188 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.040E-02 	 Total distance: 3.040E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([217], dtype=int64), array([[False]])]] 	 class: [3 5]
10:12:42,501 root DEBUG Side: OFF	 Angle(dx0, dx): 1.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.109E-01 	 Total distance: 3.109E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([3, 9], dtype=int64), array([[0.],
       [1.]])]] 	 class: [5 9]
10:12:42,501 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:42,501 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 82.19 	 cIDON = [3 5], cIDOFF = [3 5]
10:12:42,501 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:42,501 root DEBUG dOFF/dON = 10.2
10:12:42,501 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.65653566343063, 'dON1': 0.030404865508452696, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.030404865508452696, 'nTON': 1, 'dON': 0.030404865508452696, 'dxOFFAngle': 89.66808385087847, 'dOFF1': 0.31093734430462866, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.31093734430462866, 'nTOFF': 1, 'dOFF': 0.31093734430462866, 'SUCCESS': True}
10:12:42,510 root DEBUG 

=================== Experiment ID #358 	 Dual Point ID: 361 ===================
10:12:42,522 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.403E-08|<1.000E-06)
10:12:42,523 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:42,737 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.675E-01 	 Total distance: 1.675E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([44], dtype=int64), array([[False]])]] 	 class: [2 3]
10:12:43,19 root DEBUG Side: OFF	 Angle(dx0, dx): 0.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.852E-01 	 Total distance: 1.852E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([8], dtype=int64), array([[False]])]] 	 class: [2 3]
10:12:43,20 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:43,20 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 5.02 	 cIDON = [2 3], cIDOFF = [2 3]
10:12:43,20 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:43,20 root DEBUG dOFF/dON = 1.1
10:12:43,20 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.88119005353302, 'dON1': 0.16752415275904012, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.16752415275904012, 'nTON': 1, 'dON': 0.16752415275904012, 'dxOFFAngle': 86.7445039387587, 'dOFF1': 0.18524178386577764, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.18524178386577764, 'nTOFF': 1, 'dOFF': 0.18524178386577764, 'SUCCESS': True}
10:12:43,33 root DEBUG 

=================== Experiment ID #359 	 Dual Point ID: 362 ===================
10:12:43,42 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.846E-09|<1.000E-06)
10:12:43,43 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:43,316 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.976E-02 	 Total distance: 3.976E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([81], dtype=int64), array([[False]])]] 	 class: [5 7]
10:12:43,543 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.739E-02 	 Total distance: 3.739E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([57], dtype=int64), array([[False]])]] 	 class: [5 7]
10:12:43,686 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.947E-02 	 Total distance: 7.686E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([127], dtype=int64), array([[False]])]] 	 class: [5 7]
10:12:43,849 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.475E-01 	 Total distance: 2.243E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([239], dtype=int64), array([[False]])]] 	 class: [5 7]
10:12:43,849 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:43,849 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 69.89 	 cIDON = [5 7], cIDOFF = [5 7]
10:12:43,849 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:43,849 root DEBUG dOFF/dON = 5.6
10:12:43,849 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.81436631099419, 'dON1': 0.039761366833609604, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.039761366833609604, 'nTON': 1, 'dON': 0.039761366833609604, 'dxOFFAngle': 89.67339961313128, 'dOFF1': 0.22431067630889628, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.22431067630889628, 'nTOFF': 1, 'dOFF': 0.22431067630889628, 'SUCCESS': True}
10:12:43,859 root DEBUG 

=================== Experiment ID #360 	 Dual Point ID: 363 ===================
10:12:43,870 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.438E-08|<1.000E-06)
10:12:43,870 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:44,204 root DEBUG Side: ON	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.015E-01 	 Total distance: 1.015E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([21], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:12:44,395 root DEBUG Side: OFF	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.609E-01 	 Total distance: 4.609E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([77], dtype=int64), array([[False]])]] 	 class: [2 4]
10:12:44,395 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:44,395 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 63.90 	 cIDON = [2 4], cIDOFF = [2 4]
10:12:44,396 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:44,396 root DEBUG dOFF/dON = 4.5
10:12:44,396 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.54280711101836, 'dON1': 0.10152187401034886, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.10152187401034886, 'nTON': 1, 'dON': 0.10152187401034886, 'dxOFFAngle': 88.5196246832385, 'dOFF1': 0.4609129069339362, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.4609129069339362, 'nTOFF': 1, 'dOFF': 0.4609129069339362, 'SUCCESS': True}
10:12:44,403 root DEBUG 

=================== Experiment ID #361 	 Dual Point ID: 364 ===================
10:12:44,410 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.800E-09|<1.000E-06)
10:12:44,410 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:44,637 root DEBUG Side: ON	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.312E-03 	 Total distance: 8.312E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([13], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:12:44,901 root DEBUG Side: OFF	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.085E-01 	 Total distance: 1.085E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([180], dtype=int64), array([[False]])]] 	 class: [4 7]
10:12:44,901 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:44,902 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 85.77 	 cIDON = [4 7], cIDOFF = [4 7]
10:12:44,902 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:44,902 root DEBUG dOFF/dON = 13.1
10:12:44,902 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.76423284442033, 'dON1': 0.008311981963028082, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.008311981963028082, 'nTON': 1, 'dON': 0.008311981963028082, 'dxOFFAngle': 87.76538422077695, 'dOFF1': 0.10854776125706118, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.10854776125706118, 'nTOFF': 1, 'dOFF': 0.10854776125706118, 'SUCCESS': True}
10:12:44,915 root DEBUG 

=================== Experiment ID #362 	 Dual Point ID: 365 ===================
10:12:44,929 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.515E-08|<1.000E-06)
10:12:44,929 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:45,230 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.329E-02 	 Total distance: 4.329E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([53], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:12:45,482 root DEBUG Side: ON	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.495E-01 	 Total distance: 2.928E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([98], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:12:45,726 root DEBUG Side: OFF	 Angle(dx0, dx): 1.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.768E-06 	 Total distance: 5.768E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 9]
10:12:45,726 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:45,726 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -100.00 	 cIDON = [0 9], cIDOFF = [0 9]
10:12:45,727 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:45,727 root DEBUG dOFF/dON = 0.0
10:12:45,727 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.5997530150303, 'dON1': 0.2927999923239731, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.2927999923239731, 'nTON': 1, 'dON': 0.2927999923239731, 'dxOFFAngle': 89.13081262986435, 'dOFF1': 5.768479397789563e-06, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 5.768479397789563e-06, 'nTOFF': 1, 'dOFF': 5.768479397789563e-06, 'SUCCESS': False}
10:12:45,739 root DEBUG 

=================== Experiment ID #363 	 Dual Point ID: 366 ===================
10:12:45,748 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.906E-08|<1.000E-06)
10:12:45,749 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:45,957 root DEBUG Side: ON	 Angle(dx0, dx): 3.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.445E-06 	 Total distance: 1.445E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 2]
10:12:46,274 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.830E-01 	 Total distance: 9.830E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([214], dtype=int64), array([[False]])]] 	 class: [1 2]
10:12:46,471 root DEBUG Side: OFF	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.641E-01 	 Total distance: 1.547E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([100], dtype=int64), array([[ True]])]] 	 class: [1 2]
10:12:46,471 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:46,471 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [0 2], cIDOFF = [1 2]
10:12:46,471 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:46,472 root DEBUG dOFF/dON = 1070388.7
10:12:46,472 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.06843237323356, 'dON1': 1.445355333440835e-06, 'cIDON1': array([0, 2], dtype=int64), 'dON_patch_1': 1.445355333440835e-06, 'nTON': 1, 'dON': 1.445355333440835e-06, 'dxOFFAngle': 85.49683208464222, 'dOFF1': 1.5470919894813826, 'cIDOFF1': array([1, 2], dtype=int64), 'dOFF_patch_1': 1.5470919894813826, 'nTOFF': 1, 'dOFF': 1.5470919894813826, 'SUCCESS': True}
10:12:46,487 root DEBUG 

=================== Experiment ID #364 	 Dual Point ID: 367 ===================
10:12:46,495 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.064E-08|<1.000E-06)
10:12:46,495 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:46,856 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.124E-01 	 Total distance: 8.124E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([43], dtype=int64), array([[False]])]] 	 class: [6 9]
10:12:47,94 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.644E-02 	 Total distance: 3.644E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([79], dtype=int64), array([[False]])]] 	 class: [6 9]
10:12:47,317 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.048E-01 	 Total distance: 2.412E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([180], dtype=int64), array([[False]])]] 	 class: [6 9]
10:12:47,317 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:47,317 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -54.21 	 cIDON = [6 9], cIDOFF = [6 9]
10:12:47,318 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:47,318 root DEBUG dOFF/dON = 0.3
10:12:47,318 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.42318011980446, 'dON1': 0.8124336396029965, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.8124336396029965, 'nTON': 1, 'dON': 0.8124336396029965, 'dxOFFAngle': 86.42789563625222, 'dOFF1': 0.24121605757993375, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.24121605757993375, 'nTOFF': 1, 'dOFF': 0.24121605757993375, 'SUCCESS': False}
10:12:47,334 root DEBUG 

=================== Experiment ID #365 	 Dual Point ID: 368 ===================
10:12:47,342 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.817E-09|<1.000E-06)
10:12:47,342 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:47,708 root DEBUG Side: ON	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.280E-01 	 Total distance: 6.280E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([253], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:12:47,982 root DEBUG Side: OFF	 Angle(dx0, dx): 0.88 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.455E-02 	 Total distance: 2.455E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([63], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:12:47,982 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:47,982 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -92.48 	 cIDON = [3 7], cIDOFF = [3 7]
10:12:47,982 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:47,982 root DEBUG dOFF/dON = 0.0
10:12:47,982 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.98287408148329, 'dON1': 0.6280118438242001, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.6280118438242001, 'nTON': 1, 'dON': 0.6280118438242001, 'dxOFFAngle': 87.5432236797398, 'dOFF1': 0.024545871676271615, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.024545871676271615, 'nTOFF': 1, 'dOFF': 0.024545871676271615, 'SUCCESS': False}
10:12:47,992 root DEBUG 

=================== Experiment ID #366 	 Dual Point ID: 369 ===================
10:12:48,3 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.726E-08|<1.000E-06)
10:12:48,4 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:48,336 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.303E-01 	 Total distance: 1.303E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([239], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:12:48,632 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.691E-01 	 Total distance: 7.691E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([51], dtype=int64), array([[False]])]] 	 class: [8 9]
10:12:48,632 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:48,632 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 71.03 	 cIDON = [8 9], cIDOFF = [8 9]
10:12:48,632 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:48,632 root DEBUG dOFF/dON = 5.9
10:12:48,632 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.69216514042758, 'dON1': 0.13027448546040094, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.13027448546040094, 'nTON': 1, 'dON': 0.13027448546040094, 'dxOFFAngle': 89.80526624609239, 'dOFF1': 0.7690921903091288, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.7690921903091288, 'nTOFF': 1, 'dOFF': 0.7690921903091288, 'SUCCESS': True}
10:12:48,644 root DEBUG 

=================== Experiment ID #367 	 Dual Point ID: 370 ===================
10:12:48,654 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.774E-07|<1.000E-06)
10:12:48,655 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:48,921 root DEBUG Side: ON	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.108E+00 	 Total distance: 1.108E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([253], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:12:49,136 root DEBUG Side: OFF	 Angle(dx0, dx): 0.88 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.065E-04 	 Total distance: 3.065E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 8]
10:12:49,136 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:49,137 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.94 	 cIDON = [0 8], cIDOFF = [0 8]
10:12:49,137 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:49,137 root DEBUG dOFF/dON = 0.0
10:12:49,137 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.90850179948512, 'dON1': 1.108496286383033, 'cIDON1': array([0, 8], dtype=int64), 'dON_patch_1': 1.108496286383033, 'nTON': 1, 'dON': 1.108496286383033, 'dxOFFAngle': 89.11852869693344, 'dOFF1': 0.0003064514718344616, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.0003064514718344616, 'nTOFF': 1, 'dOFF': 0.0003064514718344616, 'SUCCESS': False}
10:12:49,145 root DEBUG 

=================== Experiment ID #368 	 Dual Point ID: 371 ===================
10:12:49,154 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.015E-08|<1.000E-06)
10:12:49,154 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:49,420 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.124E-01 	 Total distance: 3.124E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([225], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:12:49,755 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.495E-01 	 Total distance: 1.495E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([87], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:12:49,961 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.091E-02 	 Total distance: 1.705E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([28], dtype=int64), array([[False]])]] 	 class: [3 5]
10:12:49,961 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:49,961 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -29.39 	 cIDON = [3 5], cIDOFF = [3 5]
10:12:49,961 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:49,961 root DEBUG dOFF/dON = 0.5
10:12:49,962 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.96544948598927, 'dON1': 0.31235902466594945, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.31235902466594945, 'nTON': 1, 'dON': 0.31235902466594945, 'dxOFFAngle': 87.69360245549905, 'dOFF1': 0.170453861590068, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.170453861590068, 'nTOFF': 1, 'dOFF': 0.170453861590068, 'SUCCESS': False}
10:12:49,975 root DEBUG 

=================== Experiment ID #369 	 Dual Point ID: 372 ===================
10:12:49,987 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.614E-08|<1.000E-06)
10:12:49,987 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:50,358 root DEBUG Side: ON	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.694E-02 	 Total distance: 1.694E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([194], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:12:50,646 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.277E-01 	 Total distance: 2.277E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([214], dtype=int64), array([[False]])]] 	 class: [1 9]
10:12:50,646 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:50,646 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 86.15 	 cIDON = [0 9], cIDOFF = [1 9]
10:12:50,646 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:50,646 root DEBUG dOFF/dON = 13.4
10:12:50,646 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.50478262144962, 'dON1': 0.016935747391164227, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.016935747391164227, 'nTON': 1, 'dON': 0.016935747391164227, 'dxOFFAngle': 88.59265569425034, 'dOFF1': 0.22769552894161166, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.22769552894161166, 'nTOFF': 1, 'dOFF': 0.22769552894161166, 'SUCCESS': True}
10:12:50,653 root DEBUG 

=================== Experiment ID #370 	 Dual Point ID: 373 ===================
10:12:50,660 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.098E-08|<1.000E-06)
10:12:50,660 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:50,910 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.133E-02 	 Total distance: 7.133E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([96], dtype=int64), array([[False]])]] 	 class: [2 3]
10:12:51,175 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.384E-01 	 Total distance: 2.384E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([15], dtype=int64), array([[False]])]] 	 class: [2 3]
10:12:51,175 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:51,176 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 53.94 	 cIDON = [2 3], cIDOFF = [2 3]
10:12:51,176 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:51,176 root DEBUG dOFF/dON = 3.3
10:12:51,176 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.0775478349676, 'dON1': 0.07132972672982109, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.07132972672982109, 'nTON': 1, 'dON': 0.07132972672982109, 'dxOFFAngle': 88.17351974689926, 'dOFF1': 0.23841987785843455, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.23841987785843455, 'nTOFF': 1, 'dOFF': 0.23841987785843455, 'SUCCESS': True}
10:12:51,195 root DEBUG 

=================== Experiment ID #371 	 Dual Point ID: 374 ===================
10:12:51,205 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.902E-08|<1.000E-06)
10:12:51,206 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:51,470 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.255E-01 	 Total distance: 1.255E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([59], dtype=int64), array([[False]])]] 	 class: [2 4]
10:12:51,677 root DEBUG Side: ON	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.748E-02 	 Total distance: 1.829E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([55], dtype=int64), array([[False]])]] 	 class: [2 4]
10:12:52,19 root DEBUG Side: OFF	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.478E-03 	 Total distance: 3.478E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([115], dtype=int64), array([[False]])]] 	 class: [2 4]
10:12:52,19 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:52,19 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -96.27 	 cIDON = [2 4], cIDOFF = [2 4]
10:12:52,19 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:52,19 root DEBUG dOFF/dON = 0.0
10:12:52,19 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.36889517662743, 'dON1': 0.18294263825941348, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.18294263825941348, 'nTON': 1, 'dON': 0.18294263825941348, 'dxOFFAngle': 89.34180252543932, 'dOFF1': 0.0034782223393148098, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.0034782223393148098, 'nTOFF': 1, 'dOFF': 0.0034782223393148098, 'SUCCESS': False}
10:12:52,26 root DEBUG 

=================== Experiment ID #372 	 Dual Point ID: 375 ===================
10:12:52,34 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.948E-08|<1.000E-06)
10:12:52,35 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:52,411 root DEBUG Side: ON	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.898E-01 	 Total distance: 1.898E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([119], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:12:52,536 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.005E-03 	 Total distance: 1.989E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([2], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:12:52,734 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.322E-01 	 Total distance: 5.322E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([8], dtype=int64), array([[False]])]] 	 class: [7 9]
10:12:52,734 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:52,735 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 45.60 	 cIDON = [7 9], cIDOFF = [7 9]
10:12:52,735 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:52,735 root DEBUG dOFF/dON = 2.7
10:12:52,735 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.22615855749244, 'dON1': 0.19885022026644456, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.19885022026644456, 'nTON': 1, 'dON': 0.19885022026644456, 'dxOFFAngle': 88.42931357564736, 'dOFF1': 0.5321922742418485, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.5321922742418485, 'nTOFF': 1, 'dOFF': 0.5321922742418485, 'SUCCESS': True}
10:12:52,747 root DEBUG 

=================== Experiment ID #373 	 Dual Point ID: 376 ===================
10:12:52,758 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.509E-08|<1.000E-06)
10:12:52,759 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:53,22 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.294E-01 	 Total distance: 4.294E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([196], dtype=int64), array([[False]])]] 	 class: [2 6]
10:12:53,273 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.745E-01 	 Total distance: 8.039E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([69], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:12:53,489 root DEBUG Side: ON	 Angle(dx0, dx): 0.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.716E-01 	 Total distance: 1.075E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([19], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:12:53,831 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.133E-02 	 Total distance: 8.133E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([116], dtype=int64), array([[False]])]] 	 class: [2 6]
10:12:53,831 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:53,831 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -85.94 	 cIDON = [2 6], cIDOFF = [2 6]
10:12:53,831 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:53,831 root DEBUG dOFF/dON = 0.1
10:12:53,831 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.78870841705407, 'dON1': 1.075496537346724, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 1.075496537346724, 'nTON': 1, 'dON': 1.075496537346724, 'dxOFFAngle': 89.84318242445018, 'dOFF1': 0.08133371504123711, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.08133371504123711, 'nTOFF': 1, 'dOFF': 0.08133371504123711, 'SUCCESS': False}
10:12:53,842 root DEBUG 

=================== Experiment ID #374 	 Dual Point ID: 377 ===================
10:12:53,848 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.733E-08|<1.000E-06)
10:12:53,849 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:54,98 root DEBUG Side: ON	 Angle(dx0, dx): 0.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.497E-02 	 Total distance: 5.497E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([27], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:12:54,288 root DEBUG Side: ON	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.548E-01 	 Total distance: 3.098E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([168], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:12:54,496 root DEBUG Side: OFF	 Angle(dx0, dx): 0.89 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.868E-02 	 Total distance: 5.868E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([32], dtype=int64), array([[False]])]] 	 class: [3 9]
10:12:54,496 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:54,496 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -68.14 	 cIDON = [3 9], cIDOFF = [3 9]
10:12:54,496 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:54,496 root DEBUG dOFF/dON = 0.2
10:12:54,496 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.44047819387464, 'dON1': 0.30975771906091504, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.30975771906091504, 'nTON': 1, 'dON': 0.30975771906091504, 'dxOFFAngle': 89.08571778430078, 'dOFF1': 0.05868490194649608, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.05868490194649608, 'nTOFF': 1, 'dOFF': 0.05868490194649608, 'SUCCESS': False}
10:12:54,503 root DEBUG 

=================== Experiment ID #375 	 Dual Point ID: 378 ===================
10:12:54,512 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.786E-08|<1.000E-06)
10:12:54,512 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:54,751 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.601E-01 	 Total distance: 2.601E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([123], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:12:54,992 root DEBUG Side: OFF	 Angle(dx0, dx): 0.71 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.748E-02 	 Total distance: 2.748E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([54], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:12:54,992 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:54,992 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -80.89 	 cIDON = [2 6], cIDOFF = [2 6]
10:12:54,992 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:54,992 root DEBUG dOFF/dON = 0.1
10:12:54,992 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.36025603166522, 'dON1': 0.2600814701538673, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.2600814701538673, 'nTON': 1, 'dON': 0.2600814701538673, 'dxOFFAngle': 88.0576840058889, 'dOFF1': 0.027480685009841743, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.027480685009841743, 'nTOFF': 1, 'dOFF': 0.027480685009841743, 'SUCCESS': False}
10:12:55,1 root DEBUG 

=================== Experiment ID #376 	 Dual Point ID: 379 ===================
10:12:55,10 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.757E-08|<1.000E-06)
10:12:55,10 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:55,273 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.618E-01 	 Total distance: 2.618E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([115], dtype=int64), array([[False]])]] 	 class: [1 2]
10:12:55,465 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.897E-02 	 Total distance: 3.407E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([143], dtype=int64), array([[False]])]] 	 class: [1 2]
10:12:55,643 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.275E+00 	 Total distance: 1.616E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([199], dtype=int64), array([[ True]])]] 	 class: [1 2]
10:12:55,844 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.186E+00 	 Total distance: 2.802E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([47], dtype=int64), array([[False]])]] 	 class: [1 2]
10:12:56,122 root DEBUG Side: OFF	 Angle(dx0, dx): 0.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.145E-01 	 Total distance: 3.145E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([12], dtype=int64), array([[False]])]] 	 class: [0 2]
10:12:56,122 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:56,123 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -79.82 	 cIDON = [1 2], cIDOFF = [0 2]
10:12:56,123 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:56,123 root DEBUG dOFF/dON = 0.1
10:12:56,123 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.34647003424632, 'dON1': 2.8020504564782964, 'cIDON1': array([1, 2], dtype=int64), 'dON_patch_1': 2.8020504564782964, 'nTON': 1, 'dON': 2.8020504564782964, 'dxOFFAngle': 87.48756041932018, 'dOFF1': 0.3144781013102659, 'cIDOFF1': array([0, 2], dtype=int64), 'dOFF_patch_1': 0.3144781013102659, 'nTOFF': 1, 'dOFF': 0.3144781013102659, 'SUCCESS': False}
10:12:56,135 root DEBUG 

=================== Experiment ID #377 	 Dual Point ID: 380 ===================
10:12:56,144 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.270E-09|<1.000E-06)
10:12:56,144 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:56,419 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.776E-01 	 Total distance: 5.776E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([70], dtype=int64), array([[False]])]] 	 class: [1 3]
10:12:56,617 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.971E-02 	 Total distance: 6.273E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([67], dtype=int64), array([[ True]])]] 	 class: [1 3]
10:12:56,762 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.442E-01 	 Total distance: 9.715E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([49], dtype=int64), array([[ True]])]] 	 class: [1 3]
10:12:57,31 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.484E-01 	 Total distance: 1.484E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([40], dtype=int64), array([[ True]])]] 	 class: [0 3]
10:12:57,31 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:57,31 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -73.49 	 cIDON = [1 3], cIDOFF = [0 3]
10:12:57,31 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:57,31 root DEBUG dOFF/dON = 0.2
10:12:57,31 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.34441961410604, 'dON1': 0.9714670110427912, 'cIDON1': array([1, 3], dtype=int64), 'dON_patch_1': 0.9714670110427912, 'nTON': 1, 'dON': 0.9714670110427912, 'dxOFFAngle': 89.02426866148129, 'dOFF1': 0.14841588162271394, 'cIDOFF1': array([0, 3], dtype=int64), 'dOFF_patch_1': 0.14841588162271394, 'nTOFF': 1, 'dOFF': 0.14841588162271394, 'SUCCESS': False}
10:12:57,38 root DEBUG 

=================== Experiment ID #378 	 Dual Point ID: 381 ===================
10:12:57,45 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.907E-08|<1.000E-06)
10:12:57,46 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:57,303 root DEBUG Side: ON	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.242E-02 	 Total distance: 5.242E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([105], dtype=int64), array([[False]])]] 	 class: [3 6]
10:12:57,516 root DEBUG Side: OFF	 Angle(dx0, dx): 1.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.710E-01 	 Total distance: 3.710E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([63], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:12:57,516 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:57,516 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 75.24 	 cIDON = [3 6], cIDOFF = [3 6]
10:12:57,516 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:57,516 root DEBUG dOFF/dON = 7.1
10:12:57,516 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.14510205591124, 'dON1': 0.05241869664161764, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.05241869664161764, 'nTON': 1, 'dON': 0.05241869664161764, 'dxOFFAngle': 89.09557005834647, 'dOFF1': 0.37103789601721304, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.37103789601721304, 'nTOFF': 1, 'dOFF': 0.37103789601721304, 'SUCCESS': True}
10:12:57,526 root DEBUG 

=================== Experiment ID #379 	 Dual Point ID: 382 ===================
10:12:57,534 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.150E-08|<1.000E-06)
10:12:57,534 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:57,857 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.138E-01 	 Total distance: 1.138E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([218], dtype=int64), array([[False]])]] 	 class: [5 7]
10:12:58,74 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.469E-01 	 Total distance: 5.607E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([239], dtype=int64), array([[False]])]] 	 class: [5 7]
10:12:58,319 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.207E-04 	 Total distance: 5.616E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([237], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:12:58,599 root DEBUG Side: ON	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.061E+00 	 Total distance: 1.623E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([15], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:12:58,925 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.525E-02 	 Total distance: 6.525E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([70], dtype=int64), array([[False]])]] 	 class: [5 7]
10:12:58,925 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:58,925 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -92.27 	 cIDON = [5 7], cIDOFF = [5 7]
10:12:58,925 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:58,925 root DEBUG dOFF/dON = 0.0
10:12:58,925 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.62830050264245, 'dON1': 1.6229146988520111, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 1.6229146988520111, 'nTON': 1, 'dON': 1.6229146988520111, 'dxOFFAngle': 89.38097000332897, 'dOFF1': 0.06524645473362434, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.06524645473362434, 'nTOFF': 1, 'dOFF': 0.06524645473362434, 'SUCCESS': False}
10:12:58,934 root DEBUG 

=================== Experiment ID #380 	 Dual Point ID: 383 ===================
10:12:58,942 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.207E-09|<1.000E-06)
10:12:58,943 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:59,234 root DEBUG Side: ON	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.079E-01 	 Total distance: 4.079E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([92], dtype=int64), array([[False]])]] 	 class: [4 7]
10:12:59,499 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.737E-01 	 Total distance: 1.737E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([201], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:12:59,499 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:59,499 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -40.28 	 cIDON = [4 7], cIDOFF = [4 7]
10:12:59,499 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:59,499 root DEBUG dOFF/dON = 0.4
10:12:59,499 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.54444587607745, 'dON1': 0.4079443156418496, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.4079443156418496, 'nTON': 1, 'dON': 0.4079443156418496, 'dxOFFAngle': 88.23027252546694, 'dOFF1': 0.1736537061721289, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.1736537061721289, 'nTOFF': 1, 'dOFF': 0.1736537061721289, 'SUCCESS': False}
10:12:59,508 root DEBUG 

=================== Experiment ID #381 	 Dual Point ID: 384 ===================
10:12:59,516 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.865E-08|<1.000E-06)
10:12:59,516 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:59,895 root DEBUG Side: ON	 Angle(dx0, dx): 0.93 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.550E-02 	 Total distance: 9.550E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([63], dtype=int64), array([[False]])]] 	 class: [8 9]
10:13:00,230 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.806E-01 	 Total distance: 2.806E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([168], dtype=int64), array([[False]])]] 	 class: [8 9]
10:13:00,230 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:00,231 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 49.21 	 cIDON = [8 9], cIDOFF = [8 9]
10:13:00,231 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:00,231 root DEBUG dOFF/dON = 2.9
10:13:00,231 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.61971642702069, 'dON1': 0.09550452712245187, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.09550452712245187, 'nTON': 1, 'dON': 0.09550452712245187, 'dxOFFAngle': 88.56842134207783, 'dOFF1': 0.2805540934218362, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.2805540934218362, 'nTOFF': 1, 'dOFF': 0.2805540934218362, 'SUCCESS': True}
10:13:00,241 root DEBUG 

=================== Experiment ID #382 	 Dual Point ID: 385 ===================
10:13:00,251 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.133E-09|<1.000E-06)
10:13:00,252 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:00,527 root DEBUG Side: ON	 Angle(dx0, dx): 0.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.960E-01 	 Total distance: 2.960E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([43], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:13:00,853 root DEBUG Side: OFF	 Angle(dx0, dx): 0.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.395E-01 	 Total distance: 1.395E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([219], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:13:00,853 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:00,854 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -35.93 	 cIDON = [5 7], cIDOFF = [5 7]
10:13:00,854 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:00,854 root DEBUG dOFF/dON = 0.5
10:13:00,854 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.9294128008375, 'dON1': 0.2960434564616654, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.2960434564616654, 'nTON': 1, 'dON': 0.2960434564616654, 'dxOFFAngle': 89.46836708063522, 'dOFF1': 0.13952946687822626, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.13952946687822626, 'nTOFF': 1, 'dOFF': 0.13952946687822626, 'SUCCESS': False}
10:13:00,868 root DEBUG 

=================== Experiment ID #383 	 Dual Point ID: 386 ===================
10:13:00,877 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.202E-08|<1.000E-06)
10:13:00,877 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:01,204 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.427E-01 	 Total distance: 3.427E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([243], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:13:01,481 root DEBUG Side: OFF	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.833E-02 	 Total distance: 4.833E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([31], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:13:01,481 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:01,481 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -75.28 	 cIDON = [3 6], cIDOFF = [3 6]
10:13:01,481 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:01,481 root DEBUG dOFF/dON = 0.1
10:13:01,481 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.76677255070281, 'dON1': 0.3426724821019164, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.3426724821019164, 'nTON': 1, 'dON': 0.3426724821019164, 'dxOFFAngle': 89.09986490767801, 'dOFF1': 0.04833232881124497, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.04833232881124497, 'nTOFF': 1, 'dOFF': 0.04833232881124497, 'SUCCESS': False}
10:13:01,491 root DEBUG 

=================== Experiment ID #384 	 Dual Point ID: 387 ===================
10:13:01,499 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.155E-08|<1.000E-06)
10:13:01,499 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:01,793 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.928E-02 	 Total distance: 9.928E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([236], dtype=int64), array([[ True]])]] 	 class: [6 8]
10:13:02,106 root DEBUG Side: OFF	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.907E-02 	 Total distance: 8.907E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([105], dtype=int64), array([[False]])]] 	 class: [6 8]
10:13:02,106 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:02,106 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -5.42 	 cIDON = [6 8], cIDOFF = [6 8]
10:13:02,107 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:02,107 root DEBUG dOFF/dON = 0.9
10:13:02,107 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.98105534533484, 'dON1': 0.09928341187626853, 'cIDON1': array([6, 8], dtype=int64), 'dON_patch_1': 0.09928341187626853, 'nTON': 1, 'dON': 0.09928341187626853, 'dxOFFAngle': 89.07850732332298, 'dOFF1': 0.08907308221239446, 'cIDOFF1': array([6, 8], dtype=int64), 'dOFF_patch_1': 0.08907308221239446, 'nTOFF': 1, 'dOFF': 0.08907308221239446, 'SUCCESS': False}
10:13:02,119 root DEBUG 

=================== Experiment ID #385 	 Dual Point ID: 388 ===================
10:13:02,131 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.230E-08|<1.000E-06)
10:13:02,131 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:02,522 root DEBUG Side: ON	 Angle(dx0, dx): 2.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.323E-01 	 Total distance: 1.323E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([13], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:13:02,850 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.305E-01 	 Total distance: 9.305E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([203], dtype=int64), array([[False]])]] 	 class: [8 9]
10:13:03,56 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.488E-01 	 Total distance: 1.179E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([64], dtype=int64), array([[False]])]] 	 class: [8 9]
10:13:03,56 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:03,57 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 79.83 	 cIDON = [8 9], cIDOFF = [8 9]
10:13:03,57 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:03,57 root DEBUG dOFF/dON = 8.9
10:13:03,57 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.78191505863725, 'dON1': 0.13226787782861044, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.13226787782861044, 'nTON': 1, 'dON': 0.13226787782861044, 'dxOFFAngle': 88.59283856834321, 'dOFF1': 1.179307547488037, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 1.179307547488037, 'nTOFF': 1, 'dOFF': 1.179307547488037, 'SUCCESS': True}
10:13:03,72 root DEBUG 

=================== Experiment ID #386 	 Dual Point ID: 389 ===================
10:13:03,83 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.486E-08|<1.000E-06)
10:13:03,83 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:03,450 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.060E-02 	 Total distance: 2.060E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([229], dtype=int64), array([[False]])]] 	 class: [3 6]
10:13:03,844 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.878E-01 	 Total distance: 8.878E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([232], dtype=int64), array([[False]])]] 	 class: [3 6]
10:13:03,845 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:03,845 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 95.46 	 cIDON = [3 6], cIDOFF = [3 6]
10:13:03,845 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:03,845 root DEBUG dOFF/dON = 43.1
10:13:03,845 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.42979607503169, 'dON1': 0.020599331713121775, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.020599331713121775, 'nTON': 1, 'dON': 0.020599331713121775, 'dxOFFAngle': 89.91878468392578, 'dOFF1': 0.8877888442059061, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.8877888442059061, 'nTOFF': 1, 'dOFF': 0.8877888442059061, 'SUCCESS': True}
10:13:03,857 root DEBUG 

=================== Experiment ID #387 	 Dual Point ID: 390 ===================
10:13:03,866 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.291E-09|<1.000E-06)
10:13:03,866 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:04,175 root DEBUG Side: ON	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.330E-01 	 Total distance: 4.330E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([131], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:13:04,482 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.275E-03 	 Total distance: 1.275E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([180], dtype=int64), array([[False]])]] 	 class: [0 1]
10:13:04,482 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:04,482 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.41 	 cIDON = [0 1], cIDOFF = [0 1]
10:13:04,482 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:04,482 root DEBUG dOFF/dON = 0.0
10:13:04,482 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.76055606453212, 'dON1': 0.4329875224892463, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.4329875224892463, 'nTON': 1, 'dON': 0.4329875224892463, 'dxOFFAngle': 88.12633297087653, 'dOFF1': 0.0012753691362949017, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.0012753691362949017, 'nTOFF': 1, 'dOFF': 0.0012753691362949017, 'SUCCESS': False}
10:13:04,497 root DEBUG 

=================== Experiment ID #388 	 Dual Point ID: 391 ===================
10:13:04,509 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.010E-08|<1.000E-06)
10:13:04,509 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:04,833 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.396E-02 	 Total distance: 2.396E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([147], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:13:05,149 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.841E-01 	 Total distance: 3.081E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([52], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:13:05,398 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.437E-01 	 Total distance: 7.518E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([162], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:13:05,595 root DEBUG Side: ON	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.726E-01 	 Total distance: 1.324E+00 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([21], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:13:05,805 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.339E-01 	 Total distance: 1.458E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([139], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:13:06,60 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.462E-02 	 Total distance: 4.462E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([52], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:13:06,60 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:06,61 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -94.06 	 cIDON = [6 9], cIDOFF = [6 9]
10:13:06,61 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:06,61 root DEBUG dOFF/dON = 0.0
10:13:06,61 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.81115531582074, 'dON1': 1.4582790212110806, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 1.4582790212110806, 'nTON': 1, 'dON': 1.4582790212110806, 'dxOFFAngle': 88.84951785279141, 'dOFF1': 0.044620165125914206, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.044620165125914206, 'nTOFF': 1, 'dOFF': 0.044620165125914206, 'SUCCESS': False}
10:13:06,74 root DEBUG 

=================== Experiment ID #389 	 Dual Point ID: 392 ===================
10:13:06,89 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.812E-09|<1.000E-06)
10:13:06,89 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:06,434 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.680E-01 	 Total distance: 2.680E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([121], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:13:06,808 root DEBUG Side: OFF	 Angle(dx0, dx): 0.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.678E-02 	 Total distance: 8.678E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([145], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:13:06,808 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:06,808 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -51.08 	 cIDON = [3 5], cIDOFF = [3 5]
10:13:06,809 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:06,809 root DEBUG dOFF/dON = 0.3
10:13:06,809 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.37377025595775, 'dON1': 0.26801900462816675, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.26801900462816675, 'nTON': 1, 'dON': 0.26801900462816675, 'dxOFFAngle': 89.38740421613727, 'dOFF1': 0.08678030455910311, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.08678030455910311, 'nTOFF': 1, 'dOFF': 0.08678030455910311, 'SUCCESS': False}
10:13:06,821 root DEBUG 

=================== Experiment ID #390 	 Dual Point ID: 393 ===================
10:13:06,833 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.197E-09|<1.000E-06)
10:13:06,833 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:07,60 root DEBUG Side: ON	 Angle(dx0, dx): 0.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.455E-01 	 Total distance: 2.455E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([51], dtype=int64), array([[False]])]] 	 class: [3 5]
10:13:07,333 root DEBUG Side: OFF	 Angle(dx0, dx): 0.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.672E-02 	 Total distance: 3.672E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([64], dtype=int64), array([[False]])]] 	 class: [3 5]
10:13:07,333 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:07,333 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -73.98 	 cIDON = [3 5], cIDOFF = [3 5]
10:13:07,333 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:07,333 root DEBUG dOFF/dON = 0.1
10:13:07,333 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.96485231037724, 'dON1': 0.2454724704397629, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.2454724704397629, 'nTON': 1, 'dON': 0.2454724704397629, 'dxOFFAngle': 85.97555565884524, 'dOFF1': 0.036716164118394304, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.036716164118394304, 'nTOFF': 1, 'dOFF': 0.036716164118394304, 'SUCCESS': False}
10:13:07,341 root DEBUG 

=================== Experiment ID #391 	 Dual Point ID: 394 ===================
10:13:07,348 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.450E-08|<1.000E-06)
10:13:07,348 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:07,711 root DEBUG Side: ON	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.596E-02 	 Total distance: 5.596E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([155], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:13:07,993 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.071E-01 	 Total distance: 2.071E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([53], dtype=int64), array([[False]])]] 	 class: [3 6]
10:13:08,235 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.658E-01 	 Total distance: 3.728E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([183], dtype=int64), array([[False]])]] 	 class: [3 6]
10:13:08,499 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.571E-01 	 Total distance: 5.300E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([150], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:13:08,499 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:08,499 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 80.90 	 cIDON = [3 6], cIDOFF = [3 6]
10:13:08,499 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:08,500 root DEBUG dOFF/dON = 9.5
10:13:08,500 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.15228365322785, 'dON1': 0.055964290290231894, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.055964290290231894, 'nTON': 1, 'dON': 0.055964290290231894, 'dxOFFAngle': 87.33976324069728, 'dOFF1': 0.5299753274200963, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.5299753274200963, 'nTOFF': 1, 'dOFF': 0.5299753274200963, 'SUCCESS': True}
10:13:08,511 root DEBUG 

=================== Experiment ID #392 	 Dual Point ID: 395 ===================
10:13:08,522 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.111E-08|<1.000E-06)
10:13:08,522 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:08,835 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.434E-02 	 Total distance: 8.434E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([118], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:13:09,13 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.422E-01 	 Total distance: 2.266E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([176], dtype=int64), array([[False]])]] 	 class: [4 5]
10:13:09,289 root DEBUG Side: ON	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.686E-01 	 Total distance: 6.952E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([23], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:13:09,566 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.820E-02 	 Total distance: 4.820E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([49], dtype=int64), array([[False]])]] 	 class: [4 5]
10:13:09,566 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:09,566 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -87.03 	 cIDON = [4 5], cIDOFF = [4 5]
10:13:09,566 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:09,566 root DEBUG dOFF/dON = 0.1
10:13:09,566 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.09330253786683, 'dON1': 0.6951645088541487, 'cIDON1': array([4, 5], dtype=int64), 'dON_patch_1': 0.6951645088541487, 'nTON': 1, 'dON': 0.6951645088541487, 'dxOFFAngle': 89.59673825199516, 'dOFF1': 0.048195619324496924, 'cIDOFF1': array([4, 5], dtype=int64), 'dOFF_patch_1': 0.048195619324496924, 'nTOFF': 1, 'dOFF': 0.048195619324496924, 'SUCCESS': False}
10:13:09,579 root DEBUG 

=================== Experiment ID #393 	 Dual Point ID: 396 ===================
10:13:09,591 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.179E-09|<1.000E-06)
10:13:09,591 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:09,860 root DEBUG Side: ON	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.015E-02 	 Total distance: 1.015E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([131], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:13:10,109 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.164E-02 	 Total distance: 8.164E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([47], dtype=int64), array([[False]])]] 	 class: [2 7]
10:13:10,109 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:10,110 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 77.88 	 cIDON = [2 7], cIDOFF = [2 7]
10:13:10,110 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:10,110 root DEBUG dOFF/dON = 8.0
10:13:10,110 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.46719001152981, 'dON1': 0.010152825584156264, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.010152825584156264, 'nTON': 1, 'dON': 0.010152825584156264, 'dxOFFAngle': 88.54064150059519, 'dOFF1': 0.08164107238910667, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.08164107238910667, 'nTOFF': 1, 'dOFF': 0.08164107238910667, 'SUCCESS': True}
10:13:10,120 root DEBUG 

=================== Experiment ID #394 	 Dual Point ID: 397 ===================
10:13:10,129 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.161E-08|<1.000E-06)
10:13:10,129 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:10,409 root DEBUG Side: ON	 Angle(dx0, dx): 1.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.899E-02 	 Total distance: 2.899E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([2, 7], dtype=int64), array([[0.],
       [1.]])]] 	 class: [6 7]
10:13:10,741 root DEBUG Side: OFF	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.487E-01 	 Total distance: 2.487E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([214], dtype=int64), array([[False]])]] 	 class: [2 6]
10:13:10,898 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.517E-01 	 Total distance: 4.004E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([217], dtype=int64), array([[False]])]] 	 class: [2 6]
10:13:10,898 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:10,898 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 86.50 	 cIDON = [2 6], cIDOFF = [2 6]
10:13:10,898 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:10,898 root DEBUG dOFF/dON = 13.8
10:13:10,899 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.29794787345668, 'dON1': 0.028990992972292587, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.028990992972292587, 'nTON': 1, 'dON': 0.028990992972292587, 'dxOFFAngle': 87.77593463629385, 'dOFF1': 0.4004380449606935, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.4004380449606935, 'nTOFF': 1, 'dOFF': 0.4004380449606935, 'SUCCESS': True}
10:13:10,908 root DEBUG 

=================== Experiment ID #395 	 Dual Point ID: 398 ===================
10:13:10,915 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.907E-08|<1.000E-06)
10:13:10,915 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:11,296 root DEBUG Side: ON	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.356E-01 	 Total distance: 1.356E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([203], dtype=int64), array([[False]])]] 	 class: [4 6]
10:13:11,621 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.147E-01 	 Total distance: 1.147E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([95], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:13:11,621 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:11,621 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -8.35 	 cIDON = [4 6], cIDOFF = [4 6]
10:13:11,621 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:11,621 root DEBUG dOFF/dON = 0.8
10:13:11,621 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.17487141565805, 'dON1': 0.13560597343779168, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.13560597343779168, 'nTON': 1, 'dON': 0.13560597343779168, 'dxOFFAngle': 88.07698942697708, 'dOFF1': 0.1147006541040944, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.1147006541040944, 'nTOFF': 1, 'dOFF': 0.1147006541040944, 'SUCCESS': False}
10:13:11,630 root DEBUG 

=================== Experiment ID #396 	 Dual Point ID: 399 ===================
10:13:11,638 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.262E-08|<1.000E-06)
10:13:11,638 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:11,951 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.450E-01 	 Total distance: 6.450E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([103], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:13:12,118 root DEBUG Side: ON	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.806E-01 	 Total distance: 1.326E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([53], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:13:12,503 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.448E-01 	 Total distance: 2.448E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([217], dtype=int64), array([[False]])]] 	 class: [0 1]
10:13:12,503 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:12,503 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -68.82 	 cIDON = [0 1], cIDOFF = [0 1]
10:13:12,504 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:12,504 root DEBUG dOFF/dON = 0.2
10:13:12,504 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.48594674683486, 'dON1': 1.325577214927812, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 1.325577214927812, 'nTON': 1, 'dON': 1.325577214927812, 'dxOFFAngle': 89.35844010586521, 'dOFF1': 0.2448266783395162, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.2448266783395162, 'nTOFF': 1, 'dOFF': 0.2448266783395162, 'SUCCESS': False}
10:13:12,511 root DEBUG 

=================== Experiment ID #397 	 Dual Point ID: 400 ===================
10:13:12,518 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.918E-08|<1.000E-06)
10:13:12,518 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:12,870 root DEBUG Side: ON	 Angle(dx0, dx): 1.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.389E-01 	 Total distance: 2.389E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([16], dtype=int64), array([[False]])]] 	 class: [2 4]
10:13:13,118 root DEBUG Side: OFF	 Angle(dx0, dx): 0.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.825E-01 	 Total distance: 2.825E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([2], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:13:13,118 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:13,119 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 8.35 	 cIDON = [2 4], cIDOFF = [2 4]
10:13:13,119 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:13,119 root DEBUG dOFF/dON = 1.2
10:13:13,119 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.99379711437611, 'dON1': 0.23894335214231252, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.23894335214231252, 'nTON': 1, 'dON': 0.23894335214231252, 'dxOFFAngle': 86.57130731805317, 'dOFF1': 0.28246022399784204, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.28246022399784204, 'nTOFF': 1, 'dOFF': 0.28246022399784204, 'SUCCESS': True}
10:13:13,131 root DEBUG 

=================== Experiment ID #398 	 Dual Point ID: 401 ===================
10:13:13,138 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.096E-08|<1.000E-06)
10:13:13,139 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:13,413 root DEBUG Side: ON	 Angle(dx0, dx): 0.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.352E+00 	 Total distance: 1.352E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([26], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:13:13,562 root DEBUG Side: ON	 Angle(dx0, dx): 0.93 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.267E-01 	 Total distance: 1.578E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([54], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:13:13,838 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.092E-02 	 Total distance: 3.092E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([3], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:13:13,838 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:13,838 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -96.16 	 cIDON = [3 7], cIDOFF = [3 7]
10:13:13,839 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:13,839 root DEBUG dOFF/dON = 0.0
10:13:13,839 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.47989339512544, 'dON1': 1.5783088306064044, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 1.5783088306064044, 'nTON': 1, 'dON': 1.5783088306064044, 'dxOFFAngle': 88.34251906511075, 'dOFF1': 0.03091617058531383, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.03091617058531383, 'nTOFF': 1, 'dOFF': 0.03091617058531383, 'SUCCESS': False}
10:13:13,855 root DEBUG 

=================== Experiment ID #399 	 Dual Point ID: 402 ===================
10:13:13,864 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.361E-09|<1.000E-06)
10:13:13,865 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:14,199 root DEBUG Side: ON	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.836E-03 	 Total distance: 4.836E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([165], dtype=int64), array([[False]])]] 	 class: [0 1]
10:13:14,554 root DEBUG Side: OFF	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.562E-02 	 Total distance: 5.562E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([155], dtype=int64), array([[False]])]] 	 class: [0 1]
10:13:14,554 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:14,554 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 84.00 	 cIDON = [0 1], cIDOFF = [0 1]
10:13:14,554 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:14,554 root DEBUG dOFF/dON = 11.5
10:13:14,554 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.10847349053617, 'dON1': 0.004835981662220615, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.004835981662220615, 'nTON': 1, 'dON': 0.004835981662220615, 'dxOFFAngle': 87.58092852335119, 'dOFF1': 0.055621029270181706, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.055621029270181706, 'nTOFF': 1, 'dOFF': 0.055621029270181706, 'SUCCESS': True}
10:13:14,875 matplotlib.pyplot DEBUG Loaded backend tkagg version 8.6.
10:13:14,991 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:13:14,991 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:13:14,991 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:13:14,991 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:13:14,992 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 1189
10:13:14,998 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:13:14,999 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:13:14,999 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:13:14,999 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:13:14,999 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 2994
10:13:15,32 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:13:15,32 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:13:15,32 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:13:15,32 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:13:15,32 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 696
10:13:15,37 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:13:15,37 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:13:15,37 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:13:15,37 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:13:15,37 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 526
10:13:15,41 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:13:15,42 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:13:15,42 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:13:15,42 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:13:15,42 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 499
10:13:15,46 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:13:15,46 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:13:15,46 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:13:15,46 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:13:15,46 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 673
10:13:15,50 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:13:15,50 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:13:15,50 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:13:15,50 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:13:15,50 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 922
10:13:15,54 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:13:15,55 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:13:15,55 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:13:15,55 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:13:15,55 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 568
10:13:15,58 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:13:15,59 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:13:15,59 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:13:15,59 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:13:15,59 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 626
10:13:15,65 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
10:13:15,66 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,66 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,66 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:13:15,66 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:13:15,66 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,66 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:13:15,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:13:15,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:13:15,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:13:15,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:13:15,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:13:15,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:15,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:13:15,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:15,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:13:15,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:13:15,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:13:15,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:13:15,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:13:15,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:13:15,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:13:15,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:15,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:13:15,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:13:15,86 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:13:15,86 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,86 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,86 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:13:15,86 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,86 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,86 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,86 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,86 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:15,86 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,86 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,86 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,86 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,87 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,87 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,87 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,87 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,87 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,87 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:15,87 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,87 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:15,87 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,87 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,87 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,87 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,87 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,87 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,87 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,88 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,88 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,88 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,88 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,88 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,88 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,88 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,88 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,88 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,88 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:13:15,88 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,88 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,88 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,88 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,88 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,89 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,89 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,89 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:15,89 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,89 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,89 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,89 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,89 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,89 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,89 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,89 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,89 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,90 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:15,90 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,90 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,90 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:13:15,90 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:15,90 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,90 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:13:15,90 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,90 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:13:15,90 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,90 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,90 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,91 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,91 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,91 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,91 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,91 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:13:15,91 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,91 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,91 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,91 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,91 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,91 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,91 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:15,91 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,92 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,92 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,92 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,92 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,92 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,92 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,92 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:13:15,92 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,92 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,92 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:13:15,92 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,92 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:13:15,92 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,93 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:13:15,93 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,93 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:13:15,93 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,93 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,93 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,93 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,93 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:15,93 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,93 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,93 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,93 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,93 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,94 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:15,94 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,94 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,94 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,94 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,94 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,94 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,94 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,94 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,94 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,94 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,94 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,94 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,95 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,95 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,95 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,95 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,95 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,95 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,95 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,95 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,95 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,95 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,95 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,95 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,95 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,96 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,96 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:13:15,96 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,96 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,96 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,96 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,96 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,96 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,96 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,96 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,96 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,96 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,96 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,96 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,97 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,97 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,97 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,97 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,97 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,97 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,97 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,97 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,97 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:15,97 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,97 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,97 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,97 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,98 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,98 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,98 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,98 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,98 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,98 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,98 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,98 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,99 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,99 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:15,99 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:13:15,99 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,99 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,99 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,99 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,99 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,99 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,99 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,99 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,99 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,99 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,100 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,100 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:13:15,100 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,100 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,100 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,100 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,100 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:15,100 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,100 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,100 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,100 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,100 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,100 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,100 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,101 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,101 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,101 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,101 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,101 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,101 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,101 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,101 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,101 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:13:15,101 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,101 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,101 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,101 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,101 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:13:15,102 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,102 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:13:15,102 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:13:15,102 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,102 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,102 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,102 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,102 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,102 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,102 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,102 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,102 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,102 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,102 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,103 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,103 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,103 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,103 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,103 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,103 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,103 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,103 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:13:15,103 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,103 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,103 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,103 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,103 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,104 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:15,104 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,104 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,104 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,104 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:13:15,104 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,104 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,104 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,104 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,104 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,104 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,104 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,104 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,104 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,104 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,105 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,105 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,105 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,105 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,105 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,105 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:13:15,105 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,105 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,105 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,105 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,105 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,105 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,105 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,105 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,105 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,105 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:15,106 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,106 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,106 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,106 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:13:15,106 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,106 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,106 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:15,106 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,106 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,106 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,106 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:15,106 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,106 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,106 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,106 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,106 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
10:13:15,316 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
10:13:15,316 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,316 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,316 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:13:15,316 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:13:15,316 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,316 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,317 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,317 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,317 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,317 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,317 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,317 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,317 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:13:15,317 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,317 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,317 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,317 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,317 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,317 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,317 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,317 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,317 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,317 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,317 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,317 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,317 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,318 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,318 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,318 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,318 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,318 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,318 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,318 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,318 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,318 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,318 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:13:15,318 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,318 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,318 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,318 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,318 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,318 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,318 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,318 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,318 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:13:15,318 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,319 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,319 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,319 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,319 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,319 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,319 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:13:15,319 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,319 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,319 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:13:15,319 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,319 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,319 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,319 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,319 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:13:15,319 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,319 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,319 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,319 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,319 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,319 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,320 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,320 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,320 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,320 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,320 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,320 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,320 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,320 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,320 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,320 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,320 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,320 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:15,320 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,320 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,320 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:13:15,320 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,320 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,320 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,320 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,320 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,320 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,320 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,321 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,321 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:15,321 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,321 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,321 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,321 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:13:15,321 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,321 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,322 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,322 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,322 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,322 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,322 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,322 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,322 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,322 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,322 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,322 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:13:15,322 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,323 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,323 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,323 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,323 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,323 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,323 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,323 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,323 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,323 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,323 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,324 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,324 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,324 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,324 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,324 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,324 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,324 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,324 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,324 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,325 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,325 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,325 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,325 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,325 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,325 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,325 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,325 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,325 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,326 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,326 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,326 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,326 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,326 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,326 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:13:15,326 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:13:15,326 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,326 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:13:15,326 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,326 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,327 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,327 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,327 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,327 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,327 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,327 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,327 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,327 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,327 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,328 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,328 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:13:15,328 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,328 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,328 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,328 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,328 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,328 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,328 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,328 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,328 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:13:15,329 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:15,329 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,329 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,329 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,329 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,329 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,329 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,329 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,329 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,329 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,329 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,329 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,330 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:13:15,330 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,330 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:13:15,330 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:13:15,330 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,330 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,330 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:13:15,330 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,330 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,330 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,330 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,330 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:15,330 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,331 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,331 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,331 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,331 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,331 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,331 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,331 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,332 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,332 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:15,332 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,332 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:15,332 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,332 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,332 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,333 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,333 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,333 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,333 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,334 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,334 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,334 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,334 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,334 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,334 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,334 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,334 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,335 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,335 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:13:15,335 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,335 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,335 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,335 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,335 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,335 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,335 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,335 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:15,335 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,336 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,336 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,336 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,336 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,336 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,336 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,336 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,336 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,336 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:15,336 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,336 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,336 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:13:15,337 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:15,337 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,337 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:13:15,337 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,337 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:13:15,337 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,337 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,337 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,337 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,337 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,338 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,338 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,338 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:13:15,338 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,338 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,338 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,338 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,338 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,338 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,338 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:15,339 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,339 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,339 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,339 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,339 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,339 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,339 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,339 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:13:15,339 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,339 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,339 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:13:15,340 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,340 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:13:15,340 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,340 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:13:15,340 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,340 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:13:15,340 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,340 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,340 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,340 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,340 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:15,340 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,341 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,341 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,341 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,341 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,341 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:15,341 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,341 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,341 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,341 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,341 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,341 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,341 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,342 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,342 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,342 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,342 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,342 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,342 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,342 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,342 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,342 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,342 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,342 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,343 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,343 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,343 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,343 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,343 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,343 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,343 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,343 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,343 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:13:15,343 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,343 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,343 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,343 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,343 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,344 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,344 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,344 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,344 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,344 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,344 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,344 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,344 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,344 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,344 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,344 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,344 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,344 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,345 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,345 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,345 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:15,345 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,345 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,345 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,345 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,345 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,345 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,345 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,345 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,345 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,345 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,346 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,346 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,346 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,346 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:15,346 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:13:15,346 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,346 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,346 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,346 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,346 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,346 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,346 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,347 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,347 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,347 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,347 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,347 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:13:15,347 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,347 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,347 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,347 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,347 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:15,347 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,347 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,348 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,348 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,348 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,348 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,348 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,348 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,348 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,348 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,348 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,349 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,349 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,349 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,349 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,349 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:13:15,349 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,349 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,349 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,349 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,349 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:13:15,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:13:15,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:13:15,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,351 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,351 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,351 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,351 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,351 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,352 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,352 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,352 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,352 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:13:15,352 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,352 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,353 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,353 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,353 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,353 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:15,353 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,353 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,353 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,353 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:13:15,353 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,354 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,354 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,354 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,354 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,354 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,354 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,354 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,354 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,354 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,354 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,354 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,355 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,355 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,355 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,355 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:13:15,355 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,355 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,355 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,355 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,355 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,356 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,356 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,356 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,356 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,356 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:15,356 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,356 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,356 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,356 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:13:15,356 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,356 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,356 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:15,356 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,356 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,356 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,356 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:15,356 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,356 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,356 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,357 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,357 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
10:13:15,584 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0.
10:13:15,585 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,585 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,585 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:13:15,585 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:13:15,585 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,585 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,585 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,586 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,586 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,586 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,586 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,586 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,587 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:13:15,587 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,587 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,587 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,587 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,587 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,587 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,587 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,587 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,587 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,587 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,587 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,588 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,588 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,588 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,588 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,588 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,588 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,588 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,588 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,588 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,588 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,589 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,589 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:13:15,589 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,589 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,589 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,589 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,589 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,589 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,589 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,590 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,590 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:13:15,590 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,590 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,590 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,590 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,590 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,591 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,591 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:13:15,591 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,591 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,591 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:13:15,591 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,591 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,591 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,591 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,591 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:13:15,592 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,592 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,592 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,592 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,592 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,592 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,592 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,593 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,593 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,593 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,593 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,593 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,593 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,593 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,593 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,593 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,593 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,593 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:15,594 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,594 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,594 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:13:15,594 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,594 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,594 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,594 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,594 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,594 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,594 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,594 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,594 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:15,595 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,595 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,595 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,595 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:13:15,595 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,595 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,595 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,595 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,595 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,595 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,596 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,596 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,596 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,596 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,596 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,596 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:13:15,596 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,596 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,596 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,596 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,596 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,597 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,597 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,597 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,597 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,597 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,597 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,597 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,597 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,597 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,597 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,597 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,598 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,598 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,598 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,598 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,598 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,598 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,598 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,598 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,598 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,598 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,599 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,599 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,599 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,599 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,599 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,599 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,599 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,599 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,599 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:13:15,599 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:13:15,600 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,600 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:13:15,600 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,600 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,600 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,600 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,600 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,600 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,600 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,601 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,601 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,601 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,601 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,601 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,601 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:13:15,601 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,601 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,601 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,602 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,602 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,602 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,602 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,602 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,602 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:13:15,602 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:15,602 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,602 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,603 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,603 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,603 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,603 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,603 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,603 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,603 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,603 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,603 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,604 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:13:15,604 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,604 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:13:15,604 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:13:15,604 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,604 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,604 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:13:15,604 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,604 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,605 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,605 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,605 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:15,605 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,605 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,605 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,605 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,605 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,605 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,605 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,606 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,606 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,606 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:15,606 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,606 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:15,606 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,606 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,606 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,606 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,606 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,606 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,606 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,606 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,606 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,607 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,607 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,607 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,607 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,607 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,607 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,607 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,607 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:13:15,607 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,607 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,607 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,607 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,607 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,607 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,607 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,607 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:15,607 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,607 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,607 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,607 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,607 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,607 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,608 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,608 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,608 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,608 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:15,608 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,608 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,608 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:13:15,608 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:15,608 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,608 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:13:15,608 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,608 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:13:15,608 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,608 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,608 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,608 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,608 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,608 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,608 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,608 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:13:15,608 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,608 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,609 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,609 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,609 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,609 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,609 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:15,609 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,609 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,609 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,609 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,609 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,609 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,609 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,609 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:13:15,609 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,609 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,609 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:13:15,609 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,609 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:13:15,609 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,609 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:13:15,609 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,609 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:13:15,610 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,610 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,610 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,610 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,610 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:15,610 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,610 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,610 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,610 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,610 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,610 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:15,610 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,610 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,610 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,610 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,610 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,610 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,610 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,610 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,610 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,610 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,610 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,610 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,611 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,611 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,611 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,611 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,611 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,611 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,611 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,611 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,611 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,611 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,611 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,611 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,611 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,611 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,611 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:13:15,611 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,611 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,611 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,611 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,611 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,611 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,611 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,611 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,611 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,612 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,612 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,612 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,612 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,612 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,612 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,612 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,612 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,612 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,612 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,612 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,612 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:15,612 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,612 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,612 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,612 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,612 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,612 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,613 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,613 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,613 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,613 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,613 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,613 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,613 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,613 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:15,613 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:13:15,613 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,613 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,613 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,613 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,613 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,613 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,613 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,613 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,613 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,613 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,613 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,613 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:13:15,613 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,613 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,614 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,614 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,614 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:15,614 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,614 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,614 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,614 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,614 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,614 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,614 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,614 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,614 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,614 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,614 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,614 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,614 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,614 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,614 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,614 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:13:15,614 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,614 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,614 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,614 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,614 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:13:15,615 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,615 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:13:15,615 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:13:15,615 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,615 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,615 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,615 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,615 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,615 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,615 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,615 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,615 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,615 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,615 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,615 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,615 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,615 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,615 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,615 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,615 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:15,615 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:15,615 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:13:15,615 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,615 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,615 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,616 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,616 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,616 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:15,616 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,616 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,616 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,616 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:13:15,616 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,616 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,616 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,616 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,616 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,616 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,616 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,616 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,616 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,616 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,616 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,616 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,616 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,616 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,616 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,616 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:13:15,616 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,617 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,617 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,617 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,617 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,617 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,617 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:15,617 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,617 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,617 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:15,617 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,617 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,617 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,617 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:13:15,617 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,617 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,617 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:15,617 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:15,617 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,617 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:15,617 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:15,617 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,617 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,617 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,618 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:15,618 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
