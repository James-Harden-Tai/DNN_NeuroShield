10:08:03,771 root DEBUG Check that model weights are dtype tf.float64: 	 <dtype: 'float64'>
10:08:03,772 root INFO eps: 1e-06
10:08:03,772 root INFO tol: 1e-06
10:08:03,773 root DEBUG Load dual points from file: ../data/dual_points_cifar10_3x256_64_10_float64.
10:08:03,781 root DEBUG 

=================== Experiment ID #0 	 Dual Point ID: 1 ===================
10:08:03,790 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.250E-08|<1.000E-06)
10:08:03,791 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:04,168 root DEBUG Side: ON	 Angle(dx0, dx): 2.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.689E-01 	 Total distance: 1.689E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([13], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:04,507 root DEBUG Side: OFF	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.479E-01 	 Total distance: 1.479E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([47], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:04,508 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:04,508 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -6.62 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:04,508 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:04,508 root DEBUG dOFF/dON = 0.9
10:08:04,508 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.50464933116724, 'dON1': 0.16885076737929616, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.16885076737929616, 'nTON': 1, 'dON': 0.16885076737929616, 'dxOFFAngle': 81.60057297923605, 'dOFF1': 0.14787414270558752, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.14787414270558752, 'nTOFF': 1, 'dOFF': 0.14787414270558752, 'SUCCESS': False}
10:08:04,526 root DEBUG 

=================== Experiment ID #1 	 Dual Point ID: 2 ===================
10:08:04,543 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.781E-08|<1.000E-06)
10:08:04,544 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:04,860 root DEBUG Side: ON	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.922E-02 	 Total distance: 2.922E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([126], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:05,19 root DEBUG Side: ON	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.011E-02 	 Total distance: 5.933E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([253], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:05,299 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.950E-02 	 Total distance: 3.950E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([0], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:05,299 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:05,299 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -20.06 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:05,299 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:05,299 root DEBUG dOFF/dON = 0.7
10:08:05,299 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.42168198136443, 'dON1': 0.059327773789167676, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.059327773789167676, 'nTON': 1, 'dON': 0.059327773789167676, 'dxOFFAngle': 89.45781652817934, 'dOFF1': 0.039499496936907755, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.039499496936907755, 'nTOFF': 1, 'dOFF': 0.039499496936907755, 'SUCCESS': False}
10:08:05,306 root DEBUG 

=================== Experiment ID #2 	 Dual Point ID: 3 ===================
10:08:05,317 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.002E-08|<1.000E-06)
10:08:05,317 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:05,703 root DEBUG Side: ON	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.369E-02 	 Total distance: 5.369E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([103], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:06,17 root DEBUG Side: OFF	 Angle(dx0, dx): 0.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.391E-02 	 Total distance: 4.391E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([20], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:06,17 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:06,18 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -10.02 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:06,18 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:06,18 root DEBUG dOFF/dON = 0.8
10:08:06,18 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.43058654357482, 'dON1': 0.05369260923321973, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.05369260923321973, 'nTON': 1, 'dON': 0.05369260923321973, 'dxOFFAngle': 86.17015730766938, 'dOFF1': 0.043911389780464875, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.043911389780464875, 'nTOFF': 1, 'dOFF': 0.043911389780464875, 'SUCCESS': False}
10:08:06,33 root DEBUG 

=================== Experiment ID #3 	 Dual Point ID: 4 ===================
10:08:06,43 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.404E-08|<1.000E-06)
10:08:06,44 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:06,373 root DEBUG Side: ON	 Angle(dx0, dx): 2.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.196E-03 	 Total distance: 3.196E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([164], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:06,734 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.032E-01 	 Total distance: 2.032E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([38], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:06,734 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:06,734 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 96.90 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:06,734 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:06,734 root DEBUG dOFF/dON = 63.6
10:08:06,734 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.85474870796666, 'dON1': 0.0031959515275894485, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.0031959515275894485, 'nTON': 1, 'dON': 0.0031959515275894485, 'dxOFFAngle': 82.2411975942043, 'dOFF1': 0.20324110481692326, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.20324110481692326, 'nTOFF': 1, 'dOFF': 0.20324110481692326, 'SUCCESS': True}
10:08:06,743 root DEBUG 

=================== Experiment ID #4 	 Dual Point ID: 5 ===================
10:08:06,753 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.460E-08|<1.000E-06)
10:08:06,753 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:07,114 root DEBUG Side: ON	 Angle(dx0, dx): 3.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.016E-02 	 Total distance: 3.016E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([152], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:07,510 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.605E-02 	 Total distance: 6.605E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([69], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:07,510 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:07,510 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 37.30 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:07,511 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:07,511 root DEBUG dOFF/dON = 2.2
10:08:07,511 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.74138699129759, 'dON1': 0.030162382927542128, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.030162382927542128, 'nTON': 1, 'dON': 0.030162382927542128, 'dxOFFAngle': 79.25614965373512, 'dOFF1': 0.06605108108997679, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.06605108108997679, 'nTOFF': 1, 'dOFF': 0.06605108108997679, 'SUCCESS': True}
10:08:07,520 root DEBUG 

=================== Experiment ID #5 	 Dual Point ID: 6 ===================
10:08:07,528 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.815E-08|<1.000E-06)
10:08:07,529 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:07,798 root DEBUG Side: ON	 Angle(dx0, dx): 3.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.243E-02 	 Total distance: 2.243E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([180], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:08:08,82 root DEBUG Side: OFF	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.307E-01 	 Total distance: 2.307E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([255], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:08:08,82 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:08,82 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 82.27 	 cIDON = [5 9], cIDOFF = [5 9]
10:08:08,82 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:08,82 root DEBUG dOFF/dON = 10.3
10:08:08,82 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.37756961207977, 'dON1': 0.022433929079511368, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.022433929079511368, 'nTON': 1, 'dON': 0.022433929079511368, 'dxOFFAngle': 85.56939246792714, 'dOFF1': 0.2306661564438633, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.2306661564438633, 'nTOFF': 1, 'dOFF': 0.2306661564438633, 'SUCCESS': True}
10:08:08,97 root DEBUG 

=================== Experiment ID #6 	 Dual Point ID: 7 ===================
10:08:08,108 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.277E-07|<1.000E-06)
10:08:08,108 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:08,402 root DEBUG Side: ON	 Angle(dx0, dx): 5.85 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.408E-02 	 Total distance: 8.408E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([48], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:08:08,676 root DEBUG Side: OFF	 Angle(dx0, dx): 1.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.244E-03 	 Total distance: 1.244E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([203], dtype=int64), array([[False]])]] 	 class: [3 9]
10:08:08,676 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:08,676 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -97.08 	 cIDON = [3 9], cIDOFF = [3 9]
10:08:08,676 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:08,676 root DEBUG dOFF/dON = 0.0
10:08:08,676 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.73652442936393, 'dON1': 0.08408497165480298, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.08408497165480298, 'nTON': 1, 'dON': 0.08408497165480298, 'dxOFFAngle': 82.63755732522066, 'dOFF1': 0.0012444256009503892, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.0012444256009503892, 'nTOFF': 1, 'dOFF': 0.0012444256009503892, 'SUCCESS': False}
10:08:08,692 root DEBUG 

=================== Experiment ID #7 	 Dual Point ID: 8 ===================
10:08:08,704 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.716E-09|<1.000E-06)
10:08:08,704 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:09,105 root DEBUG Side: ON	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.964E-02 	 Total distance: 4.964E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([51], dtype=int64), array([[False]])]] 	 class: [2 6]
10:08:09,411 root DEBUG Side: OFF	 Angle(dx0, dx): 0.89 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.296E-02 	 Total distance: 2.296E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([241], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:08:09,412 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:09,412 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -36.74 	 cIDON = [2 6], cIDOFF = [2 6]
10:08:09,412 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:09,412 root DEBUG dOFF/dON = 0.5
10:08:09,412 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.41311102599802, 'dON1': 0.04963515456651878, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.04963515456651878, 'nTON': 1, 'dON': 0.04963515456651878, 'dxOFFAngle': 87.5431596904015, 'dOFF1': 0.022960664295817935, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.022960664295817935, 'nTOFF': 1, 'dOFF': 0.022960664295817935, 'SUCCESS': False}
10:08:09,421 root DEBUG 

=================== Experiment ID #8 	 Dual Point ID: 9 ===================
10:08:09,430 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.890E-09|<1.000E-06)
10:08:09,430 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:09,772 root DEBUG Side: ON	 Angle(dx0, dx): 2.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.230E-01 	 Total distance: 1.230E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([48], dtype=int64), array([[ True]])]] 	 class: [1 3]
10:08:10,84 root DEBUG Side: OFF	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.735E-01 	 Total distance: 1.735E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([58], dtype=int64), array([[False]])]] 	 class: [0 3]
10:08:10,85 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:10,85 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 17.04 	 cIDON = [1 3], cIDOFF = [0 3]
10:08:10,85 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:10,85 root DEBUG dOFF/dON = 1.4
10:08:10,85 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.77452450621855, 'dON1': 0.12296061212615532, 'cIDON1': array([1, 3], dtype=int64), 'dON_patch_1': 0.12296061212615532, 'nTON': 1, 'dON': 0.12296061212615532, 'dxOFFAngle': 87.7046330547222, 'dOFF1': 0.1734567470390981, 'cIDOFF1': array([0, 3], dtype=int64), 'dOFF_patch_1': 0.1734567470390981, 'nTOFF': 1, 'dOFF': 0.1734567470390981, 'SUCCESS': True}
10:08:10,96 root DEBUG 

=================== Experiment ID #9 	 Dual Point ID: 10 ===================
10:08:10,103 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.047E-11|<1.000E-06)
10:08:10,103 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:10,431 root DEBUG Side: ON	 Angle(dx0, dx): 1.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.046E-02 	 Total distance: 4.046E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([92], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:08:10,687 root DEBUG Side: OFF	 Angle(dx0, dx): 2.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.692E-02 	 Total distance: 1.692E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([5], dtype=int64), array([[False]])]] 	 class: [2 4]
10:08:10,687 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:10,687 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -41.03 	 cIDON = [2 4], cIDOFF = [2 4]
10:08:10,687 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:10,687 root DEBUG dOFF/dON = 0.4
10:08:10,687 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.5617652126636, 'dON1': 0.04045533376677202, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.04045533376677202, 'nTON': 1, 'dON': 0.04045533376677202, 'dxOFFAngle': 87.72335308073015, 'dOFF1': 0.016917443437449588, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.016917443437449588, 'nTOFF': 1, 'dOFF': 0.016917443437449588, 'SUCCESS': False}
10:08:10,696 root DEBUG 

=================== Experiment ID #10 	 Dual Point ID: 11 ===================
10:08:10,706 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.073E-08|<1.000E-06)
10:08:10,706 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:10,997 root DEBUG Side: ON	 Angle(dx0, dx): 0.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.412E-01 	 Total distance: 1.412E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([76], dtype=int64), array([[ True]])]] 	 class: [1 4]
10:08:11,209 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.774E-02 	 Total distance: 1.789E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([82], dtype=int64), array([[False]])]] 	 class: [1 4]
10:08:11,435 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.065E-02 	 Total distance: 2.496E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([98], dtype=int64), array([[False]])]] 	 class: [1 4]
10:08:11,767 root DEBUG Side: OFF	 Angle(dx0, dx): 1.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.808E-02 	 Total distance: 5.808E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([98], dtype=int64), array([[False]])]] 	 class: [0 4]
10:08:11,768 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:11,769 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -62.24 	 cIDON = [1 4], cIDOFF = [0 4]
10:08:11,769 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:11,770 root DEBUG dOFF/dON = 0.2
10:08:11,770 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.87644645503406, 'dON1': 0.24957915706054434, 'cIDON1': array([1, 4], dtype=int64), 'dON_patch_1': 0.24957915706054434, 'nTON': 1, 'dON': 0.24957915706054434, 'dxOFFAngle': 80.59272125818397, 'dOFF1': 0.05808090219493732, 'cIDOFF1': array([0, 4], dtype=int64), 'dOFF_patch_1': 0.05808090219493732, 'nTOFF': 1, 'dOFF': 0.05808090219493732, 'SUCCESS': False}
10:08:11,784 root DEBUG 

=================== Experiment ID #11 	 Dual Point ID: 12 ===================
10:08:11,797 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.766E-09|<1.000E-06)
10:08:11,797 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:12,130 root DEBUG Side: ON	 Angle(dx0, dx): 1.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.079E-02 	 Total distance: 3.079E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([234], dtype=int64), array([[ True]])]] 	 class: [0 3]
10:08:12,429 root DEBUG Side: OFF	 Angle(dx0, dx): 0.96 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.680E-02 	 Total distance: 4.680E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([170], dtype=int64), array([[ True]])]] 	 class: [1 3]
10:08:12,647 root DEBUG Side: OFF	 Angle(dx0, dx): 1.87 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.840E-02 	 Total distance: 6.520E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([30], dtype=int64), array([[False]])]] 	 class: [1 3]
10:08:12,647 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:12,647 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 35.85 	 cIDON = [0 3], cIDOFF = [1 3]
10:08:12,648 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:12,648 root DEBUG dOFF/dON = 2.1
10:08:12,648 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.3389254776339, 'dON1': 0.030793127219889617, 'cIDON1': array([0, 3], dtype=int64), 'dON_patch_1': 0.030793127219889617, 'nTON': 1, 'dON': 0.030793127219889617, 'dxOFFAngle': 83.66824842528982, 'dOFF1': 0.0652030867501208, 'cIDOFF1': array([1, 3], dtype=int64), 'dOFF_patch_1': 0.0652030867501208, 'nTOFF': 1, 'dOFF': 0.0652030867501208, 'SUCCESS': True}
10:08:12,659 root DEBUG 

=================== Experiment ID #12 	 Dual Point ID: 13 ===================
10:08:12,669 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.453E-07|<1.000E-06)
10:08:12,670 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:13,9 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.604E-03 	 Total distance: 3.604E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([200], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:08:13,280 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.061E-01 	 Total distance: 2.061E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([16], dtype=int64), array([[False]])]] 	 class: [3 4]
10:08:13,486 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.680E-02 	 Total distance: 2.529E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([46], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:08:13,698 root DEBUG Side: OFF	 Angle(dx0, dx): 1.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.392E-01 	 Total distance: 3.922E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([60], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:08:13,699 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:13,699 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 98.18 	 cIDON = [3 4], cIDOFF = [3 4]
10:08:13,699 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:13,699 root DEBUG dOFF/dON = 108.8
10:08:13,699 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.19718418620967, 'dON1': 0.003604045287930941, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.003604045287930941, 'nTON': 1, 'dON': 0.003604045287930941, 'dxOFFAngle': 83.21156464646003, 'dOFF1': 0.39216428952377624, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.39216428952377624, 'nTOFF': 1, 'dOFF': 0.39216428952377624, 'SUCCESS': True}
10:08:13,710 root DEBUG 

=================== Experiment ID #13 	 Dual Point ID: 14 ===================
10:08:13,721 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.168E-07|<1.000E-06)
10:08:13,722 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:14,7 root DEBUG Side: ON	 Angle(dx0, dx): 2.95 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.267E-03 	 Total distance: 7.267E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([7], dtype=int64), array([[False]])]] 	 class: [1 8]
10:08:14,352 root DEBUG Side: OFF	 Angle(dx0, dx): 0.78 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.304E-02 	 Total distance: 3.304E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([7], dtype=int64), array([[False]])]] 	 class: [0 8]
10:08:14,353 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:14,353 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 63.94 	 cIDON = [1 8], cIDOFF = [0 8]
10:08:14,353 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:14,353 root DEBUG dOFF/dON = 4.5
10:08:14,353 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.52663176886904, 'dON1': 0.0072669990859625935, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 0.0072669990859625935, 'nTON': 1, 'dON': 0.0072669990859625935, 'dxOFFAngle': 86.62505578932073, 'dOFF1': 0.033038278603372086, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.033038278603372086, 'nTOFF': 1, 'dOFF': 0.033038278603372086, 'SUCCESS': True}
10:08:14,369 root DEBUG 

=================== Experiment ID #14 	 Dual Point ID: 15 ===================
10:08:14,377 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.555E-08|<1.000E-06)
10:08:14,377 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:14,703 root DEBUG Side: ON	 Angle(dx0, dx): 0.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.031E-02 	 Total distance: 9.031E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([131], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:08:15,91 root DEBUG Side: OFF	 Angle(dx0, dx): 1.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.173E-01 	 Total distance: 1.173E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([254], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:08:15,91 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:15,92 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 13.01 	 cIDON = [6 7], cIDOFF = [6 7]
10:08:15,92 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:15,92 root DEBUG dOFF/dON = 1.3
10:08:15,92 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.32862523892726, 'dON1': 0.0903050883281478, 'cIDON1': array([6, 7], dtype=int64), 'dON_patch_1': 0.0903050883281478, 'nTON': 1, 'dON': 0.0903050883281478, 'dxOFFAngle': 87.15743096460949, 'dOFF1': 0.11732286906035945, 'cIDOFF1': array([6, 7], dtype=int64), 'dOFF_patch_1': 0.11732286906035945, 'nTOFF': 1, 'dOFF': 0.11732286906035945, 'SUCCESS': True}
10:08:15,106 root DEBUG 

=================== Experiment ID #15 	 Dual Point ID: 16 ===================
10:08:15,116 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.693E-08|<1.000E-06)
10:08:15,116 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:15,450 root DEBUG Side: ON	 Angle(dx0, dx): 3.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.514E-02 	 Total distance: 8.514E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([44], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:08:15,806 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.898E-02 	 Total distance: 1.898E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([38], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:08:15,806 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:15,807 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -63.54 	 cIDON = [4 5], cIDOFF = [4 5]
10:08:15,807 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:15,807 root DEBUG dOFF/dON = 0.2
10:08:15,807 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 73.05011059521449, 'dON1': 0.08514477506421109, 'cIDON1': array([4, 5], dtype=int64), 'dON_patch_1': 0.08514477506421109, 'nTON': 1, 'dON': 0.08514477506421109, 'dxOFFAngle': 76.45258088106495, 'dOFF1': 0.018984980985422797, 'cIDOFF1': array([4, 5], dtype=int64), 'dOFF_patch_1': 0.018984980985422797, 'nTOFF': 1, 'dOFF': 0.018984980985422797, 'SUCCESS': False}
10:08:15,817 root DEBUG 

=================== Experiment ID #16 	 Dual Point ID: 17 ===================
10:08:15,829 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.300E-07|<1.000E-06)
10:08:15,829 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:16,161 root DEBUG Side: ON	 Angle(dx0, dx): 2.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.906E-02 	 Total distance: 7.906E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([54], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:08:16,512 root DEBUG Side: OFF	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.739E-02 	 Total distance: 9.739E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([207], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:08:16,512 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:16,513 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 10.38 	 cIDON = [2 6], cIDOFF = [2 6]
10:08:16,513 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:16,513 root DEBUG dOFF/dON = 1.2
10:08:16,513 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.26313993489826, 'dON1': 0.07906310211368237, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.07906310211368237, 'nTON': 1, 'dON': 0.07906310211368237, 'dxOFFAngle': 79.03452473283406, 'dOFF1': 0.09738656409419362, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.09738656409419362, 'nTOFF': 1, 'dOFF': 0.09738656409419362, 'SUCCESS': True}
10:08:16,523 root DEBUG 

=================== Experiment ID #17 	 Dual Point ID: 18 ===================
10:08:16,534 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.622E-08|<1.000E-06)
10:08:16,534 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:16,821 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.340E-01 	 Total distance: 1.340E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([240], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:08:17,53 root DEBUG Side: ON	 Angle(dx0, dx): 1.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.142E-02 	 Total distance: 1.754E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([178], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:08:17,433 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.830E-02 	 Total distance: 8.830E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([243], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:08:17,433 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:17,433 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -33.03 	 cIDON = [2 8], cIDOFF = [2 8]
10:08:17,433 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:17,433 root DEBUG dOFF/dON = 0.5
10:08:17,433 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.31064241103732, 'dON1': 0.1753846772742299, 'cIDON1': array([2, 8], dtype=int64), 'dON_patch_1': 0.1753846772742299, 'nTON': 1, 'dON': 0.1753846772742299, 'dxOFFAngle': 87.79278288722422, 'dOFF1': 0.08829553372753045, 'cIDOFF1': array([2, 8], dtype=int64), 'dOFF_patch_1': 0.08829553372753045, 'nTOFF': 1, 'dOFF': 0.08829553372753045, 'SUCCESS': False}
10:08:17,447 root DEBUG 

=================== Experiment ID #18 	 Dual Point ID: 19 ===================
10:08:17,460 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.710E-08|<1.000E-06)
10:08:17,460 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:17,782 root DEBUG Side: ON	 Angle(dx0, dx): 0.84 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.966E-03 	 Total distance: 3.966E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([18], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:18,93 root DEBUG Side: OFF	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.200E-02 	 Total distance: 4.200E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([149], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:18,93 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:18,94 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 82.75 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:18,94 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:18,95 root DEBUG dOFF/dON = 10.6
10:08:18,95 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.32549698302293, 'dON1': 0.003965529992161698, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.003965529992161698, 'nTON': 1, 'dON': 0.003965529992161698, 'dxOFFAngle': 88.86628774918898, 'dOFF1': 0.04200082312576661, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.04200082312576661, 'nTOFF': 1, 'dOFF': 0.04200082312576661, 'SUCCESS': True}
10:08:18,108 root DEBUG 

=================== Experiment ID #19 	 Dual Point ID: 20 ===================
10:08:18,120 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.179E-07|<1.000E-06)
10:08:18,120 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:18,560 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.117E-01 	 Total distance: 6.117E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([209], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:08:18,905 root DEBUG Side: OFF	 Angle(dx0, dx): 0.78 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.638E-01 	 Total distance: 2.638E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([69], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:08:18,905 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:18,906 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -39.74 	 cIDON = [4 9], cIDOFF = [4 9]
10:08:18,906 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:18,906 root DEBUG dOFF/dON = 0.4
10:08:18,906 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.43125431257991, 'dON1': 0.6117305530798812, 'cIDON1': array([4, 9], dtype=int64), 'dON_patch_1': 0.6117305530798812, 'nTON': 1, 'dON': 0.6117305530798812, 'dxOFFAngle': 88.06145592375246, 'dOFF1': 0.26379444006523745, 'cIDOFF1': array([4, 9], dtype=int64), 'dOFF_patch_1': 0.26379444006523745, 'nTOFF': 1, 'dOFF': 0.26379444006523745, 'SUCCESS': False}
10:08:18,918 root DEBUG 

=================== Experiment ID #20 	 Dual Point ID: 21 ===================
10:08:18,924 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.193E-08|<1.000E-06)
10:08:18,925 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:19,231 root DEBUG Side: ON	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.438E-01 	 Total distance: 1.438E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([242], dtype=int64), array([[False]])]] 	 class: [0 9]
10:08:19,532 root DEBUG Side: OFF	 Angle(dx0, dx): 0.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.169E-01 	 Total distance: 1.169E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([49], dtype=int64), array([[False]])]] 	 class: [1 9]
10:08:19,533 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:19,533 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -10.33 	 cIDON = [0 9], cIDOFF = [1 9]
10:08:19,533 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:19,534 root DEBUG dOFF/dON = 0.8
10:08:19,534 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.32688678287913, 'dON1': 0.14380579106890148, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.14380579106890148, 'nTON': 1, 'dON': 0.14380579106890148, 'dxOFFAngle': 89.39619821196457, 'dOFF1': 0.11688154700018223, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.11688154700018223, 'nTOFF': 1, 'dOFF': 0.11688154700018223, 'SUCCESS': False}
10:08:19,547 root DEBUG 

=================== Experiment ID #21 	 Dual Point ID: 22 ===================
10:08:19,559 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.504E-09|<1.000E-06)
10:08:19,559 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:19,865 root DEBUG Side: ON	 Angle(dx0, dx): 8.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.785E-06 	 Total distance: 1.785E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 2]
10:08:20,199 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.746E-02 	 Total distance: 2.746E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([180], dtype=int64), array([[False]])]] 	 class: [1 2]
10:08:20,546 root DEBUG Side: OFF	 Angle(dx0, dx): 1.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.275E-01 	 Total distance: 2.549E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([233], dtype=int64), array([[ True]])]] 	 class: [1 2]
10:08:20,547 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:20,547 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [0 2], cIDOFF = [1 2]
10:08:20,547 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:20,547 root DEBUG dOFF/dON = 142796.5
10:08:20,547 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.35263714769295, 'dON1': 1.7852919141959577e-06, 'cIDON1': array([0, 2], dtype=int64), 'dON_patch_1': 1.7852919141959577e-06, 'nTON': 1, 'dON': 1.7852919141959577e-06, 'dxOFFAngle': 85.20603122765765, 'dOFF1': 0.25493337687455103, 'cIDOFF1': array([1, 2], dtype=int64), 'dOFF_patch_1': 0.25493337687455103, 'nTOFF': 1, 'dOFF': 0.25493337687455103, 'SUCCESS': True}
10:08:20,562 root DEBUG 

=================== Experiment ID #22 	 Dual Point ID: 23 ===================
10:08:20,581 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.102E-08|<1.000E-06)
10:08:20,581 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:21,16 root DEBUG Side: ON	 Angle(dx0, dx): 1.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.607E-02 	 Total distance: 1.607E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([2], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:21,337 root DEBUG Side: OFF	 Angle(dx0, dx): 0.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.425E-03 	 Total distance: 9.425E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([179], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:21,337 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:21,338 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -26.07 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:21,338 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:21,338 root DEBUG dOFF/dON = 0.6
10:08:21,338 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.89831190891735, 'dON1': 0.01607212307892687, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.01607212307892687, 'nTON': 1, 'dON': 0.01607212307892687, 'dxOFFAngle': 87.08441379132728, 'dOFF1': 0.009424593655686165, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.009424593655686165, 'nTOFF': 1, 'dOFF': 0.009424593655686165, 'SUCCESS': False}
10:08:21,349 root DEBUG 

=================== Experiment ID #23 	 Dual Point ID: 24 ===================
10:08:21,359 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.138E-08|<1.000E-06)
10:08:21,359 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:21,720 root DEBUG Side: ON	 Angle(dx0, dx): 1.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.724E-02 	 Total distance: 3.724E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([141], dtype=int64), array([[False]])]] 	 class: [0 7]
10:08:21,965 root DEBUG Side: OFF	 Angle(dx0, dx): 8.79 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.321E-05 	 Total distance: 3.321E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 7]
10:08:21,966 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:21,966 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.82 	 cIDON = [0 7], cIDOFF = [1 7]
10:08:21,966 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:21,966 root DEBUG dOFF/dON = 0.0
10:08:21,966 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.63018266846849, 'dON1': 0.03723793928220758, 'cIDON1': array([0, 7], dtype=int64), 'dON_patch_1': 0.03723793928220758, 'nTON': 1, 'dON': 0.03723793928220758, 'dxOFFAngle': 80.30888474183445, 'dOFF1': 3.320803859466512e-05, 'cIDOFF1': array([1, 7], dtype=int64), 'dOFF_patch_1': 3.320803859466512e-05, 'nTOFF': 1, 'dOFF': 3.320803859466512e-05, 'SUCCESS': False}
10:08:21,972 root DEBUG 

=================== Experiment ID #24 	 Dual Point ID: 25 ===================
10:08:21,980 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.166E-08|<1.000E-06)
10:08:21,980 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:22,396 root DEBUG Side: ON	 Angle(dx0, dx): 0.99 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.343E-02 	 Total distance: 1.343E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([127], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:08:22,767 root DEBUG Side: OFF	 Angle(dx0, dx): 2.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.671E-02 	 Total distance: 9.671E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([186], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:08:22,767 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:22,767 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 75.61 	 cIDON = [5 9], cIDOFF = [5 9]
10:08:22,768 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:22,768 root DEBUG dOFF/dON = 7.2
10:08:22,768 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.65055795157636, 'dON1': 0.013434942638040884, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.013434942638040884, 'nTON': 1, 'dON': 0.013434942638040884, 'dxOFFAngle': 83.41278981947656, 'dOFF1': 0.09671496190185769, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.09671496190185769, 'nTOFF': 1, 'dOFF': 0.09671496190185769, 'SUCCESS': True}
10:08:22,777 root DEBUG 

=================== Experiment ID #25 	 Dual Point ID: 26 ===================
10:08:22,787 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.781E-07|<1.000E-06)
10:08:22,788 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:23,182 root DEBUG Side: ON	 Angle(dx0, dx): 1.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.052E-02 	 Total distance: 9.052E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([240], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:23,541 root DEBUG Side: OFF	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.973E-01 	 Total distance: 2.973E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([169], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:23,541 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:23,542 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 53.32 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:23,542 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:23,542 root DEBUG dOFF/dON = 3.3
10:08:23,542 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.27331238787292, 'dON1': 0.09051514537046378, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.09051514537046378, 'nTON': 1, 'dON': 0.09051514537046378, 'dxOFFAngle': 83.83286895708314, 'dOFF1': 0.29730371520735865, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.29730371520735865, 'nTOFF': 1, 'dOFF': 0.29730371520735865, 'SUCCESS': True}
10:08:23,552 root DEBUG 

=================== Experiment ID #26 	 Dual Point ID: 27 ===================
10:08:23,560 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.246E-09|<1.000E-06)
10:08:23,560 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:23,913 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.816E-02 	 Total distance: 5.816E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([146], dtype=int64), array([[False]])]] 	 class: [4 9]
10:08:24,240 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.523E-02 	 Total distance: 5.523E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([78], dtype=int64), array([[False]])]] 	 class: [4 9]
10:08:24,469 root DEBUG Side: OFF	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.283E-02 	 Total distance: 9.806E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([90], dtype=int64), array([[False]])]] 	 class: [4 9]
10:08:24,469 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:24,469 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 25.54 	 cIDON = [4 9], cIDOFF = [4 9]
10:08:24,469 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:24,469 root DEBUG dOFF/dON = 1.7
10:08:24,469 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.45470271973447, 'dON1': 0.05816163725645569, 'cIDON1': array([4, 9], dtype=int64), 'dON_patch_1': 0.05816163725645569, 'nTON': 1, 'dON': 0.05816163725645569, 'dxOFFAngle': 78.74776570114942, 'dOFF1': 0.0980628078524704, 'cIDOFF1': array([4, 9], dtype=int64), 'dOFF_patch_1': 0.0980628078524704, 'nTOFF': 1, 'dOFF': 0.0980628078524704, 'SUCCESS': True}
10:08:24,479 root DEBUG 

=================== Experiment ID #27 	 Dual Point ID: 28 ===================
10:08:24,489 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.530E-08|<1.000E-06)
10:08:24,489 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:24,804 root DEBUG Side: ON	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.017E-02 	 Total distance: 2.017E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([14], dtype=int64), array([[False]])]] 	 class: [1 4]
10:08:25,4 root DEBUG Side: ON	 Angle(dx0, dx): 1.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.975E-02 	 Total distance: 6.992E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([205], dtype=int64), array([[False]])]] 	 class: [1 4]
10:08:25,287 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.263E-01 	 Total distance: 1.263E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([184], dtype=int64), array([[ True]])]] 	 class: [0 4]
10:08:25,287 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:25,288 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 28.73 	 cIDON = [1 4], cIDOFF = [0 4]
10:08:25,288 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:25,288 root DEBUG dOFF/dON = 1.8
10:08:25,288 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.35928522971106, 'dON1': 0.06992401860203254, 'cIDON1': array([1, 4], dtype=int64), 'dON_patch_1': 0.06992401860203254, 'nTON': 1, 'dON': 0.06992401860203254, 'dxOFFAngle': 89.84931716298135, 'dOFF1': 0.12630735124387488, 'cIDOFF1': array([0, 4], dtype=int64), 'dOFF_patch_1': 0.12630735124387488, 'nTOFF': 1, 'dOFF': 0.12630735124387488, 'SUCCESS': True}
10:08:25,297 root DEBUG 

=================== Experiment ID #28 	 Dual Point ID: 29 ===================
10:08:25,303 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.923E-08|<1.000E-06)
10:08:25,304 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:25,546 root DEBUG Side: ON	 Angle(dx0, dx): 10.60 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.592E-06 	 Total distance: 3.592E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 9]
10:08:25,955 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.856E-01 	 Total distance: 5.856E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([165], dtype=int64), array([[False]])]] 	 class: [0 9]
10:08:25,955 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:25,956 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [1 9], cIDOFF = [0 9]
10:08:25,956 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:25,956 root DEBUG dOFF/dON = 163016.4
10:08:25,956 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.09610048175179, 'dON1': 3.5923613288023884e-06, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 3.5923613288023884e-06, 'nTON': 1, 'dON': 3.5923613288023884e-06, 'dxOFFAngle': 87.32966857976795, 'dOFF1': 0.585613667723411, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.585613667723411, 'nTOFF': 1, 'dOFF': 0.585613667723411, 'SUCCESS': True}
10:08:25,967 root DEBUG 

=================== Experiment ID #29 	 Dual Point ID: 30 ===================
10:08:25,977 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.903E-08|<1.000E-06)
10:08:25,977 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:26,312 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.286E-02 	 Total distance: 6.286E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([25], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:08:26,666 root DEBUG Side: OFF	 Angle(dx0, dx): 1.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.889E-01 	 Total distance: 2.889E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([178], dtype=int64), array([[False]])]] 	 class: [2 3]
10:08:26,666 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:26,666 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 64.26 	 cIDON = [2 3], cIDOFF = [2 3]
10:08:26,666 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:26,667 root DEBUG dOFF/dON = 4.6
10:08:26,667 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.39346998391771, 'dON1': 0.06286104499027073, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.06286104499027073, 'nTON': 1, 'dON': 0.06286104499027073, 'dxOFFAngle': 89.25568497374799, 'dOFF1': 0.28887755780833946, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.28887755780833946, 'nTOFF': 1, 'dOFF': 0.28887755780833946, 'SUCCESS': True}
10:08:26,677 root DEBUG 

=================== Experiment ID #30 	 Dual Point ID: 31 ===================
10:08:26,685 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.580E-07|<1.000E-06)
10:08:26,685 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:26,993 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.040E-02 	 Total distance: 3.040E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([225], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:27,252 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.018E-01 	 Total distance: 3.322E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([18], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:27,575 root DEBUG Side: OFF	 Angle(dx0, dx): 0.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.317E-02 	 Total distance: 1.317E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([47], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:27,859 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.840E-01 	 Total distance: 5.972E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([34], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:27,859 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:27,859 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 28.52 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:27,859 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:27,859 root DEBUG dOFF/dON = 1.8
10:08:27,859 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.62103197893065, 'dON1': 0.33216562590967214, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.33216562590967214, 'nTON': 1, 'dON': 0.33216562590967214, 'dxOFFAngle': 89.12635388679867, 'dOFF1': 0.5971738481248168, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.5971738481248168, 'nTOFF': 1, 'dOFF': 0.5971738481248168, 'SUCCESS': True}
10:08:27,869 root DEBUG 

=================== Experiment ID #31 	 Dual Point ID: 32 ===================
10:08:27,876 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.595E-09|<1.000E-06)
10:08:27,877 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:28,196 root DEBUG Side: ON	 Angle(dx0, dx): 0.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.670E-02 	 Total distance: 9.670E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([32], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:28,499 root DEBUG Side: OFF	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.034E+00 	 Total distance: 1.034E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([132], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:28,500 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:28,500 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 82.90 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:28,500 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:28,500 root DEBUG dOFF/dON = 10.7
10:08:28,500 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.34816614565287, 'dON1': 0.09669670720215283, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.09669670720215283, 'nTON': 1, 'dON': 0.09669670720215283, 'dxOFFAngle': 86.56330079835745, 'dOFF1': 1.0341399037881798, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 1.0341399037881798, 'nTOFF': 1, 'dOFF': 1.0341399037881798, 'SUCCESS': True}
10:08:28,515 root DEBUG 

=================== Experiment ID #32 	 Dual Point ID: 33 ===================
10:08:28,526 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.386E-08|<1.000E-06)
10:08:28,526 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:28,917 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.293E-02 	 Total distance: 9.293E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([177], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:29,201 root DEBUG Side: OFF	 Angle(dx0, dx): 0.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.629E-01 	 Total distance: 1.629E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([112], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:29,201 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:29,201 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 27.34 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:29,202 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:29,202 root DEBUG dOFF/dON = 1.8
10:08:29,202 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.4966594533856, 'dON1': 0.09293228793376486, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.09293228793376486, 'nTON': 1, 'dON': 0.09293228793376486, 'dxOFFAngle': 89.20654214779302, 'dOFF1': 0.1628609155857401, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.1628609155857401, 'nTOFF': 1, 'dOFF': 0.1628609155857401, 'SUCCESS': True}
10:08:29,214 root DEBUG 

=================== Experiment ID #33 	 Dual Point ID: 34 ===================
10:08:29,222 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.281E-08|<1.000E-06)
10:08:29,223 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:29,569 root DEBUG Side: ON	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.057E-01 	 Total distance: 2.057E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([197], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:29,757 root DEBUG Side: ON	 Angle(dx0, dx): 0.86 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.866E-02 	 Total distance: 2.643E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([4], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:30,94 root DEBUG Side: OFF	 Angle(dx0, dx): 1.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.752E-02 	 Total distance: 6.752E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([248], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:30,94 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:30,94 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -59.31 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:30,94 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:30,95 root DEBUG dOFF/dON = 0.3
10:08:30,95 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.20332595732665, 'dON1': 0.26434062803725017, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.26434062803725017, 'nTON': 1, 'dON': 0.26434062803725017, 'dxOFFAngle': 82.39698980932296, 'dOFF1': 0.0675216687945704, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.0675216687945704, 'nTOFF': 1, 'dOFF': 0.0675216687945704, 'SUCCESS': False}
10:08:30,105 root DEBUG 

=================== Experiment ID #34 	 Dual Point ID: 35 ===================
10:08:30,116 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.507E-07|<1.000E-06)
10:08:30,116 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:30,418 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.634E-01 	 Total distance: 1.634E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([206], dtype=int64), array([[False]])]] 	 class: [0 2]
10:08:30,638 root DEBUG Side: OFF	 Angle(dx0, dx): 6.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.250E-05 	 Total distance: 1.250E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 2]
10:08:30,638 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:30,639 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.98 	 cIDON = [0 2], cIDOFF = [1 2]
10:08:30,639 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:30,639 root DEBUG dOFF/dON = 0.0
10:08:30,639 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.12349142430291, 'dON1': 0.16337297224711184, 'cIDON1': array([0, 2], dtype=int64), 'dON_patch_1': 0.16337297224711184, 'nTON': 1, 'dON': 0.16337297224711184, 'dxOFFAngle': 82.32693885784383, 'dOFF1': 1.249779730761689e-05, 'cIDOFF1': array([1, 2], dtype=int64), 'dOFF_patch_1': 1.249779730761689e-05, 'nTOFF': 1, 'dOFF': 1.249779730761689e-05, 'SUCCESS': False}
10:08:30,645 root DEBUG 

=================== Experiment ID #35 	 Dual Point ID: 36 ===================
10:08:30,654 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.289E-08|<1.000E-06)
10:08:30,654 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:30,910 root DEBUG Side: ON	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.618E-02 	 Total distance: 7.618E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([219], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:08:31,135 root DEBUG Side: ON	 Angle(dx0, dx): 3.95 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.466E-02 	 Total distance: 1.008E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([160], dtype=int64), array([[False]])]] 	 class: [2 5]
10:08:31,421 root DEBUG Side: OFF	 Angle(dx0, dx): 1.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.630E-03 	 Total distance: 9.630E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([200], dtype=int64), array([[False]])]] 	 class: [2 5]
10:08:31,421 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:31,422 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -82.57 	 cIDON = [2 5], cIDOFF = [2 5]
10:08:31,422 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:31,422 root DEBUG dOFF/dON = 0.1
10:08:31,422 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.16434844330456, 'dON1': 0.1008385007536003, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.1008385007536003, 'nTON': 1, 'dON': 0.1008385007536003, 'dxOFFAngle': 85.48873345887608, 'dOFF1': 0.009629786041279547, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.009629786041279547, 'nTOFF': 1, 'dOFF': 0.009629786041279547, 'SUCCESS': False}
10:08:31,434 root DEBUG 

=================== Experiment ID #36 	 Dual Point ID: 37 ===================
10:08:31,443 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.718E-08|<1.000E-06)
10:08:31,443 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:31,649 root DEBUG Side: ON	 Angle(dx0, dx): 1.78 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.417E-01 	 Total distance: 3.417E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([185], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:08:32,42 root DEBUG Side: OFF	 Angle(dx0, dx): 0.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.358E-02 	 Total distance: 1.358E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([94], dtype=int64), array([[False]])]] 	 class: [2 4]
10:08:32,42 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:32,43 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -92.35 	 cIDON = [2 4], cIDOFF = [2 4]
10:08:32,43 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:32,43 root DEBUG dOFF/dON = 0.0
10:08:32,43 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.02814724077305, 'dON1': 0.3416592686124879, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.3416592686124879, 'nTON': 1, 'dON': 0.3416592686124879, 'dxOFFAngle': 88.89669709468343, 'dOFF1': 0.013580110674167423, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.013580110674167423, 'nTOFF': 1, 'dOFF': 0.013580110674167423, 'SUCCESS': False}
10:08:32,56 root DEBUG 

=================== Experiment ID #37 	 Dual Point ID: 38 ===================
10:08:32,68 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.142E-08|<1.000E-06)
10:08:32,69 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:32,403 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.715E-01 	 Total distance: 1.715E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([90], dtype=int64), array([[False]])]] 	 class: [2 3]
10:08:32,741 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.018E-01 	 Total distance: 1.018E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([54], dtype=int64), array([[False]])]] 	 class: [2 3]
10:08:32,741 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:32,741 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -25.49 	 cIDON = [2 3], cIDOFF = [2 3]
10:08:32,742 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:32,742 root DEBUG dOFF/dON = 0.6
10:08:32,742 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.34352792931001, 'dON1': 0.17147055204810746, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.17147055204810746, 'nTON': 1, 'dON': 0.17147055204810746, 'dxOFFAngle': 87.7628202378059, 'dOFF1': 0.10181621549200767, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.10181621549200767, 'nTOFF': 1, 'dOFF': 0.10181621549200767, 'SUCCESS': False}
10:08:32,753 root DEBUG 

=================== Experiment ID #38 	 Dual Point ID: 39 ===================
10:08:32,763 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.366E-07|<1.000E-06)
10:08:32,763 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:33,38 root DEBUG Side: ON	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.485E-01 	 Total distance: 2.485E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([235], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:33,175 root DEBUG Side: ON	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.439E-07 	 Total distance: 2.485E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([235], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:33,303 root DEBUG Side: ON	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.439E-07 	 Total distance: 2.485E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([235], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:33,427 root DEBUG Side: ON	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.439E-07 	 Total distance: 2.485E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([235], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:33,433 root DEBUG Got stuck in too many past-layer relus.
10:08:33,542 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:08:33,542 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:08:33,544 root DEBUG 

=================== Experiment ID #38 	 Dual Point ID: 40 ===================
10:08:33,555 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.208E-08|<1.000E-06)
10:08:33,555 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:33,779 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.432E-02 	 Total distance: 7.432E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([78], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:33,960 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.443E-01 	 Total distance: 2.187E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([104], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:34,200 root DEBUG Side: OFF	 Angle(dx0, dx): 1.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.651E-01 	 Total distance: 1.651E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([60], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:34,422 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.264E-02 	 Total distance: 1.877E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([13], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:34,587 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.020E-02 	 Total distance: 2.079E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([14], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:34,746 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.095E-01 	 Total distance: 3.174E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([8], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:34,875 root DEBUG Side: OFF	 Angle(dx0, dx): 0.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.033E-01 	 Total distance: 4.207E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([238], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:34,875 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:34,875 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 31.60 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:34,875 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:34,875 root DEBUG dOFF/dON = 1.9
10:08:34,875 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.73433130091144, 'dON1': 0.2186571091592267, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.2186571091592267, 'nTON': 1, 'dON': 0.2186571091592267, 'dxOFFAngle': 86.62445140654195, 'dOFF1': 0.4207071296166629, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.4207071296166629, 'nTOFF': 1, 'dOFF': 0.4207071296166629, 'SUCCESS': True}
10:08:34,889 root DEBUG 

=================== Experiment ID #39 	 Dual Point ID: 41 ===================
10:08:34,896 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.341E-08|<1.000E-06)
10:08:34,896 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:35,157 root DEBUG Side: ON	 Angle(dx0, dx): 0.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.554E-02 	 Total distance: 2.554E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([156], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:08:35,465 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.119E-01 	 Total distance: 5.119E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([98], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:08:35,659 root DEBUG Side: OFF	 Angle(dx0, dx): 1.97 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.221E-01 	 Total distance: 7.339E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([149], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:08:35,660 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:35,660 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 93.27 	 cIDON = [0 9], cIDOFF = [1 9]
10:08:35,660 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:35,660 root DEBUG dOFF/dON = 28.7
10:08:35,660 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.90242219224629, 'dON1': 0.025538640357483412, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.025538640357483412, 'nTON': 1, 'dON': 0.025538640357483412, 'dxOFFAngle': 87.08516349139589, 'dOFF1': 0.7339252429685197, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.7339252429685197, 'nTOFF': 1, 'dOFF': 0.7339252429685197, 'SUCCESS': True}
10:08:35,670 root DEBUG 

=================== Experiment ID #40 	 Dual Point ID: 42 ===================
10:08:35,679 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.081E-07|<1.000E-06)
10:08:35,679 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:35,987 root DEBUG Side: ON	 Angle(dx0, dx): 1.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.930E-02 	 Total distance: 7.930E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([209], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:36,250 root DEBUG Side: OFF	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.113E-02 	 Total distance: 1.113E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([45], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:36,250 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:36,250 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -75.38 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:36,251 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:36,251 root DEBUG dOFF/dON = 0.1
10:08:36,251 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.0483823065102, 'dON1': 0.07929670518032185, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.07929670518032185, 'nTON': 1, 'dON': 0.07929670518032185, 'dxOFFAngle': 86.20388234153424, 'dOFF1': 0.011133689213080548, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.011133689213080548, 'nTOFF': 1, 'dOFF': 0.011133689213080548, 'SUCCESS': False}
10:08:36,262 root DEBUG 

=================== Experiment ID #41 	 Dual Point ID: 43 ===================
10:08:36,270 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.313E-07|<1.000E-06)
10:08:36,270 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:36,520 root DEBUG Side: ON	 Angle(dx0, dx): 0.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.133E-01 	 Total distance: 1.133E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([37], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:36,772 root DEBUG Side: OFF	 Angle(dx0, dx): 0.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.195E-01 	 Total distance: 4.195E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([213], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:36,772 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:36,773 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 57.48 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:36,773 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:36,773 root DEBUG dOFF/dON = 3.7
10:08:36,773 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.65491523035931, 'dON1': 0.11325655366171625, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.11325655366171625, 'nTON': 1, 'dON': 0.11325655366171625, 'dxOFFAngle': 86.55797005524947, 'dOFF1': 0.41948396059325044, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.41948396059325044, 'nTOFF': 1, 'dOFF': 0.41948396059325044, 'SUCCESS': True}
10:08:36,781 root DEBUG 

=================== Experiment ID #42 	 Dual Point ID: 44 ===================
10:08:36,788 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.102E-09|<1.000E-06)
10:08:36,789 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:37,89 root DEBUG Side: ON	 Angle(dx0, dx): 1.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.203E-02 	 Total distance: 6.203E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([41], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:08:37,336 root DEBUG Side: ON	 Angle(dx0, dx): 0.84 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.759E-02 	 Total distance: 1.096E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([60], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:08:37,621 root DEBUG Side: ON	 Angle(dx0, dx): 0.89 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.772E-02 	 Total distance: 1.673E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([37], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:08:37,995 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.999E-02 	 Total distance: 2.999E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([10], dtype=int64), array([[False]])]] 	 class: [4 5]
10:08:37,995 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:37,995 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -69.61 	 cIDON = [4 5], cIDOFF = [4 5]
10:08:37,995 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:37,995 root DEBUG dOFF/dON = 0.2
10:08:37,995 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.79240248475588, 'dON1': 0.1673421660618293, 'cIDON1': array([4, 5], dtype=int64), 'dON_patch_1': 0.1673421660618293, 'nTON': 1, 'dON': 0.1673421660618293, 'dxOFFAngle': 83.89542311786535, 'dOFF1': 0.0299882024952823, 'cIDOFF1': array([4, 5], dtype=int64), 'dOFF_patch_1': 0.0299882024952823, 'nTOFF': 1, 'dOFF': 0.0299882024952823, 'SUCCESS': False}
10:08:38,2 root DEBUG 

=================== Experiment ID #43 	 Dual Point ID: 45 ===================
10:08:38,11 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.009E-08|<1.000E-06)
10:08:38,11 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:38,296 root DEBUG Side: ON	 Angle(dx0, dx): 3.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.016E-02 	 Total distance: 8.016E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([63], dtype=int64), array([[False]])]] 	 class: [6 9]
10:08:38,549 root DEBUG Side: OFF	 Angle(dx0, dx): 0.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.461E-01 	 Total distance: 1.461E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([42], dtype=int64), array([[False]])]] 	 class: [6 9]
10:08:38,549 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:38,550 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 29.14 	 cIDON = [6 9], cIDOFF = [6 9]
10:08:38,550 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:38,550 root DEBUG dOFF/dON = 1.8
10:08:38,550 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.20016922294369, 'dON1': 0.08015946544393938, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.08015946544393938, 'nTON': 1, 'dON': 0.08015946544393938, 'dxOFFAngle': 88.55859378896955, 'dOFF1': 0.14608386717147903, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.14608386717147903, 'nTOFF': 1, 'dOFF': 0.14608386717147903, 'SUCCESS': True}
10:08:38,559 root DEBUG 

=================== Experiment ID #44 	 Dual Point ID: 46 ===================
10:08:38,565 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.061E-09|<1.000E-06)
10:08:38,565 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:38,807 root DEBUG Side: ON	 Angle(dx0, dx): 0.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.770E-04 	 Total distance: 3.770E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([211], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:39,148 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.325E-02 	 Total distance: 7.325E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([161], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:39,339 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.640E-03 	 Total distance: 7.789E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([103], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:39,506 root DEBUG Side: OFF	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.657E-01 	 Total distance: 5.436E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([212], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:39,506 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:39,506 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.86 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:39,506 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:39,506 root DEBUG dOFF/dON = 1441.8
10:08:39,506 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.52198517226907, 'dON1': 0.00037701046628594307, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.00037701046628594307, 'nTON': 1, 'dON': 0.00037701046628594307, 'dxOFFAngle': 88.73508868195975, 'dOFF1': 0.5435619860115094, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.5435619860115094, 'nTOFF': 1, 'dOFF': 0.5435619860115094, 'SUCCESS': True}
10:08:39,514 root DEBUG 

=================== Experiment ID #45 	 Dual Point ID: 47 ===================
10:08:39,523 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.484E-08|<1.000E-06)
10:08:39,523 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:39,797 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.549E-01 	 Total distance: 3.549E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([191], dtype=int64), array([[False]])]] 	 class: [5 9]
10:08:39,916 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.266E-02 	 Total distance: 3.775E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([204], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:08:40,124 root DEBUG Side: ON	 Angle(dx0, dx): 2.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.197E-01 	 Total distance: 4.973E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([7], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:08:40,352 root DEBUG Side: OFF	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.495E-01 	 Total distance: 1.495E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([192], dtype=int64), array([[False]])]] 	 class: [5 9]
10:08:40,352 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:40,353 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -53.78 	 cIDON = [5 9], cIDOFF = [5 9]
10:08:40,353 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:40,353 root DEBUG dOFF/dON = 0.3
10:08:40,353 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.23862036173294, 'dON1': 0.49726337137802556, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.49726337137802556, 'nTON': 1, 'dON': 0.49726337137802556, 'dxOFFAngle': 83.28322182141136, 'dOFF1': 0.14947439401197737, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.14947439401197737, 'nTOFF': 1, 'dOFF': 0.14947439401197737, 'SUCCESS': False}
10:08:40,360 root DEBUG 

=================== Experiment ID #46 	 Dual Point ID: 48 ===================
10:08:40,373 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.471E-08|<1.000E-06)
10:08:40,373 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:40,747 root DEBUG Side: ON	 Angle(dx0, dx): 1.94 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.925E-03 	 Total distance: 9.925E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([31], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:08:41,78 root DEBUG Side: OFF	 Angle(dx0, dx): 0.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.198E-01 	 Total distance: 1.198E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([210], dtype=int64), array([[False]])]] 	 class: [3 4]
10:08:41,248 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.026E-01 	 Total distance: 4.224E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([252], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:08:41,248 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:41,250 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 95.41 	 cIDON = [3 4], cIDOFF = [3 4]
10:08:41,250 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:41,250 root DEBUG dOFF/dON = 42.6
10:08:41,250 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.01112215000752, 'dON1': 0.009924794226385644, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.009924794226385644, 'nTON': 1, 'dON': 0.009924794226385644, 'dxOFFAngle': 86.82328591995311, 'dOFF1': 0.4224020686183523, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.4224020686183523, 'nTOFF': 1, 'dOFF': 0.4224020686183523, 'SUCCESS': True}
10:08:41,254 root DEBUG 

=================== Experiment ID #47 	 Dual Point ID: 49 ===================
10:08:41,262 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.060E-08|<1.000E-06)
10:08:41,262 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:41,582 root DEBUG Side: ON	 Angle(dx0, dx): 0.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.247E-02 	 Total distance: 2.247E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([213], dtype=int64), array([[False]])]] 	 class: [2 3]
10:08:41,871 root DEBUG Side: OFF	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.879E-02 	 Total distance: 4.879E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([249], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:08:41,872 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:41,872 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 36.93 	 cIDON = [2 3], cIDOFF = [2 3]
10:08:41,872 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:41,872 root DEBUG dOFF/dON = 2.2
10:08:41,872 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.70890194426455, 'dON1': 0.022471060893979208, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.022471060893979208, 'nTON': 1, 'dON': 0.022471060893979208, 'dxOFFAngle': 88.23097813086713, 'dOFF1': 0.048787398110818066, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.048787398110818066, 'nTOFF': 1, 'dOFF': 0.048787398110818066, 'SUCCESS': True}
10:08:41,892 root DEBUG 

=================== Experiment ID #48 	 Dual Point ID: 50 ===================
10:08:41,906 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.151E-08|<1.000E-06)
10:08:41,907 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:42,331 root DEBUG Side: ON	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.787E-02 	 Total distance: 2.787E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([228], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:42,748 root DEBUG Side: OFF	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.190E-03 	 Total distance: 9.190E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([14], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:42,748 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:42,749 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -50.41 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:42,749 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:42,749 root DEBUG dOFF/dON = 0.3
10:08:42,749 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.44690598864989, 'dON1': 0.027871420740720854, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.027871420740720854, 'nTON': 1, 'dON': 0.027871420740720854, 'dxOFFAngle': 87.91517725369891, 'dOFF1': 0.009190223071014202, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.009190223071014202, 'nTOFF': 1, 'dOFF': 0.009190223071014202, 'SUCCESS': False}
10:08:42,763 root DEBUG 

=================== Experiment ID #49 	 Dual Point ID: 51 ===================
10:08:42,775 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.736E-08|<1.000E-06)
10:08:42,775 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:43,88 root DEBUG Side: ON	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.154E-02 	 Total distance: 2.154E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([120], dtype=int64), array([[False]])]] 	 class: [1 9]
10:08:43,425 root DEBUG Side: OFF	 Angle(dx0, dx): 1.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.658E-01 	 Total distance: 2.658E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([26], dtype=int64), array([[False]])]] 	 class: [0 9]
10:08:43,425 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:43,425 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 85.01 	 cIDON = [1 9], cIDOFF = [0 9]
10:08:43,425 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:43,425 root DEBUG dOFF/dON = 12.3
10:08:43,425 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.57179507400606, 'dON1': 0.02153524600965828, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.02153524600965828, 'nTON': 1, 'dON': 0.02153524600965828, 'dxOFFAngle': 86.89939212525988, 'dOFF1': 0.26577718036348735, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.26577718036348735, 'nTOFF': 1, 'dOFF': 0.26577718036348735, 'SUCCESS': True}
10:08:43,431 root DEBUG 

=================== Experiment ID #50 	 Dual Point ID: 52 ===================
10:08:43,440 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.479E-07|<1.000E-06)
10:08:43,440 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:43,674 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.041E-01 	 Total distance: 2.041E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([191], dtype=int64), array([[False]])]] 	 class: [4 5]
10:08:43,911 root DEBUG Side: OFF	 Angle(dx0, dx): 4.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.721E-02 	 Total distance: 2.721E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([36], dtype=int64), array([[False]])]] 	 class: [4 5]
10:08:43,913 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:43,913 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -76.47 	 cIDON = [4 5], cIDOFF = [4 5]
10:08:43,913 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:43,913 root DEBUG dOFF/dON = 0.1
10:08:43,913 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.22075146745782, 'dON1': 0.20405547704678842, 'cIDON1': array([4, 5], dtype=int64), 'dON_patch_1': 0.20405547704678842, 'nTON': 1, 'dON': 0.20405547704678842, 'dxOFFAngle': 83.66917628535904, 'dOFF1': 0.02720608283434274, 'cIDOFF1': array([4, 5], dtype=int64), 'dOFF_patch_1': 0.02720608283434274, 'nTOFF': 1, 'dOFF': 0.02720608283434274, 'SUCCESS': False}
10:08:43,922 root DEBUG 

=================== Experiment ID #51 	 Dual Point ID: 53 ===================
10:08:43,932 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.008E-08|<1.000E-06)
10:08:43,932 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:44,149 root DEBUG Side: ON	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.047E-01 	 Total distance: 2.047E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([227], dtype=int64), array([[False]])]] 	 class: [2 3]
10:08:44,372 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.390E-01 	 Total distance: 1.390E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([173], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:08:44,606 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.016E-03 	 Total distance: 1.431E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([59], dtype=int64), array([[False]])]] 	 class: [2 3]
10:08:44,809 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.286E-01 	 Total distance: 3.717E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([55], dtype=int64), array([[False]])]] 	 class: [2 3]
10:08:44,809 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:44,810 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 28.98 	 cIDON = [2 3], cIDOFF = [2 3]
10:08:44,810 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:44,810 root DEBUG dOFF/dON = 1.8
10:08:44,810 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.7033260106239, 'dON1': 0.20465409051865607, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.20465409051865607, 'nTON': 1, 'dON': 0.20465409051865607, 'dxOFFAngle': 89.44501646968673, 'dOFF1': 0.3716946283239825, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.3716946283239825, 'nTOFF': 1, 'dOFF': 0.3716946283239825, 'SUCCESS': True}
10:08:44,821 root DEBUG 

=================== Experiment ID #52 	 Dual Point ID: 54 ===================
10:08:44,828 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.861E-08|<1.000E-06)
10:08:44,828 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:45,74 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.290E-01 	 Total distance: 1.290E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([49], dtype=int64), array([[False]])]] 	 class: [2 5]
10:08:45,288 root DEBUG Side: ON	 Angle(dx0, dx): 0.73 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.510E-02 	 Total distance: 1.841E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([20], dtype=int64), array([[False]])]] 	 class: [2 5]
10:08:45,554 root DEBUG Side: OFF	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.500E-01 	 Total distance: 1.500E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([207], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:08:45,712 root DEBUG Side: OFF	 Angle(dx0, dx): 1.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.821E-02 	 Total distance: 1.682E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([7], dtype=int64), array([[False]])]] 	 class: [2 5]
10:08:45,712 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:45,714 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -4.51 	 cIDON = [2 5], cIDOFF = [2 5]
10:08:45,714 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:45,714 root DEBUG dOFF/dON = 0.9
10:08:45,714 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.34158407164279, 'dON1': 0.18411637506857279, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.18411637506857279, 'nTON': 1, 'dON': 0.18411637506857279, 'dxOFFAngle': 89.93231272810189, 'dOFF1': 0.16822039560580537, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.16822039560580537, 'nTOFF': 1, 'dOFF': 0.16822039560580537, 'SUCCESS': False}
10:08:45,722 root DEBUG 

=================== Experiment ID #53 	 Dual Point ID: 55 ===================
10:08:45,730 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.405E-08|<1.000E-06)
10:08:45,730 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:46,64 root DEBUG Side: ON	 Angle(dx0, dx): 1.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.533E-02 	 Total distance: 3.533E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([16], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:46,286 root DEBUG Side: OFF	 Angle(dx0, dx): 1.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.005E-02 	 Total distance: 1.005E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([2], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:46,287 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:46,287 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -55.70 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:46,287 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:46,287 root DEBUG dOFF/dON = 0.3
10:08:46,287 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.95162393808151, 'dON1': 0.03532925369597302, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.03532925369597302, 'nTON': 1, 'dON': 0.03532925369597302, 'dxOFFAngle': 85.02218551183141, 'dOFF1': 0.010051018589354555, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.010051018589354555, 'nTOFF': 1, 'dOFF': 0.010051018589354555, 'SUCCESS': False}
10:08:46,295 root DEBUG 

=================== Experiment ID #54 	 Dual Point ID: 56 ===================
10:08:46,305 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.535E-08|<1.000E-06)
10:08:46,306 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:46,674 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.358E-02 	 Total distance: 1.358E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([160], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:46,851 root DEBUG Side: ON	 Angle(dx0, dx): 1.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.148E-02 	 Total distance: 4.506E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([15], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:47,115 root DEBUG Side: OFF	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.356E-02 	 Total distance: 1.356E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([138], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:47,115 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:47,115 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -53.75 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:47,115 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:47,115 root DEBUG dOFF/dON = 0.3
10:08:47,115 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.6126037130395, 'dON1': 0.045058679823542, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.045058679823542, 'nTON': 1, 'dON': 0.045058679823542, 'dxOFFAngle': 86.56689687788435, 'dOFF1': 0.013555915720335982, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.013555915720335982, 'nTOFF': 1, 'dOFF': 0.013555915720335982, 'SUCCESS': False}
10:08:47,130 root DEBUG 

=================== Experiment ID #55 	 Dual Point ID: 57 ===================
10:08:47,140 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.305E-08|<1.000E-06)
10:08:47,140 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:47,413 root DEBUG Side: ON	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.318E-02 	 Total distance: 3.318E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([209], dtype=int64), array([[False]])]] 	 class: [2 4]
10:08:47,666 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.095E-02 	 Total distance: 2.095E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([149], dtype=int64), array([[False]])]] 	 class: [2 4]
10:08:47,666 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:47,666 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -22.60 	 cIDON = [2 4], cIDOFF = [2 4]
10:08:47,666 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:47,666 root DEBUG dOFF/dON = 0.6
10:08:47,667 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.93376109958615, 'dON1': 0.03317872187140839, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.03317872187140839, 'nTON': 1, 'dON': 0.03317872187140839, 'dxOFFAngle': 86.55186021096851, 'dOFF1': 0.020947078607241817, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.020947078607241817, 'nTOFF': 1, 'dOFF': 0.020947078607241817, 'SUCCESS': False}
10:08:47,678 root DEBUG 

=================== Experiment ID #56 	 Dual Point ID: 58 ===================
10:08:47,689 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.798E-08|<1.000E-06)
10:08:47,690 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:48,40 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.016E-02 	 Total distance: 3.016E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([14], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:08:48,305 root DEBUG Side: OFF	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.111E-01 	 Total distance: 1.111E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([37], dtype=int64), array([[False]])]] 	 class: [2 9]
10:08:48,305 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:48,305 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 57.31 	 cIDON = [2 9], cIDOFF = [2 9]
10:08:48,305 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:48,305 root DEBUG dOFF/dON = 3.7
10:08:48,305 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.522070476219, 'dON1': 0.030157594473106373, 'cIDON1': array([2, 9], dtype=int64), 'dON_patch_1': 0.030157594473106373, 'nTON': 1, 'dON': 0.030157594473106373, 'dxOFFAngle': 83.99529955510489, 'dOFF1': 0.1111281645976814, 'cIDOFF1': array([2, 9], dtype=int64), 'dOFF_patch_1': 0.1111281645976814, 'nTOFF': 1, 'dOFF': 0.1111281645976814, 'SUCCESS': True}
10:08:48,312 root DEBUG 

=================== Experiment ID #57 	 Dual Point ID: 59 ===================
10:08:48,324 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.232E-08|<1.000E-06)
10:08:48,324 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:48,585 root DEBUG Side: ON	 Angle(dx0, dx): 6.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.350E-06 	 Total distance: 5.350E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 9]
10:08:48,903 root DEBUG Side: OFF	 Angle(dx0, dx): 2.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.353E-01 	 Total distance: 1.353E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([29], dtype=int64), array([[False]])]] 	 class: [0 9]
10:08:48,903 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:48,903 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.99 	 cIDON = [1 9], cIDOFF = [0 9]
10:08:48,903 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:48,903 root DEBUG dOFF/dON = 25287.5
10:08:48,903 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.85069927441575, 'dON1': 5.3498337054133095e-06, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 5.3498337054133095e-06, 'nTON': 1, 'dON': 5.3498337054133095e-06, 'dxOFFAngle': 86.01464076992562, 'dOFF1': 0.13528382897332672, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.13528382897332672, 'nTOFF': 1, 'dOFF': 0.13528382897332672, 'SUCCESS': True}
10:08:48,911 root DEBUG 

=================== Experiment ID #58 	 Dual Point ID: 60 ===================
10:08:48,924 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.220E-08|<1.000E-06)
10:08:48,924 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:49,208 root DEBUG Side: ON	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.390E-01 	 Total distance: 1.390E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([212], dtype=int64), array([[False]])]] 	 class: [2 8]
10:08:49,519 root DEBUG Side: OFF	 Angle(dx0, dx): 0.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.777E-02 	 Total distance: 5.777E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([207], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:08:49,804 root DEBUG Side: OFF	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.540E-02 	 Total distance: 7.316E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([63], dtype=int64), array([[False]])]] 	 class: [2 8]
10:08:49,804 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:49,804 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -31.02 	 cIDON = [2 8], cIDOFF = [2 8]
10:08:49,804 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:49,804 root DEBUG dOFF/dON = 0.5
10:08:49,805 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.2249609203333, 'dON1': 0.13895271958813218, 'cIDON1': array([2, 8], dtype=int64), 'dON_patch_1': 0.13895271958813218, 'nTON': 1, 'dON': 0.13895271958813218, 'dxOFFAngle': 86.47650668680407, 'dOFF1': 0.07316301781155442, 'cIDOFF1': array([2, 8], dtype=int64), 'dOFF_patch_1': 0.07316301781155442, 'nTOFF': 1, 'dOFF': 0.07316301781155442, 'SUCCESS': False}
10:08:49,816 root DEBUG 

=================== Experiment ID #59 	 Dual Point ID: 61 ===================
10:08:49,828 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.747E-09|<1.000E-06)
10:08:49,829 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:50,102 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.783E-03 	 Total distance: 5.783E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([106], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:50,411 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.070E-02 	 Total distance: 4.070E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([0], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:50,411 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:50,411 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 75.12 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:50,412 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:50,412 root DEBUG dOFF/dON = 7.0
10:08:50,412 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.03157598780498, 'dON1': 0.005782938647872068, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.005782938647872068, 'nTON': 1, 'dON': 0.005782938647872068, 'dxOFFAngle': 85.81551632073358, 'dOFF1': 0.04070238135711065, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.04070238135711065, 'nTOFF': 1, 'dOFF': 0.04070238135711065, 'SUCCESS': True}
10:08:50,419 root DEBUG 

=================== Experiment ID #60 	 Dual Point ID: 62 ===================
10:08:50,426 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.318E-07|<1.000E-06)
10:08:50,426 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:50,701 root DEBUG Side: ON	 Angle(dx0, dx): 16.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.308E-06 	 Total distance: 8.308E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 9]
10:08:50,964 root DEBUG Side: OFF	 Angle(dx0, dx): 1.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.637E-01 	 Total distance: 1.637E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([30], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:08:50,964 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:50,965 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.99 	 cIDON = [1 9], cIDOFF = [0 9]
10:08:50,965 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:50,965 root DEBUG dOFF/dON = 19700.9
10:08:50,965 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 73.42089139805323, 'dON1': 8.307740205387942e-06, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 8.307740205387942e-06, 'nTON': 1, 'dON': 8.307740205387942e-06, 'dxOFFAngle': 84.74597651931572, 'dOFF1': 0.16367008860608268, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.16367008860608268, 'nTOFF': 1, 'dOFF': 0.16367008860608268, 'SUCCESS': True}
10:08:50,977 root DEBUG 

=================== Experiment ID #61 	 Dual Point ID: 63 ===================
10:08:50,987 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.467E-08|<1.000E-06)
10:08:50,987 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:51,333 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.473E-01 	 Total distance: 1.473E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([219], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:08:51,550 root DEBUG Side: ON	 Angle(dx0, dx): 0.88 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.315E-01 	 Total distance: 2.787E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([32], dtype=int64), array([[False]])]] 	 class: [2 6]
10:08:51,839 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.599E-01 	 Total distance: 1.599E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([2], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:08:52,103 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.834E-02 	 Total distance: 1.883E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([15], dtype=int64), array([[False]])]] 	 class: [2 6]
10:08:52,287 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.176E-02 	 Total distance: 2.000E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([51], dtype=int64), array([[False]])]] 	 class: [2 6]
10:08:52,445 root DEBUG Side: OFF	 Angle(dx0, dx): 2.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.789E-01 	 Total distance: 5.789E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([244], dtype=int64), array([[False]])]] 	 class: [2 6]
10:08:52,445 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:52,446 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 35.00 	 cIDON = [2 6], cIDOFF = [2 6]
10:08:52,446 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:52,446 root DEBUG dOFF/dON = 2.1
10:08:52,446 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.91004532439624, 'dON1': 0.2787467876800998, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.2787467876800998, 'nTON': 1, 'dON': 0.2787467876800998, 'dxOFFAngle': 88.18331885729235, 'dOFF1': 0.5789330990505822, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.5789330990505822, 'nTOFF': 1, 'dOFF': 0.5789330990505822, 'SUCCESS': True}
10:08:52,460 root DEBUG 

=================== Experiment ID #62 	 Dual Point ID: 64 ===================
10:08:52,470 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.089E-08|<1.000E-06)
10:08:52,470 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:52,746 root DEBUG Side: ON	 Angle(dx0, dx): 0.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.408E-02 	 Total distance: 6.408E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([67], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:53,132 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.339E-01 	 Total distance: 1.339E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([43], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:53,347 root DEBUG Side: OFF	 Angle(dx0, dx): 0.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.063E-02 	 Total distance: 1.645E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([175], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:53,546 root DEBUG Side: OFF	 Angle(dx0, dx): 1.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.645E-03 	 Total distance: 1.712E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([158], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:53,546 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:53,547 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 45.53 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:53,547 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:53,547 root DEBUG dOFF/dON = 2.7
10:08:53,547 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.13450726788538, 'dON1': 0.06407516639433636, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.06407516639433636, 'nTON': 1, 'dON': 0.06407516639433636, 'dxOFFAngle': 83.93257701417443, 'dOFF1': 0.17118325389922925, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.17118325389922925, 'nTOFF': 1, 'dOFF': 0.17118325389922925, 'SUCCESS': True}
10:08:53,559 root DEBUG 

=================== Experiment ID #63 	 Dual Point ID: 65 ===================
10:08:53,571 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.951E-09|<1.000E-06)
10:08:53,571 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:53,954 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.324E-01 	 Total distance: 2.324E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([14], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:54,143 root DEBUG Side: ON	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.344E-01 	 Total distance: 4.668E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([60], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:54,457 root DEBUG Side: OFF	 Angle(dx0, dx): 1.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.551E-01 	 Total distance: 2.551E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([121], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:54,457 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:54,457 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -29.33 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:54,457 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:54,457 root DEBUG dOFF/dON = 0.5
10:08:54,458 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.9366990069885, 'dON1': 0.46683875100359384, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.46683875100359384, 'nTON': 1, 'dON': 0.46683875100359384, 'dxOFFAngle': 86.84212552270554, 'dOFF1': 0.2551032570289776, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.2551032570289776, 'nTOFF': 1, 'dOFF': 0.2551032570289776, 'SUCCESS': False}
10:08:54,469 root DEBUG 

=================== Experiment ID #64 	 Dual Point ID: 66 ===================
10:08:54,479 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.232E-08|<1.000E-06)
10:08:54,480 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:54,873 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.469E-01 	 Total distance: 1.469E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([183], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:08:55,122 root DEBUG Side: ON	 Angle(dx0, dx): 1.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.976E-01 	 Total distance: 3.445E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([15], dtype=int64), array([[False]])]] 	 class: [2 4]
10:08:55,400 root DEBUG Side: OFF	 Angle(dx0, dx): 4.77 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.521E-03 	 Total distance: 5.521E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([21], dtype=int64), array([[False]])]] 	 class: [2 4]
10:08:55,400 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:55,400 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -96.85 	 cIDON = [2 4], cIDOFF = [2 4]
10:08:55,400 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:55,400 root DEBUG dOFF/dON = 0.0
10:08:55,400 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.40943944355068, 'dON1': 0.34449342143407746, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.34449342143407746, 'nTON': 1, 'dON': 0.34449342143407746, 'dxOFFAngle': 85.10573229204869, 'dOFF1': 0.005521237287453775, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.005521237287453775, 'nTOFF': 1, 'dOFF': 0.005521237287453775, 'SUCCESS': False}
10:08:55,406 root DEBUG 

=================== Experiment ID #65 	 Dual Point ID: 67 ===================
10:08:55,413 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.546E-08|<1.000E-06)
10:08:55,413 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:55,783 root DEBUG Side: ON	 Angle(dx0, dx): 3.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.793E-01 	 Total distance: 1.793E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([120], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:56,59 root DEBUG Side: OFF	 Angle(dx0, dx): 0.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.409E-02 	 Total distance: 3.409E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([25], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:56,60 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:56,60 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -68.05 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:56,60 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:56,60 root DEBUG dOFF/dON = 0.2
10:08:56,60 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.62263187311115, 'dON1': 0.17931195628079463, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.17931195628079463, 'nTON': 1, 'dON': 0.17931195628079463, 'dxOFFAngle': 89.99913136849366, 'dOFF1': 0.03408774726762332, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.03408774726762332, 'nTOFF': 1, 'dOFF': 0.03408774726762332, 'SUCCESS': False}
10:08:56,73 root DEBUG 

=================== Experiment ID #66 	 Dual Point ID: 68 ===================
10:08:56,84 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.101E-08|<1.000E-06)
10:08:56,84 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:56,335 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.174E-02 	 Total distance: 4.174E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([124], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:08:56,650 root DEBUG Side: OFF	 Angle(dx0, dx): 0.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.494E-03 	 Total distance: 3.494E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([121], dtype=int64), array([[False]])]] 	 class: [0 9]
10:08:56,869 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.350E-01 	 Total distance: 2.385E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([40], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:08:56,869 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:56,870 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 70.22 	 cIDON = [1 9], cIDOFF = [0 9]
10:08:56,870 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:56,870 root DEBUG dOFF/dON = 5.7
10:08:56,870 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.60942721633123, 'dON1': 0.04173688084541518, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.04173688084541518, 'nTON': 1, 'dON': 0.04173688084541518, 'dxOFFAngle': 88.91605905577579, 'dOFF1': 0.23852235517143897, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.23852235517143897, 'nTOFF': 1, 'dOFF': 0.23852235517143897, 'SUCCESS': True}
10:08:56,879 root DEBUG 

=================== Experiment ID #67 	 Dual Point ID: 69 ===================
10:08:56,890 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.054E-07|<1.000E-06)
10:08:56,890 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:57,164 root DEBUG Side: ON	 Angle(dx0, dx): 1.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.524E-02 	 Total distance: 2.524E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([217], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:08:57,487 root DEBUG Side: OFF	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.022E-01 	 Total distance: 1.022E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([10], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:08:57,487 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:57,488 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 60.38 	 cIDON = [5 6], cIDOFF = [5 6]
10:08:57,488 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:57,488 root DEBUG dOFF/dON = 4.0
10:08:57,488 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.15445026993964, 'dON1': 0.025242809086234125, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.025242809086234125, 'nTON': 1, 'dON': 0.025242809086234125, 'dxOFFAngle': 82.66612520785553, 'dOFF1': 0.10218173492524346, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.10218173492524346, 'nTOFF': 1, 'dOFF': 0.10218173492524346, 'SUCCESS': True}
10:08:57,501 root DEBUG 

=================== Experiment ID #68 	 Dual Point ID: 70 ===================
10:08:57,510 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.276E-08|<1.000E-06)
10:08:57,510 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:57,882 root DEBUG Side: ON	 Angle(dx0, dx): 1.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.140E-01 	 Total distance: 1.140E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([233], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:58,270 root DEBUG Side: OFF	 Angle(dx0, dx): 0.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.786E-01 	 Total distance: 1.786E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([155], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:58,270 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:58,271 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 22.06 	 cIDON = [3 7], cIDOFF = [3 7]
10:08:58,271 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:58,271 root DEBUG dOFF/dON = 1.6
10:08:58,271 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.71306230320171, 'dON1': 0.11402422542198164, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.11402422542198164, 'nTON': 1, 'dON': 0.11402422542198164, 'dxOFFAngle': 88.28617344235356, 'dOFF1': 0.17855793962451738, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.17855793962451738, 'nTOFF': 1, 'dOFF': 0.17855793962451738, 'SUCCESS': True}
10:08:58,285 root DEBUG 

=================== Experiment ID #69 	 Dual Point ID: 71 ===================
10:08:58,295 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.342E-08|<1.000E-06)
10:08:58,295 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:58,585 root DEBUG Side: ON	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.548E-02 	 Total distance: 1.548E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([249], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:08:58,767 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.561E-02 	 Total distance: 1.111E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([161], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:08:58,963 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.506E-02 	 Total distance: 1.562E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([163], dtype=int64), array([[False]])]] 	 class: [6 9]
10:08:59,170 root DEBUG Side: ON	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.052E-01 	 Total distance: 3.614E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([20], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:08:59,440 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.391E-01 	 Total distance: 1.391E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([6], dtype=int64), array([[False]])]] 	 class: [6 9]
10:08:59,440 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:59,441 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -44.40 	 cIDON = [6 9], cIDOFF = [6 9]
10:08:59,441 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:59,442 root DEBUG dOFF/dON = 0.4
10:08:59,442 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.04143051185683, 'dON1': 0.36135046966943685, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.36135046966943685, 'nTON': 1, 'dON': 0.36135046966943685, 'dxOFFAngle': 88.4627255222426, 'dOFF1': 0.1391215341150383, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.1391215341150383, 'nTOFF': 1, 'dOFF': 0.1391215341150383, 'SUCCESS': False}
10:08:59,454 root DEBUG 

=================== Experiment ID #70 	 Dual Point ID: 72 ===================
10:08:59,464 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.300E-08|<1.000E-06)
10:08:59,464 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:59,714 root DEBUG Side: ON	 Angle(dx0, dx): 2.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.729E-02 	 Total distance: 5.729E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([12], dtype=int64), array([[False]])]] 	 class: [3 4]
10:09:00,15 root DEBUG Side: OFF	 Angle(dx0, dx): 0.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.097E-02 	 Total distance: 1.097E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([60], dtype=int64), array([[False]])]] 	 class: [3 4]
10:09:00,175 root DEBUG Side: OFF	 Angle(dx0, dx): 0.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.298E-02 	 Total distance: 2.394E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([47], dtype=int64), array([[False]])]] 	 class: [3 4]
10:09:00,346 root DEBUG Side: OFF	 Angle(dx0, dx): 2.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.132E-01 	 Total distance: 1.371E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([38], dtype=int64), array([[False]])]] 	 class: [3 4]
10:09:00,346 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:00,347 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 41.06 	 cIDON = [3 4], cIDOFF = [3 4]
10:09:00,347 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:00,347 root DEBUG dOFF/dON = 2.4
10:09:00,347 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 79.90504984153844, 'dON1': 0.057289624868252544, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.057289624868252544, 'nTON': 1, 'dON': 0.057289624868252544, 'dxOFFAngle': 82.09870382865498, 'dOFF1': 0.13712238045665703, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.13712238045665703, 'nTOFF': 1, 'dOFF': 0.13712238045665703, 'SUCCESS': True}
10:09:00,357 root DEBUG 

=================== Experiment ID #71 	 Dual Point ID: 73 ===================
10:09:00,365 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.389E-07|<1.000E-06)
10:09:00,365 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:00,711 root DEBUG Side: ON	 Angle(dx0, dx): 0.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.766E-02 	 Total distance: 5.766E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([175], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:00,907 root DEBUG Side: ON	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.596E-01 	 Total distance: 3.173E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([91], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:01,175 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.083E-01 	 Total distance: 1.083E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([156], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:01,336 root DEBUG Side: OFF	 Angle(dx0, dx): 2.87 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.988E-01 	 Total distance: 5.071E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([242], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:01,337 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:01,337 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 23.03 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:01,337 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:01,337 root DEBUG dOFF/dON = 1.6
10:09:01,337 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.99857882336808, 'dON1': 0.317265916531171, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.317265916531171, 'nTON': 1, 'dON': 0.317265916531171, 'dxOFFAngle': 85.41078627126547, 'dOFF1': 0.507093016798653, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.507093016798653, 'nTOFF': 1, 'dOFF': 0.507093016798653, 'SUCCESS': True}
10:09:01,349 root DEBUG 

=================== Experiment ID #72 	 Dual Point ID: 74 ===================
10:09:01,359 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.526E-08|<1.000E-06)
10:09:01,360 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:01,625 root DEBUG Side: ON	 Angle(dx0, dx): 3.86 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.621E-02 	 Total distance: 4.621E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([40], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:09:01,848 root DEBUG Side: OFF	 Angle(dx0, dx): 2.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.023E-02 	 Total distance: 2.023E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([211], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:09:01,848 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:01,849 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -39.10 	 cIDON = [2 8], cIDOFF = [2 8]
10:09:01,849 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:01,849 root DEBUG dOFF/dON = 0.4
10:09:01,849 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 75.95207461608469, 'dON1': 0.046213737705304674, 'cIDON1': array([2, 8], dtype=int64), 'dON_patch_1': 0.046213737705304674, 'nTON': 1, 'dON': 0.046213737705304674, 'dxOFFAngle': 78.41560818659315, 'dOFF1': 0.020231310396400498, 'cIDOFF1': array([2, 8], dtype=int64), 'dOFF_patch_1': 0.020231310396400498, 'nTOFF': 1, 'dOFF': 0.020231310396400498, 'SUCCESS': False}
10:09:01,856 root DEBUG 

=================== Experiment ID #73 	 Dual Point ID: 75 ===================
10:09:01,867 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.298E-08|<1.000E-06)
10:09:01,867 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:02,191 root DEBUG Side: ON	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.869E-02 	 Total distance: 6.869E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([54], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:02,574 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.064E-01 	 Total distance: 2.064E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([205], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:02,778 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.495E-01 	 Total distance: 5.558E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([139], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:02,778 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:02,779 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 78.00 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:02,779 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:02,779 root DEBUG dOFF/dON = 8.1
10:09:02,779 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.60084523562524, 'dON1': 0.06868547971209163, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.06868547971209163, 'nTON': 1, 'dON': 0.06868547971209163, 'dxOFFAngle': 85.16763420864396, 'dOFF1': 0.5558136191957808, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.5558136191957808, 'nTOFF': 1, 'dOFF': 0.5558136191957808, 'SUCCESS': True}
10:09:02,789 root DEBUG 

=================== Experiment ID #74 	 Dual Point ID: 76 ===================
10:09:02,797 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.623E-08|<1.000E-06)
10:09:02,797 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:03,95 root DEBUG Side: ON	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.163E-01 	 Total distance: 1.163E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([49], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:03,360 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.385E-02 	 Total distance: 5.385E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([185], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:03,564 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.396E-01 	 Total distance: 1.935E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([14], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:03,785 root DEBUG Side: OFF	 Angle(dx0, dx): 1.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.207E-01 	 Total distance: 5.141E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([225], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:03,785 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:03,785 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 63.11 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:03,785 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:03,785 root DEBUG dOFF/dON = 4.4
10:09:03,785 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.06881452041966, 'dON1': 0.11628007425898781, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.11628007425898781, 'nTON': 1, 'dON': 0.11628007425898781, 'dxOFFAngle': 85.35617214737078, 'dOFF1': 0.5141443262030958, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.5141443262030958, 'nTOFF': 1, 'dOFF': 0.5141443262030958, 'SUCCESS': True}
10:09:03,792 root DEBUG 

=================== Experiment ID #75 	 Dual Point ID: 77 ===================
10:09:03,799 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.530E-08|<1.000E-06)
10:09:03,799 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:04,69 root DEBUG Side: ON	 Angle(dx0, dx): 1.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.008E-01 	 Total distance: 1.008E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([122], dtype=int64), array([[False]])]] 	 class: [0 7]
10:09:04,302 root DEBUG Side: OFF	 Angle(dx0, dx): 3.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.132E-05 	 Total distance: 2.132E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 7]
10:09:04,302 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:04,303 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.96 	 cIDON = [0 7], cIDOFF = [0 7]
10:09:04,303 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:04,303 root DEBUG dOFF/dON = 0.0
10:09:04,303 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.9091637378619, 'dON1': 0.10078599878980199, 'cIDON1': array([0, 7], dtype=int64), 'dON_patch_1': 0.10078599878980199, 'nTON': 1, 'dON': 0.10078599878980199, 'dxOFFAngle': 84.90884547411653, 'dOFF1': 2.1317060174640288e-05, 'cIDOFF1': array([0, 7], dtype=int64), 'dOFF_patch_1': 2.1317060174640288e-05, 'nTOFF': 1, 'dOFF': 2.1317060174640288e-05, 'SUCCESS': False}
10:09:04,309 root DEBUG 

=================== Experiment ID #76 	 Dual Point ID: 78 ===================
10:09:04,322 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.104E-07|<1.000E-06)
10:09:04,322 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:04,655 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.608E-02 	 Total distance: 3.608E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([45], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:09:04,886 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.435E-02 	 Total distance: 3.435E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([127], dtype=int64), array([[False]])]] 	 class: [2 3]
10:09:04,887 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:04,887 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -2.45 	 cIDON = [2 3], cIDOFF = [2 3]
10:09:04,887 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:04,887 root DEBUG dOFF/dON = 1.0
10:09:04,887 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.50379897213284, 'dON1': 0.03608249546553316, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.03608249546553316, 'nTON': 1, 'dON': 0.03608249546553316, 'dxOFFAngle': 88.71744123319957, 'dOFF1': 0.03435468851392893, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.03435468851392893, 'nTOFF': 1, 'dOFF': 0.03435468851392893, 'SUCCESS': False}
10:09:04,897 root DEBUG 

=================== Experiment ID #77 	 Dual Point ID: 79 ===================
10:09:04,909 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.042E-07|<1.000E-06)
10:09:04,909 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:05,177 root DEBUG Side: ON	 Angle(dx0, dx): 0.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.299E-02 	 Total distance: 3.299E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([12], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:09:05,528 root DEBUG Side: OFF	 Angle(dx0, dx): 1.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.148E-02 	 Total distance: 3.148E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([56], dtype=int64), array([[False]])]] 	 class: [4 9]
10:09:05,528 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:05,528 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -2.34 	 cIDON = [4 9], cIDOFF = [4 9]
10:09:05,528 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:05,528 root DEBUG dOFF/dON = 1.0
10:09:05,528 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.09036402965536, 'dON1': 0.03299495487416001, 'cIDON1': array([4, 9], dtype=int64), 'dON_patch_1': 0.03299495487416001, 'nTON': 1, 'dON': 0.03299495487416001, 'dxOFFAngle': 78.99135682545224, 'dOFF1': 0.03148482903557791, 'cIDOFF1': array([4, 9], dtype=int64), 'dOFF_patch_1': 0.03148482903557791, 'nTOFF': 1, 'dOFF': 0.03148482903557791, 'SUCCESS': False}
10:09:05,535 root DEBUG 

=================== Experiment ID #78 	 Dual Point ID: 80 ===================
10:09:05,548 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.416E-08|<1.000E-06)
10:09:05,548 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:05,883 root DEBUG Side: ON	 Angle(dx0, dx): 9.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.485E-02 	 Total distance: 8.485E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([21], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:06,114 root DEBUG Side: OFF	 Angle(dx0, dx): 1.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.297E-01 	 Total distance: 1.297E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([207], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:06,114 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:06,114 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 20.89 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:06,114 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:06,114 root DEBUG dOFF/dON = 1.5
10:09:06,114 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 79.32614530114441, 'dON1': 0.08484905548529523, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.08484905548529523, 'nTON': 1, 'dON': 0.08484905548529523, 'dxOFFAngle': 79.67290556192273, 'dOFF1': 0.12965560780041105, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.12965560780041105, 'nTOFF': 1, 'dOFF': 0.12965560780041105, 'SUCCESS': True}
10:09:06,121 root DEBUG 

=================== Experiment ID #79 	 Dual Point ID: 81 ===================
10:09:06,130 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.451E-08|<1.000E-06)
10:09:06,130 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:06,468 root DEBUG Side: ON	 Angle(dx0, dx): 1.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.472E-01 	 Total distance: 1.472E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([147], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:06,723 root DEBUG Side: OFF	 Angle(dx0, dx): 1.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.847E-02 	 Total distance: 9.847E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([72], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:06,723 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:06,723 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -19.85 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:06,724 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:06,724 root DEBUG dOFF/dON = 0.7
10:09:06,724 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.15132069350184, 'dON1': 0.1472375894770655, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.1472375894770655, 'nTON': 1, 'dON': 0.1472375894770655, 'dxOFFAngle': 87.13860524205585, 'dOFF1': 0.09847295844569968, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.09847295844569968, 'nTOFF': 1, 'dOFF': 0.09847295844569968, 'SUCCESS': False}
10:09:06,737 root DEBUG 

=================== Experiment ID #80 	 Dual Point ID: 82 ===================
10:09:06,745 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.199E-08|<1.000E-06)
10:09:06,745 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:07,109 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.410E-02 	 Total distance: 4.410E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([152], dtype=int64), array([[False]])]] 	 class: [4 7]
10:09:07,406 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.761E-01 	 Total distance: 1.761E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([81], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:07,598 root DEBUG Side: OFF	 Angle(dx0, dx): 0.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.751E-03 	 Total distance: 1.808E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([234], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:07,598 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:07,598 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 60.79 	 cIDON = [4 7], cIDOFF = [4 7]
10:09:07,598 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:07,598 root DEBUG dOFF/dON = 4.1
10:09:07,598 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.72830325876212, 'dON1': 0.04410072098466585, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.04410072098466585, 'nTON': 1, 'dON': 0.04410072098466585, 'dxOFFAngle': 85.18935114172484, 'dOFF1': 0.18084479516489746, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.18084479516489746, 'nTOFF': 1, 'dOFF': 0.18084479516489746, 'SUCCESS': True}
10:09:07,605 root DEBUG 

=================== Experiment ID #81 	 Dual Point ID: 83 ===================
10:09:07,611 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.930E-08|<1.000E-06)
10:09:07,611 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:07,950 root DEBUG Side: ON	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.770E-01 	 Total distance: 1.770E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([7], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:08,188 root DEBUG Side: OFF	 Angle(dx0, dx): 4.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.823E-02 	 Total distance: 1.823E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([0], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:09:08,189 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:08,189 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -81.33 	 cIDON = [7 9], cIDOFF = [7 9]
10:09:08,189 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:08,189 root DEBUG dOFF/dON = 0.1
10:09:08,189 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.3708157456961, 'dON1': 0.1770167494768373, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.1770167494768373, 'nTON': 1, 'dON': 0.1770167494768373, 'dxOFFAngle': 86.72827813135812, 'dOFF1': 0.01822723958150916, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.01822723958150916, 'nTOFF': 1, 'dOFF': 0.01822723958150916, 'SUCCESS': False}
10:09:08,199 root DEBUG 

=================== Experiment ID #82 	 Dual Point ID: 84 ===================
10:09:08,207 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.104E-08|<1.000E-06)
10:09:08,207 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:08,447 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.811E-01 	 Total distance: 1.811E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([249], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:09:08,645 root DEBUG Side: ON	 Angle(dx0, dx): 2.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.055E-02 	 Total distance: 2.316E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([17], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:09:08,917 root DEBUG Side: OFF	 Angle(dx0, dx): 0.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.458E-01 	 Total distance: 1.458E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([112], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:09:09,175 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.482E-02 	 Total distance: 1.706E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([205], dtype=int64), array([[False]])]] 	 class: [5 9]
10:09:09,362 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.337E-02 	 Total distance: 2.040E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([198], dtype=int64), array([[False]])]] 	 class: [5 9]
10:09:09,363 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:09,363 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -6.35 	 cIDON = [5 9], cIDOFF = [5 9]
10:09:09,363 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:09,364 root DEBUG dOFF/dON = 0.9
10:09:09,364 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.89837083257417, 'dON1': 0.2316272353807473, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.2316272353807473, 'nTON': 1, 'dON': 0.2316272353807473, 'dxOFFAngle': 86.85614664466446, 'dOFF1': 0.2039845153756526, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.2039845153756526, 'nTOFF': 1, 'dOFF': 0.2039845153756526, 'SUCCESS': False}
10:09:09,377 root DEBUG 

=================== Experiment ID #83 	 Dual Point ID: 85 ===================
10:09:09,386 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.345E-09|<1.000E-06)
10:09:09,386 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:09,622 root DEBUG Side: ON	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.937E-02 	 Total distance: 3.937E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([184], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:09,895 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.387E-02 	 Total distance: 1.387E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([164], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:10,64 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.570E-02 	 Total distance: 5.957E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([39], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:10,64 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:10,64 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 20.42 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:10,64 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:10,64 root DEBUG dOFF/dON = 1.5
10:09:10,65 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.44999710459534, 'dON1': 0.039367320041944834, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.039367320041944834, 'nTON': 1, 'dON': 0.039367320041944834, 'dxOFFAngle': 84.28732282666687, 'dOFF1': 0.05956919297212531, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.05956919297212531, 'nTOFF': 1, 'dOFF': 0.05956919297212531, 'SUCCESS': True}
10:09:10,71 root DEBUG 

=================== Experiment ID #84 	 Dual Point ID: 86 ===================
10:09:10,79 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.113E-08|<1.000E-06)
10:09:10,80 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:10,428 root DEBUG Side: ON	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.311E-02 	 Total distance: 3.311E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([54], dtype=int64), array([[False]])]] 	 class: [0 2]
10:09:10,648 root DEBUG Side: ON	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.433E-01 	 Total distance: 7.764E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([215], dtype=int64), array([[ True]])]] 	 class: [0 2]
10:09:10,825 root DEBUG Side: ON	 Angle(dx0, dx): 0.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.545E-02 	 Total distance: 8.219E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([54], dtype=int64), array([[False]])]] 	 class: [0 2]
10:09:11,42 root DEBUG Side: OFF	 Angle(dx0, dx): 5.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.342E-06 	 Total distance: 5.342E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 2]
10:09:11,43 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:11,43 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -100.00 	 cIDON = [0 2], cIDOFF = [1 2]
10:09:11,43 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:11,43 root DEBUG dOFF/dON = 0.0
10:09:11,43 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.63752127474658, 'dON1': 0.8218755516380911, 'cIDON1': array([0, 2], dtype=int64), 'dON_patch_1': 0.8218755516380911, 'nTON': 1, 'dON': 0.8218755516380911, 'dxOFFAngle': 83.58630710567606, 'dOFF1': 5.341672089437652e-06, 'cIDOFF1': array([1, 2], dtype=int64), 'dOFF_patch_1': 5.341672089437652e-06, 'nTOFF': 1, 'dOFF': 5.341672089437652e-06, 'SUCCESS': False}
10:09:11,50 root DEBUG 

=================== Experiment ID #85 	 Dual Point ID: 87 ===================
10:09:11,63 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.957E-08|<1.000E-06)
10:09:11,63 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:11,429 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.013E-01 	 Total distance: 1.013E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([82], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:11,551 root DEBUG Side: ON	 Angle(dx0, dx): 2.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.697E-03 	 Total distance: 1.050E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([10], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:11,952 root DEBUG Side: OFF	 Angle(dx0, dx): 1.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.047E-02 	 Total distance: 3.047E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([243], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:12,228 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.022E-01 	 Total distance: 1.327E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([16], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:12,453 root DEBUG Side: OFF	 Angle(dx0, dx): 0.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.891E-01 	 Total distance: 6.217E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([139], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:12,453 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:12,453 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 71.12 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:12,454 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:12,454 root DEBUG dOFF/dON = 5.9
10:09:12,454 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.43008290514933, 'dON1': 0.10495025947529227, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.10495025947529227, 'nTON': 1, 'dON': 0.10495025947529227, 'dxOFFAngle': 85.75023933736723, 'dOFF1': 0.6217426366708936, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.6217426366708936, 'nTOFF': 1, 'dOFF': 0.6217426366708936, 'SUCCESS': True}
10:09:12,472 root DEBUG 

=================== Experiment ID #86 	 Dual Point ID: 88 ===================
10:09:12,481 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.116E-08|<1.000E-06)
10:09:12,482 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:12,730 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.514E-01 	 Total distance: 3.514E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([142], dtype=int64), array([[False]])]] 	 class: [5 9]
10:09:12,968 root DEBUG Side: OFF	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.198E-01 	 Total distance: 3.198E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([12], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:09:13,117 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.941E-02 	 Total distance: 3.892E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([194], dtype=int64), array([[False]])]] 	 class: [5 9]
10:09:13,346 root DEBUG Side: OFF	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.744E-02 	 Total distance: 4.266E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([88], dtype=int64), array([[False]])]] 	 class: [5 9]
10:09:13,643 root DEBUG Side: OFF	 Angle(dx0, dx): 2.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.744E-02 	 Total distance: 5.041E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([149], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:09:13,643 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:13,643 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 17.84 	 cIDON = [5 9], cIDOFF = [5 9]
10:09:13,643 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:13,643 root DEBUG dOFF/dON = 1.4
10:09:13,643 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.90566312562281, 'dON1': 0.35142591146427526, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.35142591146427526, 'nTON': 1, 'dON': 0.35142591146427526, 'dxOFFAngle': 86.2715193525991, 'dOFF1': 0.5040527622639568, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.5040527622639568, 'nTOFF': 1, 'dOFF': 0.5040527622639568, 'SUCCESS': True}
10:09:13,653 root DEBUG 

=================== Experiment ID #87 	 Dual Point ID: 89 ===================
10:09:13,664 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.455E-08|<1.000E-06)
10:09:13,664 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:13,955 root DEBUG Side: ON	 Angle(dx0, dx): 1.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.322E-02 	 Total distance: 3.322E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([47], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:14,226 root DEBUG Side: OFF	 Angle(dx0, dx): 1.60 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.220E-02 	 Total distance: 7.220E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([0], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:14,226 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:14,226 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 36.98 	 cIDON = [2 4], cIDOFF = [2 4]
10:09:14,226 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:14,226 root DEBUG dOFF/dON = 2.2
10:09:14,226 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.13243847159417, 'dON1': 0.03321720794152317, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.03321720794152317, 'nTON': 1, 'dON': 0.03321720794152317, 'dxOFFAngle': 89.6969191356283, 'dOFF1': 0.07220103522897751, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.07220103522897751, 'nTOFF': 1, 'dOFF': 0.07220103522897751, 'SUCCESS': True}
10:09:14,233 root DEBUG 

=================== Experiment ID #88 	 Dual Point ID: 90 ===================
10:09:14,242 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.531E-09|<1.000E-06)
10:09:14,242 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:14,522 root DEBUG Side: ON	 Angle(dx0, dx): 2.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.035E-01 	 Total distance: 3.035E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([2], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:14,948 root DEBUG Side: OFF	 Angle(dx0, dx): 0.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.136E-01 	 Total distance: 4.136E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([180], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:14,949 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:14,949 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 15.35 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:14,949 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:14,949 root DEBUG dOFF/dON = 1.4
10:09:14,949 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.53215123290525, 'dON1': 0.3035308532641056, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.3035308532641056, 'nTON': 1, 'dON': 0.3035308532641056, 'dxOFFAngle': 89.17202309126894, 'dOFF1': 0.4136417794227986, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.4136417794227986, 'nTOFF': 1, 'dOFF': 0.4136417794227986, 'SUCCESS': True}
10:09:14,960 root DEBUG 

=================== Experiment ID #89 	 Dual Point ID: 91 ===================
10:09:14,968 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.541E-09|<1.000E-06)
10:09:14,968 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:15,265 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.025E-03 	 Total distance: 6.025E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([1], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:15,527 root DEBUG Side: OFF	 Angle(dx0, dx): 1.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.645E-02 	 Total distance: 3.645E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([22], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:15,527 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:15,528 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 71.63 	 cIDON = [2 4], cIDOFF = [2 4]
10:09:15,528 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:15,528 root DEBUG dOFF/dON = 6.0
10:09:15,528 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.98046268425455, 'dON1': 0.006024921416648342, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.006024921416648342, 'nTON': 1, 'dON': 0.006024921416648342, 'dxOFFAngle': 88.26248919961867, 'dOFF1': 0.036446322920656936, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.036446322920656936, 'nTOFF': 1, 'dOFF': 0.036446322920656936, 'SUCCESS': True}
10:09:15,534 root DEBUG 

=================== Experiment ID #90 	 Dual Point ID: 92 ===================
10:09:15,542 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.890E-09|<1.000E-06)
10:09:15,542 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:15,910 root DEBUG Side: ON	 Angle(dx0, dx): 1.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.010E-02 	 Total distance: 1.010E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([10], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:16,143 root DEBUG Side: OFF	 Angle(dx0, dx): 1.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.828E-02 	 Total distance: 5.828E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([143], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:16,143 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:16,143 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 70.46 	 cIDON = [2 4], cIDOFF = [2 4]
10:09:16,143 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:16,143 root DEBUG dOFF/dON = 5.8
10:09:16,143 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.29488561504182, 'dON1': 0.010099687991268456, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.010099687991268456, 'nTON': 1, 'dON': 0.010099687991268456, 'dxOFFAngle': 87.59959312391429, 'dOFF1': 0.058283418270235435, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.058283418270235435, 'nTOFF': 1, 'dOFF': 0.058283418270235435, 'SUCCESS': True}
10:09:16,150 root DEBUG 

=================== Experiment ID #91 	 Dual Point ID: 93 ===================
10:09:16,160 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.238E-09|<1.000E-06)
10:09:16,160 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:16,489 root DEBUG Side: ON	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.649E-01 	 Total distance: 1.649E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([1], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:16,789 root DEBUG Side: OFF	 Angle(dx0, dx): 1.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.848E-01 	 Total distance: 1.848E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([10], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:16,789 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:16,789 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 5.69 	 cIDON = [2 4], cIDOFF = [2 4]
10:09:16,789 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:16,789 root DEBUG dOFF/dON = 1.1
10:09:16,789 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.55002171113848, 'dON1': 0.16492610168737631, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.16492610168737631, 'nTON': 1, 'dON': 0.16492610168737631, 'dxOFFAngle': 86.91702708495316, 'dOFF1': 0.18481640798113683, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.18481640798113683, 'nTOFF': 1, 'dOFF': 0.18481640798113683, 'SUCCESS': True}
10:09:16,797 root DEBUG 

=================== Experiment ID #92 	 Dual Point ID: 94 ===================
10:09:16,806 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.705E-10|<1.000E-06)
10:09:16,806 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:17,171 root DEBUG Side: ON	 Angle(dx0, dx): 2.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.430E-01 	 Total distance: 1.430E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([18], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:17,445 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.036E-01 	 Total distance: 1.036E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([114], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:17,622 root DEBUG Side: OFF	 Angle(dx0, dx): 1.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.489E-02 	 Total distance: 1.685E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([166], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:17,622 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:17,622 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 8.19 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:17,622 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:17,622 root DEBUG dOFF/dON = 1.2
10:09:17,622 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.80909942641938, 'dON1': 0.14295804113399654, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.14295804113399654, 'nTON': 1, 'dON': 0.14295804113399654, 'dxOFFAngle': 86.9389928915099, 'dOFF1': 0.1684767538182771, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.1684767538182771, 'nTOFF': 1, 'dOFF': 0.1684767538182771, 'SUCCESS': True}
10:09:17,634 root DEBUG 

=================== Experiment ID #93 	 Dual Point ID: 95 ===================
10:09:17,644 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.124E-08|<1.000E-06)
10:09:17,644 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:17,954 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.166E-02 	 Total distance: 3.166E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([131], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:18,209 root DEBUG Side: OFF	 Angle(dx0, dx): 0.95 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.337E-02 	 Total distance: 6.337E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([58], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:18,209 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:18,210 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 33.37 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:18,210 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:18,210 root DEBUG dOFF/dON = 2.0
10:09:18,210 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.70127593992143, 'dON1': 0.03166347450670617, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.03166347450670617, 'nTON': 1, 'dON': 0.03166347450670617, 'dxOFFAngle': 87.42103093460578, 'dOFF1': 0.06337379588119962, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.06337379588119962, 'nTOFF': 1, 'dOFF': 0.06337379588119962, 'SUCCESS': True}
10:09:18,224 root DEBUG 

=================== Experiment ID #94 	 Dual Point ID: 96 ===================
10:09:18,236 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.262E-08|<1.000E-06)
10:09:18,237 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:18,544 root DEBUG Side: ON	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.432E-01 	 Total distance: 1.432E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([178], dtype=int64), array([[False]])]] 	 class: [6 9]
10:09:18,838 root DEBUG Side: OFF	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.188E-02 	 Total distance: 3.188E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([33], dtype=int64), array([[False]])]] 	 class: [6 9]
10:09:18,838 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:18,839 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -63.58 	 cIDON = [6 9], cIDOFF = [6 9]
10:09:18,839 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:18,839 root DEBUG dOFF/dON = 0.2
10:09:18,839 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.93340105259023, 'dON1': 0.14316032601954387, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.14316032601954387, 'nTON': 1, 'dON': 0.14316032601954387, 'dxOFFAngle': 88.6608735752716, 'dOFF1': 0.031878494236212, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.031878494236212, 'nTOFF': 1, 'dOFF': 0.031878494236212, 'SUCCESS': False}
10:09:18,847 root DEBUG 

=================== Experiment ID #95 	 Dual Point ID: 97 ===================
10:09:18,856 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.499E-09|<1.000E-06)
10:09:18,857 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:19,208 root DEBUG Side: ON	 Angle(dx0, dx): 1.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.420E-02 	 Total distance: 1.420E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([137], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:19,499 root DEBUG Side: OFF	 Angle(dx0, dx): 12.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.273E-01 	 Total distance: 2.273E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([5, 9], dtype=int64), array([[0.],
       [1.]])]] 	 class: [3 9]
10:09:19,499 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:19,500 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 88.25 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:19,500 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:19,500 root DEBUG dOFF/dON = 16.0
10:09:19,500 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.9905447890532, 'dON1': 0.01419593818720883, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.01419593818720883, 'nTON': 1, 'dON': 0.01419593818720883, 'dxOFFAngle': 83.71794671260645, 'dOFF1': 0.22734843800031992, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.22734843800031992, 'nTOFF': 1, 'dOFF': 0.22734843800031992, 'SUCCESS': True}
10:09:19,511 root DEBUG 

=================== Experiment ID #96 	 Dual Point ID: 98 ===================
10:09:19,523 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.602E-08|<1.000E-06)
10:09:19,524 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:19,825 root DEBUG Side: ON	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.338E-03 	 Total distance: 8.338E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([24], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:20,110 root DEBUG Side: OFF	 Angle(dx0, dx): 1.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.725E-02 	 Total distance: 6.725E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([134], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:20,110 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:20,111 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 77.94 	 cIDON = [5 7], cIDOFF = [5 7]
10:09:20,111 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:20,111 root DEBUG dOFF/dON = 8.1
10:09:20,111 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.2031689153899, 'dON1': 0.008338281835232827, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.008338281835232827, 'nTON': 1, 'dON': 0.008338281835232827, 'dxOFFAngle': 89.85920495453442, 'dOFF1': 0.06725471796259935, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.06725471796259935, 'nTOFF': 1, 'dOFF': 0.06725471796259935, 'SUCCESS': True}
10:09:20,126 root DEBUG 

=================== Experiment ID #97 	 Dual Point ID: 99 ===================
10:09:20,137 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.501E-08|<1.000E-06)
10:09:20,138 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:20,384 root DEBUG Side: ON	 Angle(dx0, dx): 1.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.364E-02 	 Total distance: 9.364E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([164], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:09:20,656 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.102E-02 	 Total distance: 1.102E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([114], dtype=int64), array([[False]])]] 	 class: [2 9]
10:09:20,818 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.722E-02 	 Total distance: 2.824E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([130], dtype=int64), array([[False]])]] 	 class: [2 9]
10:09:21,5 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.063E-02 	 Total distance: 7.887E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([16], dtype=int64), array([[False]])]] 	 class: [2 9]
10:09:21,5 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:21,5 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -8.56 	 cIDON = [2 9], cIDOFF = [2 9]
10:09:21,5 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:21,5 root DEBUG dOFF/dON = 0.8
10:09:21,5 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.27144637522017, 'dON1': 0.09364443181371342, 'cIDON1': array([2, 9], dtype=int64), 'dON_patch_1': 0.09364443181371342, 'nTON': 1, 'dON': 0.09364443181371342, 'dxOFFAngle': 87.85666824634293, 'dOFF1': 0.0788734199755339, 'cIDOFF1': array([2, 9], dtype=int64), 'dOFF_patch_1': 0.0788734199755339, 'nTOFF': 1, 'dOFF': 0.0788734199755339, 'SUCCESS': False}
10:09:21,15 root DEBUG 

=================== Experiment ID #98 	 Dual Point ID: 100 ===================
10:09:21,23 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.399E-09|<1.000E-06)
10:09:21,23 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:21,329 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.442E-01 	 Total distance: 1.442E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([179], dtype=int64), array([[ True]])]] 	 class: [0 7]
10:09:21,628 root DEBUG Side: OFF	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.776E-02 	 Total distance: 2.776E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([216], dtype=int64), array([[ True]])]] 	 class: [1 7]
10:09:21,629 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:21,629 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -67.72 	 cIDON = [0 7], cIDOFF = [1 7]
10:09:21,629 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:21,629 root DEBUG dOFF/dON = 0.2
10:09:21,629 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.88020786454646, 'dON1': 0.1442225393493397, 'cIDON1': array([0, 7], dtype=int64), 'dON_patch_1': 0.1442225393493397, 'nTON': 1, 'dON': 0.1442225393493397, 'dxOFFAngle': 89.00854750470266, 'dOFF1': 0.027756518430285367, 'cIDOFF1': array([1, 7], dtype=int64), 'dOFF_patch_1': 0.027756518430285367, 'nTOFF': 1, 'dOFF': 0.027756518430285367, 'SUCCESS': False}
10:09:21,640 root DEBUG 

=================== Experiment ID #99 	 Dual Point ID: 101 ===================
10:09:21,648 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.730E-08|<1.000E-06)
10:09:21,649 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:21,943 root DEBUG Side: ON	 Angle(dx0, dx): 3.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.520E-01 	 Total distance: 3.520E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([37], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:09:22,187 root DEBUG Side: OFF	 Angle(dx0, dx): 7.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.371E-06 	 Total distance: 5.371E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 9]
10:09:22,188 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:22,188 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -100.00 	 cIDON = [1 9], cIDOFF = [1 9]
10:09:22,188 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:22,188 root DEBUG dOFF/dON = 0.0
10:09:22,188 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.23828474852326, 'dON1': 0.3520143387225127, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.3520143387225127, 'nTON': 1, 'dON': 0.3520143387225127, 'dxOFFAngle': 81.22904410394575, 'dOFF1': 5.371050010708564e-06, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 5.371050010708564e-06, 'nTOFF': 1, 'dOFF': 5.371050010708564e-06, 'SUCCESS': False}
10:09:22,200 root DEBUG 

=================== Experiment ID #100 	 Dual Point ID: 102 ===================
10:09:22,209 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.189E-07|<1.000E-06)
10:09:22,210 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:22,534 root DEBUG Side: ON	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.728E-01 	 Total distance: 4.728E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([147], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:22,773 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.096E-01 	 Total distance: 2.096E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([71], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:22,773 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:22,773 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -38.58 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:22,773 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:22,773 root DEBUG dOFF/dON = 0.4
10:09:22,774 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.90091262601874, 'dON1': 0.47283202566598453, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.47283202566598453, 'nTON': 1, 'dON': 0.47283202566598453, 'dxOFFAngle': 88.14693418453986, 'dOFF1': 0.20958602242613708, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.20958602242613708, 'nTOFF': 1, 'dOFF': 0.20958602242613708, 'SUCCESS': False}
10:09:22,784 root DEBUG 

=================== Experiment ID #101 	 Dual Point ID: 103 ===================
10:09:22,792 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.591E-09|<1.000E-06)
10:09:22,792 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:23,55 root DEBUG Side: ON	 Angle(dx0, dx): 1.97 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.186E-01 	 Total distance: 2.186E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([58], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:09:23,317 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.477E-02 	 Total distance: 1.477E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([120], dtype=int64), array([[False]])]] 	 class: [3 9]
10:09:23,526 root DEBUG Side: OFF	 Angle(dx0, dx): 0.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.525E-02 	 Total distance: 3.001E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([8], dtype=int64), array([[False]])]] 	 class: [3 9]
10:09:23,527 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:23,527 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -75.86 	 cIDON = [3 9], cIDOFF = [3 9]
10:09:23,527 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:23,527 root DEBUG dOFF/dON = 0.1
10:09:23,527 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 77.53575405993672, 'dON1': 0.21863178883581585, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.21863178883581585, 'nTON': 1, 'dON': 0.21863178883581585, 'dxOFFAngle': 78.85792362409265, 'dOFF1': 0.03001413851095047, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.03001413851095047, 'nTOFF': 1, 'dOFF': 0.03001413851095047, 'SUCCESS': False}
10:09:23,538 root DEBUG 

=================== Experiment ID #102 	 Dual Point ID: 104 ===================
10:09:23,547 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.960E-10|<1.000E-06)
10:09:23,547 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:23,847 root DEBUG Side: ON	 Angle(dx0, dx): 2.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.924E-01 	 Total distance: 1.924E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([114], dtype=int64), array([[False]])]] 	 class: [1 9]
10:09:24,175 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.304E-02 	 Total distance: 1.304E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([42], dtype=int64), array([[False]])]] 	 class: [0 9]
10:09:24,175 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:24,176 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -87.31 	 cIDON = [1 9], cIDOFF = [0 9]
10:09:24,176 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:24,176 root DEBUG dOFF/dON = 0.1
10:09:24,176 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.06828954224632, 'dON1': 0.19242349408063172, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.19242349408063172, 'nTON': 1, 'dON': 0.19242349408063172, 'dxOFFAngle': 88.85124717702183, 'dOFF1': 0.013037003329916695, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.013037003329916695, 'nTOFF': 1, 'dOFF': 0.013037003329916695, 'SUCCESS': False}
10:09:24,185 root DEBUG 

=================== Experiment ID #103 	 Dual Point ID: 105 ===================
10:09:24,194 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.593E-08|<1.000E-06)
10:09:24,194 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:24,461 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.507E-02 	 Total distance: 9.507E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([97], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:24,784 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.554E-01 	 Total distance: 2.554E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([31], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:24,784 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:24,784 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 45.75 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:24,784 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:24,784 root DEBUG dOFF/dON = 2.7
10:09:24,784 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.44588953995355, 'dON1': 0.09506770098406239, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.09506770098406239, 'nTON': 1, 'dON': 0.09506770098406239, 'dxOFFAngle': 87.68937111804215, 'dOFF1': 0.2554243129097915, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.2554243129097915, 'nTOFF': 1, 'dOFF': 0.2554243129097915, 'SUCCESS': True}
10:09:24,792 root DEBUG 

=================== Experiment ID #104 	 Dual Point ID: 106 ===================
10:09:24,800 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.253E-08|<1.000E-06)
10:09:24,800 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:25,129 root DEBUG Side: ON	 Angle(dx0, dx): 3.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.612E-01 	 Total distance: 1.612E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([114], dtype=int64), array([[False]])]] 	 class: [4 7]
10:09:25,390 root DEBUG Side: OFF	 Angle(dx0, dx): 0.73 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.891E-03 	 Total distance: 6.891E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([217], dtype=int64), array([[False]])]] 	 class: [4 7]
10:09:25,540 root DEBUG Side: OFF	 Angle(dx0, dx): 2.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.788E-02 	 Total distance: 3.477E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([41], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:25,541 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:25,541 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -64.52 	 cIDON = [4 7], cIDOFF = [4 7]
10:09:25,541 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:25,541 root DEBUG dOFF/dON = 0.2
10:09:25,541 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.73831409877039, 'dON1': 0.16121756850722668, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.16121756850722668, 'nTON': 1, 'dON': 0.16121756850722668, 'dxOFFAngle': 83.89239886400048, 'dOFF1': 0.03476950937474852, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.03476950937474852, 'nTOFF': 1, 'dOFF': 0.03476950937474852, 'SUCCESS': False}
10:09:25,551 root DEBUG 

=================== Experiment ID #105 	 Dual Point ID: 107 ===================
10:09:25,563 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.195E-08|<1.000E-06)
10:09:25,563 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:25,851 root DEBUG Side: ON	 Angle(dx0, dx): 1.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.799E-03 	 Total distance: 1.799E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([61], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:26,171 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.077E-01 	 Total distance: 1.077E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([180], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:26,387 root DEBUG Side: OFF	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.034E-01 	 Total distance: 2.111E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([200], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:26,388 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:26,388 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 98.31 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:26,388 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:26,388 root DEBUG dOFF/dON = 117.4
10:09:26,388 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.5014215047524, 'dON1': 0.0017988421104942612, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.0017988421104942612, 'nTON': 1, 'dON': 0.0017988421104942612, 'dxOFFAngle': 84.73890813393733, 'dOFF1': 0.21109859149404545, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.21109859149404545, 'nTOFF': 1, 'dOFF': 0.21109859149404545, 'SUCCESS': True}
10:09:26,397 root DEBUG 

=================== Experiment ID #106 	 Dual Point ID: 108 ===================
10:09:26,405 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.709E-09|<1.000E-06)
10:09:26,405 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:26,705 root DEBUG Side: ON	 Angle(dx0, dx): 1.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.822E-02 	 Total distance: 3.822E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([73], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:27,18 root DEBUG Side: OFF	 Angle(dx0, dx): 0.73 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.337E-02 	 Total distance: 1.337E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([207], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:27,208 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.774E-02 	 Total distance: 7.111E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([204], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:27,408 root DEBUG Side: OFF	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.009E-02 	 Total distance: 9.119E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([109], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:27,408 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:27,409 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 40.94 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:27,409 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:27,409 root DEBUG dOFF/dON = 2.4
10:09:27,409 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.53463730125623, 'dON1': 0.038216779566621215, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.038216779566621215, 'nTON': 1, 'dON': 0.038216779566621215, 'dxOFFAngle': 81.51563192357409, 'dOFF1': 0.09119490738696485, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.09119490738696485, 'nTOFF': 1, 'dOFF': 0.09119490738696485, 'SUCCESS': True}
10:09:27,423 root DEBUG 

=================== Experiment ID #107 	 Dual Point ID: 109 ===================
10:09:27,432 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.775E-07|<1.000E-06)
10:09:27,433 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:27,749 root DEBUG Side: ON	 Angle(dx0, dx): 0.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.940E-01 	 Total distance: 3.940E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([23], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:09:27,982 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.627E-01 	 Total distance: 1.627E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([246], dtype=int64), array([[False]])]] 	 class: [0 9]
10:09:27,982 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:27,983 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -41.56 	 cIDON = [1 9], cIDOFF = [0 9]
10:09:27,983 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:27,983 root DEBUG dOFF/dON = 0.4
10:09:27,983 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.34995130875448, 'dON1': 0.3940498180979302, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.3940498180979302, 'nTON': 1, 'dON': 0.3940498180979302, 'dxOFFAngle': 85.45197598265221, 'dOFF1': 0.16269228178362727, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.16269228178362727, 'nTOFF': 1, 'dOFF': 0.16269228178362727, 'SUCCESS': False}
10:09:27,993 root DEBUG 

=================== Experiment ID #108 	 Dual Point ID: 110 ===================
10:09:28,2 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.063E-10|<1.000E-06)
10:09:28,2 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:28,342 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.078E-02 	 Total distance: 6.078E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([52], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:28,517 root DEBUG Side: ON	 Angle(dx0, dx): 2.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.535E-02 	 Total distance: 8.613E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([186], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:28,750 root DEBUG Side: OFF	 Angle(dx0, dx): 0.87 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.335E-01 	 Total distance: 1.335E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([187], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:28,948 root DEBUG Side: OFF	 Angle(dx0, dx): 1.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.885E-02 	 Total distance: 1.824E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([180], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:29,187 root DEBUG Side: OFF	 Angle(dx0, dx): 2.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.366E-01 	 Total distance: 5.190E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([233], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:29,187 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:29,187 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 71.53 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:29,188 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:29,188 root DEBUG dOFF/dON = 6.0
10:09:29,188 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.35418199884752, 'dON1': 0.08613241542378597, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.08613241542378597, 'nTON': 1, 'dON': 0.08613241542378597, 'dxOFFAngle': 88.41243201961244, 'dOFF1': 0.518977021026783, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.518977021026783, 'nTOFF': 1, 'dOFF': 0.518977021026783, 'SUCCESS': True}
10:09:29,199 root DEBUG 

=================== Experiment ID #109 	 Dual Point ID: 111 ===================
10:09:29,213 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.589E-08|<1.000E-06)
10:09:29,214 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:29,494 root DEBUG Side: ON	 Angle(dx0, dx): 1.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.002E-02 	 Total distance: 3.002E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([35], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:29,764 root DEBUG Side: OFF	 Angle(dx0, dx): 1.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.430E-02 	 Total distance: 6.430E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([42], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:29,764 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:29,765 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 36.35 	 cIDON = [2 6], cIDOFF = [2 6]
10:09:29,765 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:29,765 root DEBUG dOFF/dON = 2.1
10:09:29,765 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.75440174997775, 'dON1': 0.030015718304044384, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.030015718304044384, 'nTON': 1, 'dON': 0.030015718304044384, 'dxOFFAngle': 89.00729106550591, 'dOFF1': 0.06429951376302297, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.06429951376302297, 'nTOFF': 1, 'dOFF': 0.06429951376302297, 'SUCCESS': True}
10:09:29,771 root DEBUG 

=================== Experiment ID #110 	 Dual Point ID: 112 ===================
10:09:29,778 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.161E-08|<1.000E-06)
10:09:29,778 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:30,79 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.760E-02 	 Total distance: 7.760E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([156], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:30,368 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.627E-02 	 Total distance: 4.627E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([215], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:30,368 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:30,368 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -25.30 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:30,368 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:30,368 root DEBUG dOFF/dON = 0.6
10:09:30,368 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.14015971391603, 'dON1': 0.07760458950142696, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.07760458950142696, 'nTON': 1, 'dON': 0.07760458950142696, 'dxOFFAngle': 88.23511645958817, 'dOFF1': 0.04626998954424098, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.04626998954424098, 'nTOFF': 1, 'dOFF': 0.04626998954424098, 'SUCCESS': False}
10:09:30,380 root DEBUG 

=================== Experiment ID #111 	 Dual Point ID: 113 ===================
10:09:30,390 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.260E-08|<1.000E-06)
10:09:30,390 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:30,695 root DEBUG Side: ON	 Angle(dx0, dx): 0.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.048E-02 	 Total distance: 1.048E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([206], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:31,36 root DEBUG Side: OFF	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.584E-01 	 Total distance: 3.584E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([210], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:31,36 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:31,36 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 94.32 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:31,36 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:31,36 root DEBUG dOFF/dON = 34.2
10:09:31,36 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.000802169205, 'dON1': 0.010475109838156613, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.010475109838156613, 'nTON': 1, 'dON': 0.010475109838156613, 'dxOFFAngle': 86.89627331520074, 'dOFF1': 0.3584037198634829, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.3584037198634829, 'nTOFF': 1, 'dOFF': 0.3584037198634829, 'SUCCESS': True}
10:09:31,45 root DEBUG 

=================== Experiment ID #112 	 Dual Point ID: 114 ===================
10:09:31,55 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.298E-08|<1.000E-06)
10:09:31,55 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:31,368 root DEBUG Side: ON	 Angle(dx0, dx): 0.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.089E-02 	 Total distance: 3.089E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([46], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:09:31,640 root DEBUG Side: OFF	 Angle(dx0, dx): 3.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.164E-02 	 Total distance: 5.164E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([9], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:31,640 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:31,641 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 25.14 	 cIDON = [7 9], cIDOFF = [7 9]
10:09:31,641 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:31,641 root DEBUG dOFF/dON = 1.7
10:09:31,641 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 79.00236317161335, 'dON1': 0.030889723913274637, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.030889723913274637, 'nTON': 1, 'dON': 0.030889723913274637, 'dxOFFAngle': 78.70010137507309, 'dOFF1': 0.05164078025227715, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.05164078025227715, 'nTOFF': 1, 'dOFF': 0.05164078025227715, 'SUCCESS': True}
10:09:31,653 root DEBUG 

=================== Experiment ID #113 	 Dual Point ID: 115 ===================
10:09:31,663 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.249E-08|<1.000E-06)
10:09:31,663 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:31,946 root DEBUG Side: ON	 Angle(dx0, dx): 1.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.346E-01 	 Total distance: 2.346E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([48], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:32,207 root DEBUG Side: OFF	 Angle(dx0, dx): 1.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.095E-01 	 Total distance: 1.095E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([178], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:32,207 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:32,208 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -36.33 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:32,208 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:32,208 root DEBUG dOFF/dON = 0.5
10:09:32,208 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.68976793441341, 'dON1': 0.23458910606949707, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.23458910606949707, 'nTON': 1, 'dON': 0.23458910606949707, 'dxOFFAngle': 89.35543329833234, 'dOFF1': 0.10954954024173351, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.10954954024173351, 'nTOFF': 1, 'dOFF': 0.10954954024173351, 'SUCCESS': False}
10:09:32,217 root DEBUG 

=================== Experiment ID #114 	 Dual Point ID: 116 ===================
10:09:32,228 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.931E-08|<1.000E-06)
10:09:32,228 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:32,454 root DEBUG Side: ON	 Angle(dx0, dx): 3.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.428E-07 	 Total distance: 4.428E-07 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 2]
10:09:32,615 root DEBUG Side: ON	 Angle(dx0, dx): 3.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.867E-07 	 Total distance: 1.329E-06 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 2]
10:09:32,730 root DEBUG Side: ON	 Angle(dx0, dx): 3.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.428E-07 	 Total distance: 1.772E-06 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 2]
10:09:32,849 root DEBUG Side: ON	 Angle(dx0, dx): 3.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.773E-06 	 Total distance: 3.546E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 2]
10:09:33,162 root DEBUG Side: OFF	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.220E-02 	 Total distance: 2.220E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([175], dtype=int64), array([[ True]])]] 	 class: [0 2]
10:09:33,335 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.900E-02 	 Total distance: 4.120E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([48], dtype=int64), array([[False]])]] 	 class: [0 2]
10:09:33,335 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:33,335 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.98 	 cIDON = [1 2], cIDOFF = [0 2]
10:09:33,336 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:33,336 root DEBUG dOFF/dON = 11620.3
10:09:33,336 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.48734266884932, 'dON1': 3.5456645056689223e-06, 'cIDON1': array([1, 2], dtype=int64), 'dON_patch_1': 3.5456645056689223e-06, 'nTON': 1, 'dON': 3.5456645056689223e-06, 'dxOFFAngle': 85.8882598145567, 'dOFF1': 0.04120175778183284, 'cIDOFF1': array([0, 2], dtype=int64), 'dOFF_patch_1': 0.04120175778183284, 'nTOFF': 1, 'dOFF': 0.04120175778183284, 'SUCCESS': True}
10:09:33,342 root DEBUG 

=================== Experiment ID #115 	 Dual Point ID: 117 ===================
10:09:33,350 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.088E-08|<1.000E-06)
10:09:33,350 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:33,605 root DEBUG Side: ON	 Angle(dx0, dx): 0.97 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.188E-02 	 Total distance: 8.188E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([92], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:33,881 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.017E-02 	 Total distance: 8.017E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([147], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:34,93 root DEBUG Side: OFF	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.249E-01 	 Total distance: 2.050E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([87], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:34,93 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:34,93 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 42.93 	 cIDON = [2 4], cIDOFF = [2 4]
10:09:34,93 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:34,93 root DEBUG dOFF/dON = 2.5
10:09:34,93 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.19292960976193, 'dON1': 0.08187533722904664, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.08187533722904664, 'nTON': 1, 'dON': 0.08187533722904664, 'dxOFFAngle': 88.84210838305471, 'dOFF1': 0.20503217662396173, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.20503217662396173, 'nTOFF': 1, 'dOFF': 0.20503217662396173, 'SUCCESS': True}
10:09:34,108 root DEBUG 

=================== Experiment ID #116 	 Dual Point ID: 118 ===================
10:09:34,117 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.891E-09|<1.000E-06)
10:09:34,117 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:34,397 root DEBUG Side: ON	 Angle(dx0, dx): 1.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.887E-02 	 Total distance: 7.887E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([30], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:34,628 root DEBUG Side: OFF	 Angle(dx0, dx): 1.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.742E-03 	 Total distance: 7.742E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([6], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:34,629 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:34,629 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -82.12 	 cIDON = [2 4], cIDOFF = [2 4]
10:09:34,629 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:34,629 root DEBUG dOFF/dON = 0.1
10:09:34,629 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.65229408681763, 'dON1': 0.07887162500437829, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.07887162500437829, 'nTON': 1, 'dON': 0.07887162500437829, 'dxOFFAngle': 85.51556176258421, 'dOFF1': 0.007741881767939741, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.007741881767939741, 'nTOFF': 1, 'dOFF': 0.007741881767939741, 'SUCCESS': False}
10:09:34,635 root DEBUG 

=================== Experiment ID #117 	 Dual Point ID: 119 ===================
10:09:34,647 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.205E-09|<1.000E-06)
10:09:34,647 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:34,926 root DEBUG Side: ON	 Angle(dx0, dx): 1.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.446E-02 	 Total distance: 6.446E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([15], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:09:35,202 root DEBUG Side: OFF	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.205E-02 	 Total distance: 1.205E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([35], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:09:35,203 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:35,203 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -68.50 	 cIDON = [6 9], cIDOFF = [6 9]
10:09:35,203 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:35,203 root DEBUG dOFF/dON = 0.2
10:09:35,203 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.52899586561867, 'dON1': 0.06446076215234758, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.06446076215234758, 'nTON': 1, 'dON': 0.06446076215234758, 'dxOFFAngle': 81.51889433794565, 'dOFF1': 0.012049651629138182, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.012049651629138182, 'nTOFF': 1, 'dOFF': 0.012049651629138182, 'SUCCESS': False}
10:09:35,213 root DEBUG 

=================== Experiment ID #118 	 Dual Point ID: 120 ===================
10:09:35,223 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.448E-08|<1.000E-06)
10:09:35,223 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:35,512 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.003E-03 	 Total distance: 7.003E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([160], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:35,725 root DEBUG Side: ON	 Angle(dx0, dx): 2.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.061E-01 	 Total distance: 1.131E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([34], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:35,967 root DEBUG Side: OFF	 Angle(dx0, dx): 1.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.527E-03 	 Total distance: 1.527E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([39], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:35,968 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:35,968 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -97.34 	 cIDON = [2 4], cIDOFF = [2 4]
10:09:35,968 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:35,968 root DEBUG dOFF/dON = 0.0
10:09:35,968 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.13037375847145, 'dON1': 0.11312096399966232, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.11312096399966232, 'nTON': 1, 'dON': 0.11312096399966232, 'dxOFFAngle': 84.65430457136576, 'dOFF1': 0.0015265654984122467, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.0015265654984122467, 'nTOFF': 1, 'dOFF': 0.0015265654984122467, 'SUCCESS': False}
10:09:35,980 root DEBUG 

=================== Experiment ID #119 	 Dual Point ID: 121 ===================
10:09:35,988 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.102E-07|<1.000E-06)
10:09:35,988 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:36,227 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.018E-02 	 Total distance: 3.018E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([174], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:36,543 root DEBUG Side: OFF	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.509E-01 	 Total distance: 2.509E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([145], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:36,688 root DEBUG Side: OFF	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.962E-02 	 Total distance: 2.805E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([110], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:36,874 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.256E-02 	 Total distance: 3.031E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([48], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:36,875 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:36,875 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 81.89 	 cIDON = [5 7], cIDOFF = [5 7]
10:09:36,875 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:36,875 root DEBUG dOFF/dON = 10.0
10:09:36,875 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.72595084622226, 'dON1': 0.03017899307968628, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.03017899307968628, 'nTON': 1, 'dON': 0.03017899307968628, 'dxOFFAngle': 87.28936978891572, 'dOFF1': 0.3030641788350035, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.3030641788350035, 'nTOFF': 1, 'dOFF': 0.3030641788350035, 'SUCCESS': True}
10:09:36,887 root DEBUG 

=================== Experiment ID #120 	 Dual Point ID: 122 ===================
10:09:36,897 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.014E-08|<1.000E-06)
10:09:36,897 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:37,225 root DEBUG Side: ON	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.046E-02 	 Total distance: 6.046E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([132], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:37,387 root DEBUG Side: ON	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.630E-01 	 Total distance: 3.235E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([45], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:37,729 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.019E-01 	 Total distance: 2.019E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([0], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:37,896 root DEBUG Side: OFF	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.530E-02 	 Total distance: 2.772E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([152], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:38,111 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.750E-02 	 Total distance: 3.047E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([114], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:38,273 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.142E-01 	 Total distance: 4.189E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([53], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:38,273 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:38,273 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 12.85 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:38,273 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:38,273 root DEBUG dOFF/dON = 1.3
10:09:38,273 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.31991340669964, 'dON1': 0.32348453119300424, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.32348453119300424, 'nTON': 1, 'dON': 0.32348453119300424, 'dxOFFAngle': 88.75737659045818, 'dOFF1': 0.418883976260522, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.418883976260522, 'nTOFF': 1, 'dOFF': 0.418883976260522, 'SUCCESS': True}
10:09:38,288 root DEBUG 

=================== Experiment ID #121 	 Dual Point ID: 123 ===================
10:09:38,297 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.316E-08|<1.000E-06)
10:09:38,297 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:38,596 root DEBUG Side: ON	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.164E-01 	 Total distance: 1.164E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([27], dtype=int64), array([[False]])]] 	 class: [4 7]
10:09:38,892 root DEBUG Side: OFF	 Angle(dx0, dx): 1.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.081E-02 	 Total distance: 3.081E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([25], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:38,892 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:38,892 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -58.14 	 cIDON = [4 7], cIDOFF = [4 7]
10:09:38,892 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:38,892 root DEBUG dOFF/dON = 0.3
10:09:38,892 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.52733878466864, 'dON1': 0.11638962926793445, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.11638962926793445, 'nTON': 1, 'dON': 0.11638962926793445, 'dxOFFAngle': 83.25201542462197, 'dOFF1': 0.030808347434574165, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.030808347434574165, 'nTOFF': 1, 'dOFF': 0.030808347434574165, 'SUCCESS': False}
10:09:38,900 root DEBUG 

=================== Experiment ID #122 	 Dual Point ID: 124 ===================
10:09:38,910 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.666E-08|<1.000E-06)
10:09:38,910 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:39,168 root DEBUG Side: ON	 Angle(dx0, dx): 1.79 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.187E-01 	 Total distance: 2.187E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([167], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:39,427 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.888E-02 	 Total distance: 6.888E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([94], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:39,616 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.524E-01 	 Total distance: 2.213E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([32], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:39,616 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:39,616 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 0.60 	 cIDON = [2 4], cIDOFF = [2 4]
10:09:39,616 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:39,616 root DEBUG dOFF/dON = 1.0
10:09:39,616 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.9234232069158, 'dON1': 0.2186749340629307, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.2186749340629307, 'nTON': 1, 'dON': 0.2186749340629307, 'dxOFFAngle': 87.38822238963768, 'dOFF1': 0.22130826281514326, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.22130826281514326, 'nTOFF': 1, 'dOFF': 0.22130826281514326, 'SUCCESS': True}
10:09:39,627 root DEBUG 

=================== Experiment ID #123 	 Dual Point ID: 125 ===================
10:09:39,641 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.243E-08|<1.000E-06)
10:09:39,642 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:39,912 root DEBUG Side: ON	 Angle(dx0, dx): 1.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.262E-03 	 Total distance: 4.262E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([124], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:40,182 root DEBUG Side: OFF	 Angle(dx0, dx): 1.89 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.089E-02 	 Total distance: 3.089E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([42], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:40,182 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:40,182 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 75.75 	 cIDON = [2 4], cIDOFF = [2 4]
10:09:40,182 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:40,182 root DEBUG dOFF/dON = 7.2
10:09:40,182 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.90841742578993, 'dON1': 0.0042618778084595, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.0042618778084595, 'nTON': 1, 'dON': 0.0042618778084595, 'dxOFFAngle': 88.37884245812425, 'dOFF1': 0.030887740655271733, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.030887740655271733, 'nTOFF': 1, 'dOFF': 0.030887740655271733, 'SUCCESS': True}
10:09:40,188 root DEBUG 

=================== Experiment ID #124 	 Dual Point ID: 126 ===================
10:09:40,198 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.396E-08|<1.000E-06)
10:09:40,198 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:40,503 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.365E+00 	 Total distance: 1.365E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([139], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:40,780 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.394E-01 	 Total distance: 1.394E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([248], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:40,781 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:40,781 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -81.46 	 cIDON = [2 4], cIDOFF = [2 4]
10:09:40,781 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:40,781 root DEBUG dOFF/dON = 0.1
10:09:40,781 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.076224307523, 'dON1': 1.3651185878745493, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 1.3651185878745493, 'nTON': 1, 'dON': 1.3651185878745493, 'dxOFFAngle': 81.71233604874536, 'dOFF1': 0.13944124857484305, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.13944124857484305, 'nTOFF': 1, 'dOFF': 0.13944124857484305, 'SUCCESS': False}
10:09:40,787 root DEBUG 

=================== Experiment ID #125 	 Dual Point ID: 127 ===================
10:09:40,797 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.208E-09|<1.000E-06)
10:09:40,797 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:41,200 root DEBUG Side: ON	 Angle(dx0, dx): 3.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.193E-01 	 Total distance: 1.193E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([31], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:09:41,419 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.825E-02 	 Total distance: 3.825E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([36], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:09:41,612 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.199E-02 	 Total distance: 8.024E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([199], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:09:41,613 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:41,613 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -19.57 	 cIDON = [4 6], cIDOFF = [4 6]
10:09:41,613 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:41,613 root DEBUG dOFF/dON = 0.7
10:09:41,613 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.12489786787417, 'dON1': 0.11929143220513724, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.11929143220513724, 'nTON': 1, 'dON': 0.11929143220513724, 'dxOFFAngle': 87.96062373179019, 'dOFF1': 0.08023535542146482, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.08023535542146482, 'nTOFF': 1, 'dOFF': 0.08023535542146482, 'SUCCESS': False}
10:09:41,623 root DEBUG 

=================== Experiment ID #126 	 Dual Point ID: 128 ===================
10:09:41,630 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.561E-11|<1.000E-06)
10:09:41,630 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:41,899 root DEBUG Side: ON	 Angle(dx0, dx): 2.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.930E-02 	 Total distance: 2.930E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([184], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:42,177 root DEBUG Side: OFF	 Angle(dx0, dx): 0.98 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.224E-02 	 Total distance: 6.224E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([18], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:42,178 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:42,178 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 35.99 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:42,178 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:42,178 root DEBUG dOFF/dON = 2.1
10:09:42,178 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.1168691107504, 'dON1': 0.029297900747821293, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.029297900747821293, 'nTON': 1, 'dON': 0.029297900747821293, 'dxOFFAngle': 82.82295915631103, 'dOFF1': 0.06224107748063027, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.06224107748063027, 'nTOFF': 1, 'dOFF': 0.06224107748063027, 'SUCCESS': True}
10:09:42,190 root DEBUG 

=================== Experiment ID #127 	 Dual Point ID: 129 ===================
10:09:42,200 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.203E-08|<1.000E-06)
10:09:42,201 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:42,549 root DEBUG Side: ON	 Angle(dx0, dx): 1.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.595E-01 	 Total distance: 1.595E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([92], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:09:42,834 root DEBUG Side: OFF	 Angle(dx0, dx): 0.89 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.137E-03 	 Total distance: 3.137E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([242], dtype=int64), array([[False]])]] 	 class: [0 8]
10:09:42,835 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:42,835 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -96.14 	 cIDON = [1 8], cIDOFF = [0 8]
10:09:42,835 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:42,835 root DEBUG dOFF/dON = 0.0
10:09:42,835 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.43300290852518, 'dON1': 0.15954708097299022, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 0.15954708097299022, 'nTON': 1, 'dON': 0.15954708097299022, 'dxOFFAngle': 84.18265157865672, 'dOFF1': 0.0031374024846475375, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.0031374024846475375, 'nTOFF': 1, 'dOFF': 0.0031374024846475375, 'SUCCESS': False}
10:09:42,846 root DEBUG 

=================== Experiment ID #128 	 Dual Point ID: 130 ===================
10:09:42,855 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.524E-09|<1.000E-06)
10:09:42,855 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:43,155 root DEBUG Side: ON	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.856E-02 	 Total distance: 8.856E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([233], dtype=int64), array([[False]])]] 	 class: [1 2]
10:09:43,431 root DEBUG Side: OFF	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.681E-05 	 Total distance: 1.681E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 2]
10:09:43,431 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:43,431 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.96 	 cIDON = [1 2], cIDOFF = [1 2]
10:09:43,431 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:43,431 root DEBUG dOFF/dON = 0.0
10:09:43,431 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.7604313434461, 'dON1': 0.08855725576683879, 'cIDON1': array([1, 2], dtype=int64), 'dON_patch_1': 0.08855725576683879, 'nTON': 1, 'dON': 0.08855725576683879, 'dxOFFAngle': 89.61153670856861, 'dOFF1': 1.6809812723652094e-05, 'cIDOFF1': array([1, 2], dtype=int64), 'dOFF_patch_1': 1.6809812723652094e-05, 'nTOFF': 1, 'dOFF': 1.6809812723652094e-05, 'SUCCESS': False}
10:09:43,437 root DEBUG 

=================== Experiment ID #129 	 Dual Point ID: 131 ===================
10:09:43,451 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.604E-09|<1.000E-06)
10:09:43,451 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:43,732 root DEBUG Side: ON	 Angle(dx0, dx): 1.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.920E-02 	 Total distance: 1.920E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([60], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:43,943 root DEBUG Side: ON	 Angle(dx0, dx): 2.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.158E-02 	 Total distance: 8.078E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([48], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:44,209 root DEBUG Side: OFF	 Angle(dx0, dx): 3.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.348E-02 	 Total distance: 6.348E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([36], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:44,210 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:44,210 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -12.00 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:44,211 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:44,211 root DEBUG dOFF/dON = 0.8
10:09:44,211 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 76.46901379767077, 'dON1': 0.08078357388605803, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.08078357388605803, 'nTON': 1, 'dON': 0.08078357388605803, 'dxOFFAngle': 77.8794370381201, 'dOFF1': 0.06347811397935882, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.06347811397935882, 'nTOFF': 1, 'dOFF': 0.06347811397935882, 'SUCCESS': False}
10:09:44,224 root DEBUG 

=================== Experiment ID #130 	 Dual Point ID: 132 ===================
10:09:44,234 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.743E-08|<1.000E-06)
10:09:44,235 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:44,522 root DEBUG Side: ON	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.319E-02 	 Total distance: 2.319E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([33], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:44,792 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.009E-01 	 Total distance: 1.009E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([212], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:44,792 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:44,792 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 62.64 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:44,792 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:44,793 root DEBUG dOFF/dON = 4.4
10:09:44,793 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.32333210092017, 'dON1': 0.02318685937878424, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.02318685937878424, 'nTON': 1, 'dON': 0.02318685937878424, 'dxOFFAngle': 85.40296981751419, 'dOFF1': 0.10092377693190506, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.10092377693190506, 'nTOFF': 1, 'dOFF': 0.10092377693190506, 'SUCCESS': True}
10:09:44,804 root DEBUG 

=================== Experiment ID #131 	 Dual Point ID: 133 ===================
10:09:44,811 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.342E-08|<1.000E-06)
10:09:44,812 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:45,115 root DEBUG Side: ON	 Angle(dx0, dx): 2.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.079E-01 	 Total distance: 1.079E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([32], dtype=int64), array([[False]])]] 	 class: [4 6]
10:09:45,417 root DEBUG Side: OFF	 Angle(dx0, dx): 0.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.393E-01 	 Total distance: 1.393E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([103], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:09:45,419 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:45,419 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 12.73 	 cIDON = [4 6], cIDOFF = [4 6]
10:09:45,419 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:45,419 root DEBUG dOFF/dON = 1.3
10:09:45,419 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.13196795967617, 'dON1': 0.10785516816169143, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.10785516816169143, 'nTON': 1, 'dON': 0.10785516816169143, 'dxOFFAngle': 80.14327458399822, 'dOFF1': 0.13930795907666596, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.13930795907666596, 'nTOFF': 1, 'dOFF': 0.13930795907666596, 'SUCCESS': True}
10:09:45,424 root DEBUG 

=================== Experiment ID #132 	 Dual Point ID: 134 ===================
10:09:45,433 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.313E-08|<1.000E-06)
10:09:45,434 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:45,694 root DEBUG Side: ON	 Angle(dx0, dx): 1.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.787E-02 	 Total distance: 8.787E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([13], dtype=int64), array([[False]])]] 	 class: [6 9]
10:09:46,13 root DEBUG Side: OFF	 Angle(dx0, dx): 1.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.030E-02 	 Total distance: 9.030E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([169], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:09:46,13 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:46,13 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 1.36 	 cIDON = [6 9], cIDOFF = [6 9]
10:09:46,14 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:46,14 root DEBUG dOFF/dON = 1.0
10:09:46,14 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.29714871037223, 'dON1': 0.08787371673412865, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.08787371673412865, 'nTON': 1, 'dON': 0.08787371673412865, 'dxOFFAngle': 83.42063515205561, 'dOFF1': 0.09029775380967105, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.09029775380967105, 'nTOFF': 1, 'dOFF': 0.09029775380967105, 'SUCCESS': True}
10:09:46,25 root DEBUG 

=================== Experiment ID #133 	 Dual Point ID: 135 ===================
10:09:46,35 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.887E-08|<1.000E-06)
10:09:46,35 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:46,350 root DEBUG Side: ON	 Angle(dx0, dx): 4.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.422E-02 	 Total distance: 6.422E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([3, 7], dtype=int64), array([[1.],
       [0.]])]] 	 class: [3 8]
10:09:46,630 root DEBUG Side: OFF	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.706E-04 	 Total distance: 9.706E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([148], dtype=int64), array([[ True]])]] 	 class: [7 8]
10:09:46,630 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:46,631 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -97.02 	 cIDON = [7 8], cIDOFF = [7 8]
10:09:46,631 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:46,631 root DEBUG dOFF/dON = 0.0
10:09:46,631 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.09045941933806, 'dON1': 0.06421924960523999, 'cIDON1': array([7, 8], dtype=int64), 'dON_patch_1': 0.06421924960523999, 'nTON': 1, 'dON': 0.06421924960523999, 'dxOFFAngle': 83.04150475347478, 'dOFF1': 0.0009705947764498267, 'cIDOFF1': array([7, 8], dtype=int64), 'dOFF_patch_1': 0.0009705947764498267, 'nTOFF': 1, 'dOFF': 0.0009705947764498267, 'SUCCESS': False}
10:09:46,650 root DEBUG 

=================== Experiment ID #134 	 Dual Point ID: 136 ===================
10:09:46,658 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.904E-08|<1.000E-06)
10:09:46,658 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:46,953 root DEBUG Side: ON	 Angle(dx0, dx): 0.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.963E-02 	 Total distance: 8.963E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([14], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:47,225 root DEBUG Side: OFF	 Angle(dx0, dx): 0.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.835E-02 	 Total distance: 2.835E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([207], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:47,415 root DEBUG Side: OFF	 Angle(dx0, dx): 0.98 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.150E-02 	 Total distance: 4.985E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([47], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:47,415 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:47,416 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -28.52 	 cIDON = [5 7], cIDOFF = [5 7]
10:09:47,416 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:47,416 root DEBUG dOFF/dON = 0.6
10:09:47,416 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.46563328502425, 'dON1': 0.08962814868179322, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.08962814868179322, 'nTON': 1, 'dON': 0.08962814868179322, 'dxOFFAngle': 87.35412444878791, 'dOFF1': 0.049847669533379976, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.049847669533379976, 'nTOFF': 1, 'dOFF': 0.049847669533379976, 'SUCCESS': False}
10:09:47,426 root DEBUG 

=================== Experiment ID #135 	 Dual Point ID: 137 ===================
10:09:47,438 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.227E-08|<1.000E-06)
10:09:47,438 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:47,747 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.422E-02 	 Total distance: 3.422E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([43], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:09:48,54 root DEBUG Side: OFF	 Angle(dx0, dx): 0.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.535E-01 	 Total distance: 1.535E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([122], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:09:48,54 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:48,54 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 63.53 	 cIDON = [7 9], cIDOFF = [7 9]
10:09:48,54 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:48,54 root DEBUG dOFF/dON = 4.5
10:09:48,55 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.01999333079854, 'dON1': 0.03422230704403604, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.03422230704403604, 'nTON': 1, 'dON': 0.03422230704403604, 'dxOFFAngle': 88.55777926000475, 'dOFF1': 0.1534549761830591, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.1534549761830591, 'nTOFF': 1, 'dOFF': 0.1534549761830591, 'SUCCESS': True}
10:09:48,64 root DEBUG 

=================== Experiment ID #136 	 Dual Point ID: 138 ===================
10:09:48,75 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.166E-07|<1.000E-06)
10:09:48,75 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:48,351 root DEBUG Side: ON	 Angle(dx0, dx): 1.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.376E-01 	 Total distance: 1.376E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([92], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:48,670 root DEBUG Side: OFF	 Angle(dx0, dx): 1.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.037E-02 	 Total distance: 3.037E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([178], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:48,670 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:48,670 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -63.85 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:48,670 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:48,670 root DEBUG dOFF/dON = 0.2
10:09:48,670 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.16356540055335, 'dON1': 0.13764671147304114, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.13764671147304114, 'nTON': 1, 'dON': 0.13764671147304114, 'dxOFFAngle': 88.95354278105711, 'dOFF1': 0.030369966915226435, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.030369966915226435, 'nTOFF': 1, 'dOFF': 0.030369966915226435, 'SUCCESS': False}
10:09:48,679 root DEBUG 

=================== Experiment ID #137 	 Dual Point ID: 139 ===================
10:09:48,689 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.415E-08|<1.000E-06)
10:09:48,690 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:48,968 root DEBUG Side: ON	 Angle(dx0, dx): 2.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.486E-02 	 Total distance: 3.486E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([31], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:09:49,207 root DEBUG Side: OFF	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.787E-02 	 Total distance: 4.787E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([117], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:09:49,469 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.806E-01 	 Total distance: 6.285E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([83], dtype=int64), array([[False]])]] 	 class: [5 9]
10:09:49,668 root DEBUG Side: OFF	 Angle(dx0, dx): 0.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.916E-01 	 Total distance: 8.200E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([207], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:09:49,839 root DEBUG Side: OFF	 Angle(dx0, dx): 1.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.060E-01 	 Total distance: 9.260E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([171], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:09:49,840 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:49,840 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 92.74 	 cIDON = [5 9], cIDOFF = [5 9]
10:09:49,840 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:49,840 root DEBUG dOFF/dON = 26.6
10:09:49,840 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.20903849978393, 'dON1': 0.03485714174155071, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.03485714174155071, 'nTON': 1, 'dON': 0.03485714174155071, 'dxOFFAngle': 86.25863310994221, 'dOFF1': 0.926035580464391, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.926035580464391, 'nTOFF': 1, 'dOFF': 0.926035580464391, 'SUCCESS': True}
10:09:49,853 root DEBUG 

=================== Experiment ID #138 	 Dual Point ID: 140 ===================
10:09:49,859 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.695E-07|<1.000E-06)
10:09:49,859 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:50,175 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.183E-02 	 Total distance: 6.183E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([126], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:50,344 root DEBUG Side: ON	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.589E-01 	 Total distance: 2.208E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([36], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:50,605 root DEBUG Side: OFF	 Angle(dx0, dx): 1.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.523E-02 	 Total distance: 1.523E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([242], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:50,605 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:50,606 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -87.10 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:50,606 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:50,606 root DEBUG dOFF/dON = 0.1
10:09:50,606 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 77.19100123676168, 'dON1': 0.22076246887740242, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.22076246887740242, 'nTON': 1, 'dON': 0.22076246887740242, 'dxOFFAngle': 77.59749580433768, 'dOFF1': 0.015225467774890328, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.015225467774890328, 'nTOFF': 1, 'dOFF': 0.015225467774890328, 'SUCCESS': False}
10:09:50,620 root DEBUG 

=================== Experiment ID #139 	 Dual Point ID: 141 ===================
10:09:50,630 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.133E-08|<1.000E-06)
10:09:50,631 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:50,885 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.797E-02 	 Total distance: 8.797E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([99], dtype=int64), array([[False]])]] 	 class: [2 5]
10:09:51,201 root DEBUG Side: OFF	 Angle(dx0, dx): 1.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.352E-03 	 Total distance: 9.352E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([243], dtype=int64), array([[False]])]] 	 class: [2 5]
10:09:51,370 root DEBUG Side: OFF	 Angle(dx0, dx): 0.78 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.593E-02 	 Total distance: 4.528E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([43], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:09:51,370 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:51,370 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -32.04 	 cIDON = [2 5], cIDOFF = [2 5]
10:09:51,370 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:51,370 root DEBUG dOFF/dON = 0.5
10:09:51,370 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.60378076116254, 'dON1': 0.0879702108871624, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.0879702108871624, 'nTON': 1, 'dON': 0.0879702108871624, 'dxOFFAngle': 81.68349433531634, 'dOFF1': 0.045277747435729064, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.045277747435729064, 'nTOFF': 1, 'dOFF': 0.045277747435729064, 'SUCCESS': False}
10:09:51,376 root DEBUG 

=================== Experiment ID #140 	 Dual Point ID: 142 ===================
10:09:51,386 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.653E-08|<1.000E-06)
10:09:51,386 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:51,710 root DEBUG Side: ON	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.316E-01 	 Total distance: 1.316E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([241], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:51,945 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.964E-01 	 Total distance: 1.964E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([51], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:51,945 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:51,945 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 19.77 	 cIDON = [2 6], cIDOFF = [2 6]
10:09:51,945 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:51,945 root DEBUG dOFF/dON = 1.5
10:09:51,945 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.34334830046133, 'dON1': 0.13159291594623357, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.13159291594623357, 'nTON': 1, 'dON': 0.13159291594623357, 'dxOFFAngle': 86.88328430546235, 'dOFF1': 0.19642646978569372, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.19642646978569372, 'nTOFF': 1, 'dOFF': 0.19642646978569372, 'SUCCESS': True}
10:09:51,953 root DEBUG 

=================== Experiment ID #141 	 Dual Point ID: 143 ===================
10:09:51,964 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.417E-09|<1.000E-06)
10:09:51,964 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:52,249 root DEBUG Side: ON	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.844E-02 	 Total distance: 7.844E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([32], dtype=int64), array([[False]])]] 	 class: [5 9]
10:09:52,597 root DEBUG Side: OFF	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.715E-01 	 Total distance: 1.715E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([152], dtype=int64), array([[False]])]] 	 class: [5 9]
10:09:52,753 root DEBUG Side: OFF	 Angle(dx0, dx): 0.71 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.525E-02 	 Total distance: 2.667E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([56], dtype=int64), array([[False]])]] 	 class: [5 9]
10:09:52,919 root DEBUG Side: OFF	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.476E-02 	 Total distance: 3.615E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([180], dtype=int64), array([[False]])]] 	 class: [5 9]
10:09:52,919 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:52,920 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 64.34 	 cIDON = [5 9], cIDOFF = [5 9]
10:09:52,920 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:52,920 root DEBUG dOFF/dON = 4.6
10:09:52,920 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.3993524942015, 'dON1': 0.07843513999208251, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.07843513999208251, 'nTON': 1, 'dON': 0.07843513999208251, 'dxOFFAngle': 84.11109394752833, 'dOFF1': 0.3614809921074271, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.3614809921074271, 'nTOFF': 1, 'dOFF': 0.3614809921074271, 'SUCCESS': True}
10:09:52,932 root DEBUG 

=================== Experiment ID #142 	 Dual Point ID: 144 ===================
10:09:52,940 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.438E-09|<1.000E-06)
10:09:52,940 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:53,213 root DEBUG Side: ON	 Angle(dx0, dx): 0.78 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.560E-02 	 Total distance: 8.560E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([69], dtype=int64), array([[False]])]] 	 class: [1 5]
10:09:53,425 root DEBUG Side: OFF	 Angle(dx0, dx): 1.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.630E-05 	 Total distance: 3.630E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 5]
10:09:53,425 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:53,425 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.92 	 cIDON = [1 5], cIDOFF = [0 5]
10:09:53,425 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:53,425 root DEBUG dOFF/dON = 0.0
10:09:53,425 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.19559009909263, 'dON1': 0.08560065676502936, 'cIDON1': array([1, 5], dtype=int64), 'dON_patch_1': 0.08560065676502936, 'nTON': 1, 'dON': 0.08560065676502936, 'dxOFFAngle': 87.98796893648979, 'dOFF1': 3.629534961932431e-05, 'cIDOFF1': array([0, 5], dtype=int64), 'dOFF_patch_1': 3.629534961932431e-05, 'nTOFF': 1, 'dOFF': 3.629534961932431e-05, 'SUCCESS': False}
10:09:53,433 root DEBUG 

=================== Experiment ID #143 	 Dual Point ID: 145 ===================
10:09:53,440 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.468E-08|<1.000E-06)
10:09:53,440 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:53,738 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.254E-02 	 Total distance: 8.254E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([225], dtype=int64), array([[False]])]] 	 class: [5 6]
10:09:53,914 root DEBUG Side: ON	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.211E-01 	 Total distance: 2.037E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([92], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:09:54,198 root DEBUG Side: OFF	 Angle(dx0, dx): 1.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.361E-01 	 Total distance: 1.361E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([98], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:09:54,369 root DEBUG Side: OFF	 Angle(dx0, dx): 3.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.041E-02 	 Total distance: 1.565E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([1, 5], dtype=int64), array([[1.],
       [0.]])]] 	 class: [1 6]
10:09:54,369 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:54,370 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -13.09 	 cIDON = [5 6], cIDOFF = [5 6]
10:09:54,370 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:54,370 root DEBUG dOFF/dON = 0.8
10:09:54,370 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.42570096266931, 'dON1': 0.20368341711453475, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.20368341711453475, 'nTON': 1, 'dON': 0.20368341711453475, 'dxOFFAngle': 85.37185886876645, 'dOFF1': 0.15652647270403058, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.15652647270403058, 'nTOFF': 1, 'dOFF': 0.15652647270403058, 'SUCCESS': False}
10:09:54,384 root DEBUG 

=================== Experiment ID #144 	 Dual Point ID: 146 ===================
10:09:54,391 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.825E-09|<1.000E-06)
10:09:54,392 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:54,730 root DEBUG Side: ON	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.713E-02 	 Total distance: 7.713E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([10], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:55,37 root DEBUG Side: OFF	 Angle(dx0, dx): 3.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.403E-01 	 Total distance: 1.403E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([27], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:55,37 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:55,37 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 29.06 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:55,37 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:55,38 root DEBUG dOFF/dON = 1.8
10:09:55,38 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.43720843536671, 'dON1': 0.07713342542443441, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.07713342542443441, 'nTON': 1, 'dON': 0.07713342542443441, 'dxOFFAngle': 85.3251079570199, 'dOFF1': 0.14033367564848392, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.14033367564848392, 'nTOFF': 1, 'dOFF': 0.14033367564848392, 'SUCCESS': True}
10:09:55,47 root DEBUG 

=================== Experiment ID #145 	 Dual Point ID: 147 ===================
10:09:55,56 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.008E-08|<1.000E-06)
10:09:55,56 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:55,341 root DEBUG Side: ON	 Angle(dx0, dx): 6.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.046E-02 	 Total distance: 3.046E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([10], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:55,585 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.151E-01 	 Total distance: 1.151E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([182], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:55,779 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.685E-02 	 Total distance: 1.320E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([252], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:55,779 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:55,779 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 62.50 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:55,779 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:55,779 root DEBUG dOFF/dON = 4.3
10:09:55,780 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.44076126219674, 'dON1': 0.03045845736832481, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.03045845736832481, 'nTON': 1, 'dON': 0.03045845736832481, 'dxOFFAngle': 89.56773200681506, 'dOFF1': 0.13198569066530724, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.13198569066530724, 'nTOFF': 1, 'dOFF': 0.13198569066530724, 'SUCCESS': True}
10:09:55,792 root DEBUG 

=================== Experiment ID #146 	 Dual Point ID: 148 ===================
10:09:55,802 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.425E-08|<1.000E-06)
10:09:55,802 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:56,27 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.352E-02 	 Total distance: 5.352E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([52], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:09:56,321 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.086E-02 	 Total distance: 6.086E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([58], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:09:56,321 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:56,321 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 6.42 	 cIDON = [3 4], cIDOFF = [3 4]
10:09:56,321 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:56,321 root DEBUG dOFF/dON = 1.1
10:09:56,321 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.80123969929409, 'dON1': 0.053521209300103546, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.053521209300103546, 'nTON': 1, 'dON': 0.053521209300103546, 'dxOFFAngle': 81.63072815614731, 'dOFF1': 0.06086127461439704, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.06086127461439704, 'nTOFF': 1, 'dOFF': 0.06086127461439704, 'SUCCESS': True}
10:09:56,334 root DEBUG 

=================== Experiment ID #147 	 Dual Point ID: 149 ===================
10:09:56,346 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.808E-08|<1.000E-06)
10:09:56,346 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:56,627 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.225E-02 	 Total distance: 4.225E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([122], dtype=int64), array([[False]])]] 	 class: [4 7]
10:09:56,783 root DEBUG Side: ON	 Angle(dx0, dx): 0.78 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.181E-01 	 Total distance: 1.603E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([205], dtype=int64), array([[False]])]] 	 class: [4 7]
10:09:57,83 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.680E-01 	 Total distance: 3.680E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([229], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:57,83 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:57,84 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 39.32 	 cIDON = [4 7], cIDOFF = [4 7]
10:09:57,84 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:57,84 root DEBUG dOFF/dON = 2.3
10:09:57,84 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.30870609186425, 'dON1': 0.16030697744487427, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.16030697744487427, 'nTON': 1, 'dON': 0.16030697744487427, 'dxOFFAngle': 85.29040414740051, 'dOFF1': 0.3680287006734428, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.3680287006734428, 'nTOFF': 1, 'dOFF': 0.3680287006734428, 'SUCCESS': True}
10:09:57,96 root DEBUG 

=================== Experiment ID #148 	 Dual Point ID: 150 ===================
10:09:57,106 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.514E-08|<1.000E-06)
10:09:57,106 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:57,347 root DEBUG Side: ON	 Angle(dx0, dx): 0.85 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.102E-01 	 Total distance: 1.102E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([58], dtype=int64), array([[False]])]] 	 class: [2 9]
10:09:57,581 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.439E-02 	 Total distance: 1.439E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([34], dtype=int64), array([[False]])]] 	 class: [2 9]
10:09:57,807 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.401E-02 	 Total distance: 7.840E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([191], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:09:57,808 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:57,808 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -16.84 	 cIDON = [2 9], cIDOFF = [2 9]
10:09:57,808 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:57,808 root DEBUG dOFF/dON = 0.7
10:09:57,808 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.88422126835084, 'dON1': 0.11015846569354425, 'cIDON1': array([2, 9], dtype=int64), 'dON_patch_1': 0.11015846569354425, 'nTON': 1, 'dON': 0.11015846569354425, 'dxOFFAngle': 85.59426144890085, 'dOFF1': 0.07839814535520886, 'cIDOFF1': array([2, 9], dtype=int64), 'dOFF_patch_1': 0.07839814535520886, 'nTOFF': 1, 'dOFF': 0.07839814535520886, 'SUCCESS': False}
10:09:57,819 root DEBUG 

=================== Experiment ID #149 	 Dual Point ID: 151 ===================
10:09:57,828 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.002E-08|<1.000E-06)
10:09:57,829 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:58,107 root DEBUG Side: ON	 Angle(dx0, dx): 1.92 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.621E-01 	 Total distance: 2.621E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([91], dtype=int64), array([[False]])]] 	 class: [2 3]
10:09:58,450 root DEBUG Side: OFF	 Angle(dx0, dx): 0.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.928E-02 	 Total distance: 4.928E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([252], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:09:58,450 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:58,450 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -68.35 	 cIDON = [2 3], cIDOFF = [2 3]
10:09:58,450 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:58,450 root DEBUG dOFF/dON = 0.2
10:09:58,450 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.42157863040939, 'dON1': 0.2620593057508971, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.2620593057508971, 'nTON': 1, 'dON': 0.2620593057508971, 'dxOFFAngle': 87.86386972989212, 'dOFF1': 0.04927613007025003, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.04927613007025003, 'nTOFF': 1, 'dOFF': 0.04927613007025003, 'SUCCESS': False}
10:09:58,461 root DEBUG 

=================== Experiment ID #150 	 Dual Point ID: 152 ===================
10:09:58,471 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.386E-08|<1.000E-06)
10:09:58,471 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:58,684 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.382E-04 	 Total distance: 9.382E-04 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([14], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:58,891 root DEBUG Side: ON	 Angle(dx0, dx): 0.88 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.142E-01 	 Total distance: 3.151E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([60], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:59,183 root DEBUG Side: OFF	 Angle(dx0, dx): 0.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.470E-01 	 Total distance: 2.470E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([129], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:59,183 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:59,183 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -12.12 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:59,183 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:59,184 root DEBUG dOFF/dON = 0.8
10:09:59,184 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.25968936658673, 'dON1': 0.31512283033441346, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.31512283033441346, 'nTON': 1, 'dON': 0.31512283033441346, 'dxOFFAngle': 89.32362577755693, 'dOFF1': 0.24699457283115694, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.24699457283115694, 'nTOFF': 1, 'dOFF': 0.24699457283115694, 'SUCCESS': False}
10:09:59,195 root DEBUG 

=================== Experiment ID #151 	 Dual Point ID: 153 ===================
10:09:59,203 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.609E-08|<1.000E-06)
10:09:59,203 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:59,422 root DEBUG Side: ON	 Angle(dx0, dx): 1.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.030E-01 	 Total distance: 2.030E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([11], dtype=int64), array([[False]])]] 	 class: [0 3]
10:09:59,734 root DEBUG Side: OFF	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.478E-01 	 Total distance: 1.478E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([68], dtype=int64), array([[ True]])]] 	 class: [1 3]
10:09:59,734 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:59,735 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -15.73 	 cIDON = [0 3], cIDOFF = [1 3]
10:09:59,735 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:59,735 root DEBUG dOFF/dON = 0.7
10:09:59,735 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.82134572286351, 'dON1': 0.2029928863249447, 'cIDON1': array([0, 3], dtype=int64), 'dON_patch_1': 0.2029928863249447, 'nTON': 1, 'dON': 0.2029928863249447, 'dxOFFAngle': 83.80500337797234, 'dOFF1': 0.14781116468830433, 'cIDOFF1': array([1, 3], dtype=int64), 'dOFF_patch_1': 0.14781116468830433, 'nTOFF': 1, 'dOFF': 0.14781116468830433, 'SUCCESS': False}
10:09:59,748 root DEBUG 

=================== Experiment ID #152 	 Dual Point ID: 154 ===================
10:09:59,756 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.260E-07|<1.000E-06)
10:09:59,756 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:00,14 root DEBUG Side: ON	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.617E-02 	 Total distance: 7.617E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([35], dtype=int64), array([[False]])]] 	 class: [2 4]
10:10:00,313 root DEBUG Side: OFF	 Angle(dx0, dx): 0.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.169E-01 	 Total distance: 1.169E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([180], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:10:00,313 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:00,313 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 21.10 	 cIDON = [2 4], cIDOFF = [2 4]
10:10:00,314 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:00,314 root DEBUG dOFF/dON = 1.5
10:10:00,314 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.24375464741978, 'dON1': 0.07617456961061392, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.07617456961061392, 'nTON': 1, 'dON': 0.07617456961061392, 'dxOFFAngle': 89.2149370334665, 'dOFF1': 0.11691434220421526, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.11691434220421526, 'nTOFF': 1, 'dOFF': 0.11691434220421526, 'SUCCESS': True}
10:10:00,323 root DEBUG 

=================== Experiment ID #153 	 Dual Point ID: 155 ===================
10:10:00,329 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.630E-08|<1.000E-06)
10:10:00,330 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:00,633 root DEBUG Side: ON	 Angle(dx0, dx): 1.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.740E-03 	 Total distance: 2.740E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([47], dtype=int64), array([[False]])]] 	 class: [0 2]
10:10:00,825 root DEBUG Side: OFF	 Angle(dx0, dx): 11.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.020E-06 	 Total distance: 9.020E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 2]
10:10:00,826 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:00,826 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.34 	 cIDON = [0 2], cIDOFF = [1 2]
10:10:00,826 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:00,826 root DEBUG dOFF/dON = 0.0
10:10:00,826 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 79.64088999371234, 'dON1': 0.0027403690425822362, 'cIDON1': array([0, 2], dtype=int64), 'dON_patch_1': 0.0027403690425822362, 'nTON': 1, 'dON': 0.0027403690425822362, 'dxOFFAngle': 78.77670692118568, 'dOFF1': 9.01955549665893e-06, 'cIDOFF1': array([1, 2], dtype=int64), 'dOFF_patch_1': 9.01955549665893e-06, 'nTOFF': 1, 'dOFF': 9.01955549665893e-06, 'SUCCESS': False}
10:10:00,839 root DEBUG 

=================== Experiment ID #154 	 Dual Point ID: 156 ===================
10:10:00,847 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.604E-08|<1.000E-06)
10:10:00,847 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:01,118 root DEBUG Side: ON	 Angle(dx0, dx): 1.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.790E-02 	 Total distance: 4.790E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([56], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:10:01,352 root DEBUG Side: OFF	 Angle(dx0, dx): 1.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.599E-01 	 Total distance: 1.599E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([159], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:10:01,352 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:01,352 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 53.90 	 cIDON = [4 8], cIDOFF = [4 8]
10:10:01,353 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:01,353 root DEBUG dOFF/dON = 3.3
10:10:01,353 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.62327430537907, 'dON1': 0.047897476172747026, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.047897476172747026, 'nTON': 1, 'dON': 0.047897476172747026, 'dxOFFAngle': 82.24399406996126, 'dOFF1': 0.15989067768840745, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.15989067768840745, 'nTOFF': 1, 'dOFF': 0.15989067768840745, 'SUCCESS': True}
10:10:01,366 root DEBUG 

=================== Experiment ID #155 	 Dual Point ID: 157 ===================
10:10:01,379 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.488E-08|<1.000E-06)
10:10:01,380 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:01,642 root DEBUG Side: ON	 Angle(dx0, dx): 10.73 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.482E-06 	 Total distance: 4.482E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 9]
10:10:01,957 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.399E-01 	 Total distance: 4.399E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([46], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:10:02,185 root DEBUG Side: OFF	 Angle(dx0, dx): 0.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.320E-01 	 Total distance: 5.718E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([97], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:10:02,185 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:02,185 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [0 9], cIDOFF = [1 9]
10:10:02,185 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:02,185 root DEBUG dOFF/dON = 127584.4
10:10:02,185 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.72965557552175, 'dON1': 4.482072581941453e-06, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 4.482072581941453e-06, 'nTON': 1, 'dON': 4.482072581941453e-06, 'dxOFFAngle': 85.99129871423744, 'dOFF1': 0.5718423204962494, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.5718423204962494, 'nTOFF': 1, 'dOFF': 0.5718423204962494, 'SUCCESS': True}
10:10:02,196 root DEBUG 

=================== Experiment ID #156 	 Dual Point ID: 158 ===================
10:10:02,203 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.373E-08|<1.000E-06)
10:10:02,203 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:02,479 root DEBUG Side: ON	 Angle(dx0, dx): 1.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.733E-03 	 Total distance: 8.733E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([154], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:10:02,712 root DEBUG Side: OFF	 Angle(dx0, dx): 0.71 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.907E-02 	 Total distance: 1.907E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([39], dtype=int64), array([[False]])]] 	 class: [0 8]
10:10:02,713 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:02,713 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 37.18 	 cIDON = [1 8], cIDOFF = [0 8]
10:10:02,713 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:02,713 root DEBUG dOFF/dON = 2.2
10:10:02,713 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.3540353936587, 'dON1': 0.008732541686701715, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 0.008732541686701715, 'nTON': 1, 'dON': 0.008732541686701715, 'dxOFFAngle': 85.82185576491335, 'dOFF1': 0.01907099247077923, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.01907099247077923, 'nTOFF': 1, 'dOFF': 0.01907099247077923, 'SUCCESS': True}
10:10:02,720 root DEBUG 

=================== Experiment ID #157 	 Dual Point ID: 159 ===================
10:10:02,728 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.849E-08|<1.000E-06)
10:10:02,728 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:03,22 root DEBUG Side: ON	 Angle(dx0, dx): 0.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.109E-02 	 Total distance: 1.109E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([53], dtype=int64), array([[False]])]] 	 class: [2 4]
10:10:03,341 root DEBUG Side: OFF	 Angle(dx0, dx): 1.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.863E-02 	 Total distance: 5.863E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([185], dtype=int64), array([[False]])]] 	 class: [2 4]
10:10:03,342 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:03,342 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 68.19 	 cIDON = [2 4], cIDOFF = [2 4]
10:10:03,342 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:03,342 root DEBUG dOFF/dON = 5.3
10:10:03,342 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.04862204475306, 'dON1': 0.011088672373872956, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.011088672373872956, 'nTON': 1, 'dON': 0.011088672373872956, 'dxOFFAngle': 89.10117876556127, 'dOFF1': 0.05862787653874817, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.05862787653874817, 'nTOFF': 1, 'dOFF': 0.05862787653874817, 'SUCCESS': True}
10:10:03,349 root DEBUG 

=================== Experiment ID #158 	 Dual Point ID: 160 ===================
10:10:03,360 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.302E-08|<1.000E-06)
10:10:03,360 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:03,648 root DEBUG Side: ON	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.455E-02 	 Total distance: 7.455E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([161], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:10:03,940 root DEBUG Side: OFF	 Angle(dx0, dx): 2.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.991E-02 	 Total distance: 9.991E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([71], dtype=int64), array([[False]])]] 	 class: [3 4]
10:10:03,940 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:03,941 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 14.54 	 cIDON = [3 4], cIDOFF = [3 4]
10:10:03,941 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:03,941 root DEBUG dOFF/dON = 1.3
10:10:03,941 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.74755725390025, 'dON1': 0.07454724396416203, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.07454724396416203, 'nTON': 1, 'dON': 0.07454724396416203, 'dxOFFAngle': 88.5372976660368, 'dOFF1': 0.09990974319352024, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.09990974319352024, 'nTOFF': 1, 'dOFF': 0.09990974319352024, 'SUCCESS': True}
10:10:03,953 root DEBUG 

=================== Experiment ID #159 	 Dual Point ID: 161 ===================
10:10:03,965 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.443E-08|<1.000E-06)
10:10:03,966 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:04,207 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.348E-03 	 Total distance: 5.348E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([155], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:04,481 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.000E-02 	 Total distance: 3.000E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([67], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:04,481 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:04,481 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 69.74 	 cIDON = [2 6], cIDOFF = [2 6]
10:10:04,481 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:04,481 root DEBUG dOFF/dON = 5.6
10:10:04,481 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.04250632105968, 'dON1': 0.005348097254110938, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.005348097254110938, 'nTON': 1, 'dON': 0.005348097254110938, 'dxOFFAngle': 87.0131785196984, 'dOFF1': 0.03000134618373846, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.03000134618373846, 'nTOFF': 1, 'dOFF': 0.03000134618373846, 'SUCCESS': True}
10:10:04,495 root DEBUG 

=================== Experiment ID #160 	 Dual Point ID: 162 ===================
10:10:04,506 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.195E-08|<1.000E-06)
10:10:04,507 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:04,815 root DEBUG Side: ON	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.348E-02 	 Total distance: 2.348E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([204], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:05,133 root DEBUG Side: OFF	 Angle(dx0, dx): 1.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.017E-01 	 Total distance: 1.017E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([30], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:05,133 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:05,133 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 62.49 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:05,133 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:05,133 root DEBUG dOFF/dON = 4.3
10:10:05,133 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.99659279892303, 'dON1': 0.023482768679479984, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.023482768679479984, 'nTON': 1, 'dON': 0.023482768679479984, 'dxOFFAngle': 89.35329869054101, 'dOFF1': 0.10172828123580402, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.10172828123580402, 'nTOFF': 1, 'dOFF': 0.10172828123580402, 'SUCCESS': True}
10:10:05,141 root DEBUG 

=================== Experiment ID #161 	 Dual Point ID: 163 ===================
10:10:05,151 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.286E-07|<1.000E-06)
10:10:05,151 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:05,367 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.082E-04 	 Total distance: 8.082E-04 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([0], dtype=int64), array([[False]])]] 	 class: [0 9]
10:10:05,534 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.270E-02 	 Total distance: 3.351E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([216], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:10:05,754 root DEBUG Side: OFF	 Angle(dx0, dx): 2.95 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.312E-06 	 Total distance: 5.312E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 9]
10:10:05,754 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:05,755 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.97 	 cIDON = [0 9], cIDOFF = [0 9]
10:10:05,755 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:05,755 root DEBUG dOFF/dON = 0.0
10:10:05,755 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.05875964379712, 'dON1': 0.03351309658605112, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.03351309658605112, 'nTON': 1, 'dON': 0.03351309658605112, 'dxOFFAngle': 87.8440638226415, 'dOFF1': 5.312000040280057e-06, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 5.312000040280057e-06, 'nTOFF': 1, 'dOFF': 5.312000040280057e-06, 'SUCCESS': False}
10:10:05,762 root DEBUG 

=================== Experiment ID #162 	 Dual Point ID: 164 ===================
10:10:05,771 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.603E-09|<1.000E-06)
10:10:05,771 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:06,39 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.045E-02 	 Total distance: 1.045E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([39], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:06,332 root DEBUG Side: OFF	 Angle(dx0, dx): 2.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.846E-03 	 Total distance: 1.846E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([5], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:06,332 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:06,332 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -69.96 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:06,333 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:06,333 root DEBUG dOFF/dON = 0.2
10:10:06,333 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.79276641238611, 'dON1': 0.010447631966654628, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.010447631966654628, 'nTON': 1, 'dON': 0.010447631966654628, 'dxOFFAngle': 82.25870423979957, 'dOFF1': 0.0018464007636554668, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.0018464007636554668, 'nTOFF': 1, 'dOFF': 0.0018464007636554668, 'SUCCESS': False}
10:10:06,342 root DEBUG 

=================== Experiment ID #163 	 Dual Point ID: 165 ===================
10:10:06,349 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.042E-08|<1.000E-06)
10:10:06,350 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:06,625 root DEBUG Side: ON	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.263E-02 	 Total distance: 8.263E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([14], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:06,863 root DEBUG Side: OFF	 Angle(dx0, dx): 1.95 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.222E-04 	 Total distance: 4.222E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([15], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:06,863 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:06,863 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -98.98 	 cIDON = [2 7], cIDOFF = [2 7]
10:10:06,863 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:06,863 root DEBUG dOFF/dON = 0.0
10:10:06,863 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.96671177400432, 'dON1': 0.08262819109526975, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.08262819109526975, 'nTON': 1, 'dON': 0.08262819109526975, 'dxOFFAngle': 85.92620376235527, 'dOFF1': 0.00042218707328688066, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.00042218707328688066, 'nTOFF': 1, 'dOFF': 0.00042218707328688066, 'SUCCESS': False}
10:10:06,876 root DEBUG 

=================== Experiment ID #164 	 Dual Point ID: 166 ===================
10:10:06,886 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.133E-08|<1.000E-06)
10:10:06,887 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:07,301 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.921E-01 	 Total distance: 3.921E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([241], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:07,490 root DEBUG Side: ON	 Angle(dx0, dx): 2.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.511E-02 	 Total distance: 4.372E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([77], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:07,826 root DEBUG Side: OFF	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.884E-02 	 Total distance: 8.884E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([1], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:07,826 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:07,827 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -66.22 	 cIDON = [3 6], cIDOFF = [3 6]
10:10:07,827 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:07,827 root DEBUG dOFF/dON = 0.2
10:10:07,827 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 76.34835779294575, 'dON1': 0.4372437962395958, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.4372437962395958, 'nTON': 1, 'dON': 0.4372437962395958, 'dxOFFAngle': 77.46868653627867, 'dOFF1': 0.08884337314499091, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.08884337314499091, 'nTOFF': 1, 'dOFF': 0.08884337314499091, 'SUCCESS': False}
10:10:07,840 root DEBUG 

=================== Experiment ID #165 	 Dual Point ID: 167 ===================
10:10:07,848 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.011E-08|<1.000E-06)
10:10:07,848 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:08,160 root DEBUG Side: ON	 Angle(dx0, dx): 3.71 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.746E-02 	 Total distance: 2.746E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([39], dtype=int64), array([[False]])]] 	 class: [6 9]
10:10:08,424 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.665E-02 	 Total distance: 4.665E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([156], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:10:08,425 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:08,425 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 25.90 	 cIDON = [6 9], cIDOFF = [6 9]
10:10:08,425 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:08,425 root DEBUG dOFF/dON = 1.7
10:10:08,425 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.20321937242264, 'dON1': 0.027455330035909428, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.027455330035909428, 'nTON': 1, 'dON': 0.027455330035909428, 'dxOFFAngle': 87.67227441160692, 'dOFF1': 0.04664660585128145, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.04664660585128145, 'nTOFF': 1, 'dOFF': 0.04664660585128145, 'SUCCESS': True}
10:10:08,436 root DEBUG 

=================== Experiment ID #166 	 Dual Point ID: 168 ===================
10:10:08,448 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.074E-07|<1.000E-06)
10:10:08,449 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:08,782 root DEBUG Side: ON	 Angle(dx0, dx): 1.85 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.191E-01 	 Total distance: 1.191E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([21], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:09,64 root DEBUG Side: OFF	 Angle(dx0, dx): 1.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.983E-01 	 Total distance: 1.983E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([50], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:09,65 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:09,65 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 24.94 	 cIDON = [2 7], cIDOFF = [2 7]
10:10:09,65 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:09,65 root DEBUG dOFF/dON = 1.7
10:10:09,65 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.00802757562317, 'dON1': 0.11909781772248018, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.11909781772248018, 'nTON': 1, 'dON': 0.11909781772248018, 'dxOFFAngle': 81.344161135707, 'dOFF1': 0.19825064264848788, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.19825064264848788, 'nTOFF': 1, 'dOFF': 0.19825064264848788, 'SUCCESS': True}
10:10:09,73 root DEBUG 

=================== Experiment ID #167 	 Dual Point ID: 169 ===================
10:10:09,86 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.189E-07|<1.000E-06)
10:10:09,86 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:09,320 root DEBUG Side: ON	 Angle(dx0, dx): 1.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.535E-01 	 Total distance: 2.535E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([44], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:10:09,571 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.618E-02 	 Total distance: 7.618E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([25], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:10:09,572 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:09,572 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -53.78 	 cIDON = [5 6], cIDOFF = [5 6]
10:10:09,572 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:09,572 root DEBUG dOFF/dON = 0.3
10:10:09,572 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 79.87302064289892, 'dON1': 0.253472525187345, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.253472525187345, 'nTON': 1, 'dON': 0.253472525187345, 'dxOFFAngle': 81.75195666639966, 'dOFF1': 0.07617645527784501, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.07617645527784501, 'nTOFF': 1, 'dOFF': 0.07617645527784501, 'SUCCESS': False}
10:10:09,582 root DEBUG 

=================== Experiment ID #168 	 Dual Point ID: 170 ===================
10:10:09,592 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.809E-08|<1.000E-06)
10:10:09,592 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:09,805 root DEBUG Side: ON	 Angle(dx0, dx): 2.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.829E-02 	 Total distance: 1.829E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([20], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:10:10,65 root DEBUG Side: OFF	 Angle(dx0, dx): 1.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.760E-03 	 Total distance: 2.760E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([185], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:10:10,228 root DEBUG Side: OFF	 Angle(dx0, dx): 1.96 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.877E-03 	 Total distance: 1.264E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([106], dtype=int64), array([[False]])]] 	 class: [5 6]
10:10:10,228 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:10,228 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -18.29 	 cIDON = [5 6], cIDOFF = [5 6]
10:10:10,228 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:10,228 root DEBUG dOFF/dON = 0.7
10:10:10,229 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.12561441770917, 'dON1': 0.018291818032656813, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.018291818032656813, 'nTON': 1, 'dON': 0.018291818032656813, 'dxOFFAngle': 85.57929690264018, 'dOFF1': 0.012636509963296107, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.012636509963296107, 'nTOFF': 1, 'dOFF': 0.012636509963296107, 'SUCCESS': False}
10:10:10,240 root DEBUG 

=================== Experiment ID #169 	 Dual Point ID: 171 ===================
10:10:10,249 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.185E-08|<1.000E-06)
10:10:10,249 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:10,434 root DEBUG Side: ON	 Angle(dx0, dx): 11.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.534E-07 	 Total distance: 4.534E-07 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 4]
10:10:10,536 root DEBUG Side: ON	 Angle(dx0, dx): 11.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.468E-07 	 Total distance: 9.002E-07 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 4]
10:10:10,693 root DEBUG Side: ON	 Angle(dx0, dx): 11.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.068E-07 	 Total distance: 1.807E-06 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 4]
10:10:10,701 root DEBUG Got stuck in too many past-layer relus.
10:10:10,775 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:10:10,775 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:10:10,778 root DEBUG 

=================== Experiment ID #169 	 Dual Point ID: 172 ===================
10:10:10,785 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.295E-08|<1.000E-06)
10:10:10,785 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:11,80 root DEBUG Side: ON	 Angle(dx0, dx): 1.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.567E-03 	 Total distance: 6.567E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([244], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:11,369 root DEBUG Side: OFF	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.181E-02 	 Total distance: 2.181E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([197], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:11,369 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:11,370 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 53.72 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:11,370 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:11,370 root DEBUG dOFF/dON = 3.3
10:10:11,370 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.43680430668164, 'dON1': 0.00656696728387076, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.00656696728387076, 'nTON': 1, 'dON': 0.00656696728387076, 'dxOFFAngle': 88.89038593332516, 'dOFF1': 0.021809454606984247, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.021809454606984247, 'nTOFF': 1, 'dOFF': 0.021809454606984247, 'SUCCESS': True}
10:10:11,380 root DEBUG 

=================== Experiment ID #170 	 Dual Point ID: 173 ===================
10:10:11,386 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.102E-08|<1.000E-06)
10:10:11,386 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:11,615 root DEBUG Side: ON	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.843E-03 	 Total distance: 8.843E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([6], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:10:11,839 root DEBUG Side: OFF	 Angle(dx0, dx): 0.95 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.901E-03 	 Total distance: 5.901E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([155], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:10:11,839 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:11,839 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -19.96 	 cIDON = [1 8], cIDOFF = [0 8]
10:10:11,839 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:11,840 root DEBUG dOFF/dON = 0.7
10:10:11,840 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.00129327743514, 'dON1': 0.008843368247179954, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 0.008843368247179954, 'nTON': 1, 'dON': 0.008843368247179954, 'dxOFFAngle': 87.76371402356395, 'dOFF1': 0.00590106405200204, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.00590106405200204, 'nTOFF': 1, 'dOFF': 0.00590106405200204, 'SUCCESS': False}
10:10:11,849 root DEBUG 

=================== Experiment ID #171 	 Dual Point ID: 174 ===================
10:10:11,854 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.521E-08|<1.000E-06)
10:10:11,855 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:12,190 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.629E-02 	 Total distance: 7.629E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([160], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:10:12,374 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.546E-02 	 Total distance: 1.217E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([78], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:10:12,604 root DEBUG Side: ON	 Angle(dx0, dx): 0.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.674E-02 	 Total distance: 1.585E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([10], dtype=int64), array([[False]])]] 	 class: [0 9]
10:10:12,780 root DEBUG Side: OFF	 Angle(dx0, dx): 1.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.425E-06 	 Total distance: 4.425E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 9]
10:10:12,781 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:12,781 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.99 	 cIDON = [0 9], cIDOFF = [0 9]
10:10:12,781 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:12,781 root DEBUG dOFF/dON = 0.0
10:10:12,781 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.58974036288178, 'dON1': 0.15848565572088352, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.15848565572088352, 'nTON': 1, 'dON': 0.15848565572088352, 'dxOFFAngle': 88.74585955887608, 'dOFF1': 4.424593175031381e-06, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 4.424593175031381e-06, 'nTOFF': 1, 'dOFF': 4.424593175031381e-06, 'SUCCESS': False}
10:10:12,795 root DEBUG 

=================== Experiment ID #172 	 Dual Point ID: 175 ===================
10:10:12,807 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.714E-08|<1.000E-06)
10:10:12,807 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:13,113 root DEBUG Side: ON	 Angle(dx0, dx): 1.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.653E-02 	 Total distance: 1.653E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([40], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:13,349 root DEBUG Side: OFF	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.091E-01 	 Total distance: 1.091E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([112], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:13,534 root DEBUG Side: OFF	 Angle(dx0, dx): 1.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.744E-03 	 Total distance: 1.169E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([109], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:13,534 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:13,534 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 75.21 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:13,535 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:13,535 root DEBUG dOFF/dON = 7.1
10:10:13,535 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.69507449789417, 'dON1': 0.01653137926990653, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.01653137926990653, 'nTON': 1, 'dON': 0.01653137926990653, 'dxOFFAngle': 86.09263068910155, 'dOFF1': 0.11685897516779113, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.11685897516779113, 'nTOFF': 1, 'dOFF': 0.11685897516779113, 'SUCCESS': True}
10:10:13,544 root DEBUG 

=================== Experiment ID #173 	 Dual Point ID: 176 ===================
10:10:13,555 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.171E-07|<1.000E-06)
10:10:13,555 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:13,815 root DEBUG Side: ON	 Angle(dx0, dx): 1.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.757E-02 	 Total distance: 2.757E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([39], dtype=int64), array([[False]])]] 	 class: [2 9]
10:10:14,92 root DEBUG Side: OFF	 Angle(dx0, dx): 1.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.022E-02 	 Total distance: 8.022E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([178], dtype=int64), array([[False]])]] 	 class: [2 9]
10:10:14,92 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:14,92 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 48.85 	 cIDON = [2 9], cIDOFF = [2 9]
10:10:14,93 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:14,93 root DEBUG dOFF/dON = 2.9
10:10:14,93 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.12815460358973, 'dON1': 0.027566679094087675, 'cIDON1': array([2, 9], dtype=int64), 'dON_patch_1': 0.027566679094087675, 'nTON': 1, 'dON': 0.027566679094087675, 'dxOFFAngle': 86.46467962416891, 'dOFF1': 0.08021595075853774, 'cIDOFF1': array([2, 9], dtype=int64), 'dOFF_patch_1': 0.08021595075853774, 'nTOFF': 1, 'dOFF': 0.08021595075853774, 'SUCCESS': True}
10:10:14,99 root DEBUG 

=================== Experiment ID #174 	 Dual Point ID: 177 ===================
10:10:14,106 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.701E-08|<1.000E-06)
10:10:14,106 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:14,376 root DEBUG Side: ON	 Angle(dx0, dx): 0.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.621E-02 	 Total distance: 5.621E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([141], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:14,643 root DEBUG Side: OFF	 Angle(dx0, dx): 0.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.569E-02 	 Total distance: 2.569E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([180], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:14,643 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:14,644 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -37.27 	 cIDON = [2 7], cIDOFF = [2 7]
10:10:14,644 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:14,644 root DEBUG dOFF/dON = 0.5
10:10:14,644 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.99290137549501, 'dON1': 0.0562147752744153, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.0562147752744153, 'nTON': 1, 'dON': 0.0562147752744153, 'dxOFFAngle': 82.06256430665178, 'dOFF1': 0.02569118368966911, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.02569118368966911, 'nTOFF': 1, 'dOFF': 0.02569118368966911, 'SUCCESS': False}
10:10:14,655 root DEBUG 

=================== Experiment ID #175 	 Dual Point ID: 178 ===================
10:10:14,664 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.233E-08|<1.000E-06)
10:10:14,664 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:15,56 root DEBUG Side: ON	 Angle(dx0, dx): 1.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.342E-01 	 Total distance: 1.342E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([24], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:15,429 root DEBUG Side: OFF	 Angle(dx0, dx): 1.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.546E-02 	 Total distance: 6.546E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([91], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:15,430 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:15,430 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -34.41 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:15,430 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:15,430 root DEBUG dOFF/dON = 0.5
10:10:15,430 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.65938531991571, 'dON1': 0.1341533177966148, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.1341533177966148, 'nTON': 1, 'dON': 0.1341533177966148, 'dxOFFAngle': 84.9235839462498, 'dOFF1': 0.06545786456150578, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.06545786456150578, 'nTOFF': 1, 'dOFF': 0.06545786456150578, 'SUCCESS': False}
10:10:15,441 root DEBUG 

=================== Experiment ID #176 	 Dual Point ID: 179 ===================
10:10:15,449 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.007E-08|<1.000E-06)
10:10:15,449 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:15,728 root DEBUG Side: ON	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.913E-02 	 Total distance: 1.913E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([32], dtype=int64), array([[ True]])]] 	 class: [0 4]
10:10:15,973 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.900E-02 	 Total distance: 3.900E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([52], dtype=int64), array([[False]])]] 	 class: [1 4]
10:10:15,974 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:15,974 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 34.18 	 cIDON = [0 4], cIDOFF = [1 4]
10:10:15,974 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:15,974 root DEBUG dOFF/dON = 2.0
10:10:15,974 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.76742643046832, 'dON1': 0.01913105423160126, 'cIDON1': array([0, 4], dtype=int64), 'dON_patch_1': 0.01913105423160126, 'nTON': 1, 'dON': 0.01913105423160126, 'dxOFFAngle': 84.37553271516147, 'dOFF1': 0.03899717317049713, 'cIDOFF1': array([1, 4], dtype=int64), 'dOFF_patch_1': 0.03899717317049713, 'nTOFF': 1, 'dOFF': 0.03899717317049713, 'SUCCESS': True}
10:10:15,984 root DEBUG 

=================== Experiment ID #177 	 Dual Point ID: 180 ===================
10:10:15,996 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.963E-07|<1.000E-06)
10:10:15,996 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:16,246 root DEBUG Side: ON	 Angle(dx0, dx): 2.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.926E-03 	 Total distance: 9.926E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([234], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:16,488 root DEBUG Side: OFF	 Angle(dx0, dx): 0.86 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.979E-01 	 Total distance: 2.979E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([199], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:16,489 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:16,489 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 93.55 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:16,490 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:16,490 root DEBUG dOFF/dON = 30.0
10:10:16,490 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.12618097248445, 'dON1': 0.009925683975711709, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.009925683975711709, 'nTON': 1, 'dON': 0.009925683975711709, 'dxOFFAngle': 81.44500634931147, 'dOFF1': 0.2979427114941001, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.2979427114941001, 'nTOFF': 1, 'dOFF': 0.2979427114941001, 'SUCCESS': True}
10:10:16,503 root DEBUG 

=================== Experiment ID #178 	 Dual Point ID: 181 ===================
10:10:16,514 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.748E-08|<1.000E-06)
10:10:16,515 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:16,836 root DEBUG Side: ON	 Angle(dx0, dx): 0.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.124E-02 	 Total distance: 3.124E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([20], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:10:17,63 root DEBUG Side: OFF	 Angle(dx0, dx): 0.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.249E-02 	 Total distance: 9.249E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([182], dtype=int64), array([[False]])]] 	 class: [3 9]
10:10:17,64 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:17,64 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 49.51 	 cIDON = [3 9], cIDOFF = [3 9]
10:10:17,64 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:17,64 root DEBUG dOFF/dON = 3.0
10:10:17,64 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.70551324397294, 'dON1': 0.031235761784042932, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.031235761784042932, 'nTON': 1, 'dON': 0.031235761784042932, 'dxOFFAngle': 87.23369224986904, 'dOFF1': 0.092489732387952, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.092489732387952, 'nTOFF': 1, 'dOFF': 0.092489732387952, 'SUCCESS': True}
10:10:17,72 root DEBUG 

=================== Experiment ID #179 	 Dual Point ID: 182 ===================
10:10:17,86 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.092E-07|<1.000E-06)
10:10:17,87 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:17,343 root DEBUG Side: ON	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.318E-02 	 Total distance: 3.318E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([78], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:17,629 root DEBUG Side: OFF	 Angle(dx0, dx): 1.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.990E-01 	 Total distance: 1.990E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([209], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:17,629 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:17,629 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 71.42 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:17,629 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:17,629 root DEBUG dOFF/dON = 6.0
10:10:17,629 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.24236584287397, 'dON1': 0.033179724149688526, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.033179724149688526, 'nTON': 1, 'dON': 0.033179724149688526, 'dxOFFAngle': 86.81195670722524, 'dOFF1': 0.19903348799106205, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.19903348799106205, 'nTOFF': 1, 'dOFF': 0.19903348799106205, 'SUCCESS': True}
10:10:17,636 root DEBUG 

=================== Experiment ID #180 	 Dual Point ID: 183 ===================
10:10:17,642 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.388E-08|<1.000E-06)
10:10:17,642 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:17,967 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.331E-02 	 Total distance: 8.331E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([7], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:18,234 root DEBUG Side: OFF	 Angle(dx0, dx): 1.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.905E-01 	 Total distance: 1.905E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([239], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:18,234 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:18,234 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 39.16 	 cIDON = [5 7], cIDOFF = [5 7]
10:10:18,234 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:18,234 root DEBUG dOFF/dON = 2.3
10:10:18,235 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.8658590249707, 'dON1': 0.0833052581303056, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.0833052581303056, 'nTON': 1, 'dON': 0.0833052581303056, 'dxOFFAngle': 89.78219300737864, 'dOFF1': 0.19053445518963302, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.19053445518963302, 'nTOFF': 1, 'dOFF': 0.19053445518963302, 'SUCCESS': True}
10:10:18,242 root DEBUG 

=================== Experiment ID #181 	 Dual Point ID: 184 ===================
10:10:18,255 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.282E-09|<1.000E-06)
10:10:18,255 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:18,559 root DEBUG Side: ON	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.171E-01 	 Total distance: 2.171E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([189], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:18,868 root DEBUG Side: OFF	 Angle(dx0, dx): 0.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.057E-02 	 Total distance: 1.057E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([244], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:18,868 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:18,869 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -90.71 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:18,869 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:18,869 root DEBUG dOFF/dON = 0.0
10:10:18,869 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.6172440417658, 'dON1': 0.21710653519400164, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.21710653519400164, 'nTON': 1, 'dON': 0.21710653519400164, 'dxOFFAngle': 89.97237497216196, 'dOFF1': 0.010574015122013317, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.010574015122013317, 'nTOFF': 1, 'dOFF': 0.010574015122013317, 'SUCCESS': False}
10:10:18,878 root DEBUG 

=================== Experiment ID #182 	 Dual Point ID: 185 ===================
10:10:18,885 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.606E-08|<1.000E-06)
10:10:18,886 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:19,185 root DEBUG Side: ON	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.943E-02 	 Total distance: 2.943E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([110], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:19,305 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.444E-03 	 Total distance: 3.387E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([109], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:19,440 root DEBUG Side: ON	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.527E-02 	 Total distance: 8.915E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([119], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:19,730 root DEBUG Side: OFF	 Angle(dx0, dx): 2.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.071E-02 	 Total distance: 7.071E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([191], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:19,730 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:19,730 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -11.53 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:19,730 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:19,730 root DEBUG dOFF/dON = 0.8
10:10:19,730 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.28499416940299, 'dON1': 0.0891463897078408, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.0891463897078408, 'nTON': 1, 'dON': 0.0891463897078408, 'dxOFFAngle': 89.16843573507131, 'dOFF1': 0.07071231822804369, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.07071231822804369, 'nTOFF': 1, 'dOFF': 0.07071231822804369, 'SUCCESS': False}
10:10:19,743 root DEBUG 

=================== Experiment ID #183 	 Dual Point ID: 186 ===================
10:10:19,753 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.291E-09|<1.000E-06)
10:10:19,753 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:19,983 root DEBUG Side: ON	 Angle(dx0, dx): 6.96 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.775E-06 	 Total distance: 1.775E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 2]
10:10:20,220 root DEBUG Side: OFF	 Angle(dx0, dx): 3.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.536E-03 	 Total distance: 1.536E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([153], dtype=int64), array([[False]])]] 	 class: [0 2]
10:10:20,220 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:20,220 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.77 	 cIDON = [1 2], cIDOFF = [0 2]
10:10:20,221 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:20,221 root DEBUG dOFF/dON = 865.3
10:10:20,221 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.32187394777291, 'dON1': 1.7753276355181747e-06, 'cIDON1': array([1, 2], dtype=int64), 'dON_patch_1': 1.7753276355181747e-06, 'nTON': 1, 'dON': 1.7753276355181747e-06, 'dxOFFAngle': 83.43674573853264, 'dOFF1': 0.0015361867192022303, 'cIDOFF1': array([0, 2], dtype=int64), 'dOFF_patch_1': 0.0015361867192022303, 'nTOFF': 1, 'dOFF': 0.0015361867192022303, 'SUCCESS': True}
10:10:20,230 root DEBUG 

=================== Experiment ID #184 	 Dual Point ID: 187 ===================
10:10:20,241 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.763E-09|<1.000E-06)
10:10:20,241 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:20,612 root DEBUG Side: ON	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.719E-02 	 Total distance: 2.719E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([214], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:20,837 root DEBUG Side: ON	 Angle(dx0, dx): 1.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.678E-02 	 Total distance: 9.397E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([144], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:21,225 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.890E-02 	 Total distance: 8.890E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([216], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:21,225 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:21,225 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -2.77 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:21,226 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:21,226 root DEBUG dOFF/dON = 0.9
10:10:21,226 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.140193411513, 'dON1': 0.09396877072707296, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.09396877072707296, 'nTON': 1, 'dON': 0.09396877072707296, 'dxOFFAngle': 84.46310172649198, 'dOFF1': 0.08890137986595081, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.08890137986595081, 'nTOFF': 1, 'dOFF': 0.08890137986595081, 'SUCCESS': False}
10:10:21,237 root DEBUG 

=================== Experiment ID #185 	 Dual Point ID: 188 ===================
10:10:21,245 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.078E-08|<1.000E-06)
10:10:21,245 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:21,557 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.292E-03 	 Total distance: 8.292E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([179], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:21,807 root DEBUG Side: ON	 Angle(dx0, dx): 6.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.785E-01 	 Total distance: 2.868E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([9], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:22,28 root DEBUG Side: OFF	 Angle(dx0, dx): 0.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.552E-01 	 Total distance: 1.552E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([152], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:22,297 root DEBUG Side: OFF	 Angle(dx0, dx): 0.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.889E-01 	 Total distance: 3.442E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([107], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:22,545 root DEBUG Side: OFF	 Angle(dx0, dx): 1.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.871E-01 	 Total distance: 7.313E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([37], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:22,545 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:22,545 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 43.66 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:22,546 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:22,546 root DEBUG dOFF/dON = 2.5
10:10:22,546 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.61418538175897, 'dON1': 0.28683658055746486, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.28683658055746486, 'nTON': 1, 'dON': 0.28683658055746486, 'dxOFFAngle': 87.54078297201603, 'dOFF1': 0.7313128990010505, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.7313128990010505, 'nTOFF': 1, 'dOFF': 0.7313128990010505, 'SUCCESS': True}
10:10:22,553 root DEBUG 

=================== Experiment ID #186 	 Dual Point ID: 189 ===================
10:10:22,559 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.398E-09|<1.000E-06)
10:10:22,559 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:22,771 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.035E-02 	 Total distance: 3.035E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([1], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:23,93 root DEBUG Side: OFF	 Angle(dx0, dx): 0.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.709E-04 	 Total distance: 5.709E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([231], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:23,93 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:23,93 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -96.31 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:23,93 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:23,93 root DEBUG dOFF/dON = 0.0
10:10:23,93 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.14631293841241, 'dON1': 0.030349691583475728, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.030349691583475728, 'nTON': 1, 'dON': 0.030349691583475728, 'dxOFFAngle': 88.31253916446087, 'dOFF1': 0.0005708833656770108, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.0005708833656770108, 'nTOFF': 1, 'dOFF': 0.0005708833656770108, 'SUCCESS': False}
10:10:23,100 root DEBUG 

=================== Experiment ID #187 	 Dual Point ID: 190 ===================
10:10:23,110 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.359E-08|<1.000E-06)
10:10:23,110 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:23,488 root DEBUG Side: ON	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.549E-02 	 Total distance: 7.549E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([36], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:10:23,720 root DEBUG Side: OFF	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.882E-02 	 Total distance: 4.882E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([56], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:10:23,720 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:23,720 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -21.46 	 cIDON = [3 9], cIDOFF = [3 9]
10:10:23,720 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:23,720 root DEBUG dOFF/dON = 0.6
10:10:23,720 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.47273598768236, 'dON1': 0.07549079147749986, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.07549079147749986, 'nTON': 1, 'dON': 0.07549079147749986, 'dxOFFAngle': 89.57546834282174, 'dOFF1': 0.04881591417513367, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.04881591417513367, 'nTOFF': 1, 'dOFF': 0.04881591417513367, 'SUCCESS': False}
10:10:23,728 root DEBUG 

=================== Experiment ID #188 	 Dual Point ID: 191 ===================
10:10:23,735 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.330E-08|<1.000E-06)
10:10:23,735 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:23,954 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.131E-02 	 Total distance: 1.131E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([34], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:10:24,220 root DEBUG Side: OFF	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.213E-02 	 Total distance: 2.213E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([208], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:10:24,221 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:24,221 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 32.37 	 cIDON = [3 9], cIDOFF = [3 9]
10:10:24,221 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:24,221 root DEBUG dOFF/dON = 2.0
10:10:24,221 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.88080644854007, 'dON1': 0.011308344883034135, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.011308344883034135, 'nTON': 1, 'dON': 0.011308344883034135, 'dxOFFAngle': 89.64124584636969, 'dOFF1': 0.0221322554351207, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.0221322554351207, 'nTOFF': 1, 'dOFF': 0.0221322554351207, 'SUCCESS': True}
10:10:24,229 root DEBUG 

=================== Experiment ID #189 	 Dual Point ID: 192 ===================
10:10:24,237 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.089E-09|<1.000E-06)
10:10:24,238 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:24,546 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.453E-02 	 Total distance: 3.453E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([129], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:10:24,764 root DEBUG Side: ON	 Angle(dx0, dx): 3.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.783E-02 	 Total distance: 8.235E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 8], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 2]
10:10:25,3 root DEBUG Side: OFF	 Angle(dx0, dx): 1.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.705E-02 	 Total distance: 1.705E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([137], dtype=int64), array([[False]])]] 	 class: [2 8]
10:10:25,3 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:25,4 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -65.69 	 cIDON = [2 8], cIDOFF = [2 8]
10:10:25,4 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:25,4 root DEBUG dOFF/dON = 0.2
10:10:25,4 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.27409199275569, 'dON1': 0.08235397091231267, 'cIDON1': array([2, 8], dtype=int64), 'dON_patch_1': 0.08235397091231267, 'nTON': 1, 'dON': 0.08235397091231267, 'dxOFFAngle': 86.78675011448605, 'dOFF1': 0.01705210362298225, 'cIDOFF1': array([2, 8], dtype=int64), 'dOFF_patch_1': 0.01705210362298225, 'nTOFF': 1, 'dOFF': 0.01705210362298225, 'SUCCESS': False}
10:10:25,13 root DEBUG 

=================== Experiment ID #190 	 Dual Point ID: 193 ===================
10:10:25,20 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.039E-08|<1.000E-06)
10:10:25,21 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:25,296 root DEBUG Side: ON	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.118E-02 	 Total distance: 7.118E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([194], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:25,529 root DEBUG Side: OFF	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.608E-03 	 Total distance: 8.608E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([76], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:25,746 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.611E-02 	 Total distance: 2.472E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([97], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:25,963 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.083E-02 	 Total distance: 8.556E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([206], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:25,963 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:25,963 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 9.17 	 cIDON = [5 7], cIDOFF = [5 7]
10:10:25,964 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:25,964 root DEBUG dOFF/dON = 1.2
10:10:25,964 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.35669763726447, 'dON1': 0.07117783730776624, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.07117783730776624, 'nTON': 1, 'dON': 0.07117783730776624, 'dxOFFAngle': 86.41455300411418, 'dOFF1': 0.08555569374692207, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.08555569374692207, 'nTOFF': 1, 'dOFF': 0.08555569374692207, 'SUCCESS': True}
10:10:25,971 root DEBUG 

=================== Experiment ID #191 	 Dual Point ID: 194 ===================
10:10:25,979 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.825E-09|<1.000E-06)
10:10:25,980 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:26,262 root DEBUG Side: ON	 Angle(dx0, dx): 0.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.260E-02 	 Total distance: 9.260E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([180], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:10:26,506 root DEBUG Side: OFF	 Angle(dx0, dx): 0.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.280E-01 	 Total distance: 1.280E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([87], dtype=int64), array([[False]])]] 	 class: [3 9]
10:10:26,506 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:26,507 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 16.04 	 cIDON = [3 9], cIDOFF = [3 9]
10:10:26,507 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:26,507 root DEBUG dOFF/dON = 1.4
10:10:26,507 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.53679804923341, 'dON1': 0.09259704993510871, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.09259704993510871, 'nTON': 1, 'dON': 0.09259704993510871, 'dxOFFAngle': 89.81655819399896, 'dOFF1': 0.12798585893131106, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.12798585893131106, 'nTOFF': 1, 'dOFF': 0.12798585893131106, 'SUCCESS': True}
10:10:26,524 root DEBUG 

=================== Experiment ID #192 	 Dual Point ID: 195 ===================
10:10:26,532 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.234E-08|<1.000E-06)
10:10:26,532 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:26,867 root DEBUG Side: ON	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.182E-02 	 Total distance: 4.182E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([1], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:27,119 root DEBUG Side: OFF	 Angle(dx0, dx): 0.88 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.773E-02 	 Total distance: 6.773E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([187], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:27,119 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:27,119 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 23.66 	 cIDON = [2 6], cIDOFF = [2 6]
10:10:27,119 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:27,119 root DEBUG dOFF/dON = 1.6
10:10:27,119 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.0286832787228, 'dON1': 0.041817245178820774, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.041817245178820774, 'nTON': 1, 'dON': 0.041817245178820774, 'dxOFFAngle': 86.18839646861474, 'dOFF1': 0.06773256373770288, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.06773256373770288, 'nTOFF': 1, 'dOFF': 0.06773256373770288, 'SUCCESS': True}
10:10:27,129 root DEBUG 

=================== Experiment ID #193 	 Dual Point ID: 196 ===================
10:10:27,138 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.069E-09|<1.000E-06)
10:10:27,138 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:27,366 root DEBUG Side: ON	 Angle(dx0, dx): 0.83 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.275E-04 	 Total distance: 8.275E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([56], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:27,634 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.280E-02 	 Total distance: 7.280E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([51], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:27,850 root DEBUG Side: OFF	 Angle(dx0, dx): 1.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.183E-03 	 Total distance: 7.699E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([60], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:28,101 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.646E-02 	 Total distance: 1.135E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([71], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:28,311 root DEBUG Side: OFF	 Angle(dx0, dx): 0.95 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.339E-02 	 Total distance: 1.368E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([179], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:28,311 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:28,311 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 98.80 	 cIDON = [2 6], cIDOFF = [2 6]
10:10:28,311 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:28,311 root DEBUG dOFF/dON = 165.4
10:10:28,311 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.44987253692977, 'dON1': 0.0008275035515182856, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.0008275035515182856, 'nTON': 1, 'dON': 0.0008275035515182856, 'dxOFFAngle': 88.40927906123028, 'dOFF1': 0.13684247651233175, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.13684247651233175, 'nTOFF': 1, 'dOFF': 0.13684247651233175, 'SUCCESS': True}
10:10:28,557 matplotlib.pyplot DEBUG Loaded backend tkagg version 8.6.
10:10:28,644 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:28,645 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:28,645 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:28,645 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:28,645 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 1189
10:10:28,653 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:28,654 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:28,654 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:28,654 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:28,654 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 2994
10:10:28,691 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:28,691 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:28,691 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:28,691 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:28,691 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 696
10:10:28,695 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:28,695 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:28,695 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:28,696 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:28,696 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 526
10:10:28,701 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:28,701 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:28,701 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:28,701 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:28,701 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 499
10:10:28,705 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:28,706 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:28,706 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:28,706 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:28,706 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 673
10:10:28,708 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:28,708 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:28,708 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:28,708 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:28,708 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 922
10:10:28,711 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:28,712 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:28,712 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:28,712 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:28,712 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 568
10:10:28,714 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:28,714 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:28,714 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:28,714 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:28,714 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 626
10:10:28,722 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
10:10:28,723 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,723 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,723 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:10:28,723 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:10:28,723 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,723 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,723 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,723 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,723 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,724 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,724 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,724 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,724 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:10:28,724 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,724 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,724 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,724 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,724 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,724 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,724 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,724 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,725 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,725 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,725 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,725 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,725 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,725 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,725 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,725 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,725 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,725 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,725 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,726 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,726 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,726 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,726 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:10:28,726 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,726 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,726 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,726 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,726 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,726 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,726 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,727 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,727 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:10:28,727 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,727 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,727 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,727 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,727 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,727 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,727 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:28,727 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,727 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,728 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:10:28,728 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,728 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,728 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:28,728 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,728 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:10:28,728 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,728 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:28,728 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,728 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,728 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,729 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,729 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,729 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,729 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,729 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,729 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,729 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,729 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,729 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,729 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,729 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,729 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,730 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:28,730 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,730 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,730 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:10:28,730 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,730 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,730 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,730 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,730 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,730 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,730 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,730 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,731 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:28,731 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,731 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,731 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,731 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:10:28,731 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,731 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,731 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,731 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,731 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,731 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,731 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,731 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,731 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,731 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,731 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,731 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:28,731 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,732 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,732 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,732 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,732 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,732 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,732 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,732 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,732 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,732 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,732 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,732 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,732 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,732 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,732 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,732 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:28,732 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,732 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,732 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,732 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,732 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,732 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,732 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,733 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,733 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,733 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,733 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,733 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,733 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,733 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,733 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,733 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,733 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,733 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,733 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:28,733 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:28,733 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,733 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:10:28,733 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,733 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,733 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,733 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,733 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,733 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,733 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,733 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,734 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,734 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,734 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,734 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,734 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:28,734 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,734 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,734 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,734 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,734 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,734 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,734 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,734 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,734 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:10:28,734 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:28,734 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,734 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,734 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,734 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,734 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,734 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,734 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:28,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:10:28,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:10:28,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:28,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:28,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:28,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:28,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:28,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:10:28,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:28,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:28,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:10:28,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:28,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:28,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:28,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:10:28,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:28,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:28,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:10:28,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:10:28,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:10:28,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:28,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:28,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:28,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:28,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:28,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:10:28,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:28,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:28,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:28,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:10:28,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:28,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:10:28,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:28,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:28,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:10:28,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:10:28,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:10:28,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:10:28,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:28,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:28,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:28,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:28,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:10:28,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,746 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,746 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,746 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,746 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,746 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,746 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:28,746 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,746 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,746 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,746 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,746 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,746 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,746 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,746 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,746 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,746 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:28,746 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,746 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,746 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,746 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:10:28,747 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,747 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,747 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:28,747 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,747 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,747 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,747 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:28,748 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,748 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,748 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,748 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,748 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
10:10:28,924 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
10:10:28,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:10:28,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:10:28,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:10:28,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:10:28,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:10:28,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,929 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,929 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,929 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,929 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,929 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,929 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:28,929 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,929 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,929 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:10:28,929 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,929 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,929 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:28,930 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,930 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:10:28,930 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,930 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:28,930 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,930 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,930 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,930 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,930 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,930 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,930 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,930 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,930 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,931 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,931 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,931 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,931 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,931 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,931 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,931 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:28,931 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,931 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,931 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:10:28,931 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,931 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,932 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,932 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,932 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,932 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,932 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,932 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,932 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:28,932 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,932 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,932 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:10:28,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:28,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,934 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,934 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,934 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,934 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,934 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,934 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,934 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,934 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,935 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:28,935 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,935 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,935 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,935 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,935 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,935 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,936 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,936 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,936 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,936 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,936 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,936 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,936 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,936 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,936 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,936 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,937 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,937 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,937 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:28,937 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:28,937 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,937 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:10:28,937 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,937 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,937 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,937 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,937 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,937 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,938 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,938 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,938 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,938 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,938 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,938 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,938 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:28,938 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,938 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:10:28,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:28,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,940 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,940 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,940 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,940 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,940 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,940 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:28,941 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,941 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:10:28,941 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:10:28,941 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,941 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,941 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:28,941 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,941 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,942 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,942 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,942 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:28,942 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,942 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:28,942 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,942 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,942 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,942 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,942 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,943 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,943 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,943 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:28,943 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,943 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:28,943 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,943 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,943 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,943 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,943 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,943 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,943 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,944 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,944 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,944 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,944 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,944 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,944 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,944 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,944 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,944 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,944 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:10:28,944 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,944 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,944 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,944 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,944 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,944 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,945 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,945 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:28,945 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,945 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,945 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,945 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,945 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,945 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,945 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,945 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,945 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,945 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:28,945 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,945 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,945 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:10:28,945 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:28,946 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,946 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:28,946 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,946 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:28,946 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,946 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,946 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,946 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,946 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,946 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,946 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,946 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:10:28,946 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,946 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,947 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,947 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,947 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,947 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,947 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:28,947 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,947 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,947 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,947 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,947 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,947 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,948 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,948 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:28,948 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,948 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,948 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:10:28,948 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,948 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:10:28,949 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,949 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:10:28,949 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,949 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:28,949 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,949 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,949 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,949 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,949 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:28,949 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,949 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,949 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,949 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,949 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,949 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:28,950 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,950 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,950 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,950 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,950 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,950 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:28,950 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,950 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,950 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,950 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,950 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,950 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,950 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,951 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:28,951 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,951 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,951 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,951 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,951 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,951 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,951 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,951 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,951 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,951 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,951 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,951 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,952 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:10:28,952 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,952 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,952 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,952 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,952 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,952 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,952 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,952 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,952 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,952 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,952 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,952 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,952 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,952 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,952 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,952 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,952 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,953 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,953 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,953 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,953 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:28,953 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,953 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,953 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,953 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,953 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,953 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,953 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:28,953 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,953 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,953 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,953 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,953 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,953 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,953 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:28,954 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:10:28,954 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,954 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,954 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,954 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,954 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,954 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,954 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:28,954 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,954 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,955 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,955 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,955 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:10:28,955 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,955 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,955 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,955 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,956 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:28,956 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,956 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,956 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,956 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,956 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,956 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,956 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,957 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,957 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,957 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:28,957 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,957 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,957 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,957 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,957 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,957 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:10:28,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:10:28,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:10:28,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:10:28,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:28,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:28,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:28,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:28,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:28,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:10:28,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:28,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:28,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:28,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:10:28,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:28,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:28,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:28,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:28,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:28,962 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
10:10:29,139 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0.
10:10:29,140 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,140 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,140 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:10:29,140 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:10:29,140 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,140 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,140 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,141 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,141 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,141 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,141 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,141 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,141 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:10:29,141 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,141 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,141 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,141 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,142 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,142 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,142 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,142 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,142 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,142 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,142 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,142 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,142 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,142 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,143 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,143 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,143 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,143 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,143 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,143 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,143 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,143 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,143 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:10:29,143 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,143 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,144 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,144 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,144 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,144 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,144 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,144 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,144 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:10:29,144 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,144 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,144 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,144 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,145 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,145 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,145 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:29,145 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,145 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,145 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:10:29,145 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,145 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,145 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:29,145 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,145 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:10:29,146 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:29,146 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:29,146 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,146 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,146 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,146 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,146 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,146 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,146 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,146 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,147 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,147 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,147 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,147 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,147 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,147 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,147 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,147 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:29,147 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,147 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,148 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:10:29,148 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,148 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,148 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,148 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,148 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,148 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,148 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,148 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,149 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:29,149 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:29,149 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,149 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,149 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:10:29,149 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,149 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,149 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,149 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,150 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,150 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,150 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,150 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,150 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,150 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,150 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,150 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:29,151 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:29,151 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,151 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,151 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,151 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,151 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,151 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,151 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,152 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,152 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,152 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,152 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,152 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,152 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,152 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,152 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:29,153 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,153 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,153 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,153 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,153 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,153 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,153 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,153 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,154 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,154 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,154 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,154 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,154 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,154 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,154 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,154 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,154 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:29,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:29,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:10:29,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:29,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:29,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:10:29,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:29,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:29,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:10:29,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:10:29,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:29,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:29,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:29,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:29,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:29,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:29,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:10:29,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:29,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:29,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:29,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:29,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:10:29,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:29,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:29,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:29,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:10:29,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:29,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:29,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:29,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:10:29,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:10:29,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:10:29,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:29,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:29,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:29,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:29,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:29,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:29,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:29,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:29,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:10:29,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:29,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:29,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:29,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:10:29,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:29,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:10:29,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:29,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:29,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:10:29,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:10:29,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:10:29,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:10:29,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:29,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:29,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:29,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:29,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,175 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,175 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,175 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,175 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,175 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:29,175 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,175 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,175 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,175 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:10:29,175 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,175 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,175 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:29,175 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,175 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,175 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:29,175 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,175 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,175 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,175 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,175 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,176 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,176 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,176 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,176 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,176 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:29,176 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,176 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,176 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,176 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,176 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,176 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,177 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:29,177 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,177 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,177 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:29,177 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,177 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,177 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,177 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:10:29,177 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,177 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,177 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:29,177 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:29,177 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,177 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:29,177 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:29,178 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,178 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,178 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,178 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:29,178 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
