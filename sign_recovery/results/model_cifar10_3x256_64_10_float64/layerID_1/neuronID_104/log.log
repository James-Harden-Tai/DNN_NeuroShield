10:07:59,783 root DEBUG Check that model weights are dtype tf.float64: 	 <dtype: 'float64'>
10:07:59,784 root INFO eps: 1e-06
10:07:59,784 root INFO tol: 1e-06
10:07:59,784 root DEBUG Load dual points from file: ../data/dual_points_cifar10_3x256_64_10_float64.
10:07:59,798 root DEBUG 

=================== Experiment ID #0 	 Dual Point ID: 1 ===================
10:07:59,807 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.302E-08|<1.000E-06)
10:07:59,807 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:00,132 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.319E-01 	 Total distance: 1.319E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([164], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:00,473 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.568E-01 	 Total distance: 2.568E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([72], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:00,473 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:00,473 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 32.15 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:00,474 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:00,474 root DEBUG dOFF/dON = 1.9
10:08:00,474 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.55406748428345, 'dON1': 0.13186097996032667, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.13186097996032667, 'nTON': 1, 'dON': 0.13186097996032667, 'dxOFFAngle': 89.9973013092866, 'dOFF1': 0.2568241717350096, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.2568241717350096, 'nTOFF': 1, 'dOFF': 0.2568241717350096, 'SUCCESS': True}
10:08:00,484 root DEBUG 

=================== Experiment ID #1 	 Dual Point ID: 2 ===================
10:08:00,492 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.249E-08|<1.000E-06)
10:08:00,492 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:00,822 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.091E-01 	 Total distance: 6.091E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([64], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:01,134 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.428E-01 	 Total distance: 4.428E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([43], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:01,499 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.190E+00 	 Total distance: 1.633E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([25], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:01,499 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:01,499 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 45.67 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:01,500 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:01,500 root DEBUG dOFF/dON = 2.7
10:08:01,500 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.60320979645262, 'dON1': 0.6091397060487785, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.6091397060487785, 'nTON': 1, 'dON': 0.6091397060487785, 'dxOFFAngle': 89.2387031086477, 'dOFF1': 1.6330528153573889, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 1.6330528153573889, 'nTOFF': 1, 'dOFF': 1.6330528153573889, 'SUCCESS': True}
10:08:01,511 root DEBUG 

=================== Experiment ID #2 	 Dual Point ID: 3 ===================
10:08:01,518 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.363E-08|<1.000E-06)
10:08:01,518 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:01,844 root DEBUG Side: ON	 Angle(dx0, dx): 0.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.553E-01 	 Total distance: 4.553E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([177], dtype=int64), array([[False]])]] 	 class: [1 2]
10:08:02,152 root DEBUG Side: OFF	 Angle(dx0, dx): 2.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.171E-06 	 Total distance: 2.171E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 2]
10:08:02,153 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:02,153 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -100.00 	 cIDON = [1 2], cIDOFF = [1 2]
10:08:02,153 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:02,153 root DEBUG dOFF/dON = 0.0
10:08:02,153 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.69453736490361, 'dON1': 0.45525891490083364, 'cIDON1': array([1, 2], dtype=int64), 'dON_patch_1': 0.45525891490083364, 'nTON': 1, 'dON': 0.45525891490083364, 'dxOFFAngle': 88.58962942541162, 'dOFF1': 2.17135757058062e-06, 'cIDOFF1': array([1, 2], dtype=int64), 'dOFF_patch_1': 2.17135757058062e-06, 'nTOFF': 1, 'dOFF': 2.17135757058062e-06, 'SUCCESS': False}
10:08:02,163 root DEBUG 

=================== Experiment ID #3 	 Dual Point ID: 4 ===================
10:08:02,174 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.734E-09|<1.000E-06)
10:08:02,174 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:02,548 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.435E-02 	 Total distance: 6.435E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([213], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:02,842 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.754E-01 	 Total distance: 1.754E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([10], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:03,73 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.581E-01 	 Total distance: 6.335E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([184], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:03,302 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.746E-02 	 Total distance: 7.009E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([93], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:03,552 root DEBUG Side: OFF	 Angle(dx0, dx): 0.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.271E+00 	 Total distance: 1.972E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([101], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:03,553 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:03,553 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 93.68 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:03,553 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:03,553 root DEBUG dOFF/dON = 30.6
10:08:03,553 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.57847153717474, 'dON1': 0.06435355788029315, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.06435355788029315, 'nTON': 1, 'dON': 0.06435355788029315, 'dxOFFAngle': 88.64549456635913, 'dOFF1': 1.972029446485799, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 1.972029446485799, 'nTOFF': 1, 'dOFF': 1.972029446485799, 'SUCCESS': True}
10:08:03,564 root DEBUG 

=================== Experiment ID #4 	 Dual Point ID: 5 ===================
10:08:03,580 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.443E-07|<1.000E-06)
10:08:03,581 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:03,880 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.456E-01 	 Total distance: 1.456E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([23], dtype=int64), array([[False]])]] 	 class: [2 4]
10:08:04,200 root DEBUG Side: OFF	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.691E+00 	 Total distance: 1.691E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([204], dtype=int64), array([[False]])]] 	 class: [2 4]
10:08:04,201 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:04,201 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 84.15 	 cIDON = [2 4], cIDOFF = [2 4]
10:08:04,201 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:04,201 root DEBUG dOFF/dON = 11.6
10:08:04,201 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.15801717916874, 'dON1': 0.14559460273646846, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.14559460273646846, 'nTON': 1, 'dON': 0.14559460273646846, 'dxOFFAngle': 88.54092908975942, 'dOFF1': 1.6913237879732428, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 1.6913237879732428, 'nTOFF': 1, 'dOFF': 1.6913237879732428, 'SUCCESS': True}
10:08:04,211 root DEBUG 

=================== Experiment ID #5 	 Dual Point ID: 6 ===================
10:08:04,219 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.617E-08|<1.000E-06)
10:08:04,220 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:04,603 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.905E-01 	 Total distance: 1.905E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([171], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:04,944 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.685E-02 	 Total distance: 4.685E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([136], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:04,944 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:04,944 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -60.52 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:04,944 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:04,944 root DEBUG dOFF/dON = 0.2
10:08:04,944 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.04347450373622, 'dON1': 0.19049734356771147, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.19049734356771147, 'nTON': 1, 'dON': 0.19049734356771147, 'dxOFFAngle': 88.52534803395312, 'dOFF1': 0.046847639326934115, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.046847639326934115, 'nTOFF': 1, 'dOFF': 0.046847639326934115, 'SUCCESS': False}
10:08:04,951 root DEBUG 

=================== Experiment ID #6 	 Dual Point ID: 7 ===================
10:08:04,963 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.159E-08|<1.000E-06)
10:08:04,964 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:05,229 root DEBUG Side: ON	 Angle(dx0, dx): 1.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.929E-01 	 Total distance: 4.929E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([5, 7], dtype=int64), array([[1.],
       [0.]])]] 	 class: [5 6]
10:08:05,562 root DEBUG Side: OFF	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.424E-01 	 Total distance: 2.424E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([220], dtype=int64), array([[False]])]] 	 class: [6 7]
10:08:05,562 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:05,563 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -34.07 	 cIDON = [6 7], cIDOFF = [6 7]
10:08:05,563 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:05,563 root DEBUG dOFF/dON = 0.5
10:08:05,563 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.65745358404432, 'dON1': 0.49291454703307325, 'cIDON1': array([6, 7], dtype=int64), 'dON_patch_1': 0.49291454703307325, 'nTON': 1, 'dON': 0.49291454703307325, 'dxOFFAngle': 88.511612509898, 'dOFF1': 0.24239265373466043, 'cIDOFF1': array([6, 7], dtype=int64), 'dOFF_patch_1': 0.24239265373466043, 'nTOFF': 1, 'dOFF': 0.24239265373466043, 'SUCCESS': False}
10:08:05,583 root DEBUG 

=================== Experiment ID #7 	 Dual Point ID: 8 ===================
10:08:05,593 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.780E-08|<1.000E-06)
10:08:05,594 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:05,984 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.319E+00 	 Total distance: 1.319E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([69], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:08:06,321 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.942E-02 	 Total distance: 7.942E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([83], dtype=int64), array([[False]])]] 	 class: [2 5]
10:08:06,578 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.492E-01 	 Total distance: 2.286E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([37], dtype=int64), array([[False]])]] 	 class: [2 5]
10:08:06,579 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:06,579 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -70.46 	 cIDON = [2 5], cIDOFF = [2 5]
10:08:06,579 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:06,579 root DEBUG dOFF/dON = 0.2
10:08:06,579 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.79413700758371, 'dON1': 1.3194256755115779, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 1.3194256755115779, 'nTON': 1, 'dON': 1.3194256755115779, 'dxOFFAngle': 89.94840230756692, 'dOFF1': 0.22862179916089592, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.22862179916089592, 'nTOFF': 1, 'dOFF': 0.22862179916089592, 'SUCCESS': False}
10:08:06,595 root DEBUG 

=================== Experiment ID #8 	 Dual Point ID: 9 ===================
10:08:06,607 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.184E-08|<1.000E-06)
10:08:06,608 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:06,939 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.176E+00 	 Total distance: 1.176E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([166], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:07,327 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.257E+00 	 Total distance: 1.257E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([38], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:07,327 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:07,327 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 3.32 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:07,328 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:07,328 root DEBUG dOFF/dON = 1.1
10:08:07,328 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.56303822397575, 'dON1': 1.1763812716397692, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 1.1763812716397692, 'nTON': 1, 'dON': 1.1763812716397692, 'dxOFFAngle': 89.48959856775112, 'dOFF1': 1.2571498673506745, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 1.2571498673506745, 'nTOFF': 1, 'dOFF': 1.2571498673506745, 'SUCCESS': True}
10:08:07,338 root DEBUG 

=================== Experiment ID #9 	 Dual Point ID: 10 ===================
10:08:07,350 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.322E-08|<1.000E-06)
10:08:07,350 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:07,709 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.878E+00 	 Total distance: 1.878E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([72], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:08,37 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.643E-01 	 Total distance: 1.643E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([210], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:08,38 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:08,38 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -83.92 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:08,38 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:08,38 root DEBUG dOFF/dON = 0.1
10:08:08,38 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.90766416891547, 'dON1': 1.878224284374628, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 1.878224284374628, 'nTON': 1, 'dON': 1.878224284374628, 'dxOFFAngle': 89.94760433651761, 'dOFF1': 0.16426560235235313, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.16426560235235313, 'nTOFF': 1, 'dOFF': 0.16426560235235313, 'SUCCESS': False}
10:08:08,50 root DEBUG 

=================== Experiment ID #10 	 Dual Point ID: 11 ===================
10:08:08,59 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.687E-08|<1.000E-06)
10:08:08,59 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:08,394 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.036E+00 	 Total distance: 1.036E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([196], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:08,650 root DEBUG Side: ON	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.521E-01 	 Total distance: 1.188E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([140], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:08,882 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.975E-02 	 Total distance: 1.218E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([109], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:09,137 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.268E-01 	 Total distance: 1.345E+00 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([53], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:09,391 root DEBUG Side: ON	 Angle(dx0, dx): 0.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.067E-01 	 Total distance: 1.752E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([180], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:09,735 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.138E-01 	 Total distance: 1.138E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([212], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:09,930 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.726E-02 	 Total distance: 1.410E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([194], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:10,149 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.076E-01 	 Total distance: 4.487E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([86], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:10,329 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.472E+00 	 Total distance: 1.921E+00 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([174], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:10,570 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.548E-01 	 Total distance: 2.075E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([157], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:10,570 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:10,571 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 8.46 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:10,571 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:10,571 root DEBUG dOFF/dON = 1.2
10:08:10,571 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.09363826826126, 'dON1': 1.7515986891947193, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 1.7515986891947193, 'nTON': 1, 'dON': 1.7515986891947193, 'dxOFFAngle': 88.91968043321516, 'dOFF1': 2.0754773215475666, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 2.0754773215475666, 'nTOFF': 1, 'dOFF': 2.0754773215475666, 'SUCCESS': True}
10:08:10,578 root DEBUG 

=================== Experiment ID #11 	 Dual Point ID: 12 ===================
10:08:10,591 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.111E-08|<1.000E-06)
10:08:10,592 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:10,955 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.249E-01 	 Total distance: 4.249E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([113], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:08:11,265 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.184E-02 	 Total distance: 5.184E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([197], dtype=int64), array([[False]])]] 	 class: [5 9]
10:08:11,449 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.699E+00 	 Total distance: 2.751E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([184], dtype=int64), array([[False]])]] 	 class: [5 9]
10:08:11,449 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:11,450 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 73.24 	 cIDON = [5 9], cIDOFF = [5 9]
10:08:11,450 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:11,450 root DEBUG dOFF/dON = 6.5
10:08:11,450 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.81566333315592, 'dON1': 0.42494489647173006, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.42494489647173006, 'nTON': 1, 'dON': 0.42494489647173006, 'dxOFFAngle': 89.92655684115027, 'dOFF1': 2.7505368849228664, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 2.7505368849228664, 'nTOFF': 1, 'dOFF': 2.7505368849228664, 'SUCCESS': True}
10:08:11,461 root DEBUG 

=================== Experiment ID #12 	 Dual Point ID: 13 ===================
10:08:11,467 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.269E-08|<1.000E-06)
10:08:11,467 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:11,825 root DEBUG Side: ON	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.166E-01 	 Total distance: 5.166E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([85], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:08:12,173 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.558E-01 	 Total distance: 3.558E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([165], dtype=int64), array([[False]])]] 	 class: [0 9]
10:08:12,174 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:12,174 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -18.43 	 cIDON = [1 9], cIDOFF = [0 9]
10:08:12,174 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:12,174 root DEBUG dOFF/dON = 0.7
10:08:12,174 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.47863666903572, 'dON1': 0.516560449702249, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.516560449702249, 'nTON': 1, 'dON': 0.516560449702249, 'dxOFFAngle': 89.89140702547967, 'dOFF1': 0.35576892335435006, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.35576892335435006, 'nTOFF': 1, 'dOFF': 0.35576892335435006, 'SUCCESS': False}
10:08:12,180 root DEBUG 

=================== Experiment ID #13 	 Dual Point ID: 14 ===================
10:08:12,191 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.209E-08|<1.000E-06)
10:08:12,191 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:12,541 root DEBUG Side: ON	 Angle(dx0, dx): 0.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.923E-02 	 Total distance: 5.923E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([80], dtype=int64), array([[False]])]] 	 class: [3 9]
10:08:12,899 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.770E-01 	 Total distance: 3.770E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([239], dtype=int64), array([[False]])]] 	 class: [3 9]
10:08:13,146 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.328E-01 	 Total distance: 7.098E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([156], dtype=int64), array([[False]])]] 	 class: [3 9]
10:08:13,415 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.118E-02 	 Total distance: 7.910E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([122], dtype=int64), array([[False]])]] 	 class: [3 9]
10:08:13,415 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:13,415 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 86.07 	 cIDON = [3 9], cIDOFF = [3 9]
10:08:13,416 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:13,416 root DEBUG dOFF/dON = 13.4
10:08:13,416 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.38467866580436, 'dON1': 0.05922502983143162, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.05922502983143162, 'nTON': 1, 'dON': 0.05922502983143162, 'dxOFFAngle': 88.48967530243489, 'dOFF1': 0.7909733153366242, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.7909733153366242, 'nTOFF': 1, 'dOFF': 0.7909733153366242, 'SUCCESS': True}
10:08:13,431 root DEBUG 

=================== Experiment ID #14 	 Dual Point ID: 15 ===================
10:08:13,445 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.246E-08|<1.000E-06)
10:08:13,445 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:13,805 root DEBUG Side: ON	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.314E-02 	 Total distance: 6.314E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([87], dtype=int64), array([[False]])]] 	 class: [6 9]
10:08:14,182 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.330E-01 	 Total distance: 4.330E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([9], dtype=int64), array([[False]])]] 	 class: [6 9]
10:08:14,370 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.818E-02 	 Total distance: 5.012E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([35], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:08:14,370 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:14,370 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 77.62 	 cIDON = [6 9], cIDOFF = [6 9]
10:08:14,370 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:14,370 root DEBUG dOFF/dON = 7.9
10:08:14,370 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.78478053568494, 'dON1': 0.06314249210787276, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.06314249210787276, 'nTON': 1, 'dON': 0.06314249210787276, 'dxOFFAngle': 89.04822937653597, 'dOFF1': 0.5011607146626658, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.5011607146626658, 'nTOFF': 1, 'dOFF': 0.5011607146626658, 'SUCCESS': True}
10:08:14,378 root DEBUG 

=================== Experiment ID #15 	 Dual Point ID: 16 ===================
10:08:14,387 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.807E-08|<1.000E-06)
10:08:14,387 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:14,701 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.658E-01 	 Total distance: 5.658E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([26], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:08:14,916 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.782E-02 	 Total distance: 6.236E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([0], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:08:15,277 root DEBUG Side: OFF	 Angle(dx0, dx): 0.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.349E-01 	 Total distance: 7.349E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([148], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:08:15,277 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:15,277 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 8.20 	 cIDON = [2 5], cIDOFF = [2 5]
10:08:15,277 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:15,277 root DEBUG dOFF/dON = 1.2
10:08:15,277 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.27019153047733, 'dON1': 0.6235747256682599, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.6235747256682599, 'nTON': 1, 'dON': 0.6235747256682599, 'dxOFFAngle': 89.42194953029464, 'dOFF1': 0.7349205700529619, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.7349205700529619, 'nTOFF': 1, 'dOFF': 0.7349205700529619, 'SUCCESS': True}
10:08:15,289 root DEBUG 

=================== Experiment ID #16 	 Dual Point ID: 17 ===================
10:08:15,299 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.909E-09|<1.000E-06)
10:08:15,299 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:15,594 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.735E-03 	 Total distance: 7.735E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([41], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:15,810 root DEBUG Side: ON	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.945E-01 	 Total distance: 3.023E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([77], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:16,194 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.314E-01 	 Total distance: 5.314E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([14], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:16,195 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:16,195 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 27.49 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:16,195 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:16,195 root DEBUG dOFF/dON = 1.8
10:08:16,195 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.4364696045245, 'dON1': 0.30226039762714557, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.30226039762714557, 'nTON': 1, 'dON': 0.30226039762714557, 'dxOFFAngle': 89.50495341566626, 'dOFF1': 0.5314418692618553, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.5314418692618553, 'nTOFF': 1, 'dOFF': 0.5314418692618553, 'SUCCESS': True}
10:08:16,201 root DEBUG 

=================== Experiment ID #17 	 Dual Point ID: 18 ===================
10:08:16,216 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.228E-08|<1.000E-06)
10:08:16,217 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:16,577 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.622E-01 	 Total distance: 8.622E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([26], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:16,791 root DEBUG Side: ON	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.116E+00 	 Total distance: 2.978E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([84], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:17,134 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.742E-01 	 Total distance: 4.742E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([112], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:17,427 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.337E+00 	 Total distance: 1.811E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([174], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:17,427 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:17,427 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -24.37 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:17,428 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:17,428 root DEBUG dOFF/dON = 0.6
10:08:17,428 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.35293464506368, 'dON1': 2.97836438585832, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 2.97836438585832, 'nTON': 1, 'dON': 2.97836438585832, 'dxOFFAngle': 89.27629699444022, 'dOFF1': 1.8110933850284139, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 1.8110933850284139, 'nTOFF': 1, 'dOFF': 1.8110933850284139, 'SUCCESS': False}
10:08:17,441 root DEBUG 

=================== Experiment ID #18 	 Dual Point ID: 19 ===================
10:08:17,454 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.222E-08|<1.000E-06)
10:08:17,454 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:17,830 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.529E-01 	 Total distance: 2.529E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([196], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:18,78 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.037E+00 	 Total distance: 1.289E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([134], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:18,363 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.833E-02 	 Total distance: 5.833E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([39], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:18,656 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.263E-02 	 Total distance: 9.095E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([145], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:18,657 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:18,657 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -86.82 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:18,657 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:18,657 root DEBUG dOFF/dON = 0.1
10:08:18,657 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.27907369145066, 'dON1': 1.289381503593946, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 1.289381503593946, 'nTON': 1, 'dON': 1.289381503593946, 'dxOFFAngle': 89.0416203662344, 'dOFF1': 0.09095348803329442, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.09095348803329442, 'nTOFF': 1, 'dOFF': 0.09095348803329442, 'SUCCESS': False}
10:08:18,668 root DEBUG 

=================== Experiment ID #19 	 Dual Point ID: 20 ===================
10:08:18,680 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.233E-09|<1.000E-06)
10:08:18,681 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:19,60 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.355E-02 	 Total distance: 8.355E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([130], dtype=int64), array([[False]])]] 	 class: [2 6]
10:08:19,456 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.612E-02 	 Total distance: 8.612E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([93], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:08:19,747 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.709E-01 	 Total distance: 4.570E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([153], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:08:19,747 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:19,747 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 69.08 	 cIDON = [2 6], cIDOFF = [2 6]
10:08:19,747 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:19,748 root DEBUG dOFF/dON = 5.5
10:08:19,748 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.88952165523249, 'dON1': 0.08355183623306782, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.08355183623306782, 'nTON': 1, 'dON': 0.08355183623306782, 'dxOFFAngle': 89.95674673622533, 'dOFF1': 0.4569678582225903, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.4569678582225903, 'nTOFF': 1, 'dOFF': 0.4569678582225903, 'SUCCESS': True}
10:08:19,760 root DEBUG 

=================== Experiment ID #20 	 Dual Point ID: 21 ===================
10:08:19,781 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.774E-08|<1.000E-06)
10:08:19,781 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:20,123 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.015E-02 	 Total distance: 4.015E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([53], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:20,427 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.668E-01 	 Total distance: 3.070E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([168], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:20,790 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.665E-01 	 Total distance: 1.273E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([45], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:21,194 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.495E-01 	 Total distance: 4.495E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([5], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:21,194 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:21,195 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -47.82 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:21,195 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:21,195 root DEBUG dOFF/dON = 0.4
10:08:21,195 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.95737237288502, 'dON1': 1.2734506680927775, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 1.2734506680927775, 'nTON': 1, 'dON': 1.2734506680927775, 'dxOFFAngle': 89.934730019285, 'dOFF1': 0.4495420821337238, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.4495420821337238, 'nTOFF': 1, 'dOFF': 0.4495420821337238, 'SUCCESS': False}
10:08:21,201 root DEBUG 

=================== Experiment ID #21 	 Dual Point ID: 22 ===================
10:08:21,212 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.440E-08|<1.000E-06)
10:08:21,212 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:21,568 root DEBUG Side: ON	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.840E-01 	 Total distance: 3.840E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([170], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:21,941 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.641E-01 	 Total distance: 7.641E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([45], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:22,250 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.596E-01 	 Total distance: 1.324E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([33], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:22,540 root DEBUG Side: OFF	 Angle(dx0, dx): 0.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.216E-01 	 Total distance: 1.545E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([29], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:22,540 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:22,540 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 60.20 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:22,541 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:22,541 root DEBUG dOFF/dON = 4.0
10:08:22,541 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.16016005698278, 'dON1': 0.38396174003375505, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.38396174003375505, 'nTON': 1, 'dON': 0.38396174003375505, 'dxOFFAngle': 88.14732799467852, 'dOFF1': 1.5452536293112324, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 1.5452536293112324, 'nTOFF': 1, 'dOFF': 1.5452536293112324, 'SUCCESS': True}
10:08:22,555 root DEBUG 

=================== Experiment ID #22 	 Dual Point ID: 23 ===================
10:08:22,568 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.527E-08|<1.000E-06)
10:08:22,568 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:22,960 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.876E-03 	 Total distance: 3.876E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([3], dtype=int64), array([[ True]])]] 	 class: [7 8]
10:08:23,200 root DEBUG Side: ON	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.753E-02 	 Total distance: 1.014E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([8], dtype=int64), array([[ True]])]] 	 class: [7 8]
10:08:23,530 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.387E-01 	 Total distance: 3.387E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([103], dtype=int64), array([[ True]])]] 	 class: [7 8]
10:08:23,530 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:23,530 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 53.92 	 cIDON = [7 8], cIDOFF = [7 8]
10:08:23,531 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:23,531 root DEBUG dOFF/dON = 3.3
10:08:23,531 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.82786515335907, 'dON1': 0.10140641117338227, 'cIDON1': array([7, 8], dtype=int64), 'dON_patch_1': 0.10140641117338227, 'nTON': 1, 'dON': 0.10140641117338227, 'dxOFFAngle': 88.68606651127017, 'dOFF1': 0.3387059204638236, 'cIDOFF1': array([7, 8], dtype=int64), 'dOFF_patch_1': 0.3387059204638236, 'nTOFF': 1, 'dOFF': 0.3387059204638236, 'SUCCESS': True}
10:08:23,541 root DEBUG 

=================== Experiment ID #23 	 Dual Point ID: 24 ===================
10:08:23,552 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.063E-08|<1.000E-06)
10:08:23,553 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:23,923 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.616E-01 	 Total distance: 1.616E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([62], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:08:24,345 root DEBUG Side: OFF	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.164E-01 	 Total distance: 5.164E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([42], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:08:24,346 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:24,346 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 52.32 	 cIDON = [4 8], cIDOFF = [4 8]
10:08:24,346 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:24,346 root DEBUG dOFF/dON = 3.2
10:08:24,346 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.50080358670229, 'dON1': 0.1616480121010055, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.1616480121010055, 'nTON': 1, 'dON': 0.1616480121010055, 'dxOFFAngle': 88.31640827988929, 'dOFF1': 0.5164384959510107, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.5164384959510107, 'nTOFF': 1, 'dOFF': 0.5164384959510107, 'SUCCESS': True}
10:08:24,359 root DEBUG 

=================== Experiment ID #24 	 Dual Point ID: 25 ===================
10:08:24,370 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.158E-08|<1.000E-06)
10:08:24,370 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:24,733 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.602E+00 	 Total distance: 1.602E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([43], dtype=int64), array([[False]])]] 	 class: [2 5]
10:08:25,37 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.370E-01 	 Total distance: 1.370E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([230], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:08:25,38 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:25,38 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -84.24 	 cIDON = [2 5], cIDOFF = [2 5]
10:08:25,38 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:25,38 root DEBUG dOFF/dON = 0.1
10:08:25,38 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.54231291851337, 'dON1': 1.6020889638570475, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 1.6020889638570475, 'nTON': 1, 'dON': 1.6020889638570475, 'dxOFFAngle': 89.35767573091486, 'dOFF1': 0.13700581257748456, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.13700581257748456, 'nTOFF': 1, 'dOFF': 0.13700581257748456, 'SUCCESS': False}
10:08:25,47 root DEBUG 

=================== Experiment ID #25 	 Dual Point ID: 26 ===================
10:08:25,55 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.312E-08|<1.000E-06)
10:08:25,55 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:25,347 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.372E-01 	 Total distance: 9.372E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([85], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:25,589 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.666E-01 	 Total distance: 1.104E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([159], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:25,985 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.381E-02 	 Total distance: 3.381E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([232], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:26,284 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.161E-02 	 Total distance: 9.542E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([159], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:26,284 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:26,285 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -84.09 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:26,285 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:26,285 root DEBUG dOFF/dON = 0.1
10:08:26,285 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.44396619097861, 'dON1': 1.103786585040222, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 1.103786585040222, 'nTON': 1, 'dON': 1.103786585040222, 'dxOFFAngle': 89.16803816412842, 'dOFF1': 0.09541801392814943, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.09541801392814943, 'nTOFF': 1, 'dOFF': 0.09541801392814943, 'SUCCESS': False}
10:08:26,299 root DEBUG 

=================== Experiment ID #26 	 Dual Point ID: 27 ===================
10:08:26,310 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.766E-08|<1.000E-06)
10:08:26,310 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:26,683 root DEBUG Side: ON	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.459E-01 	 Total distance: 4.459E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([217], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:27,45 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.881E+00 	 Total distance: 1.881E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([171], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:27,346 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.302E-01 	 Total distance: 2.311E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([248], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:27,346 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:27,346 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 67.65 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:27,346 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:27,347 root DEBUG dOFF/dON = 5.2
10:08:27,347 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.54724607670082, 'dON1': 0.44586479763270037, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.44586479763270037, 'nTON': 1, 'dON': 0.44586479763270037, 'dxOFFAngle': 89.84324934264177, 'dOFF1': 2.3107499801412525, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 2.3107499801412525, 'nTOFF': 1, 'dOFF': 2.3107499801412525, 'SUCCESS': True}
10:08:27,358 root DEBUG 

=================== Experiment ID #27 	 Dual Point ID: 28 ===================
10:08:27,369 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.532E-08|<1.000E-06)
10:08:27,369 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:27,674 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.546E-01 	 Total distance: 3.546E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([63], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:27,900 root DEBUG Side: ON	 Angle(dx0, dx): 1.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.453E-01 	 Total distance: 6.999E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([27], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:28,219 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.770E-01 	 Total distance: 8.770E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([13], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:28,389 root DEBUG Side: OFF	 Angle(dx0, dx): 0.85 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.885E-02 	 Total distance: 9.458E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([56], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:28,389 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:28,389 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 14.94 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:28,389 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:28,389 root DEBUG dOFF/dON = 1.4
10:08:28,389 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.20636190029384, 'dON1': 0.699909686724578, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.699909686724578, 'nTON': 1, 'dON': 0.699909686724578, 'dxOFFAngle': 89.4809622524761, 'dOFF1': 0.9458445277423628, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.9458445277423628, 'nTOFF': 1, 'dOFF': 0.9458445277423628, 'SUCCESS': True}
10:08:28,401 root DEBUG 

=================== Experiment ID #28 	 Dual Point ID: 29 ===================
10:08:28,410 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.092E-08|<1.000E-06)
10:08:28,410 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:28,795 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.483E-01 	 Total distance: 1.483E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([74], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:28,992 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.965E-01 	 Total distance: 4.447E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([14], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:29,253 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.881E-02 	 Total distance: 5.881E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([16], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:29,253 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:29,254 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -76.64 	 cIDON = [3 7], cIDOFF = [3 7]
10:08:29,254 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:29,254 root DEBUG dOFF/dON = 0.1
10:08:29,255 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.97262586285103, 'dON1': 0.44474421549427556, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.44474421549427556, 'nTON': 1, 'dON': 0.44474421549427556, 'dxOFFAngle': 88.3261604069963, 'dOFF1': 0.058806194916792114, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.058806194916792114, 'nTOFF': 1, 'dOFF': 0.058806194916792114, 'SUCCESS': False}
10:08:29,266 root DEBUG 

=================== Experiment ID #29 	 Dual Point ID: 30 ===================
10:08:29,273 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.167E-08|<1.000E-06)
10:08:29,273 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:29,607 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.369E-01 	 Total distance: 1.369E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([18], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:29,863 root DEBUG Side: ON	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.181E+00 	 Total distance: 1.317E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([65], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:30,134 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.927E-02 	 Total distance: 1.927E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([182], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:30,134 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:30,135 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -97.12 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:30,135 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:30,135 root DEBUG dOFF/dON = 0.0
10:08:30,135 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.4325521907359, 'dON1': 1.3174938004285817, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 1.3174938004285817, 'nTON': 1, 'dON': 1.3174938004285817, 'dxOFFAngle': 89.01983454370558, 'dOFF1': 0.019268503367403135, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.019268503367403135, 'nTOFF': 1, 'dOFF': 0.019268503367403135, 'SUCCESS': False}
10:08:30,147 root DEBUG 

=================== Experiment ID #30 	 Dual Point ID: 31 ===================
10:08:30,157 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.730E-08|<1.000E-06)
10:08:30,157 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:30,468 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.480E-02 	 Total distance: 1.480E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([23], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:08:30,637 root DEBUG Side: ON	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.191E-01 	 Total distance: 5.339E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([103], dtype=int64), array([[False]])]] 	 class: [6 7]
10:08:30,875 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.540E-03 	 Total distance: 3.540E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([222], dtype=int64), array([[False]])]] 	 class: [6 7]
10:08:30,875 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:30,876 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -98.68 	 cIDON = [6 7], cIDOFF = [6 7]
10:08:30,876 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:30,876 root DEBUG dOFF/dON = 0.0
10:08:30,876 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.30002233869126, 'dON1': 0.5338659858668549, 'cIDON1': array([6, 7], dtype=int64), 'dON_patch_1': 0.5338659858668549, 'nTON': 1, 'dON': 0.5338659858668549, 'dxOFFAngle': 89.86913783466808, 'dOFF1': 0.0035396969750900657, 'cIDOFF1': array([6, 7], dtype=int64), 'dOFF_patch_1': 0.0035396969750900657, 'nTOFF': 1, 'dOFF': 0.0035396969750900657, 'SUCCESS': False}
10:08:30,886 root DEBUG 

=================== Experiment ID #31 	 Dual Point ID: 32 ===================
10:08:30,896 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.136E-08|<1.000E-06)
10:08:30,896 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:31,94 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.024E-03 	 Total distance: 4.024E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([28], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:31,415 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.561E-01 	 Total distance: 6.561E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([138], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:31,596 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.853E-01 	 Total distance: 1.241E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([67], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:31,794 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.477E+00 	 Total distance: 2.718E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([10], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:31,794 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:31,794 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.70 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:31,794 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:31,794 root DEBUG dOFF/dON = 675.5
10:08:31,794 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.4525097569029, 'dON1': 0.004023937496049274, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.004023937496049274, 'nTON': 1, 'dON': 0.004023937496049274, 'dxOFFAngle': 89.37221401159765, 'dOFF1': 2.7182617185510116, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 2.7182617185510116, 'nTOFF': 1, 'dOFF': 2.7182617185510116, 'SUCCESS': True}
10:08:31,802 root DEBUG 

=================== Experiment ID #32 	 Dual Point ID: 33 ===================
10:08:31,817 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.708E-08|<1.000E-06)
10:08:31,817 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:32,148 root DEBUG Side: ON	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.432E-01 	 Total distance: 5.432E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([58], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:32,515 root DEBUG Side: OFF	 Angle(dx0, dx): 1.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.802E-01 	 Total distance: 2.802E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([2, 3], dtype=int64), array([[0.],
       [1.]])]] 	 class: [3 7]
10:08:32,516 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:32,517 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -31.95 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:32,517 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:32,517 root DEBUG dOFF/dON = 0.5
10:08:32,517 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.47443996871861, 'dON1': 0.5431749854682408, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.5431749854682408, 'nTON': 1, 'dON': 0.5431749854682408, 'dxOFFAngle': 89.08609890042949, 'dOFF1': 0.2801601012437821, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.2801601012437821, 'nTOFF': 1, 'dOFF': 0.2801601012437821, 'SUCCESS': False}
10:08:32,529 root DEBUG 

=================== Experiment ID #33 	 Dual Point ID: 34 ===================
10:08:32,538 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.922E-08|<1.000E-06)
10:08:32,538 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:32,880 root DEBUG Side: ON	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.736E-01 	 Total distance: 2.736E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([135], dtype=int64), array([[False]])]] 	 class: [4 7]
10:08:33,165 root DEBUG Side: OFF	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.195E-01 	 Total distance: 1.195E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([229], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:08:33,165 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:33,165 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -39.21 	 cIDON = [4 7], cIDOFF = [4 7]
10:08:33,165 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:33,165 root DEBUG dOFF/dON = 0.4
10:08:33,166 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.15535808765243, 'dON1': 0.27363992589322894, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.27363992589322894, 'nTON': 1, 'dON': 0.27363992589322894, 'dxOFFAngle': 89.24967054567381, 'dOFF1': 0.11948990219638575, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.11948990219638575, 'nTOFF': 1, 'dOFF': 0.11948990219638575, 'SUCCESS': False}
10:08:33,172 root DEBUG 

=================== Experiment ID #34 	 Dual Point ID: 35 ===================
10:08:33,182 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.487E-08|<1.000E-06)
10:08:33,182 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:33,470 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.708E-01 	 Total distance: 1.708E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([166], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:33,648 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.742E-01 	 Total distance: 5.449E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([13], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:33,987 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.103E-01 	 Total distance: 3.103E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([202], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:34,243 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.040E-01 	 Total distance: 1.014E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([47], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:34,243 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:34,243 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 30.10 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:34,243 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:34,243 root DEBUG dOFF/dON = 1.9
10:08:34,243 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.7542134086204, 'dON1': 0.5449430663499815, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.5449430663499815, 'nTON': 1, 'dON': 0.5449430663499815, 'dxOFFAngle': 88.97226468088336, 'dOFF1': 1.0142568327364174, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 1.0142568327364174, 'nTOFF': 1, 'dOFF': 1.0142568327364174, 'SUCCESS': True}
10:08:34,256 root DEBUG 

=================== Experiment ID #35 	 Dual Point ID: 36 ===================
10:08:34,262 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.615E-07|<1.000E-06)
10:08:34,262 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:34,584 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.541E-01 	 Total distance: 9.541E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([63], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:34,824 root DEBUG Side: ON	 Angle(dx0, dx): 0.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.391E-01 	 Total distance: 1.593E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([17], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:35,87 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.016E+00 	 Total distance: 2.016E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([82], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:35,346 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.752E-01 	 Total distance: 2.191E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([213], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:35,347 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:35,347 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 15.80 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:35,347 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:35,347 root DEBUG dOFF/dON = 1.4
10:08:35,347 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.7939383937422, 'dON1': 1.5932047189633787, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 1.5932047189633787, 'nTON': 1, 'dON': 1.5932047189633787, 'dxOFFAngle': 89.72299699659983, 'dOFF1': 2.1910294598915705, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 2.1910294598915705, 'nTOFF': 1, 'dOFF': 2.1910294598915705, 'SUCCESS': True}
10:08:35,357 root DEBUG 

=================== Experiment ID #36 	 Dual Point ID: 37 ===================
10:08:35,366 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.523E-08|<1.000E-06)
10:08:35,367 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:35,631 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.770E-01 	 Total distance: 3.770E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([10], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:35,990 root DEBUG Side: OFF	 Angle(dx0, dx): 1.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.205E-01 	 Total distance: 1.205E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([10], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:35,991 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:35,991 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -51.55 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:35,991 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:35,992 root DEBUG dOFF/dON = 0.3
10:08:35,992 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.4522199861578, 'dON1': 0.37702458052346083, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.37702458052346083, 'nTON': 1, 'dON': 0.37702458052346083, 'dxOFFAngle': 88.22497645141333, 'dOFF1': 0.12054759896508188, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.12054759896508188, 'nTOFF': 1, 'dOFF': 0.12054759896508188, 'SUCCESS': False}
10:08:36,2 root DEBUG 

=================== Experiment ID #37 	 Dual Point ID: 38 ===================
10:08:36,13 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.367E-09|<1.000E-06)
10:08:36,14 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:36,390 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.641E-01 	 Total distance: 7.641E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([56], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:36,676 root DEBUG Side: OFF	 Angle(dx0, dx): 0.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.267E-01 	 Total distance: 8.267E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([40], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:36,677 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:36,677 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 3.94 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:36,677 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:36,677 root DEBUG dOFF/dON = 1.1
10:08:36,677 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.61719144601489, 'dON1': 0.7640953867401967, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.7640953867401967, 'nTON': 1, 'dON': 0.7640953867401967, 'dxOFFAngle': 88.78775235291697, 'dOFF1': 0.8267180391328789, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.8267180391328789, 'nTOFF': 1, 'dOFF': 0.8267180391328789, 'SUCCESS': True}
10:08:36,688 root DEBUG 

=================== Experiment ID #38 	 Dual Point ID: 39 ===================
10:08:36,701 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.458E-09|<1.000E-06)
10:08:36,702 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:37,21 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.007E+00 	 Total distance: 1.007E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([190], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:37,372 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.603E-01 	 Total distance: 6.603E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([27], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:37,373 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:37,373 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -20.79 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:37,373 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:37,373 root DEBUG dOFF/dON = 0.7
10:08:37,373 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.20722585967039, 'dON1': 1.0069950128379568, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 1.0069950128379568, 'nTON': 1, 'dON': 1.0069950128379568, 'dxOFFAngle': 89.2391751699113, 'dOFF1': 0.6603221329775357, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.6603221329775357, 'nTOFF': 1, 'dOFF': 0.6603221329775357, 'SUCCESS': False}
10:08:37,384 root DEBUG 

=================== Experiment ID #39 	 Dual Point ID: 40 ===================
10:08:37,396 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.036E-08|<1.000E-06)
10:08:37,397 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:37,817 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.280E+00 	 Total distance: 1.280E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([156], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:38,37 root DEBUG Side: ON	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.005E-02 	 Total distance: 1.320E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([43], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:38,273 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.790E-01 	 Total distance: 2.790E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([78], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:38,489 root DEBUG Side: OFF	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.697E-01 	 Total distance: 8.487E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([43], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:38,489 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:38,489 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -21.73 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:38,489 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:38,489 root DEBUG dOFF/dON = 0.6
10:08:38,489 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.88018691411364, 'dON1': 1.320064748619199, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 1.320064748619199, 'nTON': 1, 'dON': 1.320064748619199, 'dxOFFAngle': 89.80517523388268, 'dOFF1': 0.8487326262520665, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.8487326262520665, 'nTOFF': 1, 'dOFF': 0.8487326262520665, 'SUCCESS': False}
10:08:38,496 root DEBUG 

=================== Experiment ID #40 	 Dual Point ID: 41 ===================
10:08:38,503 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.105E-08|<1.000E-06)
10:08:38,503 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:38,790 root DEBUG Side: ON	 Angle(dx0, dx): 1.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.704E-01 	 Total distance: 1.704E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([3, 7], dtype=int64), array([[0.],
       [1.]])]] 	 class: [5 7]
10:08:39,126 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.178E-02 	 Total distance: 4.178E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([54], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:39,126 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:39,127 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -60.61 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:39,127 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:39,127 root DEBUG dOFF/dON = 0.2
10:08:39,127 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.24764059012652, 'dON1': 0.1703529755997294, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.1703529755997294, 'nTON': 1, 'dON': 0.1703529755997294, 'dxOFFAngle': 88.50360953932811, 'dOFF1': 0.04178140628154273, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.04178140628154273, 'nTOFF': 1, 'dOFF': 0.04178140628154273, 'SUCCESS': False}
10:08:39,140 root DEBUG 

=================== Experiment ID #41 	 Dual Point ID: 42 ===================
10:08:39,155 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.512E-09|<1.000E-06)
10:08:39,156 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:39,394 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.268E-01 	 Total distance: 1.268E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([27], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:08:39,649 root DEBUG Side: OFF	 Angle(dx0, dx): 0.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.158E-05 	 Total distance: 1.158E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 9]
10:08:39,649 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:39,650 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.98 	 cIDON = [1 9], cIDOFF = [1 9]
10:08:39,650 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:39,650 root DEBUG dOFF/dON = 0.0
10:08:39,650 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.77447781417456, 'dON1': 0.1268458231028946, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.1268458231028946, 'nTON': 1, 'dON': 0.1268458231028946, 'dxOFFAngle': 89.80199673194204, 'dOFF1': 1.1577134519288257e-05, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 1.1577134519288257e-05, 'nTOFF': 1, 'dOFF': 1.1577134519288257e-05, 'SUCCESS': False}
10:08:39,659 root DEBUG 

=================== Experiment ID #42 	 Dual Point ID: 43 ===================
10:08:39,669 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.088E-08|<1.000E-06)
10:08:39,669 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:39,965 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.027E+00 	 Total distance: 1.027E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([188], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:40,334 root DEBUG Side: OFF	 Angle(dx0, dx): 0.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.293E-01 	 Total distance: 8.293E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([144], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:40,334 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:40,335 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -10.67 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:40,335 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:40,335 root DEBUG dOFF/dON = 0.8
10:08:40,335 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.63243255662199, 'dON1': 1.0274829902055962, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 1.0274829902055962, 'nTON': 1, 'dON': 1.0274829902055962, 'dxOFFAngle': 88.51266974959029, 'dOFF1': 0.8292804856963374, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.8292804856963374, 'nTOFF': 1, 'dOFF': 0.8292804856963374, 'SUCCESS': False}
10:08:40,343 root DEBUG 

=================== Experiment ID #43 	 Dual Point ID: 44 ===================
10:08:40,350 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.657E-08|<1.000E-06)
10:08:40,350 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:40,656 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.639E-03 	 Total distance: 9.639E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([92], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:41,3 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.731E-01 	 Total distance: 2.731E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([205], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:41,285 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.477E-01 	 Total distance: 8.208E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([12], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:41,486 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.572E-01 	 Total distance: 9.780E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([100], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:41,656 root DEBUG Side: OFF	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.089E+00 	 Total distance: 2.067E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([48], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:41,656 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:41,657 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.07 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:41,657 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:41,657 root DEBUG dOFF/dON = 214.4
10:08:41,657 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.29567651802839, 'dON1': 0.009638635183853106, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.009638635183853106, 'nTON': 1, 'dON': 0.009638635183853106, 'dxOFFAngle': 89.04029402350474, 'dOFF1': 2.066844899549219, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 2.066844899549219, 'nTOFF': 1, 'dOFF': 2.066844899549219, 'SUCCESS': True}
10:08:41,670 root DEBUG 

=================== Experiment ID #44 	 Dual Point ID: 45 ===================
10:08:41,678 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.918E-08|<1.000E-06)
10:08:41,679 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:42,6 root DEBUG Side: ON	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.956E-01 	 Total distance: 7.956E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([214], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:08:42,286 root DEBUG Side: OFF	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.618E-06 	 Total distance: 3.618E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 9]
10:08:42,286 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:42,286 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -100.00 	 cIDON = [0 9], cIDOFF = [0 9]
10:08:42,287 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:42,287 root DEBUG dOFF/dON = 0.0
10:08:42,287 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.85715272971488, 'dON1': 0.7956232673663701, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.7956232673663701, 'nTON': 1, 'dON': 0.7956232673663701, 'dxOFFAngle': 89.8405658412064, 'dOFF1': 3.617846940775355e-06, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 3.617846940775355e-06, 'nTOFF': 1, 'dOFF': 3.617846940775355e-06, 'SUCCESS': False}
10:08:42,298 root DEBUG 

=================== Experiment ID #45 	 Dual Point ID: 46 ===================
10:08:42,307 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.237E-07|<1.000E-06)
10:08:42,307 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:42,750 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.280E-01 	 Total distance: 1.280E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([244], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:43,34 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.127E-02 	 Total distance: 1.892E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([49], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:43,224 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.068E-02 	 Total distance: 1.999E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([114], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:43,466 root DEBUG Side: ON	 Angle(dx0, dx): 0.97 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.012E-01 	 Total distance: 4.011E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([148], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:43,758 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.694E-01 	 Total distance: 4.694E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([248], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:43,967 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.134E-01 	 Total distance: 7.828E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([188], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:43,967 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:43,967 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 32.24 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:43,967 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:43,967 root DEBUG dOFF/dON = 2.0
10:08:43,967 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.21846320147823, 'dON1': 0.40111891441897557, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.40111891441897557, 'nTON': 1, 'dON': 0.40111891441897557, 'dxOFFAngle': 89.3102557966331, 'dOFF1': 0.7827674003802065, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.7827674003802065, 'nTOFF': 1, 'dOFF': 0.7827674003802065, 'SUCCESS': True}
10:08:43,974 root DEBUG 

=================== Experiment ID #46 	 Dual Point ID: 47 ===================
10:08:43,986 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.426E-09|<1.000E-06)
10:08:43,986 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:44,276 root DEBUG Side: ON	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.202E-01 	 Total distance: 3.202E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([20], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:44,573 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.173E-02 	 Total distance: 4.173E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([50], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:44,573 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:44,573 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -76.94 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:44,573 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:44,573 root DEBUG dOFF/dON = 0.1
10:08:44,573 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.65213436249681, 'dON1': 0.32016313211933367, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.32016313211933367, 'nTON': 1, 'dON': 0.32016313211933367, 'dxOFFAngle': 89.40978110350427, 'dOFF1': 0.04172668114262028, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.04172668114262028, 'nTOFF': 1, 'dOFF': 0.04172668114262028, 'SUCCESS': False}
10:08:44,580 root DEBUG 

=================== Experiment ID #47 	 Dual Point ID: 48 ===================
10:08:44,589 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.461E-08|<1.000E-06)
10:08:44,589 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:44,890 root DEBUG Side: ON	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.589E-01 	 Total distance: 1.589E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([163], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:08:45,167 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.587E-01 	 Total distance: 4.587E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([76], dtype=int64), array([[False]])]] 	 class: [5 6]
10:08:45,167 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:45,168 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 48.53 	 cIDON = [5 6], cIDOFF = [5 6]
10:08:45,168 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:45,168 root DEBUG dOFF/dON = 2.9
10:08:45,168 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.25641483509102, 'dON1': 0.1589469569182453, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.1589469569182453, 'nTON': 1, 'dON': 0.1589469569182453, 'dxOFFAngle': 89.50164841779899, 'dOFF1': 0.4587108119588523, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.4587108119588523, 'nTOFF': 1, 'dOFF': 0.4587108119588523, 'SUCCESS': True}
10:08:45,177 root DEBUG 

=================== Experiment ID #48 	 Dual Point ID: 49 ===================
10:08:45,190 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.705E-08|<1.000E-06)
10:08:45,190 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:45,439 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.974E-01 	 Total distance: 4.974E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([158], dtype=int64), array([[False]])]] 	 class: [3 4]
10:08:45,697 root DEBUG Side: OFF	 Angle(dx0, dx): 1.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.802E-01 	 Total distance: 2.802E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([18], dtype=int64), array([[False]])]] 	 class: [3 4]
10:08:45,697 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:45,697 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -27.93 	 cIDON = [3 4], cIDOFF = [3 4]
10:08:45,697 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:45,697 root DEBUG dOFF/dON = 0.6
10:08:45,698 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.4641347563829, 'dON1': 0.4973616278926897, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.4973616278926897, 'nTON': 1, 'dON': 0.4973616278926897, 'dxOFFAngle': 89.48503675293335, 'dOFF1': 0.2801943886342352, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.2801943886342352, 'nTOFF': 1, 'dOFF': 0.2801943886342352, 'SUCCESS': False}
10:08:45,706 root DEBUG 

=================== Experiment ID #49 	 Dual Point ID: 50 ===================
10:08:45,717 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.889E-08|<1.000E-06)
10:08:45,717 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:46,34 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.480E-01 	 Total distance: 3.480E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([152], dtype=int64), array([[False]])]] 	 class: [2 8]
10:08:46,215 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.437E-02 	 Total distance: 4.324E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([9], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:08:46,440 root DEBUG Side: ON	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.477E-01 	 Total distance: 5.801E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([189], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:08:46,749 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.406E-01 	 Total distance: 3.406E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([232], dtype=int64), array([[False]])]] 	 class: [2 8]
10:08:46,923 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.957E-01 	 Total distance: 1.036E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([202], dtype=int64), array([[False]])]] 	 class: [2 8]
10:08:47,137 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.158E-01 	 Total distance: 1.252E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([10], dtype=int64), array([[False]])]] 	 class: [2 8]
10:08:47,296 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.578E-01 	 Total distance: 1.410E+00 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([196], dtype=int64), array([[False]])]] 	 class: [2 8]
10:08:47,550 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.582E-01 	 Total distance: 2.068E+00 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([208], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:08:47,756 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.717E-03 	 Total distance: 2.078E+00 	 Future toggles: 0 	 Past toggles: 6 	 Toggled: [[1, array([154], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:08:47,929 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.816E-01 	 Total distance: 2.259E+00 	 Future toggles: 0 	 Past toggles: 7 	 Toggled: [[1, array([5], dtype=int64), array([[False]])]] 	 class: [2 8]
10:08:48,178 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.918E-01 	 Total distance: 2.551E+00 	 Future toggles: 0 	 Past toggles: 8 	 Toggled: [[1, array([248], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:08:48,342 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.329E-01 	 Total distance: 2.884E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([6], dtype=int64), array([[False]])]] 	 class: [2 8]
10:08:48,342 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:48,343 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 66.51 	 cIDON = [2 8], cIDOFF = [2 8]
10:08:48,343 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:48,343 root DEBUG dOFF/dON = 5.0
10:08:48,343 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.47651933168, 'dON1': 0.5801087797401353, 'cIDON1': array([2, 8], dtype=int64), 'dON_patch_1': 0.5801087797401353, 'nTON': 1, 'dON': 0.5801087797401353, 'dxOFFAngle': 89.83613243451292, 'dOFF1': 2.8841008563448702, 'cIDOFF1': array([2, 8], dtype=int64), 'dOFF_patch_1': 2.8841008563448702, 'nTOFF': 1, 'dOFF': 2.8841008563448702, 'SUCCESS': True}
10:08:48,357 root DEBUG 

=================== Experiment ID #50 	 Dual Point ID: 51 ===================
10:08:48,364 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.582E-09|<1.000E-06)
10:08:48,365 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:48,698 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.900E-01 	 Total distance: 6.900E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([72], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:48,936 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.920E-01 	 Total distance: 2.920E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([53], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:49,132 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.088E-01 	 Total distance: 4.008E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([18], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:49,360 root DEBUG Side: OFF	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.105E-01 	 Total distance: 1.111E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([43], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:49,582 root DEBUG Side: OFF	 Angle(dx0, dx): 0.85 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.471E-01 	 Total distance: 1.858E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([252], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:49,582 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:49,582 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 45.85 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:49,583 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:49,583 root DEBUG dOFF/dON = 2.7
10:08:49,583 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.59706767641725, 'dON1': 0.6900058181601552, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.6900058181601552, 'nTON': 1, 'dON': 0.6900058181601552, 'dxOFFAngle': 89.35378308178441, 'dOFF1': 1.8584198034369346, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 1.8584198034369346, 'nTOFF': 1, 'dOFF': 1.8584198034369346, 'SUCCESS': True}
10:08:49,595 root DEBUG 

=================== Experiment ID #51 	 Dual Point ID: 52 ===================
10:08:49,605 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.190E-09|<1.000E-06)
10:08:49,605 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:50,89 root DEBUG Side: ON	 Angle(dx0, dx): 0.89 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.621E+00 	 Total distance: 2.621E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([48], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:08:50,418 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.030E-01 	 Total distance: 5.030E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([85], dtype=int64), array([[False]])]] 	 class: [3 9]
10:08:50,418 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:50,418 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -67.80 	 cIDON = [3 9], cIDOFF = [3 9]
10:08:50,418 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:50,418 root DEBUG dOFF/dON = 0.2
10:08:50,418 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.89645412159899, 'dON1': 2.620957050967034, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 2.620957050967034, 'nTON': 1, 'dON': 2.620957050967034, 'dxOFFAngle': 88.74806010422785, 'dOFF1': 0.5029633865018796, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.5029633865018796, 'nTOFF': 1, 'dOFF': 0.5029633865018796, 'SUCCESS': False}
10:08:50,426 root DEBUG 

=================== Experiment ID #52 	 Dual Point ID: 53 ===================
10:08:50,435 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.247E-08|<1.000E-06)
10:08:50,435 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:50,751 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.586E-02 	 Total distance: 3.586E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([215], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:50,996 root DEBUG Side: OFF	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.808E-02 	 Total distance: 1.808E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([45], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:50,996 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:50,997 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -32.96 	 cIDON = [3 7], cIDOFF = [3 7]
10:08:50,997 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:50,997 root DEBUG dOFF/dON = 0.5
10:08:50,997 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.52959865390265, 'dON1': 0.035856103508243704, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.035856103508243704, 'nTON': 1, 'dON': 0.035856103508243704, 'dxOFFAngle': 89.53436031624109, 'dOFF1': 0.018081078970268248, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.018081078970268248, 'nTOFF': 1, 'dOFF': 0.018081078970268248, 'SUCCESS': False}
10:08:51,14 root DEBUG 

=================== Experiment ID #53 	 Dual Point ID: 54 ===================
10:08:51,21 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.548E-08|<1.000E-06)
10:08:51,21 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:51,328 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.488E-01 	 Total distance: 8.488E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([192], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:51,540 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.637E-01 	 Total distance: 1.213E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([252], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:51,851 root DEBUG Side: ON	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.531E+00 	 Total distance: 2.743E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([141], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:52,185 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.539E-02 	 Total distance: 9.539E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([48], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:52,486 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.006E-01 	 Total distance: 4.960E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([13], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:52,768 root DEBUG Side: OFF	 Angle(dx0, dx): 0.92 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.291E-01 	 Total distance: 7.251E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([153], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:52,768 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:52,768 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -58.19 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:52,768 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:52,769 root DEBUG dOFF/dON = 0.3
10:08:52,769 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.12279357013475, 'dON1': 2.743286212547523, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 2.743286212547523, 'nTON': 1, 'dON': 2.743286212547523, 'dxOFFAngle': 86.71943691970935, 'dOFF1': 0.7251020475451561, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.7251020475451561, 'nTOFF': 1, 'dOFF': 0.7251020475451561, 'SUCCESS': False}
10:08:52,779 root DEBUG 

=================== Experiment ID #54 	 Dual Point ID: 55 ===================
10:08:52,786 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.036E-08|<1.000E-06)
10:08:52,787 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:53,156 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.372E-01 	 Total distance: 3.372E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([149], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:53,553 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.722E-01 	 Total distance: 3.722E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([175], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:53,746 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.727E-01 	 Total distance: 1.345E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([35], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:53,746 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:53,746 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 59.91 	 cIDON = [3 7], cIDOFF = [3 7]
10:08:53,747 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:53,747 root DEBUG dOFF/dON = 4.0
10:08:53,747 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.92384263596533, 'dON1': 0.3372025871894688, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.3372025871894688, 'nTON': 1, 'dON': 0.3372025871894688, 'dxOFFAngle': 89.96545720213192, 'dOFF1': 1.3449208274299225, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 1.3449208274299225, 'nTOFF': 1, 'dOFF': 1.3449208274299225, 'SUCCESS': True}
10:08:53,759 root DEBUG 

=================== Experiment ID #55 	 Dual Point ID: 56 ===================
10:08:53,769 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.219E-08|<1.000E-06)
10:08:53,769 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:54,0 root DEBUG Side: ON	 Angle(dx0, dx): 1.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.618E-06 	 Total distance: 3.618E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 9]
10:08:54,367 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.199E-01 	 Total distance: 3.199E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([2], dtype=int64), array([[False]])]] 	 class: [1 9]
10:08:54,367 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:54,367 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [1 9], cIDOFF = [1 9]
10:08:54,367 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:54,367 root DEBUG dOFF/dON = 88407.5
10:08:54,367 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.12994012390959, 'dON1': 3.6182501041485636e-06, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 3.6182501041485636e-06, 'nTON': 1, 'dON': 3.6182501041485636e-06, 'dxOFFAngle': 89.27653155408017, 'dOFF1': 0.3198802807121485, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.3198802807121485, 'nTOFF': 1, 'dOFF': 0.3198802807121485, 'SUCCESS': True}
10:08:54,374 root DEBUG 

=================== Experiment ID #56 	 Dual Point ID: 57 ===================
10:08:54,382 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.620E-08|<1.000E-06)
10:08:54,383 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:54,774 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.665E-01 	 Total distance: 8.665E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([165], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:55,30 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.736E+00 	 Total distance: 2.603E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([83], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:55,278 root DEBUG Side: ON	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.371E-01 	 Total distance: 3.540E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([12], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:55,612 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.427E-01 	 Total distance: 6.427E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([45], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:55,612 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:55,613 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -69.27 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:55,613 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:55,613 root DEBUG dOFF/dON = 0.2
10:08:55,613 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.81692909936075, 'dON1': 3.5400589057826144, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 3.5400589057826144, 'nTON': 1, 'dON': 3.5400589057826144, 'dxOFFAngle': 89.74219511391762, 'dOFF1': 0.6427261040581653, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.6427261040581653, 'nTOFF': 1, 'dOFF': 0.6427261040581653, 'SUCCESS': False}
10:08:55,624 root DEBUG 

=================== Experiment ID #57 	 Dual Point ID: 58 ===================
10:08:55,635 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.994E-08|<1.000E-06)
10:08:55,635 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:56,15 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.528E-01 	 Total distance: 1.528E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([234], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:56,273 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.496E-02 	 Total distance: 2.078E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([87], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:56,524 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.005E-01 	 Total distance: 8.083E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([52], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:56,847 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.304E-01 	 Total distance: 3.304E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([24], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:56,848 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:56,848 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -41.96 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:56,848 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:56,848 root DEBUG dOFF/dON = 0.4
10:08:56,849 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.20768784509397, 'dON1': 0.8082645777795698, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.8082645777795698, 'nTON': 1, 'dON': 0.8082645777795698, 'dxOFFAngle': 89.281821786444, 'dOFF1': 0.3304469821002301, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.3304469821002301, 'nTOFF': 1, 'dOFF': 0.3304469821002301, 'SUCCESS': False}
10:08:56,859 root DEBUG 

=================== Experiment ID #58 	 Dual Point ID: 59 ===================
10:08:56,869 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.261E-09|<1.000E-06)
10:08:56,869 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:57,173 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.298E-01 	 Total distance: 3.298E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([161], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:57,473 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.073E-01 	 Total distance: 1.073E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([32], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:57,473 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:57,474 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -50.90 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:57,474 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:57,474 root DEBUG dOFF/dON = 0.3
10:08:57,474 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.69537877793964, 'dON1': 0.32982584809142196, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.32982584809142196, 'nTON': 1, 'dON': 0.32982584809142196, 'dxOFFAngle': 89.81060616577571, 'dOFF1': 0.10731636462327479, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.10731636462327479, 'nTOFF': 1, 'dOFF': 0.10731636462327479, 'SUCCESS': False}
10:08:57,488 root DEBUG 

=================== Experiment ID #59 	 Dual Point ID: 60 ===================
10:08:57,497 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.912E-08|<1.000E-06)
10:08:57,497 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:57,793 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.062E-01 	 Total distance: 1.062E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([10], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:57,922 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.430E-01 	 Total distance: 2.492E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([141], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:58,237 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.872E+00 	 Total distance: 2.872E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([153], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:58,491 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.462E-01 	 Total distance: 3.418E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([36], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:58,492 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:58,492 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 86.41 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:58,492 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:58,492 root DEBUG dOFF/dON = 13.7
10:08:58,492 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.74080825780314, 'dON1': 0.24918023765265698, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.24918023765265698, 'nTON': 1, 'dON': 0.24918023765265698, 'dxOFFAngle': 89.95371200907782, 'dOFF1': 3.4184825946566613, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 3.4184825946566613, 'nTOFF': 1, 'dOFF': 3.4184825946566613, 'SUCCESS': True}
10:08:58,503 root DEBUG 

=================== Experiment ID #60 	 Dual Point ID: 61 ===================
10:08:58,515 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.501E-09|<1.000E-06)
10:08:58,515 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:58,744 root DEBUG Side: ON	 Angle(dx0, dx): 1.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.448E-06 	 Total distance: 1.448E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 2]
10:08:59,11 root DEBUG Side: OFF	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.785E-02 	 Total distance: 8.785E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([84], dtype=int64), array([[False]])]] 	 class: [0 2]
10:08:59,12 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:59,12 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [0 2], cIDOFF = [0 2]
10:08:59,12 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:59,12 root DEBUG dOFF/dON = 60679.4
10:08:59,12 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.36570745931373, 'dON1': 1.4477220716176196e-06, 'cIDON1': array([0, 2], dtype=int64), 'dON_patch_1': 1.4477220716176196e-06, 'nTON': 1, 'dON': 1.4477220716176196e-06, 'dxOFFAngle': 88.98379865895203, 'dOFF1': 0.08784684093591182, 'cIDOFF1': array([0, 2], dtype=int64), 'dOFF_patch_1': 0.08784684093591182, 'nTOFF': 1, 'dOFF': 0.08784684093591182, 'SUCCESS': True}
10:08:59,25 root DEBUG 

=================== Experiment ID #61 	 Dual Point ID: 62 ===================
10:08:59,36 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.190E-08|<1.000E-06)
10:08:59,36 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:59,386 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.083E-01 	 Total distance: 1.083E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([176], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:59,676 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.080E-02 	 Total distance: 6.080E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([105], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:59,873 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.929E-01 	 Total distance: 7.537E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([115], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:59,874 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:59,874 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 74.86 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:59,874 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:59,874 root DEBUG dOFF/dON = 7.0
10:08:59,874 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.89327934201116, 'dON1': 0.10833764227313451, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.10833764227313451, 'nTON': 1, 'dON': 0.10833764227313451, 'dxOFFAngle': 89.97506491397698, 'dOFF1': 0.7536713070054717, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.7536713070054717, 'nTOFF': 1, 'dOFF': 0.7536713070054717, 'SUCCESS': True}
10:08:59,886 root DEBUG 

=================== Experiment ID #62 	 Dual Point ID: 63 ===================
10:08:59,898 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.690E-08|<1.000E-06)
10:08:59,899 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:00,270 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.159E-01 	 Total distance: 3.159E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([79], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:00,426 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.851E-01 	 Total distance: 1.201E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([111], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:00,743 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.113E+00 	 Total distance: 2.113E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([61], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:01,21 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.116E-01 	 Total distance: 2.224E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([12], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:01,21 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:01,22 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 29.88 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:01,22 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:01,22 root DEBUG dOFF/dON = 1.9
10:09:01,22 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.42668779405201, 'dON1': 1.2009606666191903, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 1.2009606666191903, 'nTON': 1, 'dON': 1.2009606666191903, 'dxOFFAngle': 89.64468881484788, 'dOFF1': 2.224447117153536, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 2.224447117153536, 'nTOFF': 1, 'dOFF': 2.224447117153536, 'SUCCESS': True}
10:09:01,36 root DEBUG 

=================== Experiment ID #63 	 Dual Point ID: 64 ===================
10:09:01,44 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.014E-08|<1.000E-06)
10:09:01,45 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:01,264 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.332E-02 	 Total distance: 9.332E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([63], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:01,488 root DEBUG Side: ON	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.759E-01 	 Total distance: 4.693E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([58], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:01,660 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.686E-01 	 Total distance: 7.379E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([0], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:01,928 root DEBUG Side: ON	 Angle(dx0, dx): 0.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.130E+00 	 Total distance: 1.867E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([169], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:02,208 root DEBUG Side: OFF	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.224E-01 	 Total distance: 1.224E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([8], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:02,208 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:02,209 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -87.69 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:02,209 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:02,209 root DEBUG dOFF/dON = 0.1
10:09:02,209 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.35175796370685, 'dON1': 1.8674906072673252, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 1.8674906072673252, 'nTON': 1, 'dON': 1.8674906072673252, 'dxOFFAngle': 87.24472989632449, 'dOFF1': 0.12244166510251502, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.12244166510251502, 'nTOFF': 1, 'dOFF': 0.12244166510251502, 'SUCCESS': False}
10:09:02,220 root DEBUG 

=================== Experiment ID #64 	 Dual Point ID: 65 ===================
10:09:02,229 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.902E-09|<1.000E-06)
10:09:02,229 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:02,596 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.886E-01 	 Total distance: 4.886E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([124], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:02,876 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.565E-02 	 Total distance: 4.565E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([60], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:03,30 root DEBUG Side: OFF	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.560E-01 	 Total distance: 6.016E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([40], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:03,30 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:03,30 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 10.37 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:03,30 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:03,30 root DEBUG dOFF/dON = 1.2
10:09:03,30 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.98114143018499, 'dON1': 0.4885724457332502, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.4885724457332502, 'nTON': 1, 'dON': 0.4885724457332502, 'dxOFFAngle': 89.78184959682801, 'dOFF1': 0.6016357451328843, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.6016357451328843, 'nTOFF': 1, 'dOFF': 0.6016357451328843, 'SUCCESS': True}
10:09:03,41 root DEBUG 

=================== Experiment ID #65 	 Dual Point ID: 66 ===================
10:09:03,50 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.108E-08|<1.000E-06)
10:09:03,50 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:03,339 root DEBUG Side: ON	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.256E-05 	 Total distance: 3.256E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 9]
10:09:03,616 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.220E-01 	 Total distance: 4.220E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([4], dtype=int64), array([[False]])]] 	 class: [1 9]
10:09:03,616 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:03,616 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.98 	 cIDON = [1 9], cIDOFF = [1 9]
10:09:03,616 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:03,616 root DEBUG dOFF/dON = 12958.5
10:09:03,616 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.29424993376284, 'dON1': 3.2562966679482614e-05, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 3.2562966679482614e-05, 'nTON': 1, 'dON': 3.2562966679482614e-05, 'dxOFFAngle': 89.43843409051314, 'dOFF1': 0.4219659518878557, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.4219659518878557, 'nTOFF': 1, 'dOFF': 0.4219659518878557, 'SUCCESS': True}
10:09:03,623 root DEBUG 

=================== Experiment ID #66 	 Dual Point ID: 67 ===================
10:09:03,632 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.206E-08|<1.000E-06)
10:09:03,633 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:03,971 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.155E-01 	 Total distance: 1.155E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([15], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:04,234 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.189E-01 	 Total distance: 5.189E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([143], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:04,466 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.178E-01 	 Total distance: 6.367E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([111], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:04,466 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:04,466 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 69.30 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:04,467 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:04,467 root DEBUG dOFF/dON = 5.5
10:09:04,467 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.02230242798294, 'dON1': 0.11545172728774665, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.11545172728774665, 'nTON': 1, 'dON': 0.11545172728774665, 'dxOFFAngle': 89.12732513081457, 'dOFF1': 0.6367206199545081, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.6367206199545081, 'nTOFF': 1, 'dOFF': 0.6367206199545081, 'SUCCESS': True}
10:09:04,473 root DEBUG 

=================== Experiment ID #67 	 Dual Point ID: 68 ===================
10:09:04,484 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.640E-09|<1.000E-06)
10:09:04,484 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:04,799 root DEBUG Side: ON	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.099E-01 	 Total distance: 1.099E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([17], dtype=int64), array([[ True]])]] 	 class: [1 4]
10:09:05,131 root DEBUG Side: OFF	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.933E-02 	 Total distance: 8.933E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([30], dtype=int64), array([[ True]])]] 	 class: [0 4]
10:09:05,295 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.899E-02 	 Total distance: 1.683E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([93], dtype=int64), array([[ True]])]] 	 class: [0 4]
10:09:05,496 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.362E-01 	 Total distance: 7.045E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([98], dtype=int64), array([[False]])]] 	 class: [0 4]
10:09:05,497 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:05,497 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 73.00 	 cIDON = [1 4], cIDOFF = [0 4]
10:09:05,498 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:05,498 root DEBUG dOFF/dON = 6.4
10:09:05,498 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.0699067491127, 'dON1': 0.10994016820203022, 'cIDON1': array([1, 4], dtype=int64), 'dON_patch_1': 0.10994016820203022, 'nTON': 1, 'dON': 0.10994016820203022, 'dxOFFAngle': 89.1610483703492, 'dOFF1': 0.704546589350757, 'cIDOFF1': array([0, 4], dtype=int64), 'dOFF_patch_1': 0.704546589350757, 'nTOFF': 1, 'dOFF': 0.704546589350757, 'SUCCESS': True}
10:09:05,506 root DEBUG 

=================== Experiment ID #68 	 Dual Point ID: 69 ===================
10:09:05,516 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.771E-08|<1.000E-06)
10:09:05,516 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:05,835 root DEBUG Side: ON	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.675E-01 	 Total distance: 7.675E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([31], dtype=int64), array([[False]])]] 	 class: [5 6]
10:09:06,118 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.481E-03 	 Total distance: 7.481E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([76], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:09:06,118 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:06,118 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -98.07 	 cIDON = [5 6], cIDOFF = [5 6]
10:09:06,118 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:06,118 root DEBUG dOFF/dON = 0.0
10:09:06,118 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.44516110206791, 'dON1': 0.767465028006981, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.767465028006981, 'nTON': 1, 'dON': 0.767465028006981, 'dxOFFAngle': 88.30854516238864, 'dOFF1': 0.007480596602393661, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.007480596602393661, 'nTOFF': 1, 'dOFF': 0.007480596602393661, 'SUCCESS': False}
10:09:06,125 root DEBUG 

=================== Experiment ID #69 	 Dual Point ID: 70 ===================
10:09:06,134 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.191E-08|<1.000E-06)
10:09:06,134 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:06,480 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.371E-01 	 Total distance: 2.371E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([83], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:06,842 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.275E-01 	 Total distance: 5.275E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([202], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:06,842 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:06,843 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 37.97 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:06,843 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:06,843 root DEBUG dOFF/dON = 2.2
10:09:06,843 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.83860162636782, 'dON1': 0.23714337760169127, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.23714337760169127, 'nTON': 1, 'dON': 0.23714337760169127, 'dxOFFAngle': 89.84901302656519, 'dOFF1': 0.5275064746399353, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.5275064746399353, 'nTOFF': 1, 'dOFF': 0.5275064746399353, 'SUCCESS': True}
10:09:06,855 root DEBUG 

=================== Experiment ID #70 	 Dual Point ID: 71 ===================
10:09:06,868 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.956E-09|<1.000E-06)
10:09:06,869 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:07,187 root DEBUG Side: ON	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.903E-01 	 Total distance: 2.903E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([63], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:07,463 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.187E-01 	 Total distance: 1.187E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([151], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:07,625 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.955E-01 	 Total distance: 5.142E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([190], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:07,917 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.770E-01 	 Total distance: 6.912E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([137], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:08,178 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.256E-01 	 Total distance: 8.168E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([243], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:08,386 root DEBUG Side: OFF	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.997E-02 	 Total distance: 8.868E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([82], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:08,387 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:08,387 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 50.68 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:08,387 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:08,387 root DEBUG dOFF/dON = 3.1
10:09:08,387 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.38256532418883, 'dON1': 0.2902984247010016, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.2902984247010016, 'nTON': 1, 'dON': 0.2902984247010016, 'dxOFFAngle': 88.56038937890004, 'dOFF1': 0.8868097970204716, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.8868097970204716, 'nTOFF': 1, 'dOFF': 0.8868097970204716, 'SUCCESS': True}
10:09:08,393 root DEBUG 

=================== Experiment ID #71 	 Dual Point ID: 72 ===================
10:09:08,401 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.834E-08|<1.000E-06)
10:09:08,401 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:08,736 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.112E-01 	 Total distance: 8.112E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([1], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:08,916 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.647E-01 	 Total distance: 1.276E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([159], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:09,230 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.919E-01 	 Total distance: 7.919E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([64], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:09:09,405 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.812E-01 	 Total distance: 1.173E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([123], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:09,628 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.587E-01 	 Total distance: 1.832E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([63], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:09,841 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.895E-01 	 Total distance: 2.321E+00 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([14], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:09,972 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.853E-01 	 Total distance: 2.507E+00 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([154], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:09:10,175 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.838E-01 	 Total distance: 2.790E+00 	 Future toggles: 0 	 Past toggles: 6 	 Toggled: [[1, array([83], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:10,447 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.529E-01 	 Total distance: 3.543E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([62], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:10,447 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:10,448 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 47.05 	 cIDON = [7 9], cIDOFF = [7 9]
10:09:10,448 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:10,448 root DEBUG dOFF/dON = 2.8
10:09:10,448 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.35932853935596, 'dON1': 1.275886392484705, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 1.275886392484705, 'nTON': 1, 'dON': 1.275886392484705, 'dxOFFAngle': 88.16734091102403, 'dOFF1': 3.5433251824008782, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 3.5433251824008782, 'nTOFF': 1, 'dOFF': 3.5433251824008782, 'SUCCESS': True}
10:09:10,460 root DEBUG 

=================== Experiment ID #72 	 Dual Point ID: 73 ===================
10:09:10,466 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.354E-08|<1.000E-06)
10:09:10,466 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:10,719 root DEBUG Side: ON	 Angle(dx0, dx): 0.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.759E-03 	 Total distance: 3.759E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([200], dtype=int64), array([[False]])]] 	 class: [4 6]
10:09:10,981 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.395E-01 	 Total distance: 4.395E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([93], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:09:11,200 root DEBUG Side: OFF	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.549E-01 	 Total distance: 7.943E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([6], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:09:11,201 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:11,201 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.06 	 cIDON = [4 6], cIDOFF = [4 6]
10:09:11,201 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:11,201 root DEBUG dOFF/dON = 211.3
10:09:11,201 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.43989318680802, 'dON1': 0.0037590624590329792, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.0037590624590329792, 'nTON': 1, 'dON': 0.0037590624590329792, 'dxOFFAngle': 87.77008035778144, 'dOFF1': 0.7943106284516781, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.7943106284516781, 'nTOFF': 1, 'dOFF': 0.7943106284516781, 'SUCCESS': True}
10:09:11,212 root DEBUG 

=================== Experiment ID #73 	 Dual Point ID: 74 ===================
10:09:11,222 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.423E-09|<1.000E-06)
10:09:11,222 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:11,498 root DEBUG Side: ON	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.891E-02 	 Total distance: 8.891E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([2], dtype=int64), array([[ True]])]] 	 class: [1 4]
10:09:11,927 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.412E-01 	 Total distance: 5.412E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([53], dtype=int64), array([[False]])]] 	 class: [0 4]
10:09:12,182 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.802E-01 	 Total distance: 8.214E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([57], dtype=int64), array([[ True]])]] 	 class: [0 4]
10:09:12,474 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.279E+00 	 Total distance: 2.100E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([143], dtype=int64), array([[ True]])]] 	 class: [0 4]
10:09:12,711 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.637E-01 	 Total distance: 2.364E+00 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([69], dtype=int64), array([[False]])]] 	 class: [0 4]
10:09:12,882 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.016E-01 	 Total distance: 2.965E+00 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([171], dtype=int64), array([[ True]])]] 	 class: [0 4]
10:09:13,99 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.446E-02 	 Total distance: 3.060E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([22], dtype=int64), array([[ True]])]] 	 class: [0 4]
10:09:13,99 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:13,100 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 94.35 	 cIDON = [1 4], cIDOFF = [0 4]
10:09:13,100 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:13,100 root DEBUG dOFF/dON = 34.4
10:09:13,100 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.87740907727175, 'dON1': 0.0889079432894892, 'cIDON1': array([1, 4], dtype=int64), 'dON_patch_1': 0.0889079432894892, 'nTON': 1, 'dON': 0.0889079432894892, 'dxOFFAngle': 89.52020043457695, 'dOFF1': 3.059904870895826, 'cIDOFF1': array([0, 4], dtype=int64), 'dOFF_patch_1': 3.059904870895826, 'nTOFF': 1, 'dOFF': 3.059904870895826, 'SUCCESS': True}
10:09:13,111 root DEBUG 

=================== Experiment ID #74 	 Dual Point ID: 75 ===================
10:09:13,120 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.125E-08|<1.000E-06)
10:09:13,120 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:13,479 root DEBUG Side: ON	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.587E-02 	 Total distance: 6.587E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([25], dtype=int64), array([[False]])]] 	 class: [4 8]
10:09:13,784 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.834E-01 	 Total distance: 3.834E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([53], dtype=int64), array([[False]])]] 	 class: [4 8]
10:09:14,54 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.135E-01 	 Total distance: 5.969E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([40], dtype=int64), array([[False]])]] 	 class: [4 8]
10:09:14,54 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:14,54 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 80.12 	 cIDON = [4 8], cIDOFF = [4 8]
10:09:14,54 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:14,54 root DEBUG dOFF/dON = 9.1
10:09:14,55 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.49570928437143, 'dON1': 0.06587098849281721, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.06587098849281721, 'nTON': 1, 'dON': 0.06587098849281721, 'dxOFFAngle': 89.44452021054317, 'dOFF1': 0.5969323386517743, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.5969323386517743, 'nTOFF': 1, 'dOFF': 0.5969323386517743, 'SUCCESS': True}
10:09:14,65 root DEBUG 

=================== Experiment ID #75 	 Dual Point ID: 76 ===================
10:09:14,76 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.351E-11|<1.000E-06)
10:09:14,76 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:14,365 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.568E-02 	 Total distance: 9.568E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([22], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:14,776 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.538E-01 	 Total distance: 9.538E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([46], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:14,776 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:14,777 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 81.76 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:14,777 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:14,777 root DEBUG dOFF/dON = 10.0
10:09:14,777 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.66888925954991, 'dON1': 0.09568331161451142, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.09568331161451142, 'nTON': 1, 'dON': 0.09568331161451142, 'dxOFFAngle': 88.04024282217951, 'dOFF1': 0.9537577091771448, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.9537577091771448, 'nTOFF': 1, 'dOFF': 0.9537577091771448, 'SUCCESS': True}
10:09:14,792 root DEBUG 

=================== Experiment ID #76 	 Dual Point ID: 77 ===================
10:09:14,801 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.429E-08|<1.000E-06)
10:09:14,802 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:15,169 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.374E-01 	 Total distance: 5.374E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([34], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:09:15,389 root DEBUG Side: ON	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.889E-01 	 Total distance: 8.263E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([22], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:09:15,603 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.671E-01 	 Total distance: 2.671E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([30], dtype=int64), array([[False]])]] 	 class: [3 4]
10:09:15,604 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:15,604 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -51.15 	 cIDON = [3 4], cIDOFF = [3 4]
10:09:15,604 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:15,604 root DEBUG dOFF/dON = 0.3
10:09:15,604 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.46109285777668, 'dON1': 0.8263474394005108, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.8263474394005108, 'nTON': 1, 'dON': 0.8263474394005108, 'dxOFFAngle': 89.48912290394507, 'dOFF1': 0.2670710844592119, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.2670710844592119, 'nTOFF': 1, 'dOFF': 0.2670710844592119, 'SUCCESS': False}
10:09:15,613 root DEBUG 

=================== Experiment ID #77 	 Dual Point ID: 78 ===================
10:09:15,623 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.982E-08|<1.000E-06)
10:09:15,623 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:15,911 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.319E-01 	 Total distance: 5.319E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([0], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:16,215 root DEBUG Side: OFF	 Angle(dx0, dx): 0.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.336E+00 	 Total distance: 1.336E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([63], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:16,216 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:16,216 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 43.05 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:16,216 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:16,216 root DEBUG dOFF/dON = 2.5
10:09:16,216 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.9024975419614, 'dON1': 0.5318764789226474, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.5318764789226474, 'nTON': 1, 'dON': 0.5318764789226474, 'dxOFFAngle': 89.75558482038323, 'dOFF1': 1.3359895831918156, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 1.3359895831918156, 'nTOFF': 1, 'dOFF': 1.3359895831918156, 'SUCCESS': True}
10:09:16,228 root DEBUG 

=================== Experiment ID #78 	 Dual Point ID: 79 ===================
10:09:16,238 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.436E-08|<1.000E-06)
10:09:16,238 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:16,505 root DEBUG Side: ON	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.402E-02 	 Total distance: 1.402E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([223], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:16,789 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.093E-02 	 Total distance: 5.093E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([5], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:17,31 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.990E-01 	 Total distance: 7.499E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([154], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:17,265 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.266E-01 	 Total distance: 1.177E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([48], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:17,265 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:17,265 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 97.64 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:17,265 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:17,265 root DEBUG dOFF/dON = 83.9
10:09:17,265 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.66837368065717, 'dON1': 0.014018613867966259, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.014018613867966259, 'nTON': 1, 'dON': 0.014018613867966259, 'dxOFFAngle': 89.85209009498175, 'dOFF1': 1.1765208995384542, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 1.1765208995384542, 'nTOFF': 1, 'dOFF': 1.1765208995384542, 'SUCCESS': True}
10:09:17,275 root DEBUG 

=================== Experiment ID #79 	 Dual Point ID: 80 ===================
10:09:17,282 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.685E-09|<1.000E-06)
10:09:17,282 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:17,608 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.575E-03 	 Total distance: 7.575E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([151], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:17,819 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.238E-02 	 Total distance: 3.996E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([53], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:17,997 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.943E-01 	 Total distance: 2.342E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([93], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:18,306 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.176E-01 	 Total distance: 1.176E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([237], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:18,539 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.318E-02 	 Total distance: 1.308E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([166], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:18,764 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.034E-02 	 Total distance: 1.511E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([11], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:18,985 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.577E-01 	 Total distance: 1.109E+00 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([6], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:19,224 root DEBUG Side: OFF	 Angle(dx0, dx): 0.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.221E-01 	 Total distance: 1.331E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([37], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:19,224 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:19,225 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 70.07 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:19,225 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:19,225 root DEBUG dOFF/dON = 5.7
10:09:19,225 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.29293977045147, 'dON1': 0.234207726613411, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.234207726613411, 'nTON': 1, 'dON': 0.234207726613411, 'dxOFFAngle': 89.09775400029612, 'dOFF1': 1.3309799767880448, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 1.3309799767880448, 'nTOFF': 1, 'dOFF': 1.3309799767880448, 'SUCCESS': True}
10:09:19,242 root DEBUG 

=================== Experiment ID #80 	 Dual Point ID: 81 ===================
10:09:19,249 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.764E-09|<1.000E-06)
10:09:19,250 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:19,598 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.713E-01 	 Total distance: 2.713E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([13], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:19,799 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.882E-01 	 Total distance: 9.596E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([16], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:20,59 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.615E-01 	 Total distance: 1.221E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([206], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:20,423 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.506E-01 	 Total distance: 9.506E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([102], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:20,423 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:20,423 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -12.46 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:20,424 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:20,424 root DEBUG dOFF/dON = 0.8
10:09:20,424 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.26546420656183, 'dON1': 1.2211075520999422, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 1.2211075520999422, 'nTON': 1, 'dON': 1.2211075520999422, 'dxOFFAngle': 89.67429755863436, 'dOFF1': 0.9505669542547183, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.9505669542547183, 'nTOFF': 1, 'dOFF': 0.9505669542547183, 'SUCCESS': False}
10:09:20,434 root DEBUG 

=================== Experiment ID #81 	 Dual Point ID: 82 ===================
10:09:20,442 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.783E-10|<1.000E-06)
10:09:20,443 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:20,776 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.403E-02 	 Total distance: 3.403E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([44], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:21,142 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.299E-01 	 Total distance: 5.299E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([32], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:21,371 root DEBUG Side: OFF	 Angle(dx0, dx): 1.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.088E-01 	 Total distance: 8.387E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([2, 5], dtype=int64), array([[1.],
       [0.]])]] 	 class: [2 3]
10:09:21,371 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:21,371 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 92.20 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:21,371 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:21,371 root DEBUG dOFF/dON = 24.6
10:09:21,371 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.26144889726277, 'dON1': 0.034027822100454436, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.034027822100454436, 'nTON': 1, 'dON': 0.034027822100454436, 'dxOFFAngle': 89.50224360449033, 'dOFF1': 0.8386933916293433, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.8386933916293433, 'nTOFF': 1, 'dOFF': 0.8386933916293433, 'SUCCESS': True}
10:09:21,381 root DEBUG 

=================== Experiment ID #82 	 Dual Point ID: 83 ===================
10:09:21,388 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.196E-08|<1.000E-06)
10:09:21,389 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:21,704 root DEBUG Side: ON	 Angle(dx0, dx): 0.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.139E-01 	 Total distance: 3.139E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([17], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:09:21,987 root DEBUG Side: OFF	 Angle(dx0, dx): 1.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.093E-05 	 Total distance: 7.093E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 8]
10:09:21,987 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:21,987 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.95 	 cIDON = [0 8], cIDOFF = [0 8]
10:09:21,988 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:21,988 root DEBUG dOFF/dON = 0.0
10:09:21,988 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.829046440247, 'dON1': 0.31386769029162653, 'cIDON1': array([0, 8], dtype=int64), 'dON_patch_1': 0.31386769029162653, 'nTON': 1, 'dON': 0.31386769029162653, 'dxOFFAngle': 88.55743228958254, 'dOFF1': 7.093200654882374e-05, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 7.093200654882374e-05, 'nTOFF': 1, 'dOFF': 7.093200654882374e-05, 'SUCCESS': False}
10:09:21,996 root DEBUG 

=================== Experiment ID #83 	 Dual Point ID: 84 ===================
10:09:22,4 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.935E-08|<1.000E-06)
10:09:22,4 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:22,336 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.410E-01 	 Total distance: 2.410E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([175], dtype=int64), array([[False]])]] 	 class: [0 9]
10:09:22,640 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.345E-02 	 Total distance: 9.345E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([204], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:09:22,640 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:22,641 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -44.12 	 cIDON = [0 9], cIDOFF = [0 9]
10:09:22,641 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:22,641 root DEBUG dOFF/dON = 0.4
10:09:22,641 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.5175940589359, 'dON1': 0.24103074394807436, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.24103074394807436, 'nTON': 1, 'dON': 0.24103074394807436, 'dxOFFAngle': 89.6710364826816, 'dOFF1': 0.09344871780545207, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.09344871780545207, 'nTOFF': 1, 'dOFF': 0.09344871780545207, 'SUCCESS': False}
10:09:22,653 root DEBUG 

=================== Experiment ID #84 	 Dual Point ID: 85 ===================
10:09:22,661 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.394E-09|<1.000E-06)
10:09:22,661 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:22,929 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.868E-01 	 Total distance: 3.868E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([72], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:09:23,273 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.628E-01 	 Total distance: 3.628E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([183], dtype=int64), array([[False]])]] 	 class: [2 3]
10:09:23,433 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.951E-01 	 Total distance: 5.579E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([138], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:09:23,434 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:23,434 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 18.11 	 cIDON = [2 3], cIDOFF = [2 3]
10:09:23,434 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:23,434 root DEBUG dOFF/dON = 1.4
10:09:23,434 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.33517410131334, 'dON1': 0.38681700577191364, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.38681700577191364, 'nTON': 1, 'dON': 0.38681700577191364, 'dxOFFAngle': 88.6002436389491, 'dOFF1': 0.5578886071615989, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.5578886071615989, 'nTOFF': 1, 'dOFF': 0.5578886071615989, 'SUCCESS': True}
10:09:23,439 root DEBUG 

=================== Experiment ID #85 	 Dual Point ID: 86 ===================
10:09:23,446 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.093E-07|<1.000E-06)
10:09:23,447 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:23,758 root DEBUG Side: ON	 Angle(dx0, dx): 0.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.193E-01 	 Total distance: 1.193E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([214], dtype=int64), array([[False]])]] 	 class: [3 8]
10:09:24,55 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.191E+00 	 Total distance: 1.191E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([238], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:09:24,275 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.832E+00 	 Total distance: 3.023E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([224], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:09:24,450 root DEBUG Side: OFF	 Angle(dx0, dx): 1.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.595E-02 	 Total distance: 3.069E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 8], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 3]
10:09:24,450 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:24,450 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 92.51 	 cIDON = [3 8], cIDOFF = [3 8]
10:09:24,450 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:24,450 root DEBUG dOFF/dON = 25.7
10:09:24,450 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.25296613222204, 'dON1': 0.11932554880616378, 'cIDON1': array([3, 8], dtype=int64), 'dON_patch_1': 0.11932554880616378, 'nTON': 1, 'dON': 0.11932554880616378, 'dxOFFAngle': 89.45514462451227, 'dOFF1': 3.0687777105389027, 'cIDOFF1': array([3, 8], dtype=int64), 'dOFF_patch_1': 3.0687777105389027, 'nTOFF': 1, 'dOFF': 3.0687777105389027, 'SUCCESS': True}
10:09:24,461 root DEBUG 

=================== Experiment ID #86 	 Dual Point ID: 87 ===================
10:09:24,470 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.956E-08|<1.000E-06)
10:09:24,470 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:24,714 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.849E-01 	 Total distance: 1.849E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([190], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:24,938 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.043E-01 	 Total distance: 8.892E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([239], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:25,88 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.723E-01 	 Total distance: 1.061E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([108], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:25,379 root DEBUG Side: OFF	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.612E-02 	 Total distance: 6.612E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([212], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:25,613 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.316E-01 	 Total distance: 2.977E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([156], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:25,613 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:25,613 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -56.19 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:25,614 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:25,614 root DEBUG dOFF/dON = 0.3
10:09:25,614 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.8319383470497, 'dON1': 1.0614364893433503, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 1.0614364893433503, 'nTON': 1, 'dON': 1.0614364893433503, 'dxOFFAngle': 89.5397207819235, 'dOFF1': 0.29770235148842816, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.29770235148842816, 'nTOFF': 1, 'dOFF': 0.29770235148842816, 'SUCCESS': False}
10:09:25,630 root DEBUG 

=================== Experiment ID #87 	 Dual Point ID: 88 ===================
10:09:25,640 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.842E-09|<1.000E-06)
10:09:25,640 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:25,929 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.365E-01 	 Total distance: 3.365E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([87], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:26,102 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.130E-02 	 Total distance: 3.778E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([54], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:26,434 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.091E-01 	 Total distance: 5.091E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([27], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:26,434 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:26,435 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 14.81 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:26,435 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:26,435 root DEBUG dOFF/dON = 1.3
10:09:26,435 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.07472428685443, 'dON1': 0.37778354698486283, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.37778354698486283, 'nTON': 1, 'dON': 0.37778354698486283, 'dxOFFAngle': 89.14833179954951, 'dOFF1': 0.5091121091048348, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.5091121091048348, 'nTOFF': 1, 'dOFF': 0.5091121091048348, 'SUCCESS': True}
10:09:26,449 root DEBUG 

=================== Experiment ID #88 	 Dual Point ID: 89 ===================
10:09:26,454 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.460E-07|<1.000E-06)
10:09:26,454 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:26,790 root DEBUG Side: ON	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.070E-01 	 Total distance: 1.070E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([145], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:27,133 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.363E-01 	 Total distance: 5.363E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([1], dtype=int64), array([[False]])]] 	 class: [4 7]
10:09:27,134 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:27,134 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 66.73 	 cIDON = [4 7], cIDOFF = [4 7]
10:09:27,135 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:27,135 root DEBUG dOFF/dON = 5.0
10:09:27,135 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.15396915290448, 'dON1': 0.10701341656961319, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.10701341656961319, 'nTON': 1, 'dON': 0.10701341656961319, 'dxOFFAngle': 89.77769527376182, 'dOFF1': 0.536307249514404, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.536307249514404, 'nTOFF': 1, 'dOFF': 0.536307249514404, 'SUCCESS': True}
10:09:27,145 root DEBUG 

=================== Experiment ID #89 	 Dual Point ID: 90 ===================
10:09:27,151 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.012E-07|<1.000E-06)
10:09:27,151 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:27,528 root DEBUG Side: ON	 Angle(dx0, dx): 0.98 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.882E-01 	 Total distance: 1.882E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([224], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:27,850 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.109E-01 	 Total distance: 7.109E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([228], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:27,851 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:27,851 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 58.14 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:27,851 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:27,851 root DEBUG dOFF/dON = 3.8
10:09:27,851 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.88662816877047, 'dON1': 0.18818846056697547, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.18818846056697547, 'nTON': 1, 'dON': 0.18818846056697547, 'dxOFFAngle': 89.78626245088769, 'dOFF1': 0.710913459477929, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.710913459477929, 'nTOFF': 1, 'dOFF': 0.710913459477929, 'SUCCESS': True}
10:09:27,866 root DEBUG 

=================== Experiment ID #90 	 Dual Point ID: 91 ===================
10:09:27,873 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.204E-07|<1.000E-06)
10:09:27,873 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:28,156 root DEBUG Side: ON	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.243E-01 	 Total distance: 1.243E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([234], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:28,451 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.502E-01 	 Total distance: 3.502E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([66], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:28,451 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:28,451 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 47.61 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:28,452 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:28,452 root DEBUG dOFF/dON = 2.8
10:09:28,452 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.90954625367002, 'dON1': 0.1242705454446451, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.1242705454446451, 'nTON': 1, 'dON': 0.1242705454446451, 'dxOFFAngle': 89.63932818338331, 'dOFF1': 0.35015310952529893, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.35015310952529893, 'nTOFF': 1, 'dOFF': 0.35015310952529893, 'SUCCESS': True}
10:09:28,462 root DEBUG 

=================== Experiment ID #91 	 Dual Point ID: 92 ===================
10:09:28,470 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.884E-09|<1.000E-06)
10:09:28,471 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:28,749 root DEBUG Side: ON	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.065E-01 	 Total distance: 7.065E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([227], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:28,957 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.621E-02 	 Total distance: 7.927E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([153], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:29,141 root DEBUG Side: ON	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.198E-01 	 Total distance: 1.313E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([156], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:29,457 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.681E-01 	 Total distance: 2.681E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([75], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:29,458 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:29,458 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -66.08 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:29,458 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:29,458 root DEBUG dOFF/dON = 0.2
10:09:29,458 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.83421833463325, 'dON1': 1.3125242171450395, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 1.3125242171450395, 'nTON': 1, 'dON': 1.3125242171450395, 'dxOFFAngle': 89.95599489525875, 'dOFF1': 0.2681155071145304, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.2681155071145304, 'nTOFF': 1, 'dOFF': 0.2681155071145304, 'SUCCESS': False}
10:09:29,468 root DEBUG 

=================== Experiment ID #92 	 Dual Point ID: 93 ===================
10:09:29,479 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.622E-08|<1.000E-06)
10:09:29,479 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:29,790 root DEBUG Side: ON	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.307E-01 	 Total distance: 2.307E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([48], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:30,93 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.473E-01 	 Total distance: 1.473E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([190], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:30,252 root DEBUG Side: OFF	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.462E-01 	 Total distance: 2.935E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([250], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:30,252 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:30,252 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 11.99 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:30,252 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:30,253 root DEBUG dOFF/dON = 1.3
10:09:30,253 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.35751300422488, 'dON1': 0.2306665012812639, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.2306665012812639, 'nTON': 1, 'dON': 0.2306665012812639, 'dxOFFAngle': 88.46091561420636, 'dOFF1': 0.293500705267484, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.293500705267484, 'nTOFF': 1, 'dOFF': 0.293500705267484, 'SUCCESS': True}
10:09:30,259 root DEBUG 

=================== Experiment ID #93 	 Dual Point ID: 94 ===================
10:09:30,266 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.850E-08|<1.000E-06)
10:09:30,266 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:30,582 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.016E-01 	 Total distance: 4.016E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([64], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:30,862 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.671E-01 	 Total distance: 6.671E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([131], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:30,862 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:30,862 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 24.85 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:30,863 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:30,863 root DEBUG dOFF/dON = 1.7
10:09:30,863 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.53104198625331, 'dON1': 0.40156019878370564, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.40156019878370564, 'nTON': 1, 'dON': 0.40156019878370564, 'dxOFFAngle': 88.8239300390099, 'dOFF1': 0.6671473730735736, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.6671473730735736, 'nTOFF': 1, 'dOFF': 0.6671473730735736, 'SUCCESS': True}
10:09:30,872 root DEBUG 

=================== Experiment ID #94 	 Dual Point ID: 95 ===================
10:09:30,881 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.989E-08|<1.000E-06)
10:09:30,881 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:31,122 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.002E-01 	 Total distance: 4.002E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([155], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:31,407 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.376E-01 	 Total distance: 4.376E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([241], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:31,407 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:31,408 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 4.47 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:31,408 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:31,408 root DEBUG dOFF/dON = 1.1
10:09:31,408 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.26288046751827, 'dON1': 0.40016905634705774, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.40016905634705774, 'nTON': 1, 'dON': 0.40016905634705774, 'dxOFFAngle': 89.49250799527525, 'dOFF1': 0.43763023842568094, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.43763023842568094, 'nTOFF': 1, 'dOFF': 0.43763023842568094, 'SUCCESS': True}
10:09:31,418 root DEBUG 

=================== Experiment ID #95 	 Dual Point ID: 96 ===================
10:09:31,426 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.927E-09|<1.000E-06)
10:09:31,426 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:31,731 root DEBUG Side: ON	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.314E-01 	 Total distance: 5.314E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([212], dtype=int64), array([[False]])]] 	 class: [6 9]
10:09:32,25 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.211E+00 	 Total distance: 1.211E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([84], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:09:32,195 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.079E-01 	 Total distance: 1.819E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([1], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:09:32,449 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.102E-01 	 Total distance: 1.929E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([84], dtype=int64), array([[False]])]] 	 class: [6 9]
10:09:32,450 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:32,450 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 56.80 	 cIDON = [6 9], cIDOFF = [6 9]
10:09:32,450 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:32,450 root DEBUG dOFF/dON = 3.6
10:09:32,450 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.71343009125926, 'dON1': 0.531379443179678, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.531379443179678, 'nTON': 1, 'dON': 0.531379443179678, 'dxOFFAngle': 88.70876288983357, 'dOFF1': 1.9288895129704517, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 1.9288895129704517, 'nTOFF': 1, 'dOFF': 1.9288895129704517, 'SUCCESS': True}
10:09:32,458 root DEBUG 

=================== Experiment ID #96 	 Dual Point ID: 97 ===================
10:09:32,466 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.674E-08|<1.000E-06)
10:09:32,467 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:32,815 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.507E-01 	 Total distance: 4.507E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([40], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:09:33,113 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.171E-02 	 Total distance: 7.171E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([202], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:33,290 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.827E-01 	 Total distance: 7.544E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([13], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:33,290 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:33,290 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 25.21 	 cIDON = [7 9], cIDOFF = [7 9]
10:09:33,290 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:33,290 root DEBUG dOFF/dON = 1.7
10:09:33,290 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.97425017460169, 'dON1': 0.45066100938953774, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.45066100938953774, 'nTON': 1, 'dON': 0.45066100938953774, 'dxOFFAngle': 89.33264199191703, 'dOFF1': 0.754440906620679, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.754440906620679, 'nTOFF': 1, 'dOFF': 0.754440906620679, 'SUCCESS': True}
10:09:33,300 root DEBUG 

=================== Experiment ID #97 	 Dual Point ID: 98 ===================
10:09:33,307 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.032E-08|<1.000E-06)
10:09:33,308 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:33,587 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.696E-02 	 Total distance: 5.696E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([239], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:09:33,862 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.289E-01 	 Total distance: 5.289E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([0], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:09:34,73 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.844E-01 	 Total distance: 8.133E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([56], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:09:34,73 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:34,73 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 86.91 	 cIDON = [5 9], cIDOFF = [5 9]
10:09:34,73 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:34,73 root DEBUG dOFF/dON = 14.3
10:09:34,73 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.85308554588971, 'dON1': 0.056958625392118524, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.056958625392118524, 'nTON': 1, 'dON': 0.056958625392118524, 'dxOFFAngle': 89.56498465703719, 'dOFF1': 0.8133263357887884, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.8133263357887884, 'nTOFF': 1, 'dOFF': 0.8133263357887884, 'SUCCESS': True}
10:09:34,83 root DEBUG 

=================== Experiment ID #98 	 Dual Point ID: 99 ===================
10:09:34,91 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.882E-08|<1.000E-06)
10:09:34,91 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:34,374 root DEBUG Side: ON	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.029E-01 	 Total distance: 3.029E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([64], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:34,695 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.590E-01 	 Total distance: 2.590E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([167], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:34,695 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:34,695 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -7.81 	 cIDON = [2 6], cIDOFF = [2 6]
10:09:34,696 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:34,696 root DEBUG dOFF/dON = 0.9
10:09:34,696 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.63102530359753, 'dON1': 0.3028599883694601, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.3028599883694601, 'nTON': 1, 'dON': 0.3028599883694601, 'dxOFFAngle': 88.90859608925231, 'dOFF1': 0.25899120745907844, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.25899120745907844, 'nTOFF': 1, 'dOFF': 0.25899120745907844, 'SUCCESS': False}
10:09:34,704 root DEBUG 

=================== Experiment ID #99 	 Dual Point ID: 100 ===================
10:09:34,713 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.190E-08|<1.000E-06)
10:09:34,713 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:34,996 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.407E-02 	 Total distance: 5.407E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([165], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:35,167 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.825E-02 	 Total distance: 1.223E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([12], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:35,332 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.940E-01 	 Total distance: 7.163E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([123], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:35,512 root DEBUG Side: ON	 Angle(dx0, dx): 0.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.223E-01 	 Total distance: 1.039E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([74], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:35,761 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.139E+00 	 Total distance: 2.139E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([49], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:35,761 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:35,762 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 34.62 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:35,762 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:35,762 root DEBUG dOFF/dON = 2.1
10:09:35,762 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.50142926502848, 'dON1': 1.0386548072780915, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 1.0386548072780915, 'nTON': 1, 'dON': 1.0386548072780915, 'dxOFFAngle': 89.51740621885718, 'dOFF1': 2.138745503856578, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 2.138745503856578, 'nTOFF': 1, 'dOFF': 2.138745503856578, 'SUCCESS': True}
10:09:35,772 root DEBUG 

=================== Experiment ID #100 	 Dual Point ID: 101 ===================
10:09:35,781 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.945E-09|<1.000E-06)
10:09:35,781 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:36,45 root DEBUG Side: ON	 Angle(dx0, dx): 0.73 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.683E-06 	 Total distance: 8.683E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 5]
10:09:36,325 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.004E-01 	 Total distance: 3.004E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([203], dtype=int64), array([[ True]])]] 	 class: [0 5]
10:09:36,326 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:36,326 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.99 	 cIDON = [0 5], cIDOFF = [0 5]
10:09:36,327 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:36,327 root DEBUG dOFF/dON = 34593.8
10:09:36,327 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.34899316551414, 'dON1': 8.683359545882638e-06, 'cIDON1': array([0, 5], dtype=int64), 'dON_patch_1': 8.683359545882638e-06, 'nTON': 1, 'dON': 8.683359545882638e-06, 'dxOFFAngle': 89.63382857318176, 'dOFF1': 0.30039046159610755, 'cIDOFF1': array([0, 5], dtype=int64), 'dOFF_patch_1': 0.30039046159610755, 'nTOFF': 1, 'dOFF': 0.30039046159610755, 'SUCCESS': True}
10:09:36,342 root DEBUG 

=================== Experiment ID #101 	 Dual Point ID: 102 ===================
10:09:36,356 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.328E-08|<1.000E-06)
10:09:36,356 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:36,630 root DEBUG Side: ON	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.922E-02 	 Total distance: 4.922E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([157], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:36,901 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.355E-01 	 Total distance: 6.355E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([82], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:37,111 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.806E-02 	 Total distance: 6.536E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([59], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:37,112 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:37,112 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 85.99 	 cIDON = [5 7], cIDOFF = [5 7]
10:09:37,112 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:37,112 root DEBUG dOFF/dON = 13.3
10:09:37,112 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.16803512388395, 'dON1': 0.04921784642837922, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.04921784642837922, 'nTON': 1, 'dON': 0.04921784642837922, 'dxOFFAngle': 89.6090448165049, 'dOFF1': 0.6536020651168396, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.6536020651168396, 'nTOFF': 1, 'dOFF': 0.6536020651168396, 'SUCCESS': True}
10:09:37,121 root DEBUG 

=================== Experiment ID #102 	 Dual Point ID: 103 ===================
10:09:37,128 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.258E-08|<1.000E-06)
10:09:37,128 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:37,418 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.449E-02 	 Total distance: 6.449E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([20], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:09:37,595 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.504E-01 	 Total distance: 3.149E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([204], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:09:37,874 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.936E-01 	 Total distance: 1.936E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([28], dtype=int64), array([[False]])]] 	 class: [6 9]
10:09:37,874 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:37,875 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -23.86 	 cIDON = [6 9], cIDOFF = [6 9]
10:09:37,875 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:37,875 root DEBUG dOFF/dON = 0.6
10:09:37,875 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.33485430753547, 'dON1': 0.3149021299366676, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.3149021299366676, 'nTON': 1, 'dON': 0.3149021299366676, 'dxOFFAngle': 88.99230683978541, 'dOFF1': 0.19359268527089074, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.19359268527089074, 'nTOFF': 1, 'dOFF': 0.19359268527089074, 'SUCCESS': False}
10:09:37,890 root DEBUG 

=================== Experiment ID #103 	 Dual Point ID: 104 ===================
10:09:37,899 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.466E-08|<1.000E-06)
10:09:37,899 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:38,177 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.669E-01 	 Total distance: 1.669E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([173], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:09:38,393 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.362E-01 	 Total distance: 4.031E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([213], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:09:38,615 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.384E+00 	 Total distance: 1.787E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([47], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:38,930 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.255E+00 	 Total distance: 1.255E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([245], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:38,930 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:38,931 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -17.50 	 cIDON = [7 9], cIDOFF = [7 9]
10:09:38,931 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:38,931 root DEBUG dOFF/dON = 0.7
10:09:38,931 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.73676147842434, 'dON1': 1.7874486129636953, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 1.7874486129636953, 'nTON': 1, 'dON': 1.7874486129636953, 'dxOFFAngle': 89.7435144401005, 'dOFF1': 1.2550822341973997, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 1.2550822341973997, 'nTOFF': 1, 'dOFF': 1.2550822341973997, 'SUCCESS': False}
10:09:38,943 root DEBUG 

=================== Experiment ID #104 	 Dual Point ID: 105 ===================
10:09:38,951 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.228E-09|<1.000E-06)
10:09:38,951 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:39,264 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.499E-01 	 Total distance: 8.499E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([92], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:39,484 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.108E-01 	 Total distance: 1.761E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([69], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:39,694 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.706E-01 	 Total distance: 2.231E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([194], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:39,905 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.464E+00 	 Total distance: 3.695E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([98], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:40,241 root DEBUG Side: OFF	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.283E-01 	 Total distance: 2.283E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([12], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:40,242 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:40,242 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -88.36 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:40,242 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:40,242 root DEBUG dOFF/dON = 0.1
10:09:40,242 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.9475744221376, 'dON1': 3.695106998762127, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 3.695106998762127, 'nTON': 1, 'dON': 3.695106998762127, 'dxOFFAngle': 89.95939632277684, 'dOFF1': 0.2282657791546127, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.2282657791546127, 'nTOFF': 1, 'dOFF': 0.2282657791546127, 'SUCCESS': False}
10:09:40,258 root DEBUG 

=================== Experiment ID #105 	 Dual Point ID: 106 ===================
10:09:40,267 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.943E-08|<1.000E-06)
10:09:40,267 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:40,572 root DEBUG Side: ON	 Angle(dx0, dx): 0.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.123E-01 	 Total distance: 4.123E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([39], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:09:40,895 root DEBUG Side: OFF	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.978E-01 	 Total distance: 2.978E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([39], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:09:40,896 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:40,896 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -16.13 	 cIDON = [2 5], cIDOFF = [2 5]
10:09:40,896 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:40,896 root DEBUG dOFF/dON = 0.7
10:09:40,896 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.69865859053169, 'dON1': 0.4122958948375006, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.4122958948375006, 'nTON': 1, 'dON': 0.4122958948375006, 'dxOFFAngle': 88.58053763397163, 'dOFF1': 0.297762325861435, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.297762325861435, 'nTOFF': 1, 'dOFF': 0.297762325861435, 'SUCCESS': False}
10:09:40,908 root DEBUG 

=================== Experiment ID #106 	 Dual Point ID: 107 ===================
10:09:40,918 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.347E-08|<1.000E-06)
10:09:40,919 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:41,247 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.642E-01 	 Total distance: 4.642E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([7], dtype=int64), array([[False]])]] 	 class: [3 9]
10:09:41,530 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.183E-01 	 Total distance: 2.183E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([7], dtype=int64), array([[False]])]] 	 class: [3 9]
10:09:41,530 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:41,530 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -36.04 	 cIDON = [3 9], cIDOFF = [3 9]
10:09:41,530 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:41,530 root DEBUG dOFF/dON = 0.5
10:09:41,530 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.33884806990554, 'dON1': 0.46419163412412023, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.46419163412412023, 'nTON': 1, 'dON': 0.46419163412412023, 'dxOFFAngle': 89.57396576575734, 'dOFF1': 0.21825904111154348, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.21825904111154348, 'nTOFF': 1, 'dOFF': 0.21825904111154348, 'SUCCESS': False}
10:09:41,543 root DEBUG 

=================== Experiment ID #107 	 Dual Point ID: 108 ===================
10:09:41,555 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.261E-09|<1.000E-06)
10:09:41,555 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:41,839 root DEBUG Side: ON	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.348E-01 	 Total distance: 1.348E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([5], dtype=int64), array([[False]])]] 	 class: [2 3]
10:09:42,142 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.779E-01 	 Total distance: 3.779E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([200], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:09:42,142 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:42,143 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 47.43 	 cIDON = [2 3], cIDOFF = [2 3]
10:09:42,143 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:42,143 root DEBUG dOFF/dON = 2.8
10:09:42,143 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.50617408249518, 'dON1': 0.13475481057411096, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.13475481057411096, 'nTON': 1, 'dON': 0.13475481057411096, 'dxOFFAngle': 89.61084388199556, 'dOFF1': 0.37792609836318175, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.37792609836318175, 'nTOFF': 1, 'dOFF': 0.37792609836318175, 'SUCCESS': True}
10:09:42,151 root DEBUG 

=================== Experiment ID #108 	 Dual Point ID: 109 ===================
10:09:42,158 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.493E-08|<1.000E-06)
10:09:42,158 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:42,439 root DEBUG Side: ON	 Angle(dx0, dx): 1.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.065E-06 	 Total distance: 5.065E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:09:42,718 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.458E-01 	 Total distance: 6.458E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([35], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:09:42,943 root DEBUG Side: OFF	 Angle(dx0, dx): 0.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.774E-01 	 Total distance: 1.323E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([7], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:09:42,943 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:42,944 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [1 8], cIDOFF = [1 8]
10:09:42,944 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:42,944 root DEBUG dOFF/dON = 261250.8
10:09:42,944 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.73912780425763, 'dON1': 5.065018607682235e-06, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 5.065018607682235e-06, 'nTON': 1, 'dON': 5.065018607682235e-06, 'dxOFFAngle': 89.75577514098003, 'dOFF1': 1.3232403298917224, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 1.3232403298917224, 'nTOFF': 1, 'dOFF': 1.3232403298917224, 'SUCCESS': True}
10:09:42,956 root DEBUG 

=================== Experiment ID #109 	 Dual Point ID: 110 ===================
10:09:42,966 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.743E-08|<1.000E-06)
10:09:42,966 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:43,238 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.090E-01 	 Total distance: 7.090E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([53], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:43,454 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.268E-01 	 Total distance: 9.358E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([61], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:43,768 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.278E-01 	 Total distance: 2.278E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([38], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:43,935 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.979E-01 	 Total distance: 6.257E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([96], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:43,935 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:43,936 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -19.86 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:43,936 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:43,936 root DEBUG dOFF/dON = 0.7
10:09:43,936 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.8836866000607, 'dON1': 0.9357942464731229, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.9357942464731229, 'nTON': 1, 'dON': 0.9357942464731229, 'dxOFFAngle': 89.61011306104179, 'dOFF1': 0.6256931167070663, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.6256931167070663, 'nTOFF': 1, 'dOFF': 0.6256931167070663, 'SUCCESS': False}
10:09:43,946 root DEBUG 

=================== Experiment ID #110 	 Dual Point ID: 111 ===================
10:09:43,956 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.290E-07|<1.000E-06)
10:09:43,956 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:44,253 root DEBUG Side: ON	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.596E-01 	 Total distance: 1.596E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([38], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:44,530 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.923E-01 	 Total distance: 4.923E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([252], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:44,680 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.988E-02 	 Total distance: 5.322E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([27], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:44,680 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:44,681 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 53.86 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:44,681 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:44,681 root DEBUG dOFF/dON = 3.3
10:09:44,681 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.90351475906077, 'dON1': 0.15960816185696752, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.15960816185696752, 'nTON': 1, 'dON': 0.15960816185696752, 'dxOFFAngle': 89.51742827731343, 'dOFF1': 0.5321912601200138, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.5321912601200138, 'nTOFF': 1, 'dOFF': 0.5321912601200138, 'SUCCESS': True}
10:09:44,689 root DEBUG 

=================== Experiment ID #111 	 Dual Point ID: 112 ===================
10:09:44,699 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.159E-10|<1.000E-06)
10:09:44,700 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:44,981 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.830E-02 	 Total distance: 1.830E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([190], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:45,199 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.319E-01 	 Total distance: 4.502E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([251], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:45,403 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.384E-02 	 Total distance: 4.641E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([192], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:45,621 root DEBUG Side: ON	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.763E-02 	 Total distance: 5.117E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([249], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:45,960 root DEBUG Side: OFF	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.963E-01 	 Total distance: 1.963E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([1, 3], dtype=int64), array([[0.],
       [1.]])]] 	 class: [0 3]
10:09:45,960 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:45,960 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -44.54 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:45,960 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:45,960 root DEBUG dOFF/dON = 0.4
10:09:45,960 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.03332361463679, 'dON1': 0.5117004589335994, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.5117004589335994, 'nTON': 1, 'dON': 0.5117004589335994, 'dxOFFAngle': 89.50609862592928, 'dOFF1': 0.19632103899017658, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.19632103899017658, 'nTOFF': 1, 'dOFF': 0.19632103899017658, 'SUCCESS': False}
10:09:45,971 root DEBUG 

=================== Experiment ID #112 	 Dual Point ID: 113 ===================
10:09:45,978 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.031E-08|<1.000E-06)
10:09:45,978 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:46,308 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.075E-01 	 Total distance: 4.075E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([118], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:46,499 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.329E-02 	 Total distance: 4.508E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([151], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:46,703 root DEBUG Side: ON	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.558E-01 	 Total distance: 6.065E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([18], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:46,968 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.458E+00 	 Total distance: 1.458E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([212], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:47,168 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.547E-03 	 Total distance: 1.465E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([62], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:47,168 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:47,168 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 41.44 	 cIDON = [2 4], cIDOFF = [2 4]
10:09:47,168 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:47,169 root DEBUG dOFF/dON = 2.4
10:09:47,169 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.51197640428941, 'dON1': 0.6065478825121233, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.6065478825121233, 'nTON': 1, 'dON': 0.6065478825121233, 'dxOFFAngle': 89.3454245246403, 'dOFF1': 1.46509018002701, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 1.46509018002701, 'nTOFF': 1, 'dOFF': 1.46509018002701, 'SUCCESS': True}
10:09:47,180 root DEBUG 

=================== Experiment ID #113 	 Dual Point ID: 114 ===================
10:09:47,187 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.210E-08|<1.000E-06)
10:09:47,188 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:47,542 root DEBUG Side: ON	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.536E-01 	 Total distance: 4.536E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([84], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:47,819 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.198E-01 	 Total distance: 4.198E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([17], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:47,819 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:47,820 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -3.87 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:47,820 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:47,820 root DEBUG dOFF/dON = 0.9
10:09:47,820 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.46408915272414, 'dON1': 0.45360406078558313, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.45360406078558313, 'nTON': 1, 'dON': 0.45360406078558313, 'dxOFFAngle': 88.59930907295168, 'dOFF1': 0.41979912334971664, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.41979912334971664, 'nTOFF': 1, 'dOFF': 0.41979912334971664, 'SUCCESS': False}
10:09:47,830 root DEBUG 

=================== Experiment ID #114 	 Dual Point ID: 115 ===================
10:09:47,839 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.993E-08|<1.000E-06)
10:09:47,840 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:48,179 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.349E-01 	 Total distance: 2.349E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([192], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:48,381 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.028E+00 	 Total distance: 2.262E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([161], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:48,669 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.192E-01 	 Total distance: 1.192E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([7], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:48,669 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:48,669 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -89.99 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:48,669 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:48,669 root DEBUG dOFF/dON = 0.1
10:09:48,669 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.78711465222446, 'dON1': 2.262438390013222, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 2.262438390013222, 'nTON': 1, 'dON': 2.262438390013222, 'dxOFFAngle': 88.88061626960075, 'dOFF1': 0.1192361387055747, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.1192361387055747, 'nTOFF': 1, 'dOFF': 0.1192361387055747, 'SUCCESS': False}
10:09:48,675 root DEBUG 

=================== Experiment ID #115 	 Dual Point ID: 116 ===================
10:09:48,684 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.540E-08|<1.000E-06)
10:09:48,684 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:49,1 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.752E-01 	 Total distance: 4.752E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([236], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:49,165 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.446E-01 	 Total distance: 1.020E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([154], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:49,382 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.280E-01 	 Total distance: 1.148E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([240], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:49,664 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.574E-01 	 Total distance: 4.574E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([132], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:49,664 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:49,665 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -43.01 	 cIDON = [5 7], cIDOFF = [5 7]
10:09:49,665 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:49,665 root DEBUG dOFF/dON = 0.4
10:09:49,665 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.10606290407456, 'dON1': 1.147766484425252, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 1.147766484425252, 'nTON': 1, 'dON': 1.147766484425252, 'dxOFFAngle': 89.38343213307353, 'dOFF1': 0.4573835158821831, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.4573835158821831, 'nTOFF': 1, 'dOFF': 0.4573835158821831, 'SUCCESS': False}
10:09:49,676 root DEBUG 

=================== Experiment ID #116 	 Dual Point ID: 117 ===================
10:09:49,683 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.602E-08|<1.000E-06)
10:09:49,683 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:50,51 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.314E+00 	 Total distance: 1.314E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([26], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:50,251 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.318E-02 	 Total distance: 1.377E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([192], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:50,536 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.506E+00 	 Total distance: 1.506E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([58], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:50,536 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:50,536 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 4.48 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:50,536 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:50,537 root DEBUG dOFF/dON = 1.1
10:09:50,537 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.65236260583313, 'dON1': 1.3768832807362017, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 1.3768832807362017, 'nTON': 1, 'dON': 1.3768832807362017, 'dxOFFAngle': 89.91252457516094, 'dOFF1': 1.505940632342781, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 1.505940632342781, 'nTOFF': 1, 'dOFF': 1.505940632342781, 'SUCCESS': True}
10:09:50,546 root DEBUG 

=================== Experiment ID #117 	 Dual Point ID: 118 ===================
10:09:50,556 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.590E-08|<1.000E-06)
10:09:50,557 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:50,867 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.846E+00 	 Total distance: 1.846E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([18], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:51,63 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.995E-01 	 Total distance: 2.445E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([152], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:51,362 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.165E+00 	 Total distance: 1.165E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([134], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:51,600 root DEBUG Side: OFF	 Angle(dx0, dx): 0.73 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.142E+00 	 Total distance: 2.307E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([148], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:51,601 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:51,601 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -2.91 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:51,601 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:51,601 root DEBUG dOFF/dON = 0.9
10:09:51,601 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.47004117034426, 'dON1': 2.445367430956782, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 2.445367430956782, 'nTON': 1, 'dON': 2.445367430956782, 'dxOFFAngle': 89.26879510107506, 'dOFF1': 2.3071375454644634, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 2.3071375454644634, 'nTOFF': 1, 'dOFF': 2.3071375454644634, 'SUCCESS': False}
10:09:51,612 root DEBUG 

=================== Experiment ID #118 	 Dual Point ID: 119 ===================
10:09:51,621 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.165E-08|<1.000E-06)
10:09:51,621 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:51,964 root DEBUG Side: ON	 Angle(dx0, dx): 0.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.818E-01 	 Total distance: 3.818E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([148], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:52,306 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.733E+00 	 Total distance: 2.733E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([172], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:52,528 root DEBUG Side: OFF	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.807E+00 	 Total distance: 4.540E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([105], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:52,711 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.429E+00 	 Total distance: 5.969E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([27], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:52,711 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:52,712 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 87.98 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:52,712 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:52,712 root DEBUG dOFF/dON = 15.6
10:09:52,713 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.35725622690397, 'dON1': 0.38175170301268213, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.38175170301268213, 'nTON': 1, 'dON': 0.38175170301268213, 'dxOFFAngle': 89.66830834186125, 'dOFF1': 5.968936234229272, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 5.968936234229272, 'nTOFF': 1, 'dOFF': 5.968936234229272, 'SUCCESS': True}
10:09:52,723 root DEBUG 

=================== Experiment ID #119 	 Dual Point ID: 120 ===================
10:09:52,731 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.219E-09|<1.000E-06)
10:09:52,731 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:53,46 root DEBUG Side: ON	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.167E-01 	 Total distance: 1.167E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([7], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:53,292 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.593E-01 	 Total distance: 2.593E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([206], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:53,480 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.373E-01 	 Total distance: 6.966E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([154], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:53,480 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:53,481 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 71.31 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:53,481 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:53,481 root DEBUG dOFF/dON = 6.0
10:09:53,481 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.0878344483674, 'dON1': 0.11665324206711364, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.11665324206711364, 'nTON': 1, 'dON': 0.11665324206711364, 'dxOFFAngle': 88.73977173246729, 'dOFF1': 0.6966061668609469, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.6966061668609469, 'nTOFF': 1, 'dOFF': 0.6966061668609469, 'SUCCESS': True}
10:09:53,494 root DEBUG 

=================== Experiment ID #120 	 Dual Point ID: 121 ===================
10:09:53,506 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.624E-09|<1.000E-06)
10:09:53,507 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:53,780 root DEBUG Side: ON	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.638E-02 	 Total distance: 2.638E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([72], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:54,97 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.570E-01 	 Total distance: 6.570E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([13], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:54,97 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:54,97 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 92.28 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:54,97 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:54,97 root DEBUG dOFF/dON = 24.9
10:09:54,97 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.5361052453197, 'dON1': 0.026384273235872155, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.026384273235872155, 'nTON': 1, 'dON': 0.026384273235872155, 'dxOFFAngle': 89.59728691291369, 'dOFF1': 0.6569705510738354, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.6569705510738354, 'nTOFF': 1, 'dOFF': 0.6569705510738354, 'SUCCESS': True}
10:09:54,106 root DEBUG 

=================== Experiment ID #121 	 Dual Point ID: 122 ===================
10:09:54,113 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.814E-08|<1.000E-06)
10:09:54,113 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:54,391 root DEBUG Side: ON	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.966E-01 	 Total distance: 1.966E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([85], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:54,652 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.903E-02 	 Total distance: 5.903E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([255], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:54,652 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:54,652 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -53.82 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:54,652 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:54,652 root DEBUG dOFF/dON = 0.3
10:09:54,652 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.74679614173223, 'dON1': 0.19663620504664295, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.19663620504664295, 'nTON': 1, 'dON': 0.19663620504664295, 'dxOFFAngle': 89.82397351400805, 'dOFF1': 0.059034629287370396, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.059034629287370396, 'nTOFF': 1, 'dOFF': 0.059034629287370396, 'SUCCESS': False}
10:09:54,658 root DEBUG 

=================== Experiment ID #122 	 Dual Point ID: 123 ===================
10:09:54,667 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.204E-09|<1.000E-06)
10:09:54,668 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:54,979 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.644E-01 	 Total distance: 4.644E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([202], dtype=int64), array([[ True]])]] 	 class: [0 4]
10:09:55,182 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.844E-02 	 Total distance: 5.029E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([42], dtype=int64), array([[ True]])]] 	 class: [0 4]
10:09:55,383 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.236E-01 	 Total distance: 7.265E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([196], dtype=int64), array([[ True]])]] 	 class: [0 4]
10:09:55,638 root DEBUG Side: ON	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.236E-01 	 Total distance: 1.150E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([116], dtype=int64), array([[False]])]] 	 class: [0 4]
10:09:55,967 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.511E-01 	 Total distance: 3.511E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([236], dtype=int64), array([[False]])]] 	 class: [1 4]
10:09:56,201 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.243E-01 	 Total distance: 8.754E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([80], dtype=int64), array([[ True]])]] 	 class: [1 4]
10:09:56,357 root DEBUG Side: OFF	 Angle(dx0, dx): 0.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.459E-02 	 Total distance: 9.100E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([53], dtype=int64), array([[ True]])]] 	 class: [1 4]
10:09:56,357 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:56,357 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -11.66 	 cIDON = [0 4], cIDOFF = [1 4]
10:09:56,357 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:56,358 root DEBUG dOFF/dON = 0.8
10:09:56,358 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.29721917606119, 'dON1': 1.1501538481323204, 'cIDON1': array([0, 4], dtype=int64), 'dON_patch_1': 1.1501538481323204, 'nTON': 1, 'dON': 1.1501538481323204, 'dxOFFAngle': 89.45441276452296, 'dOFF1': 0.9099710067423907, 'cIDOFF1': array([1, 4], dtype=int64), 'dOFF_patch_1': 0.9099710067423907, 'nTOFF': 1, 'dOFF': 0.9099710067423907, 'SUCCESS': False}
10:09:56,371 root DEBUG 

=================== Experiment ID #123 	 Dual Point ID: 124 ===================
10:09:56,385 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.859E-08|<1.000E-06)
10:09:56,385 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:56,607 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.692E-03 	 Total distance: 9.692E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([48], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:56,776 root DEBUG Side: ON	 Angle(dx0, dx): 0.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.179E-03 	 Total distance: 1.087E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([156], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:57,55 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.257E-01 	 Total distance: 5.257E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([212], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:57,55 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:57,55 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 95.95 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:57,56 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:57,56 root DEBUG dOFF/dON = 48.4
10:09:57,56 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.93809436601138, 'dON1': 0.010871292857031058, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.010871292857031058, 'nTON': 1, 'dON': 0.010871292857031058, 'dxOFFAngle': 89.16530319008429, 'dOFF1': 0.5256885594346388, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.5256885594346388, 'nTOFF': 1, 'dOFF': 0.5256885594346388, 'SUCCESS': True}
10:09:57,65 root DEBUG 

=================== Experiment ID #124 	 Dual Point ID: 125 ===================
10:09:57,74 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.521E-07|<1.000E-06)
10:09:57,74 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:57,384 root DEBUG Side: ON	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.530E-01 	 Total distance: 5.530E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([211], dtype=int64), array([[ True]])]] 	 class: [7 8]
10:09:57,672 root DEBUG Side: OFF	 Angle(dx0, dx): 0.93 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.563E-01 	 Total distance: 2.563E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([30], dtype=int64), array([[ True]])]] 	 class: [7 8]
10:09:57,672 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:57,673 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -36.67 	 cIDON = [7 8], cIDOFF = [7 8]
10:09:57,673 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:57,673 root DEBUG dOFF/dON = 0.5
10:09:57,673 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.91385976819029, 'dON1': 0.5529570442869112, 'cIDON1': array([7, 8], dtype=int64), 'dON_patch_1': 0.5529570442869112, 'nTON': 1, 'dON': 0.5529570442869112, 'dxOFFAngle': 89.74990538414858, 'dOFF1': 0.2562513771887856, 'cIDOFF1': array([7, 8], dtype=int64), 'dOFF_patch_1': 0.2562513771887856, 'nTOFF': 1, 'dOFF': 0.2562513771887856, 'SUCCESS': False}
10:09:57,683 root DEBUG 

=================== Experiment ID #125 	 Dual Point ID: 126 ===================
10:09:57,695 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.398E-09|<1.000E-06)
10:09:57,696 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:58,28 root DEBUG Side: ON	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.463E-01 	 Total distance: 1.463E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([178], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:09:58,331 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.117E-01 	 Total distance: 1.117E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([204], dtype=int64), array([[False]])]] 	 class: [4 9]
10:09:58,508 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.235E-02 	 Total distance: 1.241E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([211], dtype=int64), array([[False]])]] 	 class: [4 9]
10:09:58,674 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.418E-01 	 Total distance: 7.658E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([186], dtype=int64), array([[False]])]] 	 class: [4 9]
10:09:58,674 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:58,674 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 67.93 	 cIDON = [4 9], cIDOFF = [4 9]
10:09:58,675 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:58,675 root DEBUG dOFF/dON = 5.2
10:09:58,675 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.93500093147266, 'dON1': 0.14625517807844007, 'cIDON1': array([4, 9], dtype=int64), 'dON_patch_1': 0.14625517807844007, 'nTON': 1, 'dON': 0.14625517807844007, 'dxOFFAngle': 88.97197541435146, 'dOFF1': 0.7658009914487868, 'cIDOFF1': array([4, 9], dtype=int64), 'dOFF_patch_1': 0.7658009914487868, 'nTOFF': 1, 'dOFF': 0.7658009914487868, 'SUCCESS': True}
10:09:58,685 root DEBUG 

=================== Experiment ID #126 	 Dual Point ID: 127 ===================
10:09:58,693 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.827E-08|<1.000E-06)
10:09:58,694 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:58,960 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.524E-02 	 Total distance: 6.524E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([28], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:59,163 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.215E-01 	 Total distance: 3.868E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([188], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:59,368 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.098E-01 	 Total distance: 4.966E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([42], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:59,537 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.185E-01 	 Total distance: 6.151E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([213], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:59,803 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.388E-03 	 Total distance: 5.388E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([8], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:59,804 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:59,804 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -98.26 	 cIDON = [2 4], cIDOFF = [2 4]
10:09:59,804 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:59,804 root DEBUG dOFF/dON = 0.0
10:09:59,804 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.18063243381908, 'dON1': 0.6150972826706117, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.6150972826706117, 'nTON': 1, 'dON': 0.6150972826706117, 'dxOFFAngle': 89.43047827965668, 'dOFF1': 0.005387942978726927, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.005387942978726927, 'nTOFF': 1, 'dOFF': 0.005387942978726927, 'SUCCESS': False}
10:09:59,815 root DEBUG 

=================== Experiment ID #127 	 Dual Point ID: 128 ===================
10:09:59,826 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.868E-08|<1.000E-06)
10:09:59,827 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:00,101 root DEBUG Side: ON	 Angle(dx0, dx): 1.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.067E-02 	 Total distance: 3.067E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([5], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:00,446 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.611E-02 	 Total distance: 6.611E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([63], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:00,674 root DEBUG Side: OFF	 Angle(dx0, dx): 0.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.905E-01 	 Total distance: 2.566E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([164], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:00,674 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:00,674 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 78.65 	 cIDON = [2 7], cIDOFF = [2 7]
10:10:00,674 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:00,674 root DEBUG dOFF/dON = 8.4
10:10:00,674 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.98462372812403, 'dON1': 0.030673595930458132, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.030673595930458132, 'nTON': 1, 'dON': 0.030673595930458132, 'dxOFFAngle': 88.08271629555507, 'dOFF1': 0.25662405209610595, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.25662405209610595, 'nTOFF': 1, 'dOFF': 0.25662405209610595, 'SUCCESS': True}
10:10:00,680 root DEBUG 

=================== Experiment ID #128 	 Dual Point ID: 129 ===================
10:10:00,685 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.347E-10|<1.000E-06)
10:10:00,685 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:00,965 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.670E-02 	 Total distance: 6.670E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([1], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:01,185 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.767E-01 	 Total distance: 1.767E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([37], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:01,185 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:01,186 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 45.20 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:01,186 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:01,186 root DEBUG dOFF/dON = 2.6
10:10:01,186 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.55919851719254, 'dON1': 0.06669527680748238, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.06669527680748238, 'nTON': 1, 'dON': 0.06669527680748238, 'dxOFFAngle': 89.54277225110715, 'dOFF1': 0.17670420477841103, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.17670420477841103, 'nTOFF': 1, 'dOFF': 0.17670420477841103, 'SUCCESS': True}
10:10:01,197 root DEBUG 

=================== Experiment ID #129 	 Dual Point ID: 130 ===================
10:10:01,206 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.832E-08|<1.000E-06)
10:10:01,207 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:01,544 root DEBUG Side: ON	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.034E+00 	 Total distance: 1.034E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([224], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:10:01,778 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.010E-01 	 Total distance: 3.010E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([188], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:10:02,24 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.623E+00 	 Total distance: 1.924E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([17], dtype=int64), array([[False]])]] 	 class: [4 9]
10:10:02,243 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.063E-01 	 Total distance: 2.730E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([187], dtype=int64), array([[False]])]] 	 class: [4 9]
10:10:02,441 root DEBUG Side: OFF	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.420E-01 	 Total distance: 2.872E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([236], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:10:02,441 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:02,441 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 47.06 	 cIDON = [4 9], cIDOFF = [4 9]
10:10:02,441 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:02,441 root DEBUG dOFF/dON = 2.8
10:10:02,441 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.43862212835243, 'dON1': 1.03398793384811, 'cIDON1': array([4, 9], dtype=int64), 'dON_patch_1': 1.03398793384811, 'nTON': 1, 'dON': 1.03398793384811, 'dxOFFAngle': 89.41120988978409, 'dOFF1': 2.8724471457677865, 'cIDOFF1': array([4, 9], dtype=int64), 'dOFF_patch_1': 2.8724471457677865, 'nTOFF': 1, 'dOFF': 2.8724471457677865, 'SUCCESS': True}
10:10:02,448 root DEBUG 

=================== Experiment ID #130 	 Dual Point ID: 131 ===================
10:10:02,455 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.408E-08|<1.000E-06)
10:10:02,456 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:02,750 root DEBUG Side: ON	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.010E-02 	 Total distance: 6.010E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([51], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:03,14 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.289E-01 	 Total distance: 1.289E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([13], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:03,205 root DEBUG Side: OFF	 Angle(dx0, dx): 0.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.261E-01 	 Total distance: 8.550E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([76], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:03,205 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:03,206 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 86.87 	 cIDON = [3 6], cIDOFF = [3 6]
10:10:03,206 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:03,206 root DEBUG dOFF/dON = 14.2
10:10:03,206 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.6530897931584, 'dON1': 0.060097232877038574, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.060097232877038574, 'nTON': 1, 'dON': 0.060097232877038574, 'dxOFFAngle': 88.44386865103142, 'dOFF1': 0.8550213756966734, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.8550213756966734, 'nTOFF': 1, 'dOFF': 0.8550213756966734, 'SUCCESS': True}
10:10:03,213 root DEBUG 

=================== Experiment ID #131 	 Dual Point ID: 132 ===================
10:10:03,220 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.842E-09|<1.000E-06)
10:10:03,220 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:03,459 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.814E-01 	 Total distance: 3.814E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([89], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:10:03,656 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.255E-01 	 Total distance: 1.107E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([57], dtype=int64), array([[False]])]] 	 class: [6 7]
10:10:03,859 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.065E-02 	 Total distance: 1.168E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([5], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:10:04,160 root DEBUG Side: ON	 Angle(dx0, dx): 0.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.267E+00 	 Total distance: 2.435E+00 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([33], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:10:04,333 root DEBUG Side: ON	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.510E-01 	 Total distance: 2.586E+00 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([212], dtype=int64), array([[False]])]] 	 class: [6 7]
10:10:04,536 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.664E-01 	 Total distance: 3.152E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([5], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:10:04,770 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.789E-01 	 Total distance: 2.789E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([254], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:10:04,981 root DEBUG Side: OFF	 Angle(dx0, dx): 0.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.995E-01 	 Total distance: 4.784E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([84], dtype=int64), array([[False]])]] 	 class: [6 7]
10:10:04,981 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:04,981 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -73.64 	 cIDON = [6 7], cIDOFF = [6 7]
10:10:04,982 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:04,982 root DEBUG dOFF/dON = 0.2
10:10:04,982 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.79569654155962, 'dON1': 3.151974072962991, 'cIDON1': array([6, 7], dtype=int64), 'dON_patch_1': 3.151974072962991, 'nTON': 1, 'dON': 3.151974072962991, 'dxOFFAngle': 88.78026414559325, 'dOFF1': 0.47844183303644516, 'cIDOFF1': array([6, 7], dtype=int64), 'dOFF_patch_1': 0.47844183303644516, 'nTOFF': 1, 'dOFF': 0.47844183303644516, 'SUCCESS': False}
10:10:04,991 root DEBUG 

=================== Experiment ID #132 	 Dual Point ID: 133 ===================
10:10:05,0 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.431E-08|<1.000E-06)
10:10:05,0 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:05,273 root DEBUG Side: ON	 Angle(dx0, dx): 0.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.253E-01 	 Total distance: 2.253E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([47], dtype=int64), array([[False]])]] 	 class: [3 9]
10:10:05,485 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.244E-02 	 Total distance: 5.244E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([58], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:10:05,486 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:05,486 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -62.23 	 cIDON = [3 9], cIDOFF = [3 9]
10:10:05,486 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:05,486 root DEBUG dOFF/dON = 0.2
10:10:05,486 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.58186818839523, 'dON1': 0.22529574847471956, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.22529574847471956, 'nTON': 1, 'dON': 0.22529574847471956, 'dxOFFAngle': 88.8467168140585, 'dOFF1': 0.05244460014935313, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.05244460014935313, 'nTOFF': 1, 'dOFF': 0.05244460014935313, 'SUCCESS': False}
10:10:05,500 root DEBUG 

=================== Experiment ID #133 	 Dual Point ID: 134 ===================
10:10:05,513 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.434E-08|<1.000E-06)
10:10:05,513 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:05,821 root DEBUG Side: ON	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.870E-02 	 Total distance: 1.870E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([180], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:06,93 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.321E-01 	 Total distance: 6.321E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([226], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:06,93 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:06,94 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 94.25 	 cIDON = [5 7], cIDOFF = [5 7]
10:10:06,94 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:06,94 root DEBUG dOFF/dON = 33.8
10:10:06,94 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.01054716495713, 'dON1': 0.018700273250222138, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.018700273250222138, 'nTON': 1, 'dON': 0.018700273250222138, 'dxOFFAngle': 88.20589919918089, 'dOFF1': 0.6321101216748642, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.6321101216748642, 'nTOFF': 1, 'dOFF': 0.6321101216748642, 'SUCCESS': True}
10:10:06,99 root DEBUG 

=================== Experiment ID #134 	 Dual Point ID: 135 ===================
10:10:06,105 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.264E-08|<1.000E-06)
10:10:06,106 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:06,386 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.245E-01 	 Total distance: 6.245E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([73], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:06,574 root DEBUG Side: ON	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.739E-03 	 Total distance: 6.263E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([44], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:06,847 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.011E-02 	 Total distance: 1.011E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([160], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:07,129 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.690E-01 	 Total distance: 3.791E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([205], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:07,359 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.952E-01 	 Total distance: 9.743E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([151], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:07,548 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.624E-01 	 Total distance: 1.537E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([40], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:07,548 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:07,548 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 42.09 	 cIDON = [5 7], cIDOFF = [5 7]
10:10:07,548 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:07,548 root DEBUG dOFF/dON = 2.5
10:10:07,548 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.56402226700284, 'dON1': 0.626260496247891, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.626260496247891, 'nTON': 1, 'dON': 0.626260496247891, 'dxOFFAngle': 88.9695988816492, 'dOFF1': 1.5366974330838357, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 1.5366974330838357, 'nTOFF': 1, 'dOFF': 1.5366974330838357, 'SUCCESS': True}
10:10:07,561 root DEBUG 

=================== Experiment ID #135 	 Dual Point ID: 136 ===================
10:10:07,569 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.674E-08|<1.000E-06)
10:10:07,569 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:07,920 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.817E-01 	 Total distance: 2.817E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([131], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:08,205 root DEBUG Side: OFF	 Angle(dx0, dx): 0.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.832E-01 	 Total distance: 4.832E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([8], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:08,205 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:08,206 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 26.33 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:08,206 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:08,206 root DEBUG dOFF/dON = 1.7
10:10:08,206 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.02420313687615, 'dON1': 0.28174095053375203, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.28174095053375203, 'nTON': 1, 'dON': 0.28174095053375203, 'dxOFFAngle': 87.83040584789458, 'dOFF1': 0.483150494113198, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.483150494113198, 'nTOFF': 1, 'dOFF': 0.483150494113198, 'SUCCESS': True}
10:10:08,213 root DEBUG 

=================== Experiment ID #136 	 Dual Point ID: 137 ===================
10:10:08,221 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.686E-09|<1.000E-06)
10:10:08,222 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:08,525 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.072E-01 	 Total distance: 2.072E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([212], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:08,724 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.472E-02 	 Total distance: 2.719E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([28], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:08,944 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.106E-01 	 Total distance: 4.825E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([151], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:09,204 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.353E-01 	 Total distance: 7.178E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([86], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:09,430 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.636E-02 	 Total distance: 7.741E-01 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([190], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:09,670 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.606E-01 	 Total distance: 1.035E+00 	 Future toggles: 0 	 Past toggles: 6 	 Toggled: [[1, array([167], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:09,923 root DEBUG Side: ON	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.520E-01 	 Total distance: 1.187E+00 	 Future toggles: 0 	 Past toggles: 7 	 Toggled: [[1, array([132], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:10,121 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.095E-01 	 Total distance: 1.296E+00 	 Future toggles: 0 	 Past toggles: 8 	 Toggled: [[1, array([87], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:10,353 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.547E-02 	 Total distance: 1.362E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([7], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:10,667 root DEBUG Side: OFF	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.905E-01 	 Total distance: 4.905E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([169], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:10,668 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:10,668 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -47.04 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:10,668 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:10,668 root DEBUG dOFF/dON = 0.4
10:10:10,668 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.62230825789803, 'dON1': 1.361719812939445, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 1.361719812939445, 'nTON': 1, 'dON': 1.361719812939445, 'dxOFFAngle': 89.51345739114694, 'dOFF1': 0.49049380764677797, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.49049380764677797, 'nTOFF': 1, 'dOFF': 0.49049380764677797, 'SUCCESS': False}
10:10:10,680 root DEBUG 

=================== Experiment ID #137 	 Dual Point ID: 138 ===================
10:10:10,690 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.798E-08|<1.000E-06)
10:10:10,691 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:11,24 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.303E-02 	 Total distance: 3.303E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([64], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:11,352 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.561E-01 	 Total distance: 1.561E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([28], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:11,494 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.117E-01 	 Total distance: 7.678E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([196], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:11,716 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.131E-01 	 Total distance: 9.808E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([240], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:11,938 root DEBUG Side: OFF	 Angle(dx0, dx): 0.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.524E-01 	 Total distance: 1.433E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([121], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:11,938 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:11,938 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 95.49 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:11,938 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:11,939 root DEBUG dOFF/dON = 43.4
10:10:11,939 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.81567595692964, 'dON1': 0.033031709184201, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.033031709184201, 'nTON': 1, 'dON': 0.033031709184201, 'dxOFFAngle': 89.80532203157385, 'dOFF1': 1.433198792562332, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 1.433198792562332, 'nTOFF': 1, 'dOFF': 1.433198792562332, 'SUCCESS': True}
10:10:11,947 root DEBUG 

=================== Experiment ID #138 	 Dual Point ID: 139 ===================
10:10:11,956 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.185E-09|<1.000E-06)
10:10:11,956 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:12,253 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.483E-01 	 Total distance: 5.483E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([133], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:10:12,428 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.139E-01 	 Total distance: 8.622E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([224], dtype=int64), array([[False]])]] 	 class: [4 6]
10:10:12,649 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.079E-01 	 Total distance: 1.070E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([83], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:10:12,980 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.298E-01 	 Total distance: 1.298E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([24], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:10:12,980 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:12,981 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -78.36 	 cIDON = [4 6], cIDOFF = [4 6]
10:10:12,981 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:12,981 root DEBUG dOFF/dON = 0.1
10:10:12,981 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.92211307196499, 'dON1': 1.0700740771355597, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 1.0700740771355597, 'nTON': 1, 'dON': 1.0700740771355597, 'dxOFFAngle': 89.99901684303818, 'dOFF1': 0.12983172338746876, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.12983172338746876, 'nTOFF': 1, 'dOFF': 0.12983172338746876, 'SUCCESS': False}
10:10:12,993 root DEBUG 

=================== Experiment ID #139 	 Dual Point ID: 140 ===================
10:10:13,2 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.229E-09|<1.000E-06)
10:10:13,3 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:13,250 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.922E-03 	 Total distance: 8.922E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([139], dtype=int64), array([[False]])]] 	 class: [1 2]
10:10:13,455 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.901E-02 	 Total distance: 1.901E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([139], dtype=int64), array([[False]])]] 	 class: [0 2]
10:10:13,455 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:13,455 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 36.12 	 cIDON = [1 2], cIDOFF = [0 2]
10:10:13,455 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:13,455 root DEBUG dOFF/dON = 2.1
10:10:13,455 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.7910494284263, 'dON1': 0.008922358914051945, 'cIDON1': array([1, 2], dtype=int64), 'dON_patch_1': 0.008922358914051945, 'nTON': 1, 'dON': 0.008922358914051945, 'dxOFFAngle': 89.01076271744414, 'dOFF1': 0.019012375051343563, 'cIDOFF1': array([0, 2], dtype=int64), 'dOFF_patch_1': 0.019012375051343563, 'nTOFF': 1, 'dOFF': 0.019012375051343563, 'SUCCESS': True}
10:10:13,464 root DEBUG 

=================== Experiment ID #140 	 Dual Point ID: 141 ===================
10:10:13,477 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.350E-08|<1.000E-06)
10:10:13,477 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:13,743 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.777E-01 	 Total distance: 2.777E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([231], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:10:14,32 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.992E-01 	 Total distance: 1.992E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([7], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:10:14,285 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.928E-01 	 Total distance: 7.920E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([100], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:10:14,285 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:14,286 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 48.08 	 cIDON = [4 8], cIDOFF = [4 8]
10:10:14,286 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:14,286 root DEBUG dOFF/dON = 2.9
10:10:14,286 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.85590798292786, 'dON1': 0.27769632780791714, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.27769632780791714, 'nTON': 1, 'dON': 0.27769632780791714, 'dxOFFAngle': 89.86989258481434, 'dOFF1': 0.7919895369592788, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.7919895369592788, 'nTOFF': 1, 'dOFF': 0.7919895369592788, 'SUCCESS': True}
10:10:14,296 root DEBUG 

=================== Experiment ID #141 	 Dual Point ID: 142 ===================
10:10:14,308 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.978E-09|<1.000E-06)
10:10:14,309 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:14,610 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.654E-01 	 Total distance: 1.654E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([123], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:14,750 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.656E-01 	 Total distance: 5.310E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([49], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:15,70 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.368E-02 	 Total distance: 8.368E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([27], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:15,70 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:15,70 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -72.77 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:15,70 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:15,70 root DEBUG dOFF/dON = 0.2
10:10:15,70 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.54417055211243, 'dON1': 0.5309906253283365, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.5309906253283365, 'nTON': 1, 'dON': 0.5309906253283365, 'dxOFFAngle': 89.6204076011926, 'dOFF1': 0.08368375943157993, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.08368375943157993, 'nTOFF': 1, 'dOFF': 0.08368375943157993, 'SUCCESS': False}
10:10:15,82 root DEBUG 

=================== Experiment ID #142 	 Dual Point ID: 143 ===================
10:10:15,96 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.849E-09|<1.000E-06)
10:10:15,96 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:15,338 root DEBUG Side: ON	 Angle(dx0, dx): 1.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.065E-06 	 Total distance: 5.065E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 9]
10:10:15,592 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.296E-02 	 Total distance: 3.296E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([139], dtype=int64), array([[False]])]] 	 class: [0 9]
10:10:15,592 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:15,592 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.97 	 cIDON = [0 9], cIDOFF = [0 9]
10:10:15,592 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:15,592 root DEBUG dOFF/dON = 6507.3
10:10:15,592 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.43357602317008, 'dON1': 5.06521362295634e-06, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 5.06521362295634e-06, 'nTON': 1, 'dON': 5.06521362295634e-06, 'dxOFFAngle': 89.41594913623416, 'dOFF1': 0.03296089405851115, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.03296089405851115, 'nTOFF': 1, 'dOFF': 0.03296089405851115, 'SUCCESS': True}
10:10:15,602 root DEBUG 

=================== Experiment ID #143 	 Dual Point ID: 144 ===================
10:10:15,610 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.351E-08|<1.000E-06)
10:10:15,610 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:15,893 root DEBUG Side: ON	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.072E-01 	 Total distance: 1.072E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([62], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:16,191 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.610E-01 	 Total distance: 1.610E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([176], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:16,414 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.232E-01 	 Total distance: 7.842E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([62], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:16,556 root DEBUG Side: OFF	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.401E-01 	 Total distance: 9.243E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([176], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:16,556 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:16,557 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 79.21 	 cIDON = [3 6], cIDOFF = [3 6]
10:10:16,557 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:16,557 root DEBUG dOFF/dON = 8.6
10:10:16,557 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.50090798318814, 'dON1': 0.10722795346055, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.10722795346055, 'nTON': 1, 'dON': 0.10722795346055, 'dxOFFAngle': 89.61974040432945, 'dOFF1': 0.9243005285607035, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.9243005285607035, 'nTOFF': 1, 'dOFF': 0.9243005285607035, 'SUCCESS': True}
10:10:16,566 root DEBUG 

=================== Experiment ID #144 	 Dual Point ID: 145 ===================
10:10:16,572 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.575E-08|<1.000E-06)
10:10:16,572 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:16,860 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.674E-01 	 Total distance: 2.674E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([57], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:17,76 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.033E-01 	 Total distance: 3.708E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([17], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:17,371 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.662E-01 	 Total distance: 9.370E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([87], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:17,567 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.430E-02 	 Total distance: 1.011E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([248], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:17,873 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.665E-01 	 Total distance: 5.665E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([144], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:18,15 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.007E-03 	 Total distance: 5.705E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([10], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:18,15 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:18,15 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -27.86 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:18,16 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:18,16 root DEBUG dOFF/dON = 0.6
10:10:18,16 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.19082207116365, 'dON1': 1.0112937651418736, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 1.0112937651418736, 'nTON': 1, 'dON': 1.0112937651418736, 'dxOFFAngle': 89.2945440067577, 'dOFF1': 0.5705313701718427, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.5705313701718427, 'nTOFF': 1, 'dOFF': 0.5705313701718427, 'SUCCESS': False}
10:10:18,28 root DEBUG 

=================== Experiment ID #145 	 Dual Point ID: 146 ===================
10:10:18,35 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.364E-08|<1.000E-06)
10:10:18,36 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:18,275 root DEBUG Side: ON	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.898E-01 	 Total distance: 1.898E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([21], dtype=int64), array([[False]])]] 	 class: [7 9]
10:10:18,611 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.638E-01 	 Total distance: 1.638E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([50], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:10:18,611 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:18,611 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -7.37 	 cIDON = [7 9], cIDOFF = [7 9]
10:10:18,612 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:18,612 root DEBUG dOFF/dON = 0.9
10:10:18,612 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.23600197335504, 'dON1': 0.18979898251972177, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.18979898251972177, 'nTON': 1, 'dON': 0.18979898251972177, 'dxOFFAngle': 89.12578918437404, 'dOFF1': 0.1637563911134805, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.1637563911134805, 'nTOFF': 1, 'dOFF': 0.1637563911134805, 'SUCCESS': False}
10:10:18,620 root DEBUG 

=================== Experiment ID #146 	 Dual Point ID: 147 ===================
10:10:18,627 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.382E-08|<1.000E-06)
10:10:18,627 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:18,918 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.534E-01 	 Total distance: 3.534E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([160], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:10:19,150 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.853E-01 	 Total distance: 5.386E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([5], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:10:19,327 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.291E-01 	 Total distance: 1.168E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([33], dtype=int64), array([[False]])]] 	 class: [4 7]
10:10:19,588 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.691E-01 	 Total distance: 5.691E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([65], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:10:19,796 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.841E-01 	 Total distance: 1.253E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([33], dtype=int64), array([[False]])]] 	 class: [4 7]
10:10:20,21 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.157E-02 	 Total distance: 1.285E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([63], dtype=int64), array([[False]])]] 	 class: [4 7]
10:10:20,177 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.107E-01 	 Total distance: 1.595E+00 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([216], dtype=int64), array([[False]])]] 	 class: [4 7]
10:10:20,382 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.140E-01 	 Total distance: 1.909E+00 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([154], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:10:20,577 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.058E-01 	 Total distance: 2.015E+00 	 Future toggles: 0 	 Past toggles: 6 	 Toggled: [[1, array([155], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:10:20,760 root DEBUG Side: OFF	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.310E-01 	 Total distance: 2.446E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([51], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:10:20,760 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:20,761 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 35.38 	 cIDON = [4 7], cIDOFF = [4 7]
10:10:20,761 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:20,761 root DEBUG dOFF/dON = 2.1
10:10:20,761 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.97091422802852, 'dON1': 1.167760815932749, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 1.167760815932749, 'nTON': 1, 'dON': 1.167760815932749, 'dxOFFAngle': 88.77743678490776, 'dOFF1': 2.446308667408144, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 2.446308667408144, 'nTOFF': 1, 'dOFF': 2.446308667408144, 'SUCCESS': True}
10:10:20,769 root DEBUG 

=================== Experiment ID #147 	 Dual Point ID: 148 ===================
10:10:20,778 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.169E-08|<1.000E-06)
10:10:20,778 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:21,91 root DEBUG Side: ON	 Angle(dx0, dx): 0.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.391E-01 	 Total distance: 1.391E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([201], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:10:21,409 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.364E-01 	 Total distance: 7.364E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([53], dtype=int64), array([[False]])]] 	 class: [6 9]
10:10:21,643 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.608E-01 	 Total distance: 9.972E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([192], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:10:21,643 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:21,643 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 75.52 	 cIDON = [6 9], cIDOFF = [6 9]
10:10:21,643 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:21,643 root DEBUG dOFF/dON = 7.2
10:10:21,643 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.99594442977093, 'dON1': 0.1390651569308184, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.1390651569308184, 'nTON': 1, 'dON': 0.1390651569308184, 'dxOFFAngle': 89.66323367117134, 'dOFF1': 0.9972461764485991, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.9972461764485991, 'nTOFF': 1, 'dOFF': 0.9972461764485991, 'SUCCESS': True}
10:10:21,649 root DEBUG 

=================== Experiment ID #148 	 Dual Point ID: 149 ===================
10:10:21,659 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.665E-09|<1.000E-06)
10:10:21,659 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:21,966 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.722E-01 	 Total distance: 9.722E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([173], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:22,220 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.554E-01 	 Total distance: 1.428E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([123], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:22,608 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.279E-01 	 Total distance: 3.279E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([63], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:22,827 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.320E-01 	 Total distance: 4.599E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([100], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:23,57 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.548E-01 	 Total distance: 7.147E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([168], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:23,57 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:23,57 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -33.28 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:23,57 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:23,57 root DEBUG dOFF/dON = 0.5
10:10:23,57 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.65306760960574, 'dON1': 1.4276384090788568, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 1.4276384090788568, 'nTON': 1, 'dON': 1.4276384090788568, 'dxOFFAngle': 89.06845496433365, 'dOFF1': 0.7146752178965732, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.7146752178965732, 'nTOFF': 1, 'dOFF': 0.7146752178965732, 'SUCCESS': False}
10:10:23,67 root DEBUG 

=================== Experiment ID #149 	 Dual Point ID: 150 ===================
10:10:23,82 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.290E-08|<1.000E-06)
10:10:23,83 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:23,360 root DEBUG Side: ON	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.578E-01 	 Total distance: 5.578E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([181], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:23,591 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.302E-01 	 Total distance: 5.302E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([87], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:23,591 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:23,591 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -2.54 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:23,591 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:23,592 root DEBUG dOFF/dON = 1.0
10:10:23,592 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.73516372908723, 'dON1': 0.5578480234871949, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.5578480234871949, 'nTON': 1, 'dON': 0.5578480234871949, 'dxOFFAngle': 89.13501919640105, 'dOFF1': 0.5302162112494112, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.5302162112494112, 'nTOFF': 1, 'dOFF': 0.5302162112494112, 'SUCCESS': False}
10:10:23,601 root DEBUG 

=================== Experiment ID #150 	 Dual Point ID: 151 ===================
10:10:23,609 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.467E-08|<1.000E-06)
10:10:23,609 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:23,834 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.260E-02 	 Total distance: 2.260E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([73], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:24,51 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.256E-01 	 Total distance: 6.482E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([28], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:24,212 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.508E-01 	 Total distance: 8.991E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([204], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:24,459 root DEBUG Side: OFF	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.969E-02 	 Total distance: 5.969E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([21], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:24,459 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:24,459 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -87.55 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:24,460 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:24,460 root DEBUG dOFF/dON = 0.1
10:10:24,460 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.87482041109375, 'dON1': 0.8990897954490042, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.8990897954490042, 'nTON': 1, 'dON': 0.8990897954490042, 'dxOFFAngle': 89.7298877235989, 'dOFF1': 0.059686223875926626, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.059686223875926626, 'nTOFF': 1, 'dOFF': 0.059686223875926626, 'SUCCESS': False}
10:10:24,469 root DEBUG 

=================== Experiment ID #151 	 Dual Point ID: 152 ===================
10:10:24,476 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.283E-09|<1.000E-06)
10:10:24,477 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:24,831 root DEBUG Side: ON	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.951E-01 	 Total distance: 5.951E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([245], dtype=int64), array([[False]])]] 	 class: [5 8]
10:10:25,170 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.037E+00 	 Total distance: 1.037E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([211], dtype=int64), array([[False]])]] 	 class: [5 8]
10:10:25,170 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:25,170 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 27.06 	 cIDON = [5 8], cIDOFF = [5 8]
10:10:25,170 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:25,170 root DEBUG dOFF/dON = 1.7
10:10:25,171 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.27318031942231, 'dON1': 0.59507647948216, 'cIDON1': array([5, 8], dtype=int64), 'dON_patch_1': 0.59507647948216, 'nTON': 1, 'dON': 0.59507647948216, 'dxOFFAngle': 89.30770979534275, 'dOFF1': 1.0366795957068557, 'cIDOFF1': array([5, 8], dtype=int64), 'dOFF_patch_1': 1.0366795957068557, 'nTOFF': 1, 'dOFF': 1.0366795957068557, 'SUCCESS': True}
10:10:25,177 root DEBUG 

=================== Experiment ID #152 	 Dual Point ID: 153 ===================
10:10:25,186 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.899E-08|<1.000E-06)
10:10:25,187 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:25,493 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.438E-01 	 Total distance: 4.438E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([29], dtype=int64), array([[False]])]] 	 class: [1 8]
10:10:25,788 root DEBUG Side: OFF	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.136E-01 	 Total distance: 1.136E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([44], dtype=int64), array([[False]])]] 	 class: [1 8]
10:10:26,49 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.074E-01 	 Total distance: 6.210E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([179], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:10:26,49 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:26,49 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 16.64 	 cIDON = [1 8], cIDOFF = [1 8]
10:10:26,49 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:26,50 root DEBUG dOFF/dON = 1.4
10:10:26,50 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.471640557431, 'dON1': 0.4438105694531822, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 0.4438105694531822, 'nTON': 1, 'dON': 0.4438105694531822, 'dxOFFAngle': 88.59930228461836, 'dOFF1': 0.6210423112882922, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 0.6210423112882922, 'nTOFF': 1, 'dOFF': 0.6210423112882922, 'SUCCESS': True}
10:10:26,60 root DEBUG 

=================== Experiment ID #153 	 Dual Point ID: 154 ===================
10:10:26,69 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.433E-08|<1.000E-06)
10:10:26,69 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:26,412 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.724E-02 	 Total distance: 7.724E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([13], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:26,716 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.013E-01 	 Total distance: 4.013E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([90], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:26,716 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:26,716 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 67.72 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:26,717 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:26,717 root DEBUG dOFF/dON = 5.2
10:10:26,717 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.8277049321901, 'dON1': 0.07723963523618675, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.07723963523618675, 'nTON': 1, 'dON': 0.07723963523618675, 'dxOFFAngle': 89.97077051401232, 'dOFF1': 0.4012553500543563, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.4012553500543563, 'nTOFF': 1, 'dOFF': 0.4012553500543563, 'SUCCESS': True}
10:10:26,726 root DEBUG 

=================== Experiment ID #154 	 Dual Point ID: 155 ===================
10:10:26,735 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.568E-09|<1.000E-06)
10:10:26,735 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:26,988 root DEBUG Side: ON	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.423E-01 	 Total distance: 1.423E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([26], dtype=int64), array([[False]])]] 	 class: [2 4]
10:10:27,337 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.491E-01 	 Total distance: 5.491E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([25], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:10:27,338 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:27,338 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 58.84 	 cIDON = [2 4], cIDOFF = [2 4]
10:10:27,339 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:27,339 root DEBUG dOFF/dON = 3.9
10:10:27,339 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.25899315405293, 'dON1': 0.14230922987477404, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.14230922987477404, 'nTON': 1, 'dON': 0.14230922987477404, 'dxOFFAngle': 89.4368539965745, 'dOFF1': 0.5491050271468202, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.5491050271468202, 'nTOFF': 1, 'dOFF': 0.5491050271468202, 'SUCCESS': True}
10:10:27,356 root DEBUG 

=================== Experiment ID #155 	 Dual Point ID: 156 ===================
10:10:27,365 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.081E-08|<1.000E-06)
10:10:27,365 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:27,664 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.583E-01 	 Total distance: 3.583E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([102], dtype=int64), array([[False]])]] 	 class: [7 8]
10:10:27,828 root DEBUG Side: ON	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.657E-02 	 Total distance: 4.349E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([171], dtype=int64), array([[False]])]] 	 class: [7 8]
10:10:28,73 root DEBUG Side: OFF	 Angle(dx0, dx): 0.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.358E-01 	 Total distance: 6.358E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([59], dtype=int64), array([[ True]])]] 	 class: [7 8]
10:10:28,74 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:28,74 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 18.77 	 cIDON = [7 8], cIDOFF = [7 8]
10:10:28,74 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:28,74 root DEBUG dOFF/dON = 1.5
10:10:28,74 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.2731156530517, 'dON1': 0.4349144318706802, 'cIDON1': array([7, 8], dtype=int64), 'dON_patch_1': 0.4349144318706802, 'nTON': 1, 'dON': 0.4349144318706802, 'dxOFFAngle': 89.48964352738486, 'dOFF1': 0.6358485091595274, 'cIDOFF1': array([7, 8], dtype=int64), 'dOFF_patch_1': 0.6358485091595274, 'nTOFF': 1, 'dOFF': 0.6358485091595274, 'SUCCESS': True}
10:10:28,83 root DEBUG 

=================== Experiment ID #156 	 Dual Point ID: 157 ===================
10:10:28,95 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.886E-09|<1.000E-06)
10:10:28,95 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:28,444 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.395E-01 	 Total distance: 1.395E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([121], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:10:28,745 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.887E-01 	 Total distance: 4.887E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([240], dtype=int64), array([[False]])]] 	 class: [6 7]
10:10:28,745 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:28,745 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 55.58 	 cIDON = [6 7], cIDOFF = [6 7]
10:10:28,745 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:28,745 root DEBUG dOFF/dON = 3.5
10:10:28,745 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.89447327127922, 'dON1': 0.1395393293684225, 'cIDON1': array([6, 7], dtype=int64), 'dON_patch_1': 0.1395393293684225, 'nTON': 1, 'dON': 0.1395393293684225, 'dxOFFAngle': 89.78918542086892, 'dOFF1': 0.48872478217098414, 'cIDOFF1': array([6, 7], dtype=int64), 'dOFF_patch_1': 0.48872478217098414, 'nTOFF': 1, 'dOFF': 0.48872478217098414, 'SUCCESS': True}
10:10:28,753 root DEBUG 

=================== Experiment ID #157 	 Dual Point ID: 158 ===================
10:10:28,759 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.438E-08|<1.000E-06)
10:10:28,759 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:29,61 root DEBUG Side: ON	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.662E-01 	 Total distance: 5.662E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([109], dtype=int64), array([[False]])]] 	 class: [4 9]
10:10:29,316 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.933E-01 	 Total distance: 3.933E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([192], dtype=int64), array([[False]])]] 	 class: [4 9]
10:10:29,507 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.023E+00 	 Total distance: 1.416E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([144], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:10:29,508 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:29,508 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 42.87 	 cIDON = [4 9], cIDOFF = [4 9]
10:10:29,508 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:29,508 root DEBUG dOFF/dON = 2.5
10:10:29,508 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.98899999967936, 'dON1': 0.5662066410996126, 'cIDON1': array([4, 9], dtype=int64), 'dON_patch_1': 0.5662066410996126, 'nTON': 1, 'dON': 0.5662066410996126, 'dxOFFAngle': 89.28300722568694, 'dOFF1': 1.4159026631910487, 'cIDOFF1': array([4, 9], dtype=int64), 'dOFF_patch_1': 1.4159026631910487, 'nTOFF': 1, 'dOFF': 1.4159026631910487, 'SUCCESS': True}
10:10:29,517 root DEBUG 

=================== Experiment ID #158 	 Dual Point ID: 159 ===================
10:10:29,529 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.402E-08|<1.000E-06)
10:10:29,529 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:29,857 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.206E-01 	 Total distance: 1.206E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([100], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:10:30,47 root DEBUG Side: ON	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.703E-01 	 Total distance: 8.910E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([195], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:10:30,346 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.996E-01 	 Total distance: 2.996E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([2], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:10:30,532 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.323E-01 	 Total distance: 4.319E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([48], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:10:30,746 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.130E-01 	 Total distance: 9.449E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([181], dtype=int64), array([[False]])]] 	 class: [4 7]
10:10:30,746 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:30,746 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 2.94 	 cIDON = [4 7], cIDOFF = [4 7]
10:10:30,746 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:30,746 root DEBUG dOFF/dON = 1.1
10:10:30,746 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.65956962764602, 'dON1': 0.8909562524341856, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.8909562524341856, 'nTON': 1, 'dON': 0.8909562524341856, 'dxOFFAngle': 89.86710763040999, 'dOFF1': 0.9448740422375157, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.9448740422375157, 'nTOFF': 1, 'dOFF': 0.9448740422375157, 'SUCCESS': True}
10:10:30,753 root DEBUG 

=================== Experiment ID #159 	 Dual Point ID: 160 ===================
10:10:30,763 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.640E-08|<1.000E-06)
10:10:30,763 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:31,98 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.331E-01 	 Total distance: 5.331E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([146], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:31,393 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.946E-01 	 Total distance: 1.946E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([71], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:31,591 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.769E-01 	 Total distance: 4.715E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([37], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:31,784 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.648E-01 	 Total distance: 9.363E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([174], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:31,959 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.565E-02 	 Total distance: 9.620E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([112], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:32,141 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.408E+00 	 Total distance: 2.370E+00 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([12], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:32,387 root DEBUG Side: OFF	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.355E-01 	 Total distance: 2.905E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([25], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:32,387 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:32,387 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 68.99 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:32,387 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:32,387 root DEBUG dOFF/dON = 5.5
10:10:32,387 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.85803271630466, 'dON1': 0.5330828071454198, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.5330828071454198, 'nTON': 1, 'dON': 0.5330828071454198, 'dxOFFAngle': 89.82517513253651, 'dOFF1': 2.9054651665548463, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 2.9054651665548463, 'nTOFF': 1, 'dOFF': 2.9054651665548463, 'SUCCESS': True}
10:10:32,395 root DEBUG 

=================== Experiment ID #160 	 Dual Point ID: 161 ===================
10:10:32,405 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.479E-08|<1.000E-06)
10:10:32,405 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:32,707 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.746E-01 	 Total distance: 5.746E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([67], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:32,917 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.035E+00 	 Total distance: 1.609E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([196], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:33,175 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.168E-01 	 Total distance: 1.926E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([225], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:33,490 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.541E-02 	 Total distance: 8.541E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([172], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:33,490 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:33,490 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -91.51 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:33,491 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:33,491 root DEBUG dOFF/dON = 0.0
10:10:33,491 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.27316999230175, 'dON1': 1.9260245905644608, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 1.9260245905644608, 'nTON': 1, 'dON': 1.9260245905644608, 'dxOFFAngle': 89.48869959545094, 'dOFF1': 0.08541030646489797, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.08541030646489797, 'nTOFF': 1, 'dOFF': 0.08541030646489797, 'SUCCESS': False}
10:10:33,497 root DEBUG 

=================== Experiment ID #161 	 Dual Point ID: 162 ===================
10:10:33,505 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.690E-10|<1.000E-06)
10:10:33,505 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:33,789 root DEBUG Side: ON	 Angle(dx0, dx): 1.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.171E-06 	 Total distance: 2.171E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 3]
10:10:34,74 root DEBUG Side: OFF	 Angle(dx0, dx): 1.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.349E-02 	 Total distance: 3.349E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([21], dtype=int64), array([[False]])]] 	 class: [0 3]
10:10:34,74 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:34,74 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.99 	 cIDON = [0 3], cIDOFF = [0 3]
10:10:34,74 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:34,74 root DEBUG dOFF/dON = 15429.5
10:10:34,74 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.82883055750536, 'dON1': 2.1707094471146653e-06, 'cIDON1': array([0, 3], dtype=int64), 'dON_patch_1': 2.1707094471146653e-06, 'nTON': 1, 'dON': 2.1707094471146653e-06, 'dxOFFAngle': 89.49326885826943, 'dOFF1': 0.03349303648330485, 'cIDOFF1': array([0, 3], dtype=int64), 'dOFF_patch_1': 0.03349303648330485, 'nTOFF': 1, 'dOFF': 0.03349303648330485, 'SUCCESS': True}
10:10:34,85 root DEBUG 

=================== Experiment ID #162 	 Dual Point ID: 163 ===================
10:10:34,94 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.093E-08|<1.000E-06)
10:10:34,94 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:34,401 root DEBUG Side: ON	 Angle(dx0, dx): 1.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.420E-01 	 Total distance: 1.420E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([38], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:34,764 root DEBUG Side: OFF	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.063E-01 	 Total distance: 3.063E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([30], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:34,764 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:34,764 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 36.64 	 cIDON = [2 7], cIDOFF = [2 7]
10:10:34,764 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:34,764 root DEBUG dOFF/dON = 2.2
10:10:34,764 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.31887634895726, 'dON1': 0.1420389217439453, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.1420389217439453, 'nTON': 1, 'dON': 0.1420389217439453, 'dxOFFAngle': 89.3818114751801, 'dOFF1': 0.30630645911071586, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.30630645911071586, 'nTOFF': 1, 'dOFF': 0.30630645911071586, 'SUCCESS': True}
10:10:34,775 root DEBUG 

=================== Experiment ID #163 	 Dual Point ID: 164 ===================
10:10:34,784 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.333E-08|<1.000E-06)
10:10:34,784 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:35,104 root DEBUG Side: ON	 Angle(dx0, dx): 0.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.270E-01 	 Total distance: 8.270E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([98], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:10:35,368 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.511E-01 	 Total distance: 6.511E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([231], dtype=int64), array([[False]])]] 	 class: [4 8]
10:10:35,368 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:35,368 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -11.90 	 cIDON = [4 8], cIDOFF = [4 8]
10:10:35,368 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:35,368 root DEBUG dOFF/dON = 0.8
10:10:35,368 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.5658869028068, 'dON1': 0.8269706230502709, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.8269706230502709, 'nTON': 1, 'dON': 0.8269706230502709, 'dxOFFAngle': 89.58214878679664, 'dOFF1': 0.6511404158547928, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.6511404158547928, 'nTOFF': 1, 'dOFF': 0.6511404158547928, 'SUCCESS': False}
10:10:35,374 root DEBUG 

=================== Experiment ID #164 	 Dual Point ID: 165 ===================
10:10:35,380 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.830E-08|<1.000E-06)
10:10:35,381 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:35,646 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.366E-01 	 Total distance: 1.366E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([96], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:10:35,819 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.928E-02 	 Total distance: 2.259E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([5], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:10:35,985 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.678E-02 	 Total distance: 2.426E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([134], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:10:36,301 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.915E-01 	 Total distance: 6.915E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([53], dtype=int64), array([[False]])]] 	 class: [6 7]
10:10:36,473 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.866E-02 	 Total distance: 7.102E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([190], dtype=int64), array([[False]])]] 	 class: [6 7]
10:10:36,700 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.632E-01 	 Total distance: 1.273E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([8], dtype=int64), array([[False]])]] 	 class: [6 7]
10:10:36,873 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.648E-01 	 Total distance: 1.438E+00 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([29], dtype=int64), array([[False]])]] 	 class: [6 7]
10:10:37,30 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.157E-01 	 Total distance: 1.554E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([92], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:10:37,31 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:37,31 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 72.99 	 cIDON = [6 7], cIDOFF = [6 7]
10:10:37,31 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:37,31 root DEBUG dOFF/dON = 6.4
10:10:37,31 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.86546645615088, 'dON1': 0.24264219991644684, 'cIDON1': array([6, 7], dtype=int64), 'dON_patch_1': 0.24264219991644684, 'nTON': 1, 'dON': 0.24264219991644684, 'dxOFFAngle': 89.78080536900629, 'dOFF1': 1.5538299736253995, 'cIDOFF1': array([6, 7], dtype=int64), 'dOFF_patch_1': 1.5538299736253995, 'nTOFF': 1, 'dOFF': 1.5538299736253995, 'SUCCESS': True}
10:10:37,38 root DEBUG 

=================== Experiment ID #165 	 Dual Point ID: 166 ===================
10:10:37,45 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.126E-07|<1.000E-06)
10:10:37,45 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:37,301 root DEBUG Side: ON	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.398E-01 	 Total distance: 2.398E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([34], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:10:37,568 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.722E-01 	 Total distance: 2.722E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([10], dtype=int64), array([[False]])]] 	 class: [2 3]
10:10:37,568 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:37,569 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 6.34 	 cIDON = [2 3], cIDOFF = [2 3]
10:10:37,569 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:37,569 root DEBUG dOFF/dON = 1.1
10:10:37,569 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.7795914456267, 'dON1': 0.23976376995995607, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.23976376995995607, 'nTON': 1, 'dON': 0.23976376995995607, 'dxOFFAngle': 88.14772985002348, 'dOFF1': 0.27220543771379113, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.27220543771379113, 'nTOFF': 1, 'dOFF': 0.27220543771379113, 'SUCCESS': True}
10:10:37,579 root DEBUG 

=================== Experiment ID #166 	 Dual Point ID: 167 ===================
10:10:37,586 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.055E-08|<1.000E-06)
10:10:37,586 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:37,859 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.106E-01 	 Total distance: 1.106E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([13], dtype=int64), array([[False]])]] 	 class: [5 9]
10:10:38,119 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.663E-03 	 Total distance: 8.663E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([170], dtype=int64), array([[False]])]] 	 class: [5 9]
10:10:38,119 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:38,120 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -85.47 	 cIDON = [5 9], cIDOFF = [5 9]
10:10:38,120 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:38,120 root DEBUG dOFF/dON = 0.1
10:10:38,120 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.37603498621833, 'dON1': 0.11058200309888838, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.11058200309888838, 'nTON': 1, 'dON': 0.11058200309888838, 'dxOFFAngle': 89.35791266225942, 'dOFF1': 0.008663083154547084, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.008663083154547084, 'nTOFF': 1, 'dOFF': 0.008663083154547084, 'SUCCESS': False}
10:10:38,128 root DEBUG 

=================== Experiment ID #167 	 Dual Point ID: 168 ===================
10:10:38,135 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.175E-07|<1.000E-06)
10:10:38,136 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:38,428 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.482E-01 	 Total distance: 6.482E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([183], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:38,753 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.180E-01 	 Total distance: 5.180E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([126], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:38,753 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:38,753 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -11.17 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:38,753 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:38,753 root DEBUG dOFF/dON = 0.8
10:10:38,753 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.23425015251188, 'dON1': 0.6482124741679323, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.6482124741679323, 'nTON': 1, 'dON': 0.6482124741679323, 'dxOFFAngle': 88.32643663636252, 'dOFF1': 0.5179791493092271, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.5179791493092271, 'nTOFF': 1, 'dOFF': 0.5179791493092271, 'SUCCESS': False}
10:10:38,763 root DEBUG 

=================== Experiment ID #168 	 Dual Point ID: 169 ===================
10:10:38,771 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.752E-09|<1.000E-06)
10:10:38,771 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:39,71 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.958E-01 	 Total distance: 1.958E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([46], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:10:39,298 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.973E-01 	 Total distance: 3.932E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([28], dtype=int64), array([[False]])]] 	 class: [4 8]
10:10:39,592 root DEBUG Side: OFF	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.410E-02 	 Total distance: 1.410E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([220], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:10:39,593 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:39,593 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -93.07 	 cIDON = [4 8], cIDOFF = [4 8]
10:10:39,593 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:39,593 root DEBUG dOFF/dON = 0.0
10:10:39,593 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.5241138405624, 'dON1': 0.3931641114813539, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.3931641114813539, 'nTON': 1, 'dON': 0.3931641114813539, 'dxOFFAngle': 89.09417076627855, 'dOFF1': 0.014101904402369017, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.014101904402369017, 'nTOFF': 1, 'dOFF': 0.014101904402369017, 'SUCCESS': False}
10:10:39,600 root DEBUG 

=================== Experiment ID #169 	 Dual Point ID: 170 ===================
10:10:39,614 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.896E-10|<1.000E-06)
10:10:39,615 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:39,933 root DEBUG Side: ON	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.005E-01 	 Total distance: 1.005E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([241], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:10:40,169 root DEBUG Side: OFF	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.492E-01 	 Total distance: 2.492E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([63], dtype=int64), array([[False]])]] 	 class: [4 8]
10:10:40,169 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:40,169 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 42.52 	 cIDON = [4 8], cIDOFF = [4 8]
10:10:40,169 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:40,169 root DEBUG dOFF/dON = 2.5
10:10:40,169 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.77717168912244, 'dON1': 0.10050811748992214, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.10050811748992214, 'nTON': 1, 'dON': 0.10050811748992214, 'dxOFFAngle': 87.40515135279817, 'dOFF1': 0.24918121798289436, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.24918121798289436, 'nTOFF': 1, 'dOFF': 0.24918121798289436, 'SUCCESS': True}
10:10:40,178 root DEBUG 

=================== Experiment ID #170 	 Dual Point ID: 171 ===================
10:10:40,188 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.936E-08|<1.000E-06)
10:10:40,189 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:40,467 root DEBUG Side: ON	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.805E-01 	 Total distance: 5.805E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([34], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:40,749 root DEBUG Side: OFF	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.159E-01 	 Total distance: 4.159E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([134], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:40,750 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:40,750 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -16.52 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:40,750 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:40,750 root DEBUG dOFF/dON = 0.7
10:10:40,750 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.40224778404402, 'dON1': 0.5805236181201398, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.5805236181201398, 'nTON': 1, 'dON': 0.5805236181201398, 'dxOFFAngle': 87.92948629991814, 'dOFF1': 0.41592365065637604, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.41592365065637604, 'nTOFF': 1, 'dOFF': 0.41592365065637604, 'SUCCESS': False}
10:10:40,761 root DEBUG 

=================== Experiment ID #171 	 Dual Point ID: 172 ===================
10:10:40,768 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.021E-08|<1.000E-06)
10:10:40,768 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:41,45 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.951E-02 	 Total distance: 7.951E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([179], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:41,367 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.211E-01 	 Total distance: 1.211E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([188], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:41,367 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:41,367 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 20.72 	 cIDON = [2 7], cIDOFF = [2 7]
10:10:41,367 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:41,367 root DEBUG dOFF/dON = 1.5
10:10:41,367 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.14185799457408, 'dON1': 0.07950500741023149, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.07950500741023149, 'nTON': 1, 'dON': 0.07950500741023149, 'dxOFFAngle': 89.95441794260397, 'dOFF1': 0.12105417541219901, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.12105417541219901, 'nTOFF': 1, 'dOFF': 0.12105417541219901, 'SUCCESS': True}
10:10:41,376 root DEBUG 

=================== Experiment ID #172 	 Dual Point ID: 173 ===================
10:10:41,385 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.790E-09|<1.000E-06)
10:10:41,385 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:41,640 root DEBUG Side: ON	 Angle(dx0, dx): 0.87 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.264E-05 	 Total distance: 9.264E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 2]
10:10:41,830 root DEBUG Side: OFF	 Angle(dx0, dx): 0.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.237E-07 	 Total distance: 7.237E-07 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 2]
10:10:41,954 root DEBUG Side: OFF	 Angle(dx0, dx): 0.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.237E-07 	 Total distance: 1.447E-06 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 2]
10:10:42,93 root DEBUG Side: OFF	 Angle(dx0, dx): 0.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.237E-07 	 Total distance: 2.171E-06 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 2]
10:10:42,98 root DEBUG Got stuck in too many past-layer relus.
10:10:42,98 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:10:42,98 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:10:42,99 root DEBUG 

=================== Experiment ID #172 	 Dual Point ID: 174 ===================
10:10:42,109 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.368E-09|<1.000E-06)
10:10:42,109 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:42,383 root DEBUG Side: ON	 Angle(dx0, dx): 0.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.915E-01 	 Total distance: 1.915E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([7, 8], dtype=int64), array([[1.],
       [0.]])]] 	 class: [7 9]
10:10:42,711 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.306E-02 	 Total distance: 7.306E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([160], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:42,712 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:42,712 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -44.78 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:42,712 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:42,712 root DEBUG dOFF/dON = 0.4
10:10:42,712 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.53060635168586, 'dON1': 0.1915366738217863, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.1915366738217863, 'nTON': 1, 'dON': 0.1915366738217863, 'dxOFFAngle': 89.39148145530886, 'dOFF1': 0.07305685003975289, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.07305685003975289, 'nTOFF': 1, 'dOFF': 0.07305685003975289, 'SUCCESS': False}
10:10:42,721 root DEBUG 

=================== Experiment ID #173 	 Dual Point ID: 175 ===================
10:10:42,728 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.671E-08|<1.000E-06)
10:10:42,729 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:43,9 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.561E-01 	 Total distance: 4.561E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([207], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:43,301 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.571E-01 	 Total distance: 2.571E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([76], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:43,559 root DEBUG Side: OFF	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.584E-01 	 Total distance: 8.155E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([58], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:43,559 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:43,559 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 28.26 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:43,559 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:43,560 root DEBUG dOFF/dON = 1.8
10:10:43,560 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.55634067276476, 'dON1': 0.4560742023174558, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.4560742023174558, 'nTON': 1, 'dON': 0.4560742023174558, 'dxOFFAngle': 88.57092137423362, 'dOFF1': 0.8154751896914507, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.8154751896914507, 'nTOFF': 1, 'dOFF': 0.8154751896914507, 'SUCCESS': True}
10:10:43,566 root DEBUG 

=================== Experiment ID #174 	 Dual Point ID: 176 ===================
10:10:43,576 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.565E-08|<1.000E-06)
10:10:43,576 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:43,867 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.273E-01 	 Total distance: 1.273E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([196], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:44,83 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.555E-01 	 Total distance: 3.828E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([145], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:44,377 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.008E-01 	 Total distance: 2.008E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([57], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:44,600 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.164E-01 	 Total distance: 5.172E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([112], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:44,600 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:44,600 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 14.93 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:44,600 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:44,600 root DEBUG dOFF/dON = 1.4
10:10:44,601 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.60358387718576, 'dON1': 0.382799930157497, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.382799930157497, 'nTON': 1, 'dON': 0.382799930157497, 'dxOFFAngle': 89.15463571258823, 'dOFF1': 0.5171602616736669, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.5171602616736669, 'nTOFF': 1, 'dOFF': 0.5171602616736669, 'SUCCESS': True}
10:10:44,612 root DEBUG 

=================== Experiment ID #175 	 Dual Point ID: 177 ===================
10:10:44,622 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.144E-08|<1.000E-06)
10:10:44,622 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:44,948 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.823E-01 	 Total distance: 4.823E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([32], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:45,250 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.690E-01 	 Total distance: 5.690E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([174], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:45,477 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.401E-01 	 Total distance: 8.091E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([14], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:45,673 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.053E+00 	 Total distance: 1.862E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([43], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:45,673 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:45,673 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 58.85 	 cIDON = [2 7], cIDOFF = [2 7]
10:10:45,674 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:45,674 root DEBUG dOFF/dON = 3.9
10:10:45,674 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.25798783036305, 'dON1': 0.4822975742572298, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.4822975742572298, 'nTON': 1, 'dON': 0.4822975742572298, 'dxOFFAngle': 89.1895382244454, 'dOFF1': 1.861614550967852, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 1.861614550967852, 'nTOFF': 1, 'dOFF': 1.861614550967852, 'SUCCESS': True}
10:10:45,682 root DEBUG 

=================== Experiment ID #176 	 Dual Point ID: 178 ===================
10:10:45,690 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.800E-09|<1.000E-06)
10:10:45,690 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:46,15 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.007E-02 	 Total distance: 2.007E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([36], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:46,308 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.769E-02 	 Total distance: 5.769E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([10], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:46,515 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.336E-01 	 Total distance: 4.913E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([194], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:46,515 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:46,516 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 92.15 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:46,516 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:46,516 root DEBUG dOFF/dON = 24.5
10:10:46,516 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.47249119113718, 'dON1': 0.020073311430688617, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.020073311430688617, 'nTON': 1, 'dON': 0.020073311430688617, 'dxOFFAngle': 89.94259707222047, 'dOFF1': 0.4913033209438858, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.4913033209438858, 'nTOFF': 1, 'dOFF': 0.4913033209438858, 'SUCCESS': True}
10:10:46,526 root DEBUG 

=================== Experiment ID #177 	 Dual Point ID: 179 ===================
10:10:46,540 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.160E-09|<1.000E-06)
10:10:46,540 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:46,835 root DEBUG Side: ON	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.288E-01 	 Total distance: 3.288E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([11], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:47,126 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.317E-03 	 Total distance: 9.317E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([248], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:47,126 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:47,126 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -94.49 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:47,126 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:47,126 root DEBUG dOFF/dON = 0.0
10:10:47,126 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.46893414375232, 'dON1': 0.32880278091481074, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.32880278091481074, 'nTON': 1, 'dON': 0.32880278091481074, 'dxOFFAngle': 89.77051371256815, 'dOFF1': 0.009316718102535792, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.009316718102535792, 'nTOFF': 1, 'dOFF': 0.009316718102535792, 'SUCCESS': False}
10:10:47,138 root DEBUG 

=================== Experiment ID #178 	 Dual Point ID: 180 ===================
10:10:47,146 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.254E-08|<1.000E-06)
10:10:47,146 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:47,434 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.165E-01 	 Total distance: 6.165E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([10], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:47,598 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.671E-02 	 Total distance: 7.032E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([73], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:47,807 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.060E-01 	 Total distance: 1.009E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([52], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:48,12 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.315E-01 	 Total distance: 1.241E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([245], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:48,315 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.342E+00 	 Total distance: 1.342E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([171], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:48,315 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:48,315 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 3.90 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:48,315 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:48,315 root DEBUG dOFF/dON = 1.1
10:10:48,315 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.65518156429356, 'dON1': 1.240742054839816, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 1.240742054839816, 'nTON': 1, 'dON': 1.240742054839816, 'dxOFFAngle': 89.61172573746175, 'dOFF1': 1.3415637759651398, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 1.3415637759651398, 'nTOFF': 1, 'dOFF': 1.3415637759651398, 'SUCCESS': True}
10:10:48,322 root DEBUG 

=================== Experiment ID #179 	 Dual Point ID: 181 ===================
10:10:48,332 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.366E-08|<1.000E-06)
10:10:48,332 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:48,637 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.087E-01 	 Total distance: 2.087E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([17], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:10:48,899 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.587E-01 	 Total distance: 3.587E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([242], dtype=int64), array([[False]])]] 	 class: [4 7]
10:10:48,899 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:48,899 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 26.44 	 cIDON = [4 7], cIDOFF = [4 7]
10:10:48,899 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:48,899 root DEBUG dOFF/dON = 1.7
10:10:48,900 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.5709382247619, 'dON1': 0.20870271530933437, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.20870271530933437, 'nTON': 1, 'dON': 0.20870271530933437, 'dxOFFAngle': 89.50489596372697, 'dOFF1': 0.35872948776487434, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.35872948776487434, 'nTOFF': 1, 'dOFF': 0.35872948776487434, 'SUCCESS': True}
10:10:48,912 root DEBUG 

=================== Experiment ID #180 	 Dual Point ID: 182 ===================
10:10:48,925 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.482E-08|<1.000E-06)
10:10:48,925 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:49,190 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.160E-01 	 Total distance: 1.160E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([39], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:49,410 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.345E+00 	 Total distance: 1.461E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([126], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:49,698 root DEBUG Side: OFF	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.005E-02 	 Total distance: 3.005E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([26], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:49,698 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:49,698 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -95.97 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:49,698 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:49,698 root DEBUG dOFF/dON = 0.0
10:10:49,698 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.06878466190257, 'dON1': 1.4611164389201163, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 1.4611164389201163, 'nTON': 1, 'dON': 1.4611164389201163, 'dxOFFAngle': 88.9039898524964, 'dOFF1': 0.03005160056120228, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.03005160056120228, 'nTOFF': 1, 'dOFF': 0.03005160056120228, 'SUCCESS': False}
10:10:49,710 root DEBUG 

=================== Experiment ID #181 	 Dual Point ID: 183 ===================
10:10:49,720 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.564E-08|<1.000E-06)
10:10:49,720 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:49,984 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.934E-01 	 Total distance: 7.934E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([90], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:50,284 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.841E-01 	 Total distance: 6.841E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([151], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:50,458 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.523E-01 	 Total distance: 9.363E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([112], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:50,678 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.767E-02 	 Total distance: 1.004E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([154], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:50,932 root DEBUG Side: OFF	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.854E-01 	 Total distance: 1.389E+00 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([74], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:51,139 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.975E-01 	 Total distance: 1.787E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([20], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:51,139 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:51,139 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 38.50 	 cIDON = [2 6], cIDOFF = [2 6]
10:10:51,139 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:51,139 root DEBUG dOFF/dON = 2.3
10:10:51,139 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.75625238056129, 'dON1': 0.7934337043267062, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.7934337043267062, 'nTON': 1, 'dON': 0.7934337043267062, 'dxOFFAngle': 89.08101019496159, 'dOFF1': 1.786878449700396, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 1.786878449700396, 'nTOFF': 1, 'dOFF': 1.786878449700396, 'SUCCESS': True}
10:10:51,147 root DEBUG 

=================== Experiment ID #182 	 Dual Point ID: 184 ===================
10:10:51,155 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.251E-08|<1.000E-06)
10:10:51,155 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:51,471 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.431E+00 	 Total distance: 1.431E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([200], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:51,755 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.725E-01 	 Total distance: 3.725E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([236], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:51,755 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:51,755 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -58.70 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:51,755 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:51,755 root DEBUG dOFF/dON = 0.3
10:10:51,755 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.42712446362452, 'dON1': 1.4313209847817165, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 1.4313209847817165, 'nTON': 1, 'dON': 1.4313209847817165, 'dxOFFAngle': 89.67314075066608, 'dOFF1': 0.3725386606183207, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.3725386606183207, 'nTOFF': 1, 'dOFF': 0.3725386606183207, 'SUCCESS': False}
10:10:51,763 root DEBUG 

=================== Experiment ID #183 	 Dual Point ID: 185 ===================
10:10:51,769 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.961E-08|<1.000E-06)
10:10:51,770 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:52,167 root DEBUG Side: ON	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.363E-01 	 Total distance: 3.363E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([169], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:52,515 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.060E+00 	 Total distance: 1.060E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([215], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:52,515 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:52,515 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 51.83 	 cIDON = [3 6], cIDOFF = [3 6]
10:10:52,515 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:52,515 root DEBUG dOFF/dON = 3.2
10:10:52,515 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.8268293367391, 'dON1': 0.33626463575040605, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.33626463575040605, 'nTON': 1, 'dON': 0.33626463575040605, 'dxOFFAngle': 89.88259538941001, 'dOFF1': 1.059867366522738, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 1.059867366522738, 'nTOFF': 1, 'dOFF': 1.059867366522738, 'SUCCESS': True}
10:10:52,531 root DEBUG 

=================== Experiment ID #184 	 Dual Point ID: 186 ===================
10:10:52,537 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.947E-08|<1.000E-06)
10:10:52,538 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:52,902 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.978E-01 	 Total distance: 5.978E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([1], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:53,352 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.762E-01 	 Total distance: 1.762E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([206], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:53,625 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.404E-01 	 Total distance: 7.167E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([192], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:53,626 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:53,626 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 9.04 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:53,626 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:53,626 root DEBUG dOFF/dON = 1.2
10:10:53,626 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.75535435374287, 'dON1': 0.5978060336115387, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.5978060336115387, 'nTON': 1, 'dON': 0.5978060336115387, 'dxOFFAngle': 89.56230991877099, 'dOFF1': 0.7166640613319883, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.7166640613319883, 'nTOFF': 1, 'dOFF': 0.7166640613319883, 'SUCCESS': True}
10:10:53,637 root DEBUG 

=================== Experiment ID #185 	 Dual Point ID: 187 ===================
10:10:53,650 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.278E-08|<1.000E-06)
10:10:53,650 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:53,917 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.695E-01 	 Total distance: 5.695E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([131], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:54,160 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.334E-01 	 Total distance: 1.103E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([161], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:54,307 root DEBUG Side: ON	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.102E-02 	 Total distance: 1.194E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([67], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:54,608 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.208E-01 	 Total distance: 5.208E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([58], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:54,609 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:54,609 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -39.26 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:54,609 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:54,609 root DEBUG dOFF/dON = 0.4
10:10:54,609 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.3444064854956, 'dON1': 1.1938855744271495, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 1.1938855744271495, 'nTON': 1, 'dON': 1.1938855744271495, 'dxOFFAngle': 89.53126693483804, 'dOFF1': 0.5207552746974958, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.5207552746974958, 'nTOFF': 1, 'dOFF': 0.5207552746974958, 'SUCCESS': False}
10:10:54,622 root DEBUG 

=================== Experiment ID #186 	 Dual Point ID: 188 ===================
10:10:54,633 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.543E-09|<1.000E-06)
10:10:54,633 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:54,933 root DEBUG Side: ON	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.775E-01 	 Total distance: 2.775E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([3], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:55,248 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.721E-01 	 Total distance: 2.721E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([150], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:55,446 root DEBUG Side: OFF	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.855E-02 	 Total distance: 2.907E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([131], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:55,446 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:55,447 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 2.32 	 cIDON = [5 7], cIDOFF = [5 7]
10:10:55,447 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:55,447 root DEBUG dOFF/dON = 1.0
10:10:55,447 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.407312090285, 'dON1': 0.2774758596876198, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.2774758596876198, 'nTON': 1, 'dON': 0.2774758596876198, 'dxOFFAngle': 89.36705206355629, 'dOFF1': 0.29067152194948953, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.29067152194948953, 'nTOFF': 1, 'dOFF': 0.29067152194948953, 'SUCCESS': True}
10:10:55,459 root DEBUG 

=================== Experiment ID #187 	 Dual Point ID: 189 ===================
10:10:55,469 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.140E-08|<1.000E-06)
10:10:55,469 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:55,801 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.573E-01 	 Total distance: 1.573E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([83], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:56,81 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.535E-01 	 Total distance: 1.535E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([161], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:56,82 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:56,82 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -1.22 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:56,82 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:56,82 root DEBUG dOFF/dON = 1.0
10:10:56,82 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.00332327857728, 'dON1': 0.15729171853876497, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.15729171853876497, 'nTON': 1, 'dON': 0.15729171853876497, 'dxOFFAngle': 89.3303814756829, 'dOFF1': 0.15349053241788002, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.15349053241788002, 'nTOFF': 1, 'dOFF': 0.15349053241788002, 'SUCCESS': False}
10:10:56,96 root DEBUG 

=================== Experiment ID #188 	 Dual Point ID: 190 ===================
10:10:56,105 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.892E-08|<1.000E-06)
10:10:56,105 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:56,397 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.372E-01 	 Total distance: 5.372E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([17], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:56,578 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.061E-01 	 Total distance: 9.432E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([154], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:56,877 root DEBUG Side: ON	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.201E-01 	 Total distance: 1.363E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([203], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:57,174 root DEBUG Side: OFF	 Angle(dx0, dx): 0.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.166E+00 	 Total distance: 2.166E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([180], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:57,174 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:57,174 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 22.73 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:57,174 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:57,175 root DEBUG dOFF/dON = 1.6
10:10:57,175 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.87987839341397, 'dON1': 1.3633563361459833, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 1.3633563361459833, 'nTON': 1, 'dON': 1.3633563361459833, 'dxOFFAngle': 87.95815661709878, 'dOFF1': 2.16553222566367, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 2.16553222566367, 'nTOFF': 1, 'dOFF': 2.16553222566367, 'SUCCESS': True}
10:10:57,186 root DEBUG 

=================== Experiment ID #189 	 Dual Point ID: 191 ===================
10:10:57,194 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.169E-07|<1.000E-06)
10:10:57,194 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:57,459 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.077E+00 	 Total distance: 1.077E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([93], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:57,625 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.593E-01 	 Total distance: 1.736E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([53], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:57,863 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.994E-01 	 Total distance: 2.335E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([131], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:58,65 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.838E-01 	 Total distance: 3.019E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([89], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:58,343 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.011E-01 	 Total distance: 8.011E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([191], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:58,343 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:58,343 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -58.06 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:58,343 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:58,343 root DEBUG dOFF/dON = 0.3
10:10:58,343 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.22784960018883, 'dON1': 3.019155682437014, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 3.019155682437014, 'nTON': 1, 'dON': 3.019155682437014, 'dxOFFAngle': 89.10173646552344, 'dOFF1': 0.8010707382502396, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.8010707382502396, 'nTOFF': 1, 'dOFF': 0.8010707382502396, 'SUCCESS': False}
10:10:58,350 root DEBUG 

=================== Experiment ID #190 	 Dual Point ID: 192 ===================
10:10:58,359 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.710E-08|<1.000E-06)
10:10:58,359 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:58,616 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.623E-01 	 Total distance: 5.623E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([138], dtype=int64), array([[False]])]] 	 class: [2 5]
10:10:58,857 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.818E-01 	 Total distance: 8.441E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([43], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:10:59,149 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.637E-01 	 Total distance: 2.637E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([203], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:10:59,149 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:59,149 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -52.39 	 cIDON = [2 5], cIDOFF = [2 5]
10:10:59,149 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:59,149 root DEBUG dOFF/dON = 0.3
10:10:59,150 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.1167640435923, 'dON1': 0.8440971393998584, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.8440971393998584, 'nTON': 1, 'dON': 0.8440971393998584, 'dxOFFAngle': 89.29775749964402, 'dOFF1': 0.26368964046334953, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.26368964046334953, 'nTOFF': 1, 'dOFF': 0.26368964046334953, 'SUCCESS': False}
10:10:59,158 root DEBUG 

=================== Experiment ID #191 	 Dual Point ID: 193 ===================
10:10:59,163 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.487E-08|<1.000E-06)
10:10:59,163 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:59,377 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.372E-02 	 Total distance: 5.372E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([2], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:59,571 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.327E-02 	 Total distance: 1.170E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([82], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:59,803 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.734E-01 	 Total distance: 6.904E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([155], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:11:00,133 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.782E-01 	 Total distance: 1.782E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([188], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:11:00,341 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.648E-01 	 Total distance: 4.430E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([224], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:11:00,491 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.590E-01 	 Total distance: 7.020E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([41], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:11:00,657 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.570E-01 	 Total distance: 8.589E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([93], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:11:00,871 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.411E-01 	 Total distance: 1.400E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([101], dtype=int64), array([[False]])]] 	 class: [3 7]
10:11:00,872 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:00,872 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 33.95 	 cIDON = [3 7], cIDOFF = [3 7]
10:11:00,872 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:00,872 root DEBUG dOFF/dON = 2.0
10:11:00,872 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.39750320645368, 'dON1': 0.6903919369155289, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.6903919369155289, 'nTON': 1, 'dON': 0.6903919369155289, 'dxOFFAngle': 89.79786186476308, 'dOFF1': 1.4000339032834719, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 1.4000339032834719, 'nTOFF': 1, 'dOFF': 1.4000339032834719, 'SUCCESS': True}
10:11:00,881 root DEBUG 

=================== Experiment ID #192 	 Dual Point ID: 194 ===================
10:11:00,890 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.547E-08|<1.000E-06)
10:11:00,891 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:01,149 root DEBUG Side: ON	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.052E-01 	 Total distance: 5.052E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([157], dtype=int64), array([[False]])]] 	 class: [6 9]
10:11:01,481 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.430E-02 	 Total distance: 3.430E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([32], dtype=int64), array([[False]])]] 	 class: [6 9]
10:11:01,621 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.145E-01 	 Total distance: 3.488E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([86], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:11:01,769 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.732E+00 	 Total distance: 3.081E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([156], dtype=int64), array([[False]])]] 	 class: [6 9]
10:11:01,937 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.134E-01 	 Total distance: 3.195E+00 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([13], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:11:02,107 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.007E-01 	 Total distance: 3.395E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([125], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:11:02,107 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:02,108 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 74.10 	 cIDON = [6 9], cIDOFF = [6 9]
10:11:02,108 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:02,108 root DEBUG dOFF/dON = 6.7
10:11:02,108 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.4960548700057, 'dON1': 0.5051992607648859, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.5051992607648859, 'nTON': 1, 'dON': 0.5051992607648859, 'dxOFFAngle': 89.38669028362587, 'dOFF1': 3.3952918633719897, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 3.3952918633719897, 'nTOFF': 1, 'dOFF': 3.3952918633719897, 'SUCCESS': True}
10:11:02,121 root DEBUG 

=================== Experiment ID #193 	 Dual Point ID: 195 ===================
10:11:02,129 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.113E-08|<1.000E-06)
10:11:02,130 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:02,416 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.355E-01 	 Total distance: 7.355E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([92], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:11:02,625 root DEBUG Side: ON	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.170E-01 	 Total distance: 9.526E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([15], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:11:02,877 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.955E-03 	 Total distance: 6.955E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([193], dtype=int64), array([[False]])]] 	 class: [3 7]
10:11:03,33 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.117E-01 	 Total distance: 1.186E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([216], dtype=int64), array([[False]])]] 	 class: [3 7]
10:11:03,269 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.221E-02 	 Total distance: 1.409E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([63], dtype=int64), array([[False]])]] 	 class: [3 7]
10:11:03,269 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:03,269 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -74.24 	 cIDON = [3 7], cIDOFF = [3 7]
10:11:03,269 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:03,269 root DEBUG dOFF/dON = 0.1
10:11:03,269 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.3974314755606, 'dON1': 0.9525630307298809, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.9525630307298809, 'nTON': 1, 'dON': 0.9525630307298809, 'dxOFFAngle': 89.39362498546353, 'dOFF1': 0.14085442270434523, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.14085442270434523, 'nTOFF': 1, 'dOFF': 0.14085442270434523, 'SUCCESS': False}
10:11:03,275 root DEBUG 

=================== Experiment ID #194 	 Dual Point ID: 196 ===================
10:11:03,285 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.130E-08|<1.000E-06)
10:11:03,285 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:03,588 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.869E-01 	 Total distance: 3.869E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([232], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:11:03,785 root DEBUG Side: ON	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.919E-02 	 Total distance: 4.561E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([9], dtype=int64), array([[False]])]] 	 class: [5 7]
10:11:04,32 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.166E-01 	 Total distance: 1.166E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([13], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:11:04,202 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.683E+00 	 Total distance: 1.800E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([228], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:11:04,367 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.241E-01 	 Total distance: 1.924E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([205], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:11:04,367 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:04,368 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 61.67 	 cIDON = [5 7], cIDOFF = [5 7]
10:11:04,368 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:04,368 root DEBUG dOFF/dON = 4.2
10:11:04,368 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.68584415088014, 'dON1': 0.45610528107451376, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.45610528107451376, 'nTON': 1, 'dON': 0.45610528107451376, 'dxOFFAngle': 88.7700892635371, 'dOFF1': 1.92394079827991, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 1.92394079827991, 'nTOFF': 1, 'dOFF': 1.92394079827991, 'SUCCESS': True}
10:11:04,378 root DEBUG 

=================== Experiment ID #195 	 Dual Point ID: 197 ===================
10:11:04,388 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.799E-08|<1.000E-06)
10:11:04,389 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:04,729 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.724E-01 	 Total distance: 1.724E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([5], dtype=int64), array([[False]])]] 	 class: [2 7]
10:11:04,996 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.405E-01 	 Total distance: 2.405E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([201], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:04,997 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:04,997 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 16.48 	 cIDON = [2 7], cIDOFF = [2 7]
10:11:04,997 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:04,997 root DEBUG dOFF/dON = 1.4
10:11:04,997 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.5060614064754, 'dON1': 0.1724230230106461, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.1724230230106461, 'nTON': 1, 'dON': 0.1724230230106461, 'dxOFFAngle': 88.3788658939539, 'dOFF1': 0.2404708576388819, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.2404708576388819, 'nTOFF': 1, 'dOFF': 0.2404708576388819, 'SUCCESS': True}
10:11:05,6 root DEBUG 

=================== Experiment ID #196 	 Dual Point ID: 198 ===================
10:11:05,14 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.598E-09|<1.000E-06)
10:11:05,14 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:05,320 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.958E-01 	 Total distance: 6.958E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([80], dtype=int64), array([[False]])]] 	 class: [2 5]
10:11:05,594 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.260E-01 	 Total distance: 9.219E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([27], dtype=int64), array([[False]])]] 	 class: [2 5]
10:11:05,912 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.674E-01 	 Total distance: 9.674E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([83], dtype=int64), array([[False]])]] 	 class: [2 5]
10:11:06,45 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.306E-02 	 Total distance: 1.040E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([241], dtype=int64), array([[False]])]] 	 class: [2 5]
10:11:06,273 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.589E-01 	 Total distance: 1.299E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([151], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:11:06,444 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.203E-02 	 Total distance: 1.391E+00 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([217], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:11:06,638 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.514E-01 	 Total distance: 1.643E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([61], dtype=int64), array([[False]])]] 	 class: [2 5]
10:11:06,638 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:06,638 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 28.11 	 cIDON = [2 5], cIDOFF = [2 5]
10:11:06,638 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:06,638 root DEBUG dOFF/dON = 1.8
10:11:06,638 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.07752540454042, 'dON1': 0.9218658428343792, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.9218658428343792, 'nTON': 1, 'dON': 0.9218658428343792, 'dxOFFAngle': 89.1152412960399, 'dOFF1': 1.6427212219009621, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 1.6427212219009621, 'nTOFF': 1, 'dOFF': 1.6427212219009621, 'SUCCESS': True}
10:11:06,649 root DEBUG 

=================== Experiment ID #197 	 Dual Point ID: 199 ===================
10:11:06,658 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.791E-09|<1.000E-06)
10:11:06,658 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:06,968 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.381E+00 	 Total distance: 1.381E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([200], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:11:07,262 root DEBUG Side: OFF	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.688E-02 	 Total distance: 9.688E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([231], dtype=int64), array([[False]])]] 	 class: [2 3]
10:11:07,262 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:07,263 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -86.89 	 cIDON = [2 3], cIDOFF = [2 3]
10:11:07,263 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:07,263 root DEBUG dOFF/dON = 0.1
10:11:07,263 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.23061396941816, 'dON1': 1.3811410747993738, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 1.3811410747993738, 'nTON': 1, 'dON': 1.3811410747993738, 'dxOFFAngle': 89.35484325244242, 'dOFF1': 0.09688013056054741, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.09688013056054741, 'nTOFF': 1, 'dOFF': 0.09688013056054741, 'SUCCESS': False}
10:11:07,269 root DEBUG 

=================== Experiment ID #198 	 Dual Point ID: 200 ===================
10:11:07,277 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.939E-08|<1.000E-06)
10:11:07,277 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:07,540 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.007E-01 	 Total distance: 2.007E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([163], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:11:07,785 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.587E+00 	 Total distance: 1.587E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([153], dtype=int64), array([[False]])]] 	 class: [2 4]
10:11:07,969 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.856E-01 	 Total distance: 1.772E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([48], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:11:08,120 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.098E-01 	 Total distance: 2.582E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([68], dtype=int64), array([[False]])]] 	 class: [2 4]
10:11:08,120 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:08,120 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 85.58 	 cIDON = [2 4], cIDOFF = [2 4]
10:11:08,120 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:08,120 root DEBUG dOFF/dON = 12.9
10:11:08,120 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.82378376800304, 'dON1': 0.20068358911591136, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.20068358911591136, 'nTON': 1, 'dON': 0.20068358911591136, 'dxOFFAngle': 89.98256444630141, 'dOFF1': 2.58216166939852, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 2.58216166939852, 'nTOFF': 1, 'dOFF': 2.58216166939852, 'SUCCESS': True}
10:11:08,129 root DEBUG 

=================== Experiment ID #199 	 Dual Point ID: 201 ===================
10:11:08,137 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.408E-08|<1.000E-06)
10:11:08,137 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:08,374 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.822E-02 	 Total distance: 6.822E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([106], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:08,665 root DEBUG Side: OFF	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.961E-02 	 Total distance: 1.961E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([29], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:08,665 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:08,666 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -55.35 	 cIDON = [8 9], cIDOFF = [8 9]
10:11:08,666 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:08,666 root DEBUG dOFF/dON = 0.3
10:11:08,666 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.70717885802459, 'dON1': 0.06822164301422691, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.06822164301422691, 'nTON': 1, 'dON': 0.06822164301422691, 'dxOFFAngle': 89.98705662423335, 'dOFF1': 0.019608655002482323, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.019608655002482323, 'nTOFF': 1, 'dOFF': 0.019608655002482323, 'SUCCESS': False}
10:11:08,679 root DEBUG 

=================== Experiment ID #200 	 Dual Point ID: 202 ===================
10:11:08,691 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.187E-08|<1.000E-06)
10:11:08,692 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:08,942 root DEBUG Side: ON	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.511E-01 	 Total distance: 4.511E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([157], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:09,215 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.466E-02 	 Total distance: 6.466E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([7], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:09,215 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:09,215 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -74.92 	 cIDON = [8 9], cIDOFF = [8 9]
10:11:09,216 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:09,216 root DEBUG dOFF/dON = 0.1
10:11:09,216 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.76163427493374, 'dON1': 0.4510724194758613, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.4510724194758613, 'nTON': 1, 'dON': 0.4510724194758613, 'dxOFFAngle': 89.76904719423023, 'dOFF1': 0.06466350048924416, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.06466350048924416, 'nTOFF': 1, 'dOFF': 0.06466350048924416, 'SUCCESS': False}
10:11:09,222 root DEBUG 

=================== Experiment ID #201 	 Dual Point ID: 203 ===================
10:11:09,232 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.059E-08|<1.000E-06)
10:11:09,232 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:09,531 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.602E-02 	 Total distance: 2.602E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([92], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:11:09,726 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.132E-01 	 Total distance: 4.392E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([202], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:11:09,932 root DEBUG Side: ON	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.550E-02 	 Total distance: 4.847E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([195], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:11:10,128 root DEBUG Side: OFF	 Angle(dx0, dx): 0.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.618E-06 	 Total distance: 3.618E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 9]
10:11:10,129 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:10,129 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -100.00 	 cIDON = [1 9], cIDOFF = [1 9]
10:11:10,129 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:10,129 root DEBUG dOFF/dON = 0.0
10:11:10,129 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.54847547020526, 'dON1': 0.4847373893972744, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.4847373893972744, 'nTON': 1, 'dON': 0.4847373893972744, 'dxOFFAngle': 89.15228087399353, 'dOFF1': 3.6182289536920478e-06, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 3.6182289536920478e-06, 'nTOFF': 1, 'dOFF': 3.6182289536920478e-06, 'SUCCESS': False}
10:11:10,136 root DEBUG 

=================== Experiment ID #202 	 Dual Point ID: 204 ===================
10:11:10,150 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.205E-08|<1.000E-06)
10:11:10,150 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:10,483 root DEBUG Side: ON	 Angle(dx0, dx): 0.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.813E-01 	 Total distance: 6.813E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([255], dtype=int64), array([[False]])]] 	 class: [3 6]
10:11:10,742 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.822E-01 	 Total distance: 4.822E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([244], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:11:10,742 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:10,742 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -17.11 	 cIDON = [3 6], cIDOFF = [3 6]
10:11:10,742 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:10,742 root DEBUG dOFF/dON = 0.7
10:11:10,742 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.88550369305743, 'dON1': 0.6812523259059117, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.6812523259059117, 'nTON': 1, 'dON': 0.6812523259059117, 'dxOFFAngle': 89.68138480449946, 'dOFF1': 0.48223057856248946, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.48223057856248946, 'nTOFF': 1, 'dOFF': 0.48223057856248946, 'SUCCESS': False}
10:11:10,753 root DEBUG 

=================== Experiment ID #203 	 Dual Point ID: 205 ===================
10:11:10,760 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.783E-09|<1.000E-06)
10:11:10,760 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:10,993 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.875E-01 	 Total distance: 6.875E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([14], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:11,300 root DEBUG Side: OFF	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.355E-01 	 Total distance: 3.355E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([108], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:11,493 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.859E-01 	 Total distance: 5.214E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([143], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:11,493 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:11,494 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -13.74 	 cIDON = [8 9], cIDOFF = [8 9]
10:11:11,494 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:11,494 root DEBUG dOFF/dON = 0.8
10:11:11,494 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.53704870154306, 'dON1': 0.6874640103052665, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.6874640103052665, 'nTON': 1, 'dON': 0.6874640103052665, 'dxOFFAngle': 88.658555438264, 'dOFF1': 0.5213901128668541, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.5213901128668541, 'nTOFF': 1, 'dOFF': 0.5213901128668541, 'SUCCESS': False}
10:11:11,505 root DEBUG 

=================== Experiment ID #204 	 Dual Point ID: 206 ===================
10:11:11,512 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.639E-08|<1.000E-06)
10:11:11,513 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:11,827 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.550E-01 	 Total distance: 6.550E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([133], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:11:12,56 root DEBUG Side: OFF	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.818E-01 	 Total distance: 8.818E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([143], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:11:12,56 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:12,57 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 14.76 	 cIDON = [3 7], cIDOFF = [3 7]
10:11:12,57 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:12,57 root DEBUG dOFF/dON = 1.3
10:11:12,57 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.58380795668072, 'dON1': 0.6549593638138052, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.6549593638138052, 'nTON': 1, 'dON': 0.6549593638138052, 'dxOFFAngle': 89.6757785855974, 'dOFF1': 0.8818471487723603, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.8818471487723603, 'nTOFF': 1, 'dOFF': 0.8818471487723603, 'SUCCESS': True}
10:11:12,73 root DEBUG 

=================== Experiment ID #205 	 Dual Point ID: 207 ===================
10:11:12,81 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.669E-09|<1.000E-06)
10:11:12,81 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:12,350 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.309E-01 	 Total distance: 3.309E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([250], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:11:12,589 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.347E-01 	 Total distance: 1.266E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([143], dtype=int64), array([[False]])]] 	 class: [1 8]
10:11:12,732 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.057E-02 	 Total distance: 1.296E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([179], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:11:12,890 root DEBUG Side: OFF	 Angle(dx0, dx): 1.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.065E-06 	 Total distance: 5.065E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:11:12,890 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:12,891 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -100.00 	 cIDON = [1 8], cIDOFF = [1 8]
10:11:12,891 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:12,891 root DEBUG dOFF/dON = 0.0
10:11:12,891 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.59112282706879, 'dON1': 1.2962163673140756, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 1.2962163673140756, 'nTON': 1, 'dON': 1.2962163673140756, 'dxOFFAngle': 89.47858391816241, 'dOFF1': 5.06517584939623e-06, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 5.06517584939623e-06, 'nTOFF': 1, 'dOFF': 5.06517584939623e-06, 'SUCCESS': False}
10:11:12,898 root DEBUG 

=================== Experiment ID #206 	 Dual Point ID: 208 ===================
10:11:12,909 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.995E-08|<1.000E-06)
10:11:12,909 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:13,166 root DEBUG Side: ON	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.092E-01 	 Total distance: 6.092E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([60], dtype=int64), array([[False]])]] 	 class: [2 7]
10:11:13,330 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.790E-01 	 Total distance: 7.882E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([43], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:13,553 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.434E+00 	 Total distance: 2.222E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([151], dtype=int64), array([[False]])]] 	 class: [2 7]
10:11:13,750 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.947E-01 	 Total distance: 2.717E+00 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([29], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:13,900 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.544E-01 	 Total distance: 2.971E+00 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([28], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:14,75 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.278E-02 	 Total distance: 3.054E+00 	 Future toggles: 0 	 Past toggles: 6 	 Toggled: [[1, array([10], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:14,311 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.520E-01 	 Total distance: 3.206E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([187], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:14,553 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.305E-01 	 Total distance: 2.305E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([192], dtype=int64), array([[False]])]] 	 class: [2 7]
10:11:14,714 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.627E+00 	 Total distance: 2.857E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([92], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:14,714 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:14,715 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -5.75 	 cIDON = [2 7], cIDOFF = [2 7]
10:11:14,715 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:14,715 root DEBUG dOFF/dON = 0.9
10:11:14,715 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.6861704616952, 'dON1': 3.2058778069625435, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 3.2058778069625435, 'nTON': 1, 'dON': 3.2058778069625435, 'dxOFFAngle': 88.87541326226068, 'dOFF1': 2.8574957410042465, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 2.8574957410042465, 'nTOFF': 1, 'dOFF': 2.8574957410042465, 'SUCCESS': False}
10:11:14,726 root DEBUG 

=================== Experiment ID #207 	 Dual Point ID: 209 ===================
10:11:14,735 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.779E-08|<1.000E-06)
10:11:14,736 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:15,1 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.318E+00 	 Total distance: 1.318E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([189], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:15,186 root DEBUG Side: ON	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.258E-01 	 Total distance: 1.943E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([40], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:15,498 root DEBUG Side: OFF	 Angle(dx0, dx): 0.60 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.219E-01 	 Total distance: 9.219E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([6], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:15,498 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:15,498 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -35.65 	 cIDON = [3 5], cIDOFF = [3 5]
10:11:15,498 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:15,498 root DEBUG dOFF/dON = 0.5
10:11:15,498 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.8407494601068, 'dON1': 1.943351076122856, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 1.943351076122856, 'nTON': 1, 'dON': 1.943351076122856, 'dxOFFAngle': 88.80186420735863, 'dOFF1': 0.9219023859935777, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.9219023859935777, 'nTOFF': 1, 'dOFF': 0.9219023859935777, 'SUCCESS': False}
10:11:15,504 root DEBUG 

=================== Experiment ID #208 	 Dual Point ID: 210 ===================
10:11:15,514 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.621E-09|<1.000E-06)
10:11:15,514 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:15,789 root DEBUG Side: ON	 Angle(dx0, dx): 0.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.298E-02 	 Total distance: 4.298E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([49], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:16,56 root DEBUG Side: OFF	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.724E-01 	 Total distance: 1.724E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([215], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:16,208 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.360E-02 	 Total distance: 2.160E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([172], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:16,421 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.116E-01 	 Total distance: 3.276E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([251], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:16,589 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.063E-01 	 Total distance: 1.134E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([137], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:16,589 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:16,590 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 92.70 	 cIDON = [8 9], cIDOFF = [8 9]
10:11:16,590 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:16,590 root DEBUG dOFF/dON = 26.4
10:11:16,590 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.82827528713169, 'dON1': 0.042978601160207, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.042978601160207, 'nTON': 1, 'dON': 0.042978601160207, 'dxOFFAngle': 89.79870556014848, 'dOFF1': 1.1339075863015842, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 1.1339075863015842, 'nTOFF': 1, 'dOFF': 1.1339075863015842, 'SUCCESS': True}
10:11:16,601 root DEBUG 

=================== Experiment ID #209 	 Dual Point ID: 211 ===================
10:11:16,609 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.306E-09|<1.000E-06)
10:11:16,609 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:16,940 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.231E-01 	 Total distance: 2.231E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([51], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:17,93 root DEBUG Side: ON	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.110E-01 	 Total distance: 7.341E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([211], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:17,444 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.596E-01 	 Total distance: 3.596E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([244], dtype=int64), array([[False]])]] 	 class: [2 7]
10:11:17,684 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.730E-01 	 Total distance: 7.326E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([111], dtype=int64), array([[False]])]] 	 class: [2 7]
10:11:17,684 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:17,684 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -0.10 	 cIDON = [2 7], cIDOFF = [2 7]
10:11:17,684 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:17,684 root DEBUG dOFF/dON = 1.0
10:11:17,684 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.81135936989698, 'dON1': 0.7340949461917263, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.7340949461917263, 'nTON': 1, 'dON': 0.7340949461917263, 'dxOFFAngle': 89.46493816237692, 'dOFF1': 0.7326374619152176, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.7326374619152176, 'nTOFF': 1, 'dOFF': 0.7326374619152176, 'SUCCESS': False}
10:11:17,691 root DEBUG 

=================== Experiment ID #210 	 Dual Point ID: 212 ===================
10:11:17,699 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.566E-08|<1.000E-06)
10:11:17,699 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:18,27 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.639E-01 	 Total distance: 3.639E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([242], dtype=int64), array([[False]])]] 	 class: [3 4]
10:11:18,287 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.787E-01 	 Total distance: 4.787E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([27], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:11:18,287 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:18,287 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 13.62 	 cIDON = [3 4], cIDOFF = [3 4]
10:11:18,287 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:18,287 root DEBUG dOFF/dON = 1.3
10:11:18,287 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.52245115228504, 'dON1': 0.3639158084858014, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.3639158084858014, 'nTON': 1, 'dON': 0.3639158084858014, 'dxOFFAngle': 88.12397395599633, 'dOFF1': 0.47872151168324495, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.47872151168324495, 'nTOFF': 1, 'dOFF': 0.47872151168324495, 'SUCCESS': True}
10:11:18,295 root DEBUG 

=================== Experiment ID #211 	 Dual Point ID: 213 ===================
10:11:18,304 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.398E-08|<1.000E-06)
10:11:18,304 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:18,581 root DEBUG Side: ON	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.699E-01 	 Total distance: 2.699E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([115], dtype=int64), array([[False]])]] 	 class: [0 1]
10:11:18,888 root DEBUG Side: OFF	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.462E-01 	 Total distance: 9.462E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([36], dtype=int64), array([[False]])]] 	 class: [0 1]
10:11:18,888 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:18,888 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 55.61 	 cIDON = [0 1], cIDOFF = [0 1]
10:11:18,888 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:18,888 root DEBUG dOFF/dON = 3.5
10:11:18,888 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.85398939275684, 'dON1': 0.26993390380073545, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.26993390380073545, 'nTON': 1, 'dON': 0.26993390380073545, 'dxOFFAngle': 89.74170358493123, 'dOFF1': 0.9462176406072224, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.9462176406072224, 'nTOFF': 1, 'dOFF': 0.9462176406072224, 'SUCCESS': True}
10:11:18,900 root DEBUG 

=================== Experiment ID #212 	 Dual Point ID: 214 ===================
10:11:18,909 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.549E-09|<1.000E-06)
10:11:18,909 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:19,249 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.917E-02 	 Total distance: 4.917E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([239], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:19,495 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.957E+00 	 Total distance: 2.006E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([135], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:19,757 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.501E-02 	 Total distance: 4.501E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([26], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:19,941 root DEBUG Side: OFF	 Angle(dx0, dx): 1.88 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.721E-01 	 Total distance: 4.171E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([4, 8], dtype=int64), array([[1.],
       [0.]])]] 	 class: [4 9]
10:11:19,941 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:19,942 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -65.57 	 cIDON = [8 9], cIDOFF = [8 9]
10:11:19,942 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:19,942 root DEBUG dOFF/dON = 0.2
10:11:19,942 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.50757652531995, 'dON1': 2.0062823953245377, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 2.0062823953245377, 'nTON': 1, 'dON': 2.0062823953245377, 'dxOFFAngle': 88.29870288250493, 'dOFF1': 0.4171372648042727, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.4171372648042727, 'nTOFF': 1, 'dOFF': 0.4171372648042727, 'SUCCESS': False}
10:11:19,954 root DEBUG 

=================== Experiment ID #213 	 Dual Point ID: 215 ===================
10:11:19,963 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.375E-08|<1.000E-06)
10:11:19,963 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:20,230 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.764E-01 	 Total distance: 3.764E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([32], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:20,451 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.657E-02 	 Total distance: 2.657E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([254], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:20,451 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:20,451 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -86.81 	 cIDON = [8 9], cIDOFF = [8 9]
10:11:20,452 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:20,452 root DEBUG dOFF/dON = 0.1
10:11:20,452 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.02531434275541, 'dON1': 0.3763532178566099, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.3763532178566099, 'nTON': 1, 'dON': 0.3763532178566099, 'dxOFFAngle': 89.20155189172405, 'dOFF1': 0.02657339242840399, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.02657339242840399, 'nTOFF': 1, 'dOFF': 0.02657339242840399, 'SUCCESS': False}
10:11:20,461 root DEBUG 

=================== Experiment ID #214 	 Dual Point ID: 216 ===================
10:11:20,473 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.421E-08|<1.000E-06)
10:11:20,473 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:20,794 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.288E-01 	 Total distance: 2.288E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([69], dtype=int64), array([[False]])]] 	 class: [2 4]
10:11:21,112 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.075E-02 	 Total distance: 4.075E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([154], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:11:21,272 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.395E-01 	 Total distance: 1.802E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([47], dtype=int64), array([[False]])]] 	 class: [2 4]
10:11:21,272 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:21,272 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -11.87 	 cIDON = [2 4], cIDOFF = [2 4]
10:11:21,273 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:21,273 root DEBUG dOFF/dON = 0.8
10:11:21,273 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.68334587158908, 'dON1': 0.2287754134652547, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.2287754134652547, 'nTON': 1, 'dON': 0.2287754134652547, 'dxOFFAngle': 88.39310589518739, 'dOFF1': 0.18023539962457613, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.18023539962457613, 'nTOFF': 1, 'dOFF': 0.18023539962457613, 'SUCCESS': False}
10:11:21,285 root DEBUG 

=================== Experiment ID #215 	 Dual Point ID: 217 ===================
10:11:21,294 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.784E-08|<1.000E-06)
10:11:21,294 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:21,595 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.561E-02 	 Total distance: 1.561E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([174], dtype=int64), array([[False]])]] 	 class: [2 6]
10:11:21,708 root DEBUG Side: ON	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.304E-01 	 Total distance: 1.460E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([63], dtype=int64), array([[False]])]] 	 class: [2 6]
10:11:22,12 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.969E-01 	 Total distance: 1.969E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([31], dtype=int64), array([[False]])]] 	 class: [2 6]
10:11:22,12 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:22,13 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 14.87 	 cIDON = [2 6], cIDOFF = [2 6]
10:11:22,13 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:22,13 root DEBUG dOFF/dON = 1.3
10:11:22,13 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.8504989898443, 'dON1': 0.14597206035581334, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.14597206035581334, 'nTON': 1, 'dON': 0.14597206035581334, 'dxOFFAngle': 89.00450841172614, 'dOFF1': 0.1969490966092875, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.1969490966092875, 'nTOFF': 1, 'dOFF': 0.1969490966092875, 'SUCCESS': True}
10:11:22,20 root DEBUG 

=================== Experiment ID #216 	 Dual Point ID: 218 ===================
10:11:22,27 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.989E-08|<1.000E-06)
10:11:22,27 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:22,331 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.242E-01 	 Total distance: 1.242E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([118], dtype=int64), array([[False]])]] 	 class: [4 5]
10:11:22,552 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.416E-01 	 Total distance: 2.658E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([246], dtype=int64), array([[False]])]] 	 class: [4 5]
10:11:22,818 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.211E+00 	 Total distance: 1.211E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([158], dtype=int64), array([[False]])]] 	 class: [4 5]
10:11:22,992 root DEBUG Side: OFF	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.051E-01 	 Total distance: 1.416E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([186], dtype=int64), array([[False]])]] 	 class: [4 5]
10:11:22,992 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:22,992 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 68.39 	 cIDON = [4 5], cIDOFF = [4 5]
10:11:22,992 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:22,992 root DEBUG dOFF/dON = 5.3
10:11:22,992 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.80079767878871, 'dON1': 0.265814313002386, 'cIDON1': array([4, 5], dtype=int64), 'dON_patch_1': 0.265814313002386, 'nTON': 1, 'dON': 0.265814313002386, 'dxOFFAngle': 89.301583516997, 'dOFF1': 1.4158414762995302, 'cIDOFF1': array([4, 5], dtype=int64), 'dOFF_patch_1': 1.4158414762995302, 'nTOFF': 1, 'dOFF': 1.4158414762995302, 'SUCCESS': True}
10:11:22,999 root DEBUG 

=================== Experiment ID #217 	 Dual Point ID: 219 ===================
10:11:23,8 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.317E-10|<1.000E-06)
10:11:23,8 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:23,399 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.300E+00 	 Total distance: 1.300E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([68], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:23,586 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.481E-01 	 Total distance: 1.848E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([3], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:23,788 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.496E-01 	 Total distance: 2.498E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([202], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:24,47 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.101E-02 	 Total distance: 8.101E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([92], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:24,47 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:24,47 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -93.72 	 cIDON = [3 5], cIDOFF = [3 5]
10:11:24,47 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:24,47 root DEBUG dOFF/dON = 0.0
10:11:24,47 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.95713240919542, 'dON1': 2.497712518819851, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 2.497712518819851, 'nTON': 1, 'dON': 2.497712518819851, 'dxOFFAngle': 89.89257580141226, 'dOFF1': 0.08101138101262736, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.08101138101262736, 'nTOFF': 1, 'dOFF': 0.08101138101262736, 'SUCCESS': False}
10:11:24,54 root DEBUG 

=================== Experiment ID #218 	 Dual Point ID: 220 ===================
10:11:24,64 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.037E-08|<1.000E-06)
10:11:24,64 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:24,399 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.299E-01 	 Total distance: 2.299E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([158], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:24,678 root DEBUG Side: ON	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.783E-01 	 Total distance: 5.083E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([57], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:24,981 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.401E-01 	 Total distance: 9.401E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([92], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:24,981 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:24,982 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 29.82 	 cIDON = [3 5], cIDOFF = [3 5]
10:11:24,982 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:24,982 root DEBUG dOFF/dON = 1.8
10:11:24,982 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.54141302363402, 'dON1': 0.5082527260723758, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.5082527260723758, 'nTON': 1, 'dON': 0.5082527260723758, 'dxOFFAngle': 89.59420002645831, 'dOFF1': 0.9401152963394217, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.9401152963394217, 'nTOFF': 1, 'dOFF': 0.9401152963394217, 'SUCCESS': True}
10:11:24,991 root DEBUG 

=================== Experiment ID #219 	 Dual Point ID: 221 ===================
10:11:25,6 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.328E-08|<1.000E-06)
10:11:25,7 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:25,303 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.946E-04 	 Total distance: 1.946E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([22], dtype=int64), array([[False]])]] 	 class: [0 1]
10:11:25,607 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.422E+00 	 Total distance: 1.422E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([30], dtype=int64), array([[False]])]] 	 class: [0 1]
10:11:25,607 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:25,607 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.97 	 cIDON = [0 1], cIDOFF = [0 1]
10:11:25,607 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:25,607 root DEBUG dOFF/dON = 7307.3
10:11:25,607 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.41944208774093, 'dON1': 0.00019464940414168672, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.00019464940414168672, 'nTON': 1, 'dON': 0.00019464940414168672, 'dxOFFAngle': 89.2958773070845, 'dOFF1': 1.4223549528330321, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 1.4223549528330321, 'nTOFF': 1, 'dOFF': 1.4223549528330321, 'SUCCESS': True}
10:11:25,619 root DEBUG 

=================== Experiment ID #220 	 Dual Point ID: 222 ===================
10:11:25,627 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.733E-09|<1.000E-06)
10:11:25,628 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:25,906 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.332E-01 	 Total distance: 8.332E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([123], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:11:26,114 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.168E+00 	 Total distance: 2.002E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([56], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:11:26,284 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.104E+00 	 Total distance: 3.106E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([53], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:11:26,479 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.637E-01 	 Total distance: 3.469E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([190], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:11:26,679 root DEBUG Side: OFF	 Angle(dx0, dx): 0.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.472E+00 	 Total distance: 1.472E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([4], dtype=int64), array([[False]])]] 	 class: [7 9]
10:11:26,679 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:26,679 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -40.41 	 cIDON = [7 9], cIDOFF = [7 9]
10:11:26,679 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:26,679 root DEBUG dOFF/dON = 0.4
10:11:26,679 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.90939266175009, 'dON1': 3.4693007928012958, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 3.4693007928012958, 'nTON': 1, 'dON': 3.4693007928012958, 'dxOFFAngle': 89.75008711116281, 'dOFF1': 1.4723569630515394, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 1.4723569630515394, 'nTOFF': 1, 'dOFF': 1.4723569630515394, 'SUCCESS': False}
10:11:26,688 root DEBUG 

=================== Experiment ID #221 	 Dual Point ID: 223 ===================
10:11:26,696 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.248E-08|<1.000E-06)
10:11:26,696 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:27,29 root DEBUG Side: ON	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.313E-02 	 Total distance: 7.313E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([173], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:27,341 root DEBUG Side: OFF	 Angle(dx0, dx): 0.60 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.722E-01 	 Total distance: 2.722E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([162], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:27,342 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:27,342 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 57.64 	 cIDON = [8 9], cIDOFF = [8 9]
10:11:27,342 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:27,342 root DEBUG dOFF/dON = 3.7
10:11:27,342 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.53700754194743, 'dON1': 0.07313445512312826, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.07313445512312826, 'nTON': 1, 'dON': 0.07313445512312826, 'dxOFFAngle': 88.93980768197723, 'dOFF1': 0.2721568300404444, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.2721568300404444, 'nTOFF': 1, 'dOFF': 0.2721568300404444, 'SUCCESS': True}
10:11:27,353 root DEBUG 

=================== Experiment ID #222 	 Dual Point ID: 224 ===================
10:11:27,365 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.040E-07|<1.000E-06)
10:11:27,366 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:27,626 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.569E-02 	 Total distance: 2.569E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([116], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:11:27,889 root DEBUG Side: OFF	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.130E-02 	 Total distance: 3.130E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([22], dtype=int64), array([[False]])]] 	 class: [5 6]
10:11:27,889 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:27,889 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 9.84 	 cIDON = [5 6], cIDOFF = [5 6]
10:11:27,889 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:27,889 root DEBUG dOFF/dON = 1.2
10:11:27,889 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.30803062135907, 'dON1': 0.025694276191380625, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.025694276191380625, 'nTON': 1, 'dON': 0.025694276191380625, 'dxOFFAngle': 89.21133931611215, 'dOFF1': 0.031300837913426305, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.031300837913426305, 'nTOFF': 1, 'dOFF': 0.031300837913426305, 'SUCCESS': True}
10:11:27,901 root DEBUG 

=================== Experiment ID #223 	 Dual Point ID: 225 ===================
10:11:27,908 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.573E-08|<1.000E-06)
10:11:27,908 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:28,199 root DEBUG Side: ON	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.043E-01 	 Total distance: 5.043E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([253], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:11:28,479 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.133E-02 	 Total distance: 4.133E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([131], dtype=int64), array([[False]])]] 	 class: [2 9]
10:11:28,658 root DEBUG Side: OFF	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.121E-01 	 Total distance: 2.534E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([119], dtype=int64), array([[False]])]] 	 class: [2 9]
10:11:28,658 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:28,658 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -33.11 	 cIDON = [2 9], cIDOFF = [2 9]
10:11:28,659 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:28,659 root DEBUG dOFF/dON = 0.5
10:11:28,659 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.47614283314587, 'dON1': 0.5043397511920529, 'cIDON1': array([2, 9], dtype=int64), 'dON_patch_1': 0.5043397511920529, 'nTON': 1, 'dON': 0.5043397511920529, 'dxOFFAngle': 87.62740616207213, 'dOFF1': 0.25341328397560525, 'cIDOFF1': array([2, 9], dtype=int64), 'dOFF_patch_1': 0.25341328397560525, 'nTOFF': 1, 'dOFF': 0.25341328397560525, 'SUCCESS': False}
10:11:28,671 root DEBUG 

=================== Experiment ID #224 	 Dual Point ID: 226 ===================
10:11:28,678 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.493E-09|<1.000E-06)
10:11:28,679 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:28,967 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.234E+00 	 Total distance: 1.234E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([196], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:29,173 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.413E-02 	 Total distance: 1.258E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([174], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:29,365 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.100E+00 	 Total distance: 2.358E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([140], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:29,554 root DEBUG Side: OFF	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.321E-02 	 Total distance: 7.321E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([25], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:29,554 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:29,554 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -93.98 	 cIDON = [8 9], cIDOFF = [8 9]
10:11:29,555 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:29,555 root DEBUG dOFF/dON = 0.0
10:11:29,555 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.67175082178206, 'dON1': 2.357652681356173, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 2.357652681356173, 'nTON': 1, 'dON': 2.357652681356173, 'dxOFFAngle': 89.96533480161732, 'dOFF1': 0.0732061392509847, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.0732061392509847, 'nTOFF': 1, 'dOFF': 0.0732061392509847, 'SUCCESS': False}
10:11:29,561 root DEBUG 

=================== Experiment ID #225 	 Dual Point ID: 227 ===================
10:11:29,570 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.696E-08|<1.000E-06)
10:11:29,570 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:29,825 root DEBUG Side: ON	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.695E-01 	 Total distance: 3.695E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([189], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:30,180 root DEBUG Side: OFF	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.078E+00 	 Total distance: 1.078E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([103], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:30,180 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:30,180 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 48.93 	 cIDON = [8 9], cIDOFF = [8 9]
10:11:30,180 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:30,180 root DEBUG dOFF/dON = 2.9
10:11:30,180 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.7261508607365, 'dON1': 0.36950941659214115, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.36950941659214115, 'nTON': 1, 'dON': 0.36950941659214115, 'dxOFFAngle': 89.75766288294581, 'dOFF1': 1.077509544251476, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 1.077509544251476, 'nTOFF': 1, 'dOFF': 1.077509544251476, 'SUCCESS': True}
10:11:30,190 root DEBUG 

=================== Experiment ID #226 	 Dual Point ID: 228 ===================
10:11:30,198 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.138E-08|<1.000E-06)
10:11:30,198 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:30,419 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.965E-02 	 Total distance: 4.965E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([174], dtype=int64), array([[False]])]] 	 class: [5 6]
10:11:30,631 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.367E-02 	 Total distance: 9.331E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([145], dtype=int64), array([[False]])]] 	 class: [5 6]
10:11:30,896 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.328E-01 	 Total distance: 1.328E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([154], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:11:31,99 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.489E-01 	 Total distance: 9.818E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([76], dtype=int64), array([[False]])]] 	 class: [5 6]
10:11:31,342 root DEBUG Side: OFF	 Angle(dx0, dx): 0.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.292E-02 	 Total distance: 1.035E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([46], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:11:31,343 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:31,343 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 83.45 	 cIDON = [5 6], cIDOFF = [5 6]
10:11:31,343 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:31,343 root DEBUG dOFF/dON = 11.1
10:11:31,343 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.66914468672557, 'dON1': 0.09331414936121048, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.09331414936121048, 'nTON': 1, 'dON': 0.09331414936121048, 'dxOFFAngle': 89.9728353018975, 'dOFF1': 1.034686567229161, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 1.034686567229161, 'nTOFF': 1, 'dOFF': 1.034686567229161, 'SUCCESS': True}
10:11:31,350 root DEBUG 

=================== Experiment ID #227 	 Dual Point ID: 229 ===================
10:11:31,357 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.587E-08|<1.000E-06)
10:11:31,357 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:31,705 root DEBUG Side: ON	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.050E-01 	 Total distance: 3.050E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([37], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:11:32,31 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.206E-01 	 Total distance: 3.206E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([160], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:11:32,31 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:32,31 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 2.50 	 cIDON = [2 3], cIDOFF = [2 3]
10:11:32,31 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:32,31 root DEBUG dOFF/dON = 1.1
10:11:32,31 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.83471561116286, 'dON1': 0.30496317591467526, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.30496317591467526, 'nTON': 1, 'dON': 0.30496317591467526, 'dxOFFAngle': 88.75824667775306, 'dOFF1': 0.3206239771813691, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.3206239771813691, 'nTOFF': 1, 'dOFF': 0.3206239771813691, 'SUCCESS': True}
10:11:32,37 root DEBUG 

=================== Experiment ID #228 	 Dual Point ID: 230 ===================
10:11:32,45 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.792E-08|<1.000E-06)
10:11:32,45 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:32,370 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.329E-01 	 Total distance: 5.329E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([89], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:11:32,675 root DEBUG Side: OFF	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.303E-01 	 Total distance: 1.303E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([31], dtype=int64), array([[False]])]] 	 class: [3 7]
10:11:32,675 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:32,675 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -60.69 	 cIDON = [3 7], cIDOFF = [3 7]
10:11:32,676 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:32,676 root DEBUG dOFF/dON = 0.2
10:11:32,676 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.56415871614855, 'dON1': 0.5328968841491335, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.5328968841491335, 'nTON': 1, 'dON': 0.5328968841491335, 'dxOFFAngle': 89.31346062795296, 'dOFF1': 0.1303454064849266, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.1303454064849266, 'nTOFF': 1, 'dOFF': 0.1303454064849266, 'SUCCESS': False}
10:11:32,688 root DEBUG 

=================== Experiment ID #229 	 Dual Point ID: 231 ===================
10:11:32,695 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.742E-08|<1.000E-06)
10:11:32,695 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:32,993 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.423E-01 	 Total distance: 2.423E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([28], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:11:33,120 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.054E-01 	 Total distance: 4.477E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([103], dtype=int64), array([[False]])]] 	 class: [4 6]
10:11:33,450 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.140E+00 	 Total distance: 1.140E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([31], dtype=int64), array([[False]])]] 	 class: [4 6]
10:11:33,451 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:33,451 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 43.58 	 cIDON = [4 6], cIDOFF = [4 6]
10:11:33,451 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:33,451 root DEBUG dOFF/dON = 2.5
10:11:33,451 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.54042628731241, 'dON1': 0.44773189349121023, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.44773189349121023, 'nTON': 1, 'dON': 0.44773189349121023, 'dxOFFAngle': 88.6748065531836, 'dOFF1': 1.1395415635413981, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 1.1395415635413981, 'nTOFF': 1, 'dOFF': 1.1395415635413981, 'SUCCESS': True}
10:11:33,465 root DEBUG 

=================== Experiment ID #230 	 Dual Point ID: 232 ===================
10:11:33,474 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.640E-08|<1.000E-06)
10:11:33,474 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:33,811 root DEBUG Side: ON	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.908E-01 	 Total distance: 1.908E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([72], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:11:34,97 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.532E-01 	 Total distance: 1.532E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([93], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:11:34,295 root DEBUG Side: OFF	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.709E-02 	 Total distance: 1.703E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([14], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:11:34,295 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:34,295 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -5.68 	 cIDON = [2 5], cIDOFF = [2 5]
10:11:34,296 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:34,296 root DEBUG dOFF/dON = 0.9
10:11:34,296 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.99408427687139, 'dON1': 0.19077385347290335, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.19077385347290335, 'nTON': 1, 'dON': 0.19077385347290335, 'dxOFFAngle': 88.72154103748518, 'dOFF1': 0.1702578154382825, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.1702578154382825, 'nTOFF': 1, 'dOFF': 0.1702578154382825, 'SUCCESS': False}
10:11:34,303 root DEBUG 

=================== Experiment ID #231 	 Dual Point ID: 233 ===================
10:11:34,310 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.829E-09|<1.000E-06)
10:11:34,310 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:34,534 root DEBUG Side: ON	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.953E-01 	 Total distance: 4.953E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([39], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:11:34,849 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.121E-01 	 Total distance: 7.121E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([77], dtype=int64), array([[False]])]] 	 class: [3 6]
10:11:35,83 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.050E+00 	 Total distance: 1.762E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([53], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:11:35,83 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:35,83 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 56.13 	 cIDON = [3 6], cIDOFF = [3 6]
10:11:35,83 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:35,83 root DEBUG dOFF/dON = 3.6
10:11:35,83 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.9510832494455, 'dON1': 0.4952586781269209, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.4952586781269209, 'nTON': 1, 'dON': 0.4952586781269209, 'dxOFFAngle': 89.09748872147294, 'dOFF1': 1.7623330657277063, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 1.7623330657277063, 'nTOFF': 1, 'dOFF': 1.7623330657277063, 'SUCCESS': True}
10:11:35,92 root DEBUG 

=================== Experiment ID #232 	 Dual Point ID: 234 ===================
10:11:35,103 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.070E-07|<1.000E-06)
10:11:35,104 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:35,378 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.623E-01 	 Total distance: 8.623E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([27], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:35,609 root DEBUG Side: ON	 Angle(dx0, dx): 0.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.768E+00 	 Total distance: 2.631E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([31], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:35,819 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.631E+00 	 Total distance: 1.631E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([181], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:36,13 root DEBUG Side: OFF	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.263E+00 	 Total distance: 5.894E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([106], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:36,13 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:36,13 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 38.28 	 cIDON = [3 5], cIDOFF = [3 5]
10:11:36,14 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:36,14 root DEBUG dOFF/dON = 2.2
10:11:36,14 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.35449850177295, 'dON1': 2.630556106971647, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 2.630556106971647, 'nTON': 1, 'dON': 2.630556106971647, 'dxOFFAngle': 89.40236330639024, 'dOFF1': 5.89424892838172, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 5.89424892838172, 'nTOFF': 1, 'dOFF': 5.89424892838172, 'SUCCESS': True}
10:11:36,24 root DEBUG 

=================== Experiment ID #233 	 Dual Point ID: 235 ===================
10:11:36,39 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.479E-09|<1.000E-06)
10:11:36,39 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:36,306 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.443E-02 	 Total distance: 8.443E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([232], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:11:36,490 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.219E+00 	 Total distance: 2.303E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([122], dtype=int64), array([[False]])]] 	 class: [2 5]
10:11:36,780 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.486E-01 	 Total distance: 1.486E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([223], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:11:36,780 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:36,781 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -87.88 	 cIDON = [2 5], cIDOFF = [2 5]
10:11:36,781 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:36,781 root DEBUG dOFF/dON = 0.1
10:11:36,781 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.04142089213843, 'dON1': 2.3034449172057436, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 2.3034449172057436, 'nTON': 1, 'dON': 2.3034449172057436, 'dxOFFAngle': 89.0963091246269, 'dOFF1': 0.14861446054219357, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.14861446054219357, 'nTOFF': 1, 'dOFF': 0.14861446054219357, 'SUCCESS': False}
10:11:36,791 root DEBUG 

=================== Experiment ID #234 	 Dual Point ID: 236 ===================
10:11:36,801 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.854E-08|<1.000E-06)
10:11:36,801 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:37,75 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.387E-01 	 Total distance: 5.387E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([108], dtype=int64), array([[False]])]] 	 class: [2 4]
10:11:37,284 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.694E-01 	 Total distance: 8.081E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([131], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:11:37,517 root DEBUG Side: ON	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.148E-01 	 Total distance: 1.323E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([17], dtype=int64), array([[False]])]] 	 class: [2 4]
10:11:37,786 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.806E-01 	 Total distance: 1.806E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([33], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:11:37,787 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:37,787 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -75.98 	 cIDON = [2 4], cIDOFF = [2 4]
10:11:37,787 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:37,787 root DEBUG dOFF/dON = 0.1
10:11:37,787 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.98660146706729, 'dON1': 1.3229308727520255, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 1.3229308727520255, 'nTON': 1, 'dON': 1.3229308727520255, 'dxOFFAngle': 89.84780810573035, 'dOFF1': 0.18058404440236356, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.18058404440236356, 'nTOFF': 1, 'dOFF': 0.18058404440236356, 'SUCCESS': False}
10:11:37,795 root DEBUG 

=================== Experiment ID #235 	 Dual Point ID: 237 ===================
10:11:37,804 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.294E-09|<1.000E-06)
10:11:37,804 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:38,43 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.220E-01 	 Total distance: 5.220E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([80], dtype=int64), array([[False]])]] 	 class: [0 5]
10:11:38,168 root DEBUG Side: ON	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.028E-01 	 Total distance: 1.125E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([84], dtype=int64), array([[ True]])]] 	 class: [0 5]
10:11:38,379 root DEBUG Side: OFF	 Angle(dx0, dx): 0.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.177E-05 	 Total distance: 8.177E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 5]
10:11:38,380 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:38,380 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.99 	 cIDON = [0 5], cIDOFF = [0 5]
10:11:38,380 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:38,380 root DEBUG dOFF/dON = 0.0
10:11:38,380 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.19699835917463, 'dON1': 1.124765793104672, 'cIDON1': array([0, 5], dtype=int64), 'dON_patch_1': 1.124765793104672, 'nTON': 1, 'dON': 1.124765793104672, 'dxOFFAngle': 89.2904099460034, 'dOFF1': 8.176929512988372e-05, 'cIDOFF1': array([0, 5], dtype=int64), 'dOFF_patch_1': 8.176929512988372e-05, 'nTOFF': 1, 'dOFF': 8.176929512988372e-05, 'SUCCESS': False}
10:11:38,403 root DEBUG 

=================== Experiment ID #236 	 Dual Point ID: 238 ===================
10:11:38,415 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.522E-08|<1.000E-06)
10:11:38,415 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:38,716 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.280E-02 	 Total distance: 8.280E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([202], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:38,939 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.412E-02 	 Total distance: 1.669E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([63], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:39,157 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.079E-01 	 Total distance: 3.748E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([36], dtype=int64), array([[False]])]] 	 class: [2 7]
10:11:39,421 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.487E-01 	 Total distance: 2.487E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([148], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:39,616 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.279E-02 	 Total distance: 2.615E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([29], dtype=int64), array([[False]])]] 	 class: [2 7]
10:11:39,616 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:39,616 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -17.81 	 cIDON = [2 7], cIDOFF = [2 7]
10:11:39,616 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:39,616 root DEBUG dOFF/dON = 0.7
10:11:39,616 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.63967260624239, 'dON1': 0.3748008851455068, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.3748008851455068, 'nTON': 1, 'dON': 0.3748008851455068, 'dxOFFAngle': 89.59377199062838, 'dOFF1': 0.2614801250833083, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.2614801250833083, 'nTOFF': 1, 'dOFF': 0.2614801250833083, 'SUCCESS': False}
10:11:39,624 root DEBUG 

=================== Experiment ID #237 	 Dual Point ID: 239 ===================
10:11:39,631 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.318E-08|<1.000E-06)
10:11:39,631 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:39,897 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.274E-01 	 Total distance: 3.274E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([43], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:40,72 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.655E-01 	 Total distance: 6.929E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([148], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:40,324 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.925E-02 	 Total distance: 1.925E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([174], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:40,513 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.140E-01 	 Total distance: 3.333E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([96], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:40,513 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:40,514 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -35.04 	 cIDON = [8 9], cIDOFF = [8 9]
10:11:40,514 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:40,514 root DEBUG dOFF/dON = 0.5
10:11:40,514 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.58418798102569, 'dON1': 0.6929147949982453, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.6929147949982453, 'nTON': 1, 'dON': 0.6929147949982453, 'dxOFFAngle': 89.83582484242413, 'dOFF1': 0.33329443462247443, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.33329443462247443, 'nTOFF': 1, 'dOFF': 0.33329443462247443, 'SUCCESS': False}
10:11:40,525 root DEBUG 

=================== Experiment ID #238 	 Dual Point ID: 240 ===================
10:11:40,530 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.974E-08|<1.000E-06)
10:11:40,530 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:40,875 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.817E-01 	 Total distance: 5.817E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([209], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:11:41,64 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.534E+00 	 Total distance: 2.116E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([30], dtype=int64), array([[False]])]] 	 class: [2 6]
10:11:41,220 root DEBUG Side: ON	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.147E-01 	 Total distance: 2.230E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([64], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:11:41,487 root DEBUG Side: OFF	 Angle(dx0, dx): 0.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.176E-01 	 Total distance: 1.176E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([38], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:11:41,487 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:41,487 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -89.98 	 cIDON = [2 6], cIDOFF = [2 6]
10:11:41,488 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:41,488 root DEBUG dOFF/dON = 0.1
10:11:41,488 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.71397483684534, 'dON1': 2.230205800163796, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 2.230205800163796, 'nTON': 1, 'dON': 2.230205800163796, 'dxOFFAngle': 89.97946111769186, 'dOFF1': 0.11756583014270429, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.11756583014270429, 'nTOFF': 1, 'dOFF': 0.11756583014270429, 'SUCCESS': False}
10:11:41,500 root DEBUG 

=================== Experiment ID #239 	 Dual Point ID: 241 ===================
10:11:41,509 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.072E-08|<1.000E-06)
10:11:41,509 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:41,786 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.529E-01 	 Total distance: 6.529E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([58], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:11:42,92 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.773E-01 	 Total distance: 1.773E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([190], dtype=int64), array([[False]])]] 	 class: [2 3]
10:11:42,313 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.949E-02 	 Total distance: 2.668E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([243], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:11:42,504 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.901E-02 	 Total distance: 3.558E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([115], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:11:42,505 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:42,505 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -29.45 	 cIDON = [2 3], cIDOFF = [2 3]
10:11:42,505 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:42,505 root DEBUG dOFF/dON = 0.5
10:11:42,505 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.60803139723332, 'dON1': 0.6529060516410662, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.6529060516410662, 'nTON': 1, 'dON': 0.6529060516410662, 'dxOFFAngle': 89.93265501476823, 'dOFF1': 0.35582357805787995, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.35582357805787995, 'nTOFF': 1, 'dOFF': 0.35582357805787995, 'SUCCESS': False}
10:11:42,516 root DEBUG 

=================== Experiment ID #240 	 Dual Point ID: 242 ===================
10:11:42,528 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.397E-09|<1.000E-06)
10:11:42,528 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:42,825 root DEBUG Side: ON	 Angle(dx0, dx): 1.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.302E-02 	 Total distance: 6.302E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([29], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:11:43,113 root DEBUG Side: OFF	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.753E-01 	 Total distance: 2.753E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([180], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:11:43,113 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:43,114 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 62.74 	 cIDON = [3 6], cIDOFF = [3 6]
10:11:43,114 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:43,114 root DEBUG dOFF/dON = 4.4
10:11:43,114 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.65771179718527, 'dON1': 0.06301751164120466, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.06301751164120466, 'nTON': 1, 'dON': 0.06301751164120466, 'dxOFFAngle': 88.92493161944229, 'dOFF1': 0.2752794390107734, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.2752794390107734, 'nTOFF': 1, 'dOFF': 0.2752794390107734, 'SUCCESS': True}
10:11:43,126 root DEBUG 

=================== Experiment ID #241 	 Dual Point ID: 243 ===================
10:11:43,136 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.430E-09|<1.000E-06)
10:11:43,137 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:43,461 root DEBUG Side: ON	 Angle(dx0, dx): 0.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.123E-01 	 Total distance: 1.123E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([13], dtype=int64), array([[False]])]] 	 class: [5 8]
10:11:43,689 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.255E-01 	 Total distance: 5.255E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([48], dtype=int64), array([[ True]])]] 	 class: [5 8]
10:11:43,890 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.864E-01 	 Total distance: 8.119E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([109], dtype=int64), array([[ True]])]] 	 class: [5 8]
10:11:44,118 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.090E-01 	 Total distance: 1.021E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([190], dtype=int64), array([[False]])]] 	 class: [5 8]
10:11:44,327 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.629E-01 	 Total distance: 1.784E+00 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([16], dtype=int64), array([[ True]])]] 	 class: [5 8]
10:11:44,505 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.586E-02 	 Total distance: 1.840E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([123], dtype=int64), array([[False]])]] 	 class: [5 8]
10:11:44,505 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:44,505 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 88.49 	 cIDON = [5 8], cIDOFF = [5 8]
10:11:44,506 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:44,506 root DEBUG dOFF/dON = 16.4
10:11:44,506 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.71802727971391, 'dON1': 0.11232060145156372, 'cIDON1': array([5, 8], dtype=int64), 'dON_patch_1': 0.11232060145156372, 'nTON': 1, 'dON': 0.11232060145156372, 'dxOFFAngle': 89.774279045504, 'dOFF1': 1.839689673896614, 'cIDOFF1': array([5, 8], dtype=int64), 'dOFF_patch_1': 1.839689673896614, 'nTOFF': 1, 'dOFF': 1.839689673896614, 'SUCCESS': True}
10:11:44,519 root DEBUG 

=================== Experiment ID #242 	 Dual Point ID: 244 ===================
10:11:44,535 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.070E-08|<1.000E-06)
10:11:44,536 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:44,825 root DEBUG Side: ON	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.011E+00 	 Total distance: 2.011E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([24], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:45,141 root DEBUG Side: OFF	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.331E+00 	 Total distance: 1.331E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([8], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:45,141 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:45,141 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -20.34 	 cIDON = [2 7], cIDOFF = [2 7]
10:11:45,141 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:45,142 root DEBUG dOFF/dON = 0.7
10:11:45,142 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.57810042185945, 'dON1': 2.0112885998072416, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 2.0112885998072416, 'nTON': 1, 'dON': 2.0112885998072416, 'dxOFFAngle': 88.10855722571, 'dOFF1': 1.3312658795155814, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 1.3312658795155814, 'nTOFF': 1, 'dOFF': 1.3312658795155814, 'SUCCESS': False}
10:11:45,151 root DEBUG 

=================== Experiment ID #243 	 Dual Point ID: 245 ===================
10:11:45,158 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.051E-07|<1.000E-06)
10:11:45,158 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:45,464 root DEBUG Side: ON	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.941E+00 	 Total distance: 1.941E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([81], dtype=int64), array([[False]])]] 	 class: [3 9]
10:11:45,794 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.427E-01 	 Total distance: 2.427E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([131], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:11:45,794 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:45,794 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -77.78 	 cIDON = [3 9], cIDOFF = [3 9]
10:11:45,794 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:45,794 root DEBUG dOFF/dON = 0.1
10:11:45,794 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.8606579359729, 'dON1': 1.9413551533201956, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 1.9413551533201956, 'nTON': 1, 'dON': 1.9413551533201956, 'dxOFFAngle': 89.78348847144045, 'dOFF1': 0.24265051092525797, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.24265051092525797, 'nTOFF': 1, 'dOFF': 0.24265051092525797, 'SUCCESS': False}
10:11:45,803 root DEBUG 

=================== Experiment ID #244 	 Dual Point ID: 246 ===================
10:11:45,810 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.402E-09|<1.000E-06)
10:11:45,810 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:46,118 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.318E-01 	 Total distance: 5.318E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([92], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:11:46,346 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.047E-01 	 Total distance: 8.365E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([109], dtype=int64), array([[False]])]] 	 class: [1 8]
10:11:46,560 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.066E-01 	 Total distance: 1.143E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([28], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:11:46,750 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.648E-02 	 Total distance: 1.190E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([92], dtype=int64), array([[False]])]] 	 class: [1 8]
10:11:46,932 root DEBUG Side: OFF	 Angle(dx0, dx): 0.95 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.447E-06 	 Total distance: 1.447E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:11:46,933 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:46,933 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -100.00 	 cIDON = [1 8], cIDOFF = [1 8]
10:11:46,933 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:46,933 root DEBUG dOFF/dON = 0.0
10:11:46,933 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.48319808370968, 'dON1': 1.1896132259717809, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 1.1896132259717809, 'nTON': 1, 'dON': 1.1896132259717809, 'dxOFFAngle': 89.69027149765957, 'dOFF1': 1.447154318257786e-06, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 1.447154318257786e-06, 'nTOFF': 1, 'dOFF': 1.447154318257786e-06, 'SUCCESS': False}
10:11:46,945 root DEBUG 

=================== Experiment ID #245 	 Dual Point ID: 247 ===================
10:11:46,952 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.953E-09|<1.000E-06)
10:11:46,952 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:47,287 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.377E-01 	 Total distance: 2.377E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([13], dtype=int64), array([[False]])]] 	 class: [3 6]
10:11:47,435 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.738E-02 	 Total distance: 2.651E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([153], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:11:47,608 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.935E-03 	 Total distance: 2.720E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([53], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:11:47,774 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.236E-01 	 Total distance: 6.956E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([63], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:11:47,958 root DEBUG Side: ON	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.297E-02 	 Total distance: 7.786E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([56], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:11:48,258 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.170E-02 	 Total distance: 8.170E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([190], dtype=int64), array([[False]])]] 	 class: [3 6]
10:11:48,412 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.545E-03 	 Total distance: 8.724E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([239], dtype=int64), array([[False]])]] 	 class: [3 6]
10:11:48,606 root DEBUG Side: OFF	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.356E+00 	 Total distance: 1.443E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([2], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:11:48,774 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.705E-01 	 Total distance: 1.614E+00 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([194], dtype=int64), array([[False]])]] 	 class: [3 6]
10:11:48,934 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.726E-01 	 Total distance: 1.786E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([91], dtype=int64), array([[False]])]] 	 class: [3 6]
10:11:48,934 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:48,935 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 39.29 	 cIDON = [3 6], cIDOFF = [3 6]
10:11:48,935 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:48,935 root DEBUG dOFF/dON = 2.3
10:11:48,935 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.65980838556324, 'dON1': 0.7786029708067593, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.7786029708067593, 'nTON': 1, 'dON': 0.7786029708067593, 'dxOFFAngle': 89.84467508283637, 'dOFF1': 1.7864332671669276, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 1.7864332671669276, 'nTOFF': 1, 'dOFF': 1.7864332671669276, 'SUCCESS': True}
10:11:48,949 root DEBUG 

=================== Experiment ID #246 	 Dual Point ID: 248 ===================
10:11:48,957 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.045E-09|<1.000E-06)
10:11:48,957 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:49,297 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.211E-01 	 Total distance: 3.211E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([136], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:11:49,549 root DEBUG Side: OFF	 Angle(dx0, dx): 1.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.171E-06 	 Total distance: 2.171E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:11:49,549 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:49,549 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -100.00 	 cIDON = [1 8], cIDOFF = [1 8]
10:11:49,549 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:49,549 root DEBUG dOFF/dON = 0.0
10:11:49,549 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.16483193318105, 'dON1': 0.32108060433804847, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 0.32108060433804847, 'nTON': 1, 'dON': 0.32108060433804847, 'dxOFFAngle': 88.70818590873542, 'dOFF1': 2.1712516046500695e-06, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 2.1712516046500695e-06, 'nTOFF': 1, 'dOFF': 2.1712516046500695e-06, 'SUCCESS': False}
10:11:49,558 root DEBUG 

=================== Experiment ID #247 	 Dual Point ID: 249 ===================
10:11:49,569 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.681E-08|<1.000E-06)
10:11:49,569 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:49,914 root DEBUG Side: ON	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.681E-01 	 Total distance: 7.681E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([61], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:11:50,188 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.138E-01 	 Total distance: 1.138E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([126], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:11:50,330 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.239E-01 	 Total distance: 2.377E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([87], dtype=int64), array([[False]])]] 	 class: [3 4]
10:11:50,330 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:50,331 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -52.74 	 cIDON = [3 4], cIDOFF = [3 4]
10:11:50,331 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:50,331 root DEBUG dOFF/dON = 0.3
10:11:50,331 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.52718246025637, 'dON1': 0.7680841254520131, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.7680841254520131, 'nTON': 1, 'dON': 0.7680841254520131, 'dxOFFAngle': 89.7004547861472, 'dOFF1': 0.2376589387425066, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.2376589387425066, 'nTOFF': 1, 'dOFF': 0.2376589387425066, 'SUCCESS': False}
10:11:50,338 root DEBUG 

=================== Experiment ID #248 	 Dual Point ID: 250 ===================
10:11:50,343 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.091E-09|<1.000E-06)
10:11:50,344 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:50,614 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.392E-02 	 Total distance: 1.392E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([85], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:50,857 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.517E-02 	 Total distance: 1.517E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([2], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:51,1 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.947E-01 	 Total distance: 5.099E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([239], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:51,223 root DEBUG Side: OFF	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.640E-01 	 Total distance: 8.739E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([33], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:51,408 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.916E-01 	 Total distance: 1.265E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([8], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:51,408 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:51,409 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 97.82 	 cIDON = [8 9], cIDOFF = [8 9]
10:11:51,409 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:51,409 root DEBUG dOFF/dON = 90.9
10:11:51,409 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.12161536456159, 'dON1': 0.013920886314460772, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.013920886314460772, 'nTON': 1, 'dON': 0.013920886314460772, 'dxOFFAngle': 89.2485517103161, 'dOFF1': 1.2654903026785664, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 1.2654903026785664, 'nTOFF': 1, 'dOFF': 1.2654903026785664, 'SUCCESS': True}
10:11:51,415 root DEBUG 

=================== Experiment ID #249 	 Dual Point ID: 251 ===================
10:11:51,425 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.647E-08|<1.000E-06)
10:11:51,425 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:51,720 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.804E-02 	 Total distance: 3.804E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([137], dtype=int64), array([[False]])]] 	 class: [2 6]
10:11:51,954 root DEBUG Side: OFF	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.740E-01 	 Total distance: 3.740E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([56], dtype=int64), array([[False]])]] 	 class: [2 6]
10:11:51,954 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:51,955 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 81.54 	 cIDON = [2 6], cIDOFF = [2 6]
10:11:51,955 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:51,955 root DEBUG dOFF/dON = 9.8
10:11:51,955 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.67750133004031, 'dON1': 0.038043563077629315, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.038043563077629315, 'nTON': 1, 'dON': 0.038043563077629315, 'dxOFFAngle': 89.79517815734467, 'dOFF1': 0.3740400070946944, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.3740400070946944, 'nTOFF': 1, 'dOFF': 0.3740400070946944, 'SUCCESS': True}
10:11:51,962 root DEBUG 

=================== Experiment ID #250 	 Dual Point ID: 252 ===================
10:11:51,968 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.354E-08|<1.000E-06)
10:11:51,968 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:52,220 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.733E-01 	 Total distance: 2.733E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([92], dtype=int64), array([[False]])]] 	 class: [6 9]
10:11:52,485 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.037E-01 	 Total distance: 7.037E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([153], dtype=int64), array([[False]])]] 	 class: [6 9]
10:11:52,665 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.758E-02 	 Total distance: 7.413E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([118], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:11:52,853 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.111E+00 	 Total distance: 1.853E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([19], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:11:52,854 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:52,854 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 74.29 	 cIDON = [6 9], cIDOFF = [6 9]
10:11:52,854 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:52,854 root DEBUG dOFF/dON = 6.8
10:11:52,854 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.97561587747937, 'dON1': 0.2733224823762105, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.2733224823762105, 'nTON': 1, 'dON': 0.2733224823762105, 'dxOFFAngle': 89.26648000888878, 'dOFF1': 1.8526346485118375, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 1.8526346485118375, 'nTOFF': 1, 'dOFF': 1.8526346485118375, 'SUCCESS': True}
10:11:52,863 root DEBUG 

=================== Experiment ID #251 	 Dual Point ID: 253 ===================
10:11:52,872 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.314E-10|<1.000E-06)
10:11:52,872 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:53,132 root DEBUG Side: ON	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.139E+00 	 Total distance: 1.139E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([51], dtype=int64), array([[False]])]] 	 class: [3 6]
10:11:53,414 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.252E-02 	 Total distance: 3.252E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([28], dtype=int64), array([[False]])]] 	 class: [3 6]
10:11:53,624 root DEBUG Side: OFF	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.411E+00 	 Total distance: 1.444E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([45], dtype=int64), array([[False]])]] 	 class: [3 6]
10:11:53,624 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:53,624 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 11.80 	 cIDON = [3 6], cIDOFF = [3 6]
10:11:53,625 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:53,625 root DEBUG dOFF/dON = 1.3
10:11:53,625 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.33875338661119, 'dON1': 1.1391215062421027, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 1.1391215062421027, 'nTON': 1, 'dON': 1.1391215062421027, 'dxOFFAngle': 88.36709368210963, 'dOFF1': 1.4439726012003258, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 1.4439726012003258, 'nTOFF': 1, 'dOFF': 1.4439726012003258, 'SUCCESS': True}
10:11:53,633 root DEBUG 

=================== Experiment ID #252 	 Dual Point ID: 254 ===================
10:11:53,641 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.029E-08|<1.000E-06)
10:11:53,641 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:53,945 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.551E-02 	 Total distance: 7.551E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([80], dtype=int64), array([[False]])]] 	 class: [0 1]
10:11:54,188 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.580E-01 	 Total distance: 3.335E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([172], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:11:54,384 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.704E-01 	 Total distance: 1.104E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([110], dtype=int64), array([[False]])]] 	 class: [0 1]
10:11:54,642 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.941E-02 	 Total distance: 8.941E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([223], dtype=int64), array([[False]])]] 	 class: [0 1]
10:11:54,643 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:54,643 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -85.01 	 cIDON = [0 1], cIDOFF = [0 1]
10:11:54,643 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:54,643 root DEBUG dOFF/dON = 0.1
10:11:54,643 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.57985159832288, 'dON1': 1.103865017837339, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 1.103865017837339, 'nTON': 1, 'dON': 1.103865017837339, 'dxOFFAngle': 89.32439607500812, 'dOFF1': 0.0894108267896518, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.0894108267896518, 'nTOFF': 1, 'dOFF': 0.0894108267896518, 'SUCCESS': False}
10:11:54,654 root DEBUG 

=================== Experiment ID #253 	 Dual Point ID: 255 ===================
10:11:54,661 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.672E-09|<1.000E-06)
10:11:54,662 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:54,958 root DEBUG Side: ON	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.316E-01 	 Total distance: 4.316E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([108], dtype=int64), array([[False]])]] 	 class: [2 9]
10:11:55,172 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.862E-02 	 Total distance: 5.202E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([166], dtype=int64), array([[False]])]] 	 class: [2 9]
10:11:55,316 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.015E-03 	 Total distance: 5.282E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([133], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:11:55,522 root DEBUG Side: ON	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.153E-02 	 Total distance: 6.198E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([233], dtype=int64), array([[False]])]] 	 class: [2 9]
10:11:55,827 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.755E-02 	 Total distance: 7.755E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([44], dtype=int64), array([[False]])]] 	 class: [2 9]
10:11:56,56 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.700E-01 	 Total distance: 4.476E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([154], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:11:56,301 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.315E-01 	 Total distance: 1.179E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([150], dtype=int64), array([[False]])]] 	 class: [2 9]
10:11:56,484 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.357E-01 	 Total distance: 1.315E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([64], dtype=int64), array([[False]])]] 	 class: [2 9]
10:11:56,484 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:56,485 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 35.93 	 cIDON = [2 9], cIDOFF = [2 9]
10:11:56,485 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:56,485 root DEBUG dOFF/dON = 2.1
10:11:56,485 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.37913080159771, 'dON1': 0.6197528064189286, 'cIDON1': array([2, 9], dtype=int64), 'dON_patch_1': 0.6197528064189286, 'nTON': 1, 'dON': 0.6197528064189286, 'dxOFFAngle': 88.45362407723805, 'dOFF1': 1.3147570916579514, 'cIDOFF1': array([2, 9], dtype=int64), 'dOFF_patch_1': 1.3147570916579514, 'nTOFF': 1, 'dOFF': 1.3147570916579514, 'SUCCESS': True}
10:11:56,491 root DEBUG 

=================== Experiment ID #254 	 Dual Point ID: 256 ===================
10:11:56,499 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.872E-09|<1.000E-06)
10:11:56,499 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:56,802 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.424E-02 	 Total distance: 4.424E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([237], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:11:57,104 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.931E-01 	 Total distance: 2.931E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([136], dtype=int64), array([[False]])]] 	 class: [2 9]
10:11:57,104 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:57,104 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 73.77 	 cIDON = [2 9], cIDOFF = [2 9]
10:11:57,104 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:57,104 root DEBUG dOFF/dON = 6.6
10:11:57,105 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.42477150375315, 'dON1': 0.044244004153443976, 'cIDON1': array([2, 9], dtype=int64), 'dON_patch_1': 0.044244004153443976, 'nTON': 1, 'dON': 0.044244004153443976, 'dxOFFAngle': 88.48482965764961, 'dOFF1': 0.2930630007680713, 'cIDOFF1': array([2, 9], dtype=int64), 'dOFF_patch_1': 0.2930630007680713, 'nTOFF': 1, 'dOFF': 0.2930630007680713, 'SUCCESS': True}
10:11:57,115 root DEBUG 

=================== Experiment ID #255 	 Dual Point ID: 257 ===================
10:11:57,122 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.187E-08|<1.000E-06)
10:11:57,122 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:57,330 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.163E-05 	 Total distance: 7.163E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([123], dtype=int64), array([[False]])]] 	 class: [4 5]
10:11:57,674 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.319E-01 	 Total distance: 8.319E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([191], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:11:57,895 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.452E-01 	 Total distance: 1.777E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([34], dtype=int64), array([[False]])]] 	 class: [4 5]
10:11:58,82 root DEBUG Side: OFF	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.623E-01 	 Total distance: 2.139E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([87], dtype=int64), array([[False]])]] 	 class: [4 5]
10:11:58,82 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:58,83 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.99 	 cIDON = [4 5], cIDOFF = [4 5]
10:11:58,83 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:58,83 root DEBUG dOFF/dON = 29865.7
10:11:58,83 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.64236143484895, 'dON1': 7.163448760668524e-05, 'cIDON1': array([4, 5], dtype=int64), 'dON_patch_1': 7.163448760668524e-05, 'nTON': 1, 'dON': 7.163448760668524e-05, 'dxOFFAngle': 89.97359350165036, 'dOFF1': 2.139413959864505, 'cIDOFF1': array([4, 5], dtype=int64), 'dOFF_patch_1': 2.139413959864505, 'nTOFF': 1, 'dOFF': 2.139413959864505, 'SUCCESS': True}
10:11:58,94 root DEBUG 

=================== Experiment ID #256 	 Dual Point ID: 258 ===================
10:11:58,103 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.297E-08|<1.000E-06)
10:11:58,104 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:58,370 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.289E-01 	 Total distance: 2.289E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([178], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:58,557 root DEBUG Side: ON	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.025E-01 	 Total distance: 4.314E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([92], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:58,888 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.973E-01 	 Total distance: 7.973E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([43], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:59,94 root DEBUG Side: OFF	 Angle(dx0, dx): 1.96 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.914E-01 	 Total distance: 1.589E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([33], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:59,94 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:59,94 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 57.29 	 cIDON = [3 5], cIDOFF = [3 5]
10:11:59,94 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:59,94 root DEBUG dOFF/dON = 3.7
10:11:59,94 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.93120022177267, 'dON1': 0.43142231437527967, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.43142231437527967, 'nTON': 1, 'dON': 0.43142231437527967, 'dxOFFAngle': 87.80295213429126, 'dOFF1': 1.588746023998257, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 1.588746023998257, 'nTOFF': 1, 'dOFF': 1.588746023998257, 'SUCCESS': True}
10:11:59,101 root DEBUG 

=================== Experiment ID #257 	 Dual Point ID: 259 ===================
10:11:59,112 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.431E-08|<1.000E-06)
10:11:59,112 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:59,404 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.735E-02 	 Total distance: 5.735E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([131], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:59,604 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.781E-01 	 Total distance: 5.355E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([132], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:59,856 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.653E-01 	 Total distance: 1.653E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([215], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:59,857 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:59,857 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -52.83 	 cIDON = [2 7], cIDOFF = [2 7]
10:11:59,857 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:59,857 root DEBUG dOFF/dON = 0.3
10:11:59,857 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.98829128254656, 'dON1': 0.5354523953067423, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.5354523953067423, 'nTON': 1, 'dON': 0.5354523953067423, 'dxOFFAngle': 89.99116222478607, 'dOFF1': 0.16526767535611236, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.16526767535611236, 'nTOFF': 1, 'dOFF': 0.16526767535611236, 'SUCCESS': False}
10:11:59,868 root DEBUG 

=================== Experiment ID #258 	 Dual Point ID: 260 ===================
10:11:59,875 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.342E-07|<1.000E-06)
10:11:59,875 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:00,182 root DEBUG Side: ON	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.462E-02 	 Total distance: 9.462E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([204], dtype=int64), array([[ True]])]] 	 class: [1 7]
10:12:00,430 root DEBUG Side: OFF	 Angle(dx0, dx): 1.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.158E-05 	 Total distance: 1.158E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 7]
10:12:00,431 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:00,431 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.98 	 cIDON = [1 7], cIDOFF = [1 7]
10:12:00,431 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:00,431 root DEBUG dOFF/dON = 0.0
10:12:00,432 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.75185241748613, 'dON1': 0.09461548242572129, 'cIDON1': array([1, 7], dtype=int64), 'dON_patch_1': 0.09461548242572129, 'nTON': 1, 'dON': 0.09461548242572129, 'dxOFFAngle': 87.96597171989572, 'dOFF1': 1.1584364421468934e-05, 'cIDOFF1': array([1, 7], dtype=int64), 'dOFF_patch_1': 1.1584364421468934e-05, 'nTOFF': 1, 'dOFF': 1.1584364421468934e-05, 'SUCCESS': False}
10:12:00,445 root DEBUG 

=================== Experiment ID #259 	 Dual Point ID: 261 ===================
10:12:00,454 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.881E-08|<1.000E-06)
10:12:00,455 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:00,676 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.652E-01 	 Total distance: 3.652E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([32], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:12:00,811 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.202E-02 	 Total distance: 3.772E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([192], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:12:00,955 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.162E-01 	 Total distance: 5.934E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([69], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:12:01,186 root DEBUG Side: ON	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.050E+00 	 Total distance: 1.643E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([47], dtype=int64), array([[False]])]] 	 class: [5 7]
10:12:01,496 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.369E+00 	 Total distance: 1.369E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([138], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:12:01,676 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.243E-01 	 Total distance: 1.694E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([56], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:12:01,676 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:01,677 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 1.52 	 cIDON = [5 7], cIDOFF = [5 7]
10:12:01,677 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:01,677 root DEBUG dOFF/dON = 1.0
10:12:01,677 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.0611149923181, 'dON1': 1.6429537701143089, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 1.6429537701143089, 'nTON': 1, 'dON': 1.6429537701143089, 'dxOFFAngle': 88.28174846172398, 'dOFF1': 1.6936442294686076, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 1.6936442294686076, 'nTOFF': 1, 'dOFF': 1.6936442294686076, 'SUCCESS': True}
10:12:01,684 root DEBUG 

=================== Experiment ID #260 	 Dual Point ID: 262 ===================
10:12:01,691 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.494E-09|<1.000E-06)
10:12:01,692 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:01,962 root DEBUG Side: ON	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.383E-01 	 Total distance: 6.383E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([94], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:12:02,183 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.171E-03 	 Total distance: 3.171E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([183], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:12:02,183 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:02,184 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.01 	 cIDON = [8 9], cIDOFF = [8 9]
10:12:02,184 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:02,184 root DEBUG dOFF/dON = 0.0
10:12:02,184 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.12666962643459, 'dON1': 0.6382540834924726, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.6382540834924726, 'nTON': 1, 'dON': 0.6382540834924726, 'dxOFFAngle': 89.26466629184125, 'dOFF1': 0.0031709299239196364, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.0031709299239196364, 'nTOFF': 1, 'dOFF': 0.0031709299239196364, 'SUCCESS': False}
10:12:02,190 root DEBUG 

=================== Experiment ID #261 	 Dual Point ID: 263 ===================
10:12:02,197 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.798E-08|<1.000E-06)
10:12:02,197 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:02,502 root DEBUG Side: ON	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.516E-01 	 Total distance: 2.516E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([28], dtype=int64), array([[ True]])]] 	 class: [0 3]
10:12:02,759 root DEBUG Side: OFF	 Angle(dx0, dx): 1.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.447E-06 	 Total distance: 1.447E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 3]
10:12:02,760 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:02,760 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -100.00 	 cIDON = [0 3], cIDOFF = [0 3]
10:12:02,760 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:02,760 root DEBUG dOFF/dON = 0.0
10:12:02,760 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.66869735807536, 'dON1': 0.25163244647510863, 'cIDON1': array([0, 3], dtype=int64), 'dON_patch_1': 0.25163244647510863, 'nTON': 1, 'dON': 0.25163244647510863, 'dxOFFAngle': 89.36081668671908, 'dOFF1': 1.4472232282996458e-06, 'cIDOFF1': array([0, 3], dtype=int64), 'dOFF_patch_1': 1.4472232282996458e-06, 'nTOFF': 1, 'dOFF': 1.4472232282996458e-06, 'SUCCESS': False}
10:12:02,773 root DEBUG 

=================== Experiment ID #262 	 Dual Point ID: 264 ===================
10:12:02,779 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.418E-08|<1.000E-06)
10:12:02,779 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:03,87 root DEBUG Side: ON	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.934E-01 	 Total distance: 4.934E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([20], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:12:03,414 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.245E+00 	 Total distance: 1.245E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([141], dtype=int64), array([[False]])]] 	 class: [2 6]
10:12:03,664 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.895E-01 	 Total distance: 1.534E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([53], dtype=int64), array([[False]])]] 	 class: [2 6]
10:12:03,887 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.875E-02 	 Total distance: 1.593E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([3], dtype=int64), array([[False]])]] 	 class: [2 6]
10:12:04,26 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.576E-02 	 Total distance: 1.609E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([86], dtype=int64), array([[False]])]] 	 class: [2 6]
10:12:04,26 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:04,26 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 53.06 	 cIDON = [2 6], cIDOFF = [2 6]
10:12:04,27 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:04,27 root DEBUG dOFF/dON = 3.3
10:12:04,27 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.6559659057135, 'dON1': 0.49340895027882514, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.49340895027882514, 'nTON': 1, 'dON': 0.49340895027882514, 'dxOFFAngle': 89.32358859189407, 'dOFF1': 1.6089163286411399, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 1.6089163286411399, 'nTOFF': 1, 'dOFF': 1.6089163286411399, 'SUCCESS': True}
10:12:04,36 root DEBUG 

=================== Experiment ID #263 	 Dual Point ID: 265 ===================
10:12:04,42 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.273E-08|<1.000E-06)
10:12:04,43 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:04,301 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.580E-02 	 Total distance: 7.580E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([134], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:12:04,557 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.377E-02 	 Total distance: 1.496E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([14], dtype=int64), array([[False]])]] 	 class: [5 7]
10:12:04,923 root DEBUG Side: OFF	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.526E-01 	 Total distance: 8.526E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([74], dtype=int64), array([[False]])]] 	 class: [5 7]
10:12:04,924 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:04,924 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 70.15 	 cIDON = [5 7], cIDOFF = [5 7]
10:12:04,925 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:04,925 root DEBUG dOFF/dON = 5.7
10:12:04,925 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.61212413774503, 'dON1': 0.1495741650361157, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.1495741650361157, 'nTON': 1, 'dON': 0.1495741650361157, 'dxOFFAngle': 88.31052153160675, 'dOFF1': 0.8526119652537398, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.8526119652537398, 'nTOFF': 1, 'dOFF': 0.8526119652537398, 'SUCCESS': True}
10:12:04,937 root DEBUG 

=================== Experiment ID #264 	 Dual Point ID: 266 ===================
10:12:04,946 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.000E-08|<1.000E-06)
10:12:04,946 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:05,258 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.616E-01 	 Total distance: 1.616E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([48], dtype=int64), array([[False]])]] 	 class: [6 9]
10:12:05,459 root DEBUG Side: ON	 Angle(dx0, dx): 1.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.056E-01 	 Total distance: 3.673E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([12], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:12:05,773 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.976E-03 	 Total distance: 7.976E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([16], dtype=int64), array([[False]])]] 	 class: [6 9]
10:12:05,773 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:05,773 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -95.75 	 cIDON = [6 9], cIDOFF = [6 9]
10:12:05,773 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:05,773 root DEBUG dOFF/dON = 0.0
10:12:05,773 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.57638594195137, 'dON1': 0.36725758858206614, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.36725758858206614, 'nTON': 1, 'dON': 0.36725758858206614, 'dxOFFAngle': 88.67422982722587, 'dOFF1': 0.007975838886489393, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.007975838886489393, 'nTOFF': 1, 'dOFF': 0.007975838886489393, 'SUCCESS': False}
10:12:05,780 root DEBUG 

=================== Experiment ID #265 	 Dual Point ID: 267 ===================
10:12:05,789 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.970E-09|<1.000E-06)
10:12:05,789 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:06,193 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.040E-01 	 Total distance: 8.040E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([29], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:12:06,457 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.684E+00 	 Total distance: 1.684E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([90], dtype=int64), array([[False]])]] 	 class: [8 9]
10:12:06,457 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:06,457 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 35.38 	 cIDON = [8 9], cIDOFF = [8 9]
10:12:06,457 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:06,457 root DEBUG dOFF/dON = 2.1
10:12:06,457 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.02636959222028, 'dON1': 0.8040311232386903, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.8040311232386903, 'nTON': 1, 'dON': 0.8040311232386903, 'dxOFFAngle': 89.7582350432356, 'dOFF1': 1.6843224418818081, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 1.6843224418818081, 'nTOFF': 1, 'dOFF': 1.6843224418818081, 'SUCCESS': True}
10:12:06,473 root DEBUG 

=================== Experiment ID #266 	 Dual Point ID: 268 ===================
10:12:06,485 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.000E-07|<1.000E-06)
10:12:06,485 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:06,786 root DEBUG Side: ON	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.618E-06 	 Total distance: 3.618E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 9]
10:12:07,121 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.351E+00 	 Total distance: 1.351E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([203], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:12:07,121 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:07,122 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [0 9], cIDOFF = [1 9]
10:12:07,122 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:07,122 root DEBUG dOFF/dON = 373396.3
10:12:07,122 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.46448811511324, 'dON1': 3.617990959525309e-06, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 3.617990959525309e-06, 'nTON': 1, 'dON': 3.617990959525309e-06, 'dxOFFAngle': 89.20192320487072, 'dOFF1': 1.350944488970973, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 1.350944488970973, 'nTOFF': 1, 'dOFF': 1.350944488970973, 'SUCCESS': True}
10:12:07,138 root DEBUG 

=================== Experiment ID #267 	 Dual Point ID: 269 ===================
10:12:07,151 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.881E-08|<1.000E-06)
10:12:07,151 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:07,396 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.578E-01 	 Total distance: 1.578E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([4], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:12:07,675 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.593E-01 	 Total distance: 2.593E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([42], dtype=int64), array([[False]])]] 	 class: [3 4]
10:12:07,675 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:07,675 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 24.34 	 cIDON = [3 4], cIDOFF = [3 4]
10:12:07,675 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:07,675 root DEBUG dOFF/dON = 1.6
10:12:07,675 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.78497637232965, 'dON1': 0.1577827645907731, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.1577827645907731, 'nTON': 1, 'dON': 0.1577827645907731, 'dxOFFAngle': 89.77466461507142, 'dOFF1': 0.25932031096020497, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.25932031096020497, 'nTOFF': 1, 'dOFF': 0.25932031096020497, 'SUCCESS': True}
10:12:07,687 root DEBUG 

=================== Experiment ID #268 	 Dual Point ID: 270 ===================
10:12:07,694 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.018E-08|<1.000E-06)
10:12:07,694 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:07,984 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.283E-01 	 Total distance: 1.283E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([153], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:12:08,203 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.828E-01 	 Total distance: 3.111E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([82], dtype=int64), array([[False]])]] 	 class: [5 6]
10:12:08,430 root DEBUG Side: ON	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.087E-02 	 Total distance: 3.820E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([213], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:12:08,707 root DEBUG Side: OFF	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.734E-01 	 Total distance: 3.734E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([48], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:12:08,708 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:08,708 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -1.14 	 cIDON = [5 6], cIDOFF = [5 6]
10:12:08,708 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:08,708 root DEBUG dOFF/dON = 1.0
10:12:08,708 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.34236802452084, 'dON1': 0.3819657559314511, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.3819657559314511, 'nTON': 1, 'dON': 0.3819657559314511, 'dxOFFAngle': 88.31954286635236, 'dOFF1': 0.3733820178576247, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.3733820178576247, 'nTOFF': 1, 'dOFF': 0.3733820178576247, 'SUCCESS': False}
10:12:08,717 root DEBUG 

=================== Experiment ID #269 	 Dual Point ID: 271 ===================
10:12:08,729 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.632E-08|<1.000E-06)
10:12:08,729 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:08,989 root DEBUG Side: ON	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.313E-01 	 Total distance: 1.313E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([145], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:12:09,149 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.207E-01 	 Total distance: 3.519E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([138], dtype=int64), array([[False]])]] 	 class: [6 7]
10:12:09,324 root DEBUG Side: ON	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.542E-02 	 Total distance: 4.474E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([201], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:12:09,549 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.257E-01 	 Total distance: 2.257E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([10], dtype=int64), array([[False]])]] 	 class: [6 7]
10:12:09,721 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.035E-01 	 Total distance: 6.292E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([215], dtype=int64), array([[False]])]] 	 class: [6 7]
10:12:09,929 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.607E+00 	 Total distance: 2.236E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([232], dtype=int64), array([[False]])]] 	 class: [6 7]
10:12:10,161 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.624E-01 	 Total distance: 2.798E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([2], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:12:10,162 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:10,162 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 72.43 	 cIDON = [6 7], cIDOFF = [6 7]
10:12:10,162 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:10,162 root DEBUG dOFF/dON = 6.3
10:12:10,162 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.92826004406285, 'dON1': 0.4473637081278715, 'cIDON1': array([6, 7], dtype=int64), 'dON_patch_1': 0.4473637081278715, 'nTON': 1, 'dON': 0.4473637081278715, 'dxOFFAngle': 88.33891007862101, 'dOFF1': 2.798355118201293, 'cIDOFF1': array([6, 7], dtype=int64), 'dOFF_patch_1': 2.798355118201293, 'nTOFF': 1, 'dOFF': 2.798355118201293, 'SUCCESS': True}
10:12:10,172 root DEBUG 

=================== Experiment ID #270 	 Dual Point ID: 272 ===================
10:12:10,181 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.038E-08|<1.000E-06)
10:12:10,182 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:10,468 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.702E-01 	 Total distance: 1.702E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([232], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:12:10,618 root DEBUG Side: ON	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.062E-02 	 Total distance: 1.908E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([17], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:12:10,835 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.795E-02 	 Total distance: 9.795E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([84], dtype=int64), array([[False]])]] 	 class: [3 5]
10:12:10,835 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:10,836 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -32.16 	 cIDON = [3 5], cIDOFF = [3 5]
10:12:10,836 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:10,836 root DEBUG dOFF/dON = 0.5
10:12:10,836 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.25557605695415, 'dON1': 0.190808325804946, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.190808325804946, 'nTON': 1, 'dON': 0.190808325804946, 'dxOFFAngle': 89.40084649706868, 'dOFF1': 0.09794949937824939, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.09794949937824939, 'nTOFF': 1, 'dOFF': 0.09794949937824939, 'SUCCESS': False}
10:12:10,843 root DEBUG 

=================== Experiment ID #271 	 Dual Point ID: 273 ===================
10:12:10,852 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.392E-08|<1.000E-06)
10:12:10,852 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:11,116 root DEBUG Side: ON	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.647E-02 	 Total distance: 3.647E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([123], dtype=int64), array([[False]])]] 	 class: [2 7]
10:12:11,380 root DEBUG Side: OFF	 Angle(dx0, dx): 0.60 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.293E-02 	 Total distance: 9.293E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([193], dtype=int64), array([[False]])]] 	 class: [2 7]
10:12:11,381 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:11,381 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 43.63 	 cIDON = [2 7], cIDOFF = [2 7]
10:12:11,381 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:11,381 root DEBUG dOFF/dON = 2.5
10:12:11,381 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.97381090424891, 'dON1': 0.036469987436658836, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.036469987436658836, 'nTON': 1, 'dON': 0.036469987436658836, 'dxOFFAngle': 89.23509401662423, 'dOFF1': 0.0929265312114377, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.0929265312114377, 'nTOFF': 1, 'dOFF': 0.0929265312114377, 'SUCCESS': True}
10:12:11,394 root DEBUG 

=================== Experiment ID #272 	 Dual Point ID: 274 ===================
10:12:11,403 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.404E-08|<1.000E-06)
10:12:11,404 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:11,727 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.464E-01 	 Total distance: 9.464E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([59], dtype=int64), array([[False]])]] 	 class: [0 1]
10:12:11,960 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.370E+00 	 Total distance: 2.316E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([198], dtype=int64), array([[False]])]] 	 class: [0 1]
10:12:12,184 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.357E-01 	 Total distance: 2.552E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([113], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:12:12,332 root DEBUG Side: ON	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.448E-01 	 Total distance: 2.896E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([141], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:12:12,631 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.380E-01 	 Total distance: 6.380E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([36], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:12:12,631 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:12,632 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -63.90 	 cIDON = [0 1], cIDOFF = [0 1]
10:12:12,632 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:12,632 root DEBUG dOFF/dON = 0.2
10:12:12,632 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.74520348995938, 'dON1': 2.8964204541118583, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 2.8964204541118583, 'nTON': 1, 'dON': 2.8964204541118583, 'dxOFFAngle': 89.47046871087379, 'dOFF1': 0.6379901180544771, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.6379901180544771, 'nTOFF': 1, 'dOFF': 0.6379901180544771, 'SUCCESS': False}
10:12:12,644 root DEBUG 

=================== Experiment ID #273 	 Dual Point ID: 275 ===================
10:12:12,653 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.487E-09|<1.000E-06)
10:12:12,653 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:12,886 root DEBUG Side: ON	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.006E-04 	 Total distance: 1.006E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:12:13,109 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.295E-05 	 Total distance: 6.295E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:12:13,109 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:13,109 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -23.01 	 cIDON = [1 8], cIDOFF = [1 8]
10:12:13,109 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:13,109 root DEBUG dOFF/dON = 0.6
10:12:13,109 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.73021047008628, 'dON1': 0.00010057687055774874, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 0.00010057687055774874, 'nTON': 1, 'dON': 0.00010057687055774874, 'dxOFFAngle': 89.82565540880768, 'dOFF1': 6.295058448570812e-05, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 6.295058448570812e-05, 'nTOFF': 1, 'dOFF': 6.295058448570812e-05, 'SUCCESS': False}
10:12:13,120 root DEBUG 

=================== Experiment ID #274 	 Dual Point ID: 276 ===================
10:12:13,127 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.828E-09|<1.000E-06)
10:12:13,127 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:13,406 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.944E-01 	 Total distance: 4.944E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([132], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:12:13,589 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.900E-01 	 Total distance: 6.844E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([114], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:12:13,724 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.467E-02 	 Total distance: 7.791E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([198], dtype=int64), array([[False]])]] 	 class: [8 9]
10:12:13,923 root DEBUG Side: ON	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.490E-01 	 Total distance: 1.228E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([180], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:12:14,187 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.482E-01 	 Total distance: 2.482E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([240], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:12:14,399 root DEBUG Side: OFF	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.521E-01 	 Total distance: 7.003E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([197], dtype=int64), array([[False]])]] 	 class: [8 9]
10:12:14,399 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:14,399 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -27.37 	 cIDON = [8 9], cIDOFF = [8 9]
10:12:14,399 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:14,399 root DEBUG dOFF/dON = 0.6
10:12:14,399 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.28033166709659, 'dON1': 1.2280617141037085, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 1.2280617141037085, 'nTON': 1, 'dON': 1.2280617141037085, 'dxOFFAngle': 89.03004608588655, 'dOFF1': 0.7002925532573139, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.7002925532573139, 'nTOFF': 1, 'dOFF': 0.7002925532573139, 'SUCCESS': False}
10:12:14,406 root DEBUG 

=================== Experiment ID #275 	 Dual Point ID: 277 ===================
10:12:14,411 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.438E-09|<1.000E-06)
10:12:14,411 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:14,652 root DEBUG Side: ON	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.577E-01 	 Total distance: 6.577E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([145], dtype=int64), array([[False]])]] 	 class: [4 7]
10:12:14,924 root DEBUG Side: OFF	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.223E-01 	 Total distance: 4.223E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([47], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:12:15,164 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.021E+00 	 Total distance: 1.443E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([62], dtype=int64), array([[False]])]] 	 class: [4 7]
10:12:15,164 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:15,164 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 37.39 	 cIDON = [4 7], cIDOFF = [4 7]
10:12:15,164 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:15,164 root DEBUG dOFF/dON = 2.2
10:12:15,165 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.14822385721398, 'dON1': 0.6577413634892914, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.6577413634892914, 'nTON': 1, 'dON': 0.6577413634892914, 'dxOFFAngle': 88.26063323063602, 'dOFF1': 1.4432740124946233, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 1.4432740124946233, 'nTOFF': 1, 'dOFF': 1.4432740124946233, 'SUCCESS': True}
10:12:15,179 root DEBUG 

=================== Experiment ID #276 	 Dual Point ID: 278 ===================
10:12:15,186 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.078E-08|<1.000E-06)
10:12:15,186 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:15,496 root DEBUG Side: ON	 Angle(dx0, dx): 1.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.937E-03 	 Total distance: 5.937E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([3, 4], dtype=int64), array([[0.],
       [1.]])]] 	 class: [4 9]
10:12:15,814 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.770E-01 	 Total distance: 4.770E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([71], dtype=int64), array([[False]])]] 	 class: [3 9]
10:12:16,39 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.826E-01 	 Total distance: 6.596E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([87], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:12:16,196 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.599E-01 	 Total distance: 9.195E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([106], dtype=int64), array([[False]])]] 	 class: [3 9]
10:12:16,196 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:16,196 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 98.72 	 cIDON = [3 9], cIDOFF = [3 9]
10:12:16,196 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:16,197 root DEBUG dOFF/dON = 154.9
10:12:16,197 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.43810995763157, 'dON1': 0.005937149341884569, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.005937149341884569, 'nTON': 1, 'dON': 0.005937149341884569, 'dxOFFAngle': 89.80957191010333, 'dOFF1': 0.9195072797392634, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.9195072797392634, 'nTOFF': 1, 'dOFF': 0.9195072797392634, 'SUCCESS': True}
10:12:16,209 root DEBUG 

=================== Experiment ID #277 	 Dual Point ID: 279 ===================
10:12:16,219 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.541E-10|<1.000E-06)
10:12:16,219 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:16,514 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.188E-02 	 Total distance: 8.188E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([111], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:12:16,685 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.826E-02 	 Total distance: 3.826E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([83], dtype=int64), array([[False]])]] 	 class: [2 3]
10:12:16,913 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.460E-01 	 Total distance: 2.842E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([98], dtype=int64), array([[False]])]] 	 class: [2 3]
10:12:17,122 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.691E-01 	 Total distance: 6.533E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([18], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:12:17,122 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:17,123 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 77.72 	 cIDON = [2 3], cIDOFF = [2 3]
10:12:17,123 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:17,123 root DEBUG dOFF/dON = 8.0
10:12:17,123 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.37246028634159, 'dON1': 0.08188225908534391, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.08188225908534391, 'nTON': 1, 'dON': 0.08188225908534391, 'dxOFFAngle': 89.48209488939553, 'dOFF1': 0.6533040687847813, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.6533040687847813, 'nTOFF': 1, 'dOFF': 0.6533040687847813, 'SUCCESS': True}
10:12:17,133 root DEBUG 

=================== Experiment ID #278 	 Dual Point ID: 280 ===================
10:12:17,141 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.349E-09|<1.000E-06)
10:12:17,141 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:17,449 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.729E-01 	 Total distance: 1.729E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([160], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:12:17,676 root DEBUG Side: ON	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.365E-01 	 Total distance: 5.093E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([149], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:12:17,879 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.781E-02 	 Total distance: 2.781E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([83], dtype=int64), array([[False]])]] 	 class: [2 3]
10:12:18,15 root DEBUG Side: OFF	 Angle(dx0, dx): 0.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.222E-01 	 Total distance: 4.500E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([60], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:12:18,146 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.352E-01 	 Total distance: 5.852E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([238], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:12:18,346 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.460E-01 	 Total distance: 9.312E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([45], dtype=int64), array([[False]])]] 	 class: [2 3]
10:12:18,524 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.791E-01 	 Total distance: 1.210E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([201], dtype=int64), array([[False]])]] 	 class: [2 3]
10:12:18,524 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:18,524 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 40.76 	 cIDON = [2 3], cIDOFF = [2 3]
10:12:18,524 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:18,524 root DEBUG dOFF/dON = 2.4
10:12:18,524 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.03551356080663, 'dON1': 0.5093354675533477, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.5093354675533477, 'nTON': 1, 'dON': 0.5093354675533477, 'dxOFFAngle': 88.98478828812289, 'dOFF1': 1.2102644368006525, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 1.2102644368006525, 'nTOFF': 1, 'dOFF': 1.2102644368006525, 'SUCCESS': True}
10:12:18,531 root DEBUG 

=================== Experiment ID #279 	 Dual Point ID: 281 ===================
10:12:18,540 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.829E-08|<1.000E-06)
10:12:18,540 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:18,865 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.266E-01 	 Total distance: 9.266E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([134], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:12:19,34 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.419E-01 	 Total distance: 1.269E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([51], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:12:19,294 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.712E+00 	 Total distance: 1.712E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([29], dtype=int64), array([[False]])]] 	 class: [6 9]
10:12:19,481 root DEBUG Side: OFF	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.536E-01 	 Total distance: 1.965E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([54], dtype=int64), array([[False]])]] 	 class: [6 9]
10:12:19,482 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:19,482 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 21.54 	 cIDON = [6 9], cIDOFF = [6 9]
10:12:19,482 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:19,482 root DEBUG dOFF/dON = 1.5
10:12:19,482 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.77170435017584, 'dON1': 1.2685482643098578, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 1.2685482643098578, 'nTON': 1, 'dON': 1.2685482643098578, 'dxOFFAngle': 89.66094603331781, 'dOFF1': 1.9651759461909042, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 1.9651759461909042, 'nTOFF': 1, 'dOFF': 1.9651759461909042, 'SUCCESS': True}
10:12:19,493 root DEBUG 

=================== Experiment ID #280 	 Dual Point ID: 282 ===================
10:12:19,500 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.956E-08|<1.000E-06)
10:12:19,500 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:19,826 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.358E+00 	 Total distance: 1.358E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([14], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:12:20,7 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.993E-01 	 Total distance: 2.257E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([194], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:12:20,171 root DEBUG Side: ON	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.006E-02 	 Total distance: 2.347E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([35], dtype=int64), array([[False]])]] 	 class: [2 3]
10:12:20,502 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.176E-01 	 Total distance: 4.176E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([139], dtype=int64), array([[False]])]] 	 class: [2 3]
10:12:20,705 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.039E-01 	 Total distance: 9.215E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([181], dtype=int64), array([[False]])]] 	 class: [2 3]
10:12:20,705 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:20,705 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -43.62 	 cIDON = [2 3], cIDOFF = [2 3]
10:12:20,705 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:20,705 root DEBUG dOFF/dON = 0.4
10:12:20,705 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.52048449061654, 'dON1': 2.3474590404817435, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 2.3474590404817435, 'nTON': 1, 'dON': 2.3474590404817435, 'dxOFFAngle': 88.57588619726475, 'dOFF1': 0.9214600042361187, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.9214600042361187, 'nTOFF': 1, 'dOFF': 0.9214600042361187, 'SUCCESS': False}
10:12:20,712 root DEBUG 

=================== Experiment ID #281 	 Dual Point ID: 283 ===================
10:12:20,721 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.403E-07|<1.000E-06)
10:12:20,721 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:21,95 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.103E+00 	 Total distance: 1.103E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([6], dtype=int64), array([[False]])]] 	 class: [2 9]
10:12:21,423 root DEBUG Side: OFF	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.069E-01 	 Total distance: 5.069E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([251], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:12:21,581 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.200E-02 	 Total distance: 5.689E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([65], dtype=int64), array([[False]])]] 	 class: [2 9]
10:12:21,581 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:21,581 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -31.96 	 cIDON = [2 9], cIDOFF = [2 9]
10:12:21,581 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:21,581 root DEBUG dOFF/dON = 0.5
10:12:21,581 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.48694932415187, 'dON1': 1.103187333550839, 'cIDON1': array([2, 9], dtype=int64), 'dON_patch_1': 1.103187333550839, 'nTON': 1, 'dON': 1.103187333550839, 'dxOFFAngle': 89.79469876890393, 'dOFF1': 0.5688665092921674, 'cIDOFF1': array([2, 9], dtype=int64), 'dOFF_patch_1': 0.5688665092921674, 'nTOFF': 1, 'dOFF': 0.5688665092921674, 'SUCCESS': False}
10:12:21,592 root DEBUG 

=================== Experiment ID #282 	 Dual Point ID: 284 ===================
10:12:21,600 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.177E-08|<1.000E-06)
10:12:21,601 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:21,859 root DEBUG Side: ON	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.509E-02 	 Total distance: 4.509E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([242], dtype=int64), array([[False]])]] 	 class: [3 6]
10:12:22,144 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.765E-01 	 Total distance: 2.765E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([57], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:12:22,349 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.116E-01 	 Total distance: 3.881E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([236], dtype=int64), array([[False]])]] 	 class: [3 6]
10:12:22,585 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.665E-01 	 Total distance: 7.546E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([190], dtype=int64), array([[False]])]] 	 class: [3 6]
10:12:22,802 root DEBUG Side: OFF	 Angle(dx0, dx): 1.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.316E-01 	 Total distance: 1.486E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([74], dtype=int64), array([[False]])]] 	 class: [3 6]
10:12:22,802 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:22,802 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 94.11 	 cIDON = [3 6], cIDOFF = [3 6]
10:12:22,802 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:22,802 root DEBUG dOFF/dON = 33.0
10:12:22,803 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.41939237616148, 'dON1': 0.04508557818024999, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.04508557818024999, 'nTON': 1, 'dON': 0.04508557818024999, 'dxOFFAngle': 89.07585274367494, 'dOFF1': 1.4862265727002697, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 1.4862265727002697, 'nTOFF': 1, 'dOFF': 1.4862265727002697, 'SUCCESS': True}
10:12:22,818 root DEBUG 

=================== Experiment ID #283 	 Dual Point ID: 285 ===================
10:12:22,827 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.349E-07|<1.000E-06)
10:12:22,827 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:23,99 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.067E-02 	 Total distance: 6.067E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([84], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:12:23,402 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.617E-01 	 Total distance: 5.617E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([252], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:12:23,402 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:23,402 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 80.50 	 cIDON = [2 4], cIDOFF = [2 4]
10:12:23,402 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:23,402 root DEBUG dOFF/dON = 9.3
10:12:23,403 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.75890984632645, 'dON1': 0.06067376613818265, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.06067376613818265, 'nTON': 1, 'dON': 0.06067376613818265, 'dxOFFAngle': 89.93669930287942, 'dOFF1': 0.5616696293517074, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.5616696293517074, 'nTOFF': 1, 'dOFF': 0.5616696293517074, 'SUCCESS': True}
10:12:23,411 root DEBUG 

=================== Experiment ID #284 	 Dual Point ID: 286 ===================
10:12:23,419 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.713E-08|<1.000E-06)
10:12:23,419 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:23,707 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.939E-02 	 Total distance: 3.939E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([196], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:12:23,906 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.205E-01 	 Total distance: 1.599E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([87], dtype=int64), array([[False]])]] 	 class: [2 8]
10:12:24,63 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.052E-01 	 Total distance: 5.651E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([59], dtype=int64), array([[False]])]] 	 class: [2 8]
10:12:24,294 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.389E-03 	 Total distance: 3.389E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([50], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:12:24,294 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:24,294 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -98.81 	 cIDON = [2 8], cIDOFF = [2 8]
10:12:24,294 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:24,294 root DEBUG dOFF/dON = 0.0
10:12:24,294 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.5530020417062, 'dON1': 0.5650994486681578, 'cIDON1': array([2, 8], dtype=int64), 'dON_patch_1': 0.5650994486681578, 'nTON': 1, 'dON': 0.5650994486681578, 'dxOFFAngle': 89.45741898261136, 'dOFF1': 0.0033886142662043353, 'cIDOFF1': array([2, 8], dtype=int64), 'dOFF_patch_1': 0.0033886142662043353, 'nTOFF': 1, 'dOFF': 0.0033886142662043353, 'SUCCESS': False}
10:12:24,302 root DEBUG 

=================== Experiment ID #285 	 Dual Point ID: 287 ===================
10:12:24,311 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.349E-08|<1.000E-06)
10:12:24,311 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:24,617 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.151E-01 	 Total distance: 5.151E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([34], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:12:24,851 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.063E+00 	 Total distance: 1.578E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([155], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:12:25,117 root DEBUG Side: OFF	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.008E-01 	 Total distance: 1.008E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([181], dtype=int64), array([[False]])]] 	 class: [5 9]
10:12:25,118 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:25,118 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -87.99 	 cIDON = [5 9], cIDOFF = [5 9]
10:12:25,118 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:25,118 root DEBUG dOFF/dON = 0.1
10:12:25,118 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.89987475766482, 'dON1': 1.5781366185570107, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 1.5781366185570107, 'nTON': 1, 'dON': 1.5781366185570107, 'dxOFFAngle': 88.69564707271363, 'dOFF1': 0.10083197703716107, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.10083197703716107, 'nTOFF': 1, 'dOFF': 0.10083197703716107, 'SUCCESS': False}
10:12:25,128 root DEBUG 

=================== Experiment ID #286 	 Dual Point ID: 288 ===================
10:12:25,135 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.464E-08|<1.000E-06)
10:12:25,136 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:25,427 root DEBUG Side: ON	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.703E-03 	 Total distance: 6.703E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([134], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:12:25,694 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.523E-01 	 Total distance: 1.523E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([19], dtype=int64), array([[False]])]] 	 class: [3 7]
10:12:25,866 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.552E-01 	 Total distance: 3.075E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([65], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:12:25,867 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:25,867 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 95.73 	 cIDON = [3 7], cIDOFF = [3 7]
10:12:25,867 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:25,867 root DEBUG dOFF/dON = 45.9
10:12:25,867 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.85110093252074, 'dON1': 0.006703493650387724, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.006703493650387724, 'nTON': 1, 'dON': 0.006703493650387724, 'dxOFFAngle': 88.45386926937424, 'dOFF1': 0.3074679152209193, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.3074679152209193, 'nTOFF': 1, 'dOFF': 0.3074679152209193, 'SUCCESS': True}
10:12:25,873 root DEBUG 

=================== Experiment ID #287 	 Dual Point ID: 289 ===================
10:12:25,879 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.877E-09|<1.000E-06)
10:12:25,880 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:26,245 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.556E-02 	 Total distance: 1.556E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([29], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:12:26,569 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.038E-01 	 Total distance: 1.038E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([128], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:12:26,569 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:26,570 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 73.93 	 cIDON = [3 5], cIDOFF = [3 5]
10:12:26,571 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:26,572 root DEBUG dOFF/dON = 6.7
10:12:26,572 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.95360291474528, 'dON1': 0.01555523958306344, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.01555523958306344, 'nTON': 1, 'dON': 0.01555523958306344, 'dxOFFAngle': 89.92469220015083, 'dOFF1': 0.10378124518844449, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.10378124518844449, 'nTOFF': 1, 'dOFF': 0.10378124518844449, 'SUCCESS': True}
10:12:26,586 root DEBUG 

=================== Experiment ID #288 	 Dual Point ID: 290 ===================
10:12:26,596 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.537E-08|<1.000E-06)
10:12:26,596 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:26,859 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.597E+00 	 Total distance: 1.597E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([36], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:12:27,107 root DEBUG Side: OFF	 Angle(dx0, dx): 0.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.076E-02 	 Total distance: 2.076E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([58], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:12:27,107 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:27,107 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -97.43 	 cIDON = [5 7], cIDOFF = [5 7]
10:12:27,107 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:27,107 root DEBUG dOFF/dON = 0.0
10:12:27,107 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.80261621142297, 'dON1': 1.5966463479257047, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 1.5966463479257047, 'nTON': 1, 'dON': 1.5966463479257047, 'dxOFFAngle': 87.88460402593232, 'dOFF1': 0.0207609731147918, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.0207609731147918, 'nTOFF': 1, 'dOFF': 0.0207609731147918, 'SUCCESS': False}
10:12:27,115 root DEBUG 

=================== Experiment ID #289 	 Dual Point ID: 291 ===================
10:12:27,124 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.080E-09|<1.000E-06)
10:12:27,124 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:27,413 root DEBUG Side: ON	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.026E-01 	 Total distance: 3.026E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([206], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:12:27,654 root DEBUG Side: OFF	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.854E-01 	 Total distance: 3.854E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([207], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:12:27,655 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:27,655 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 12.03 	 cIDON = [8 9], cIDOFF = [8 9]
10:12:27,655 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:27,655 root DEBUG dOFF/dON = 1.3
10:12:27,655 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.59131484151872, 'dON1': 0.30263580585682576, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.30263580585682576, 'nTON': 1, 'dON': 0.30263580585682576, 'dxOFFAngle': 89.73725028553409, 'dOFF1': 0.3854407380216909, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.3854407380216909, 'nTOFF': 1, 'dOFF': 0.3854407380216909, 'SUCCESS': True}
10:12:27,666 root DEBUG 

=================== Experiment ID #290 	 Dual Point ID: 292 ===================
10:12:27,677 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.466E-08|<1.000E-06)
10:12:27,677 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:27,952 root DEBUG Side: ON	 Angle(dx0, dx): 0.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.115E-02 	 Total distance: 9.115E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([63], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:12:28,250 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.463E-02 	 Total distance: 7.463E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([14], dtype=int64), array([[False]])]] 	 class: [0 1]
10:12:28,474 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.623E-01 	 Total distance: 3.369E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([75], dtype=int64), array([[False]])]] 	 class: [0 1]
10:12:28,681 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.112E-01 	 Total distance: 8.482E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([39], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:12:28,682 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:28,682 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 80.59 	 cIDON = [0 1], cIDOFF = [0 1]
10:12:28,683 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:28,683 root DEBUG dOFF/dON = 9.3
10:12:28,683 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.46193284712476, 'dON1': 0.0911517023206329, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.0911517023206329, 'nTON': 1, 'dON': 0.0911517023206329, 'dxOFFAngle': 89.9398369055915, 'dOFF1': 0.8481650142872166, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.8481650142872166, 'nTOFF': 1, 'dOFF': 0.8481650142872166, 'SUCCESS': True}
10:12:28,694 root DEBUG 

=================== Experiment ID #291 	 Dual Point ID: 293 ===================
10:12:28,705 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.161E-08|<1.000E-06)
10:12:28,705 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:28,931 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.828E-02 	 Total distance: 4.828E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([87], dtype=int64), array([[False]])]] 	 class: [2 3]
10:12:29,122 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.497E-02 	 Total distance: 1.332E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([177], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:12:29,307 root DEBUG Side: ON	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.046E-02 	 Total distance: 2.137E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([201], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:12:29,552 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.576E-04 	 Total distance: 7.576E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([34], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:12:29,553 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:29,553 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.29 	 cIDON = [2 3], cIDOFF = [2 3]
10:12:29,553 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:29,553 root DEBUG dOFF/dON = 0.0
10:12:29,553 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.86284499742987, 'dON1': 0.21371254252571303, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.21371254252571303, 'nTON': 1, 'dON': 0.21371254252571303, 'dxOFFAngle': 89.73051258647999, 'dOFF1': 0.0007575825961210788, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.0007575825961210788, 'nTOFF': 1, 'dOFF': 0.0007575825961210788, 'SUCCESS': False}
10:12:29,568 root DEBUG 

=================== Experiment ID #292 	 Dual Point ID: 294 ===================
10:12:29,579 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.433E-08|<1.000E-06)
10:12:29,579 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:29,933 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.035E+00 	 Total distance: 1.035E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([240], dtype=int64), array([[False]])]] 	 class: [2 4]
10:12:30,156 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.592E-01 	 Total distance: 1.594E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([29], dtype=int64), array([[False]])]] 	 class: [2 4]
10:12:30,470 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.577E-02 	 Total distance: 1.577E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([54], dtype=int64), array([[False]])]] 	 class: [2 4]
10:12:30,470 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:30,471 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -98.04 	 cIDON = [2 4], cIDOFF = [2 4]
10:12:30,471 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:30,471 root DEBUG dOFF/dON = 0.0
10:12:30,471 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.90929453894911, 'dON1': 1.5941639271114711, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 1.5941639271114711, 'nTON': 1, 'dON': 1.5941639271114711, 'dxOFFAngle': 89.87936085300777, 'dOFF1': 0.015765827307312845, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.015765827307312845, 'nTOFF': 1, 'dOFF': 0.015765827307312845, 'SUCCESS': False}
10:12:30,481 root DEBUG 

=================== Experiment ID #293 	 Dual Point ID: 295 ===================
10:12:30,487 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.800E-09|<1.000E-06)
10:12:30,488 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:30,725 root DEBUG Side: ON	 Angle(dx0, dx): 0.95 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.618E-06 	 Total distance: 3.618E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 9]
10:12:31,75 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.329E-01 	 Total distance: 4.329E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([83], dtype=int64), array([[False]])]] 	 class: [0 9]
10:12:31,75 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:31,76 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [0 9], cIDOFF = [0 9]
10:12:31,76 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:31,76 root DEBUG dOFF/dON = 119650.9
10:12:31,76 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.65538507115187, 'dON1': 3.6178983746451138e-06, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 3.6178983746451138e-06, 'nTON': 1, 'dON': 3.6178983746451138e-06, 'dxOFFAngle': 89.70110030106088, 'dOFF1': 0.43288466594492137, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.43288466594492137, 'nTOFF': 1, 'dOFF': 0.43288466594492137, 'SUCCESS': True}
10:12:31,86 root DEBUG 

=================== Experiment ID #294 	 Dual Point ID: 296 ===================
10:12:31,94 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.875E-09|<1.000E-06)
10:12:31,95 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:31,324 root DEBUG Side: ON	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.234E-02 	 Total distance: 3.234E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([106], dtype=int64), array([[False]])]] 	 class: [8 9]
10:12:31,615 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.075E-02 	 Total distance: 7.075E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([181], dtype=int64), array([[False]])]] 	 class: [8 9]
10:12:31,767 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.627E-02 	 Total distance: 8.702E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([86], dtype=int64), array([[False]])]] 	 class: [8 9]
10:12:31,767 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:31,767 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 45.81 	 cIDON = [8 9], cIDOFF = [8 9]
10:12:31,767 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:31,767 root DEBUG dOFF/dON = 2.7
10:12:31,767 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.89694166968525, 'dON1': 0.03233913734436775, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.03233913734436775, 'nTON': 1, 'dON': 0.03233913734436775, 'dxOFFAngle': 89.71354711359007, 'dOFF1': 0.08702010270837149, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.08702010270837149, 'nTOFF': 1, 'dOFF': 0.08702010270837149, 'SUCCESS': True}
10:12:31,775 root DEBUG 

=================== Experiment ID #295 	 Dual Point ID: 297 ===================
10:12:31,786 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.714E-07|<1.000E-06)
10:12:31,787 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:32,82 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.204E-01 	 Total distance: 6.204E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([124], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:12:32,416 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.037E+00 	 Total distance: 2.037E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([138], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:12:32,416 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:32,417 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 53.30 	 cIDON = [0 1], cIDOFF = [0 1]
10:12:32,417 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:32,417 root DEBUG dOFF/dON = 3.3
10:12:32,417 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.66665349327947, 'dON1': 0.620407345088314, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.620407345088314, 'nTON': 1, 'dON': 0.620407345088314, 'dxOFFAngle': 89.83645127907205, 'dOFF1': 2.03669484316232, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 2.03669484316232, 'nTOFF': 1, 'dOFF': 2.03669484316232, 'SUCCESS': True}
10:12:32,428 root DEBUG 

=================== Experiment ID #296 	 Dual Point ID: 298 ===================
10:12:32,436 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.425E-08|<1.000E-06)
10:12:32,437 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:32,790 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.819E-01 	 Total distance: 2.819E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([191], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:12:33,24 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.231E-01 	 Total distance: 5.231E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([163], dtype=int64), array([[False]])]] 	 class: [6 7]
10:12:33,156 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.589E-01 	 Total distance: 9.820E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([154], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:12:33,378 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.309E-02 	 Total distance: 9.951E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([99], dtype=int64), array([[False]])]] 	 class: [6 7]
10:12:33,378 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:33,379 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 55.84 	 cIDON = [6 7], cIDOFF = [6 7]
10:12:33,379 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:33,379 root DEBUG dOFF/dON = 3.5
10:12:33,379 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.87947473447115, 'dON1': 0.2819438810522025, 'cIDON1': array([6, 7], dtype=int64), 'dON_patch_1': 0.2819438810522025, 'nTON': 1, 'dON': 0.2819438810522025, 'dxOFFAngle': 89.12010940708214, 'dOFF1': 0.9950875116380069, 'cIDOFF1': array([6, 7], dtype=int64), 'dOFF_patch_1': 0.9950875116380069, 'nTOFF': 1, 'dOFF': 0.9950875116380069, 'SUCCESS': True}
10:12:33,385 root DEBUG 

=================== Experiment ID #297 	 Dual Point ID: 299 ===================
10:12:33,394 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.649E-09|<1.000E-06)
10:12:33,394 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:33,694 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.496E-01 	 Total distance: 4.496E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([67], dtype=int64), array([[False]])]] 	 class: [3 7]
10:12:33,804 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.925E-02 	 Total distance: 4.789E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([78], dtype=int64), array([[False]])]] 	 class: [3 7]
10:12:34,59 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.283E-01 	 Total distance: 9.283E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([7], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:12:34,210 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.185E-01 	 Total distance: 1.047E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([29], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:12:34,210 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:34,211 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 37.22 	 cIDON = [3 7], cIDOFF = [3 7]
10:12:34,211 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:34,211 root DEBUG dOFF/dON = 2.2
10:12:34,211 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.72747024610344, 'dON1': 0.47886468107067154, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.47886468107067154, 'nTON': 1, 'dON': 0.47886468107067154, 'dxOFFAngle': 89.96095262003445, 'dOFF1': 1.0467681022350803, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 1.0467681022350803, 'nTOFF': 1, 'dOFF': 1.0467681022350803, 'SUCCESS': True}
10:12:34,222 root DEBUG 

=================== Experiment ID #298 	 Dual Point ID: 300 ===================
10:12:34,232 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.501E-08|<1.000E-06)
10:12:34,232 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:34,526 root DEBUG Side: ON	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.088E+00 	 Total distance: 2.088E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([10], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:12:34,762 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.934E-01 	 Total distance: 4.934E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([122], dtype=int64), array([[False]])]] 	 class: [0 1]
10:12:34,763 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:34,763 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -61.78 	 cIDON = [0 1], cIDOFF = [0 1]
10:12:34,763 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:34,763 root DEBUG dOFF/dON = 0.2
10:12:34,763 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.75504649476628, 'dON1': 2.088373350298292, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 2.088373350298292, 'nTON': 1, 'dON': 2.088373350298292, 'dxOFFAngle': 89.80894298891232, 'dOFF1': 0.49344042437191815, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.49344042437191815, 'nTOFF': 1, 'dOFF': 0.49344042437191815, 'SUCCESS': False}
10:12:34,771 root DEBUG 

=================== Experiment ID #299 	 Dual Point ID: 301 ===================
10:12:34,778 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.455E-08|<1.000E-06)
10:12:34,778 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:35,4 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.858E-01 	 Total distance: 5.858E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([49], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:12:35,192 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.646E-02 	 Total distance: 6.423E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([156], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:12:35,380 root DEBUG Side: ON	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.598E-01 	 Total distance: 1.102E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([122], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:12:35,651 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.099E+00 	 Total distance: 1.099E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([234], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:12:35,793 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.065E-01 	 Total distance: 1.205E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([113], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:12:35,793 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:35,793 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 4.47 	 cIDON = [3 6], cIDOFF = [3 6]
10:12:35,793 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:35,793 root DEBUG dOFF/dON = 1.1
10:12:35,793 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.32283500709175, 'dON1': 1.1021264941517224, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 1.1021264941517224, 'nTON': 1, 'dON': 1.1021264941517224, 'dxOFFAngle': 89.53274221281924, 'dOFF1': 1.205380018411032, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 1.205380018411032, 'nTOFF': 1, 'dOFF': 1.205380018411032, 'SUCCESS': True}
10:12:35,800 root DEBUG 

=================== Experiment ID #300 	 Dual Point ID: 302 ===================
10:12:35,807 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.516E-09|<1.000E-06)
10:12:35,807 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:36,123 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.380E-01 	 Total distance: 2.380E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([2], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:12:36,466 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.149E+00 	 Total distance: 1.149E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([237], dtype=int64), array([[False]])]] 	 class: [5 7]
10:12:36,675 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.719E-02 	 Total distance: 1.187E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([78], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:12:36,675 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:36,675 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 66.59 	 cIDON = [5 7], cIDOFF = [5 7]
10:12:36,675 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:36,675 root DEBUG dOFF/dON = 5.0
10:12:36,675 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.44660551410202, 'dON1': 0.23801747719266245, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.23801747719266245, 'nTON': 1, 'dON': 0.23801747719266245, 'dxOFFAngle': 89.58225844785515, 'dOFF1': 1.1866575078782542, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 1.1866575078782542, 'nTOFF': 1, 'dOFF': 1.1866575078782542, 'SUCCESS': True}
10:12:36,683 root DEBUG 

=================== Experiment ID #301 	 Dual Point ID: 303 ===================
10:12:36,695 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.365E-08|<1.000E-06)
10:12:36,696 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:37,96 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.909E-01 	 Total distance: 6.909E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([198], dtype=int64), array([[False]])]] 	 class: [2 5]
10:12:37,357 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.362E-01 	 Total distance: 1.527E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([93], dtype=int64), array([[False]])]] 	 class: [2 5]
10:12:37,649 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.223E-01 	 Total distance: 3.223E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([16], dtype=int64), array([[False]])]] 	 class: [2 5]
10:12:37,649 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:37,649 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -65.15 	 cIDON = [2 5], cIDOFF = [2 5]
10:12:37,650 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:37,650 root DEBUG dOFF/dON = 0.2
10:12:37,650 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.40184189821831, 'dON1': 1.527129233187154, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 1.527129233187154, 'nTON': 1, 'dON': 1.527129233187154, 'dxOFFAngle': 88.98305711935194, 'dOFF1': 0.3222650908109022, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.3222650908109022, 'nTOFF': 1, 'dOFF': 0.3222650908109022, 'SUCCESS': False}
10:12:37,660 root DEBUG 

=================== Experiment ID #302 	 Dual Point ID: 304 ===================
10:12:37,670 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.044E-08|<1.000E-06)
10:12:37,670 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:37,949 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.766E-02 	 Total distance: 5.766E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([163], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:12:38,127 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.497E-01 	 Total distance: 8.074E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([156], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:12:38,296 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.053E-01 	 Total distance: 9.127E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([7], dtype=int64), array([[False]])]] 	 class: [3 7]
10:12:38,527 root DEBUG Side: ON	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.208E-01 	 Total distance: 1.033E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([77], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:12:38,803 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.905E-02 	 Total distance: 3.905E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([189], dtype=int64), array([[False]])]] 	 class: [3 7]
10:12:38,803 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:38,804 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -92.72 	 cIDON = [3 7], cIDOFF = [3 7]
10:12:38,804 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:38,804 root DEBUG dOFF/dON = 0.0
10:12:38,804 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.1722331275001, 'dON1': 1.033469469109126, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 1.033469469109126, 'nTON': 1, 'dON': 1.033469469109126, 'dxOFFAngle': 89.05866916684224, 'dOFF1': 0.0390481993347337, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.0390481993347337, 'nTOFF': 1, 'dOFF': 0.0390481993347337, 'SUCCESS': False}
10:12:38,815 root DEBUG 

=================== Experiment ID #303 	 Dual Point ID: 305 ===================
10:12:38,824 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.685E-09|<1.000E-06)
10:12:38,824 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:39,55 root DEBUG Side: ON	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.137E-01 	 Total distance: 1.137E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([8], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:12:39,459 root DEBUG Side: OFF	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.688E-01 	 Total distance: 1.688E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([59], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:12:39,610 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.942E-02 	 Total distance: 2.282E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([196], dtype=int64), array([[False]])]] 	 class: [3 7]
10:12:39,784 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.859E-02 	 Total distance: 3.168E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([228], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:12:39,784 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:39,784 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 47.18 	 cIDON = [3 7], cIDOFF = [3 7]
10:12:39,784 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:39,784 root DEBUG dOFF/dON = 2.8
10:12:39,785 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.93672775799321, 'dON1': 0.11369261078079043, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.11369261078079043, 'nTON': 1, 'dON': 0.11369261078079043, 'dxOFFAngle': 88.7654297146322, 'dOFF1': 0.3167817295898523, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.3167817295898523, 'nTOFF': 1, 'dOFF': 0.3167817295898523, 'SUCCESS': True}
10:12:39,795 root DEBUG 

=================== Experiment ID #304 	 Dual Point ID: 306 ===================
10:12:39,805 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.962E-08|<1.000E-06)
10:12:39,806 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:40,20 root DEBUG Side: ON	 Angle(dx0, dx): 1.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.894E-06 	 Total distance: 2.894E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 2]
10:12:40,255 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.057E-01 	 Total distance: 2.057E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([177], dtype=int64), array([[False]])]] 	 class: [0 2]
10:12:40,484 root DEBUG Side: OFF	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.332E-02 	 Total distance: 2.191E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([33], dtype=int64), array([[False]])]] 	 class: [0 2]
10:12:40,484 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:40,484 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [0 2], cIDOFF = [0 2]
10:12:40,485 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:40,485 root DEBUG dOFF/dON = 75687.0
10:12:40,485 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.90353280213988, 'dON1': 2.894270449469666e-06, 'cIDON1': array([0, 2], dtype=int64), 'dON_patch_1': 2.894270449469666e-06, 'nTON': 1, 'dON': 2.894270449469666e-06, 'dxOFFAngle': 89.44156992154457, 'dOFF1': 0.21905861872421178, 'cIDOFF1': array([0, 2], dtype=int64), 'dOFF_patch_1': 0.21905861872421178, 'nTOFF': 1, 'dOFF': 0.21905861872421178, 'SUCCESS': True}
10:12:40,497 root DEBUG 

=================== Experiment ID #305 	 Dual Point ID: 307 ===================
10:12:40,504 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.062E-09|<1.000E-06)
10:12:40,505 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:40,748 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.098E-01 	 Total distance: 1.098E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([113], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:12:40,915 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.858E-02 	 Total distance: 1.484E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([200], dtype=int64), array([[False]])]] 	 class: [0 8]
10:12:41,58 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.774E-01 	 Total distance: 3.258E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([196], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:12:41,200 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.020E-02 	 Total distance: 3.660E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([165], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:12:41,485 root DEBUG Side: ON	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.962E-01 	 Total distance: 5.622E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([7], dtype=int64), array([[False]])]] 	 class: [0 8]
10:12:41,714 root DEBUG Side: OFF	 Angle(dx0, dx): 0.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.447E-06 	 Total distance: 1.447E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:12:41,714 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:41,714 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -100.00 	 cIDON = [0 8], cIDOFF = [1 8]
10:12:41,714 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:41,714 root DEBUG dOFF/dON = 0.0
10:12:41,714 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.7846124180583, 'dON1': 0.5621831168014486, 'cIDON1': array([0, 8], dtype=int64), 'dON_patch_1': 0.5621831168014486, 'nTON': 1, 'dON': 0.5621831168014486, 'dxOFFAngle': 89.29178720805864, 'dOFF1': 1.4472437311511257e-06, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 1.4472437311511257e-06, 'nTOFF': 1, 'dOFF': 1.4472437311511257e-06, 'SUCCESS': False}
10:12:41,724 root DEBUG 

=================== Experiment ID #306 	 Dual Point ID: 308 ===================
10:12:41,736 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.270E-09|<1.000E-06)
10:12:41,736 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:42,115 root DEBUG Side: ON	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.109E-01 	 Total distance: 2.109E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([30], dtype=int64), array([[False]])]] 	 class: [0 9]
10:12:42,302 root DEBUG Side: ON	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.452E-02 	 Total distance: 2.354E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 9]
10:12:42,567 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.658E-01 	 Total distance: 1.658E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([60], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:12:42,754 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.526E-02 	 Total distance: 2.210E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([182], dtype=int64), array([[False]])]] 	 class: [0 9]
10:12:42,945 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.047E-01 	 Total distance: 3.257E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([62], dtype=int64), array([[False]])]] 	 class: [0 9]
10:12:43,138 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.829E-01 	 Total distance: 5.085E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([157], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:12:43,139 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:43,139 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 36.71 	 cIDON = [0 9], cIDOFF = [0 9]
10:12:43,139 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:43,139 root DEBUG dOFF/dON = 2.2
10:12:43,139 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.85612695565153, 'dON1': 0.23541960360548358, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.23541960360548358, 'nTON': 1, 'dON': 0.23541960360548358, 'dxOFFAngle': 89.8150889441962, 'dOFF1': 0.508529183702322, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.508529183702322, 'nTOFF': 1, 'dOFF': 0.508529183702322, 'SUCCESS': True}
10:12:43,146 root DEBUG 

=================== Experiment ID #307 	 Dual Point ID: 309 ===================
10:12:43,154 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.546E-09|<1.000E-06)
10:12:43,154 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:43,464 root DEBUG Side: ON	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.842E-02 	 Total distance: 7.842E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([208], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:12:43,679 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.621E-01 	 Total distance: 2.621E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([61], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:12:43,864 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.954E-02 	 Total distance: 3.017E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([194], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:12:43,864 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:43,864 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 58.74 	 cIDON = [2 4], cIDOFF = [2 4]
10:12:43,864 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:43,864 root DEBUG dOFF/dON = 3.8
10:12:43,864 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.73085060535946, 'dON1': 0.07842101192998961, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.07842101192998961, 'nTON': 1, 'dON': 0.07842101192998961, 'dxOFFAngle': 89.985181083639, 'dOFF1': 0.3016889283562951, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.3016889283562951, 'nTOFF': 1, 'dOFF': 0.3016889283562951, 'SUCCESS': True}
10:12:43,876 root DEBUG 

=================== Experiment ID #308 	 Dual Point ID: 310 ===================
10:12:43,886 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.362E-08|<1.000E-06)
10:12:43,886 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:44,135 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.010E-02 	 Total distance: 6.010E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([59], dtype=int64), array([[False]])]] 	 class: [2 3]
10:12:44,329 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.290E-01 	 Total distance: 1.891E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([223], dtype=int64), array([[False]])]] 	 class: [2 3]
10:12:44,565 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.559E-01 	 Total distance: 1.559E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([33], dtype=int64), array([[False]])]] 	 class: [2 3]
10:12:44,791 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.232E-01 	 Total distance: 4.791E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([41], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:12:44,791 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:44,791 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 43.41 	 cIDON = [2 3], cIDOFF = [2 3]
10:12:44,791 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:44,791 root DEBUG dOFF/dON = 2.5
10:12:44,791 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.35951386213017, 'dON1': 0.18905847533393755, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.18905847533393755, 'nTON': 1, 'dON': 0.18905847533393755, 'dxOFFAngle': 89.11980377328041, 'dOFF1': 0.47914639058111097, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.47914639058111097, 'nTOFF': 1, 'dOFF': 0.47914639058111097, 'SUCCESS': True}
10:12:44,801 root DEBUG 

=================== Experiment ID #309 	 Dual Point ID: 311 ===================
10:12:44,810 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.114E-08|<1.000E-06)
10:12:44,810 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:45,136 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.220E-01 	 Total distance: 7.220E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([216], dtype=int64), array([[False]])]] 	 class: [3 5]
10:12:45,491 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.443E-01 	 Total distance: 7.443E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([72], dtype=int64), array([[False]])]] 	 class: [3 5]
10:12:45,492 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:45,492 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 1.52 	 cIDON = [3 5], cIDOFF = [3 5]
10:12:45,492 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:45,492 root DEBUG dOFF/dON = 1.0
10:12:45,492 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.94586618360815, 'dON1': 0.7220245793561559, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.7220245793561559, 'nTON': 1, 'dON': 0.7220245793561559, 'dxOFFAngle': 89.6721679348998, 'dOFF1': 0.7442930344939055, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.7442930344939055, 'nTOFF': 1, 'dOFF': 0.7442930344939055, 'SUCCESS': True}
10:12:45,502 root DEBUG 

=================== Experiment ID #310 	 Dual Point ID: 312 ===================
10:12:45,507 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.635E-09|<1.000E-06)
10:12:45,508 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:45,778 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.753E-02 	 Total distance: 8.753E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([5], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:12:45,969 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.037E-01 	 Total distance: 1.912E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([10], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:12:46,338 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.930E-01 	 Total distance: 3.930E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([217], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:12:46,338 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:46,339 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 34.55 	 cIDON = [0 1], cIDOFF = [0 1]
10:12:46,339 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:46,339 root DEBUG dOFF/dON = 2.1
10:12:46,339 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.76915405410097, 'dON1': 0.19119966732479207, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.19119966732479207, 'nTON': 1, 'dON': 0.19119966732479207, 'dxOFFAngle': 89.88319685921083, 'dOFF1': 0.3930306095767623, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.3930306095767623, 'nTOFF': 1, 'dOFF': 0.3930306095767623, 'SUCCESS': True}
10:12:46,353 root DEBUG 

=================== Experiment ID #311 	 Dual Point ID: 313 ===================
10:12:46,361 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.008E-08|<1.000E-06)
10:12:46,362 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:46,610 root DEBUG Side: ON	 Angle(dx0, dx): 1.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.237E-06 	 Total distance: 7.237E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 9]
10:12:46,937 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.303E+00 	 Total distance: 5.303E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([243], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:12:46,937 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:46,937 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [0 9], cIDOFF = [0 9]
10:12:46,937 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:46,937 root DEBUG dOFF/dON = 732819.7
10:12:46,937 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.00815511520172, 'dON1': 7.236750156703744e-06, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 7.236750156703744e-06, 'nTON': 1, 'dON': 7.236750156703744e-06, 'dxOFFAngle': 88.62655065742646, 'dOFF1': 5.303232731872894, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 5.303232731872894, 'nTOFF': 1, 'dOFF': 5.303232731872894, 'SUCCESS': True}
10:12:46,953 root DEBUG 

=================== Experiment ID #312 	 Dual Point ID: 314 ===================
10:12:46,960 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.776E-08|<1.000E-06)
10:12:46,961 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:47,298 root DEBUG Side: ON	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.638E-01 	 Total distance: 4.638E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([139], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:12:47,708 root DEBUG Side: OFF	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.353E-01 	 Total distance: 7.353E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([116], dtype=int64), array([[False]])]] 	 class: [3 8]
10:12:47,947 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.946E-02 	 Total distance: 8.347E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([157], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:12:47,947 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:47,947 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 28.57 	 cIDON = [3 8], cIDOFF = [3 8]
10:12:47,947 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:47,948 root DEBUG dOFF/dON = 1.8
10:12:47,948 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.51493703938527, 'dON1': 0.4638013341025771, 'cIDON1': array([3, 8], dtype=int64), 'dON_patch_1': 0.4638013341025771, 'nTON': 1, 'dON': 0.4638013341025771, 'dxOFFAngle': 88.98974938666052, 'dOFF1': 0.8347386186497219, 'cIDOFF1': array([3, 8], dtype=int64), 'dOFF_patch_1': 0.8347386186497219, 'nTOFF': 1, 'dOFF': 0.8347386186497219, 'SUCCESS': True}
10:12:47,958 root DEBUG 

=================== Experiment ID #313 	 Dual Point ID: 315 ===================
10:12:47,967 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.812E-08|<1.000E-06)
10:12:47,967 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:48,288 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.971E-01 	 Total distance: 9.971E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([245], dtype=int64), array([[False]])]] 	 class: [3 6]
10:12:48,447 root DEBUG Side: ON	 Angle(dx0, dx): 0.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.331E-01 	 Total distance: 1.230E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([33], dtype=int64), array([[False]])]] 	 class: [3 6]
10:12:48,753 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.067E-01 	 Total distance: 6.067E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([220], dtype=int64), array([[False]])]] 	 class: [3 6]
10:12:48,753 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:48,753 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -33.94 	 cIDON = [3 6], cIDOFF = [3 6]
10:12:48,753 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:48,754 root DEBUG dOFF/dON = 0.5
10:12:48,754 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.33809419682711, 'dON1': 1.2302459149721123, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 1.2302459149721123, 'nTON': 1, 'dON': 1.2302459149721123, 'dxOFFAngle': 89.2946424674872, 'dOFF1': 0.6067225510617429, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.6067225510617429, 'nTOFF': 1, 'dOFF': 0.6067225510617429, 'SUCCESS': False}
10:12:48,761 root DEBUG 

=================== Experiment ID #314 	 Dual Point ID: 316 ===================
10:12:48,767 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.838E-09|<1.000E-06)
10:12:48,767 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:49,80 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.599E-02 	 Total distance: 2.599E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([47], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:12:49,320 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.717E-01 	 Total distance: 6.717E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([223], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:12:49,509 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.786E-01 	 Total distance: 1.050E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([232], dtype=int64), array([[False]])]] 	 class: [2 7]
10:12:49,768 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.260E-01 	 Total distance: 1.476E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([35], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:12:49,768 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:49,768 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 96.54 	 cIDON = [2 7], cIDOFF = [2 7]
10:12:49,769 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:49,769 root DEBUG dOFF/dON = 56.8
10:12:49,769 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.52920831554935, 'dON1': 0.02598632408426142, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.02598632408426142, 'nTON': 1, 'dON': 0.02598632408426142, 'dxOFFAngle': 89.9218709148754, 'dOFF1': 1.4763232790782608, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 1.4763232790782608, 'nTOFF': 1, 'dOFF': 1.4763232790782608, 'SUCCESS': True}
10:12:49,777 root DEBUG 

=================== Experiment ID #315 	 Dual Point ID: 317 ===================
10:12:49,788 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.880E-07|<1.000E-06)
10:12:49,789 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:50,36 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.127E-01 	 Total distance: 1.127E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([95], dtype=int64), array([[False]])]] 	 class: [4 6]
10:12:50,400 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.123E+00 	 Total distance: 1.123E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([131], dtype=int64), array([[False]])]] 	 class: [4 6]
10:12:50,583 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.512E-02 	 Total distance: 1.138E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([3], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:12:50,583 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:50,584 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 81.98 	 cIDON = [4 6], cIDOFF = [4 6]
10:12:50,584 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:50,584 root DEBUG dOFF/dON = 10.1
10:12:50,584 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.31602351382394, 'dON1': 0.11265938562798858, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.11265938562798858, 'nTON': 1, 'dON': 0.11265938562798858, 'dxOFFAngle': 89.77903124510505, 'dOFF1': 1.1379377723071482, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 1.1379377723071482, 'nTOFF': 1, 'dOFF': 1.1379377723071482, 'SUCCESS': True}
10:12:50,594 root DEBUG 

=================== Experiment ID #316 	 Dual Point ID: 318 ===================
10:12:50,604 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.108E-08|<1.000E-06)
10:12:50,604 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:50,899 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.055E+00 	 Total distance: 1.055E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([207], dtype=int64), array([[False]])]] 	 class: [0 4]
10:12:51,115 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.618E-06 	 Total distance: 3.618E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 4]
10:12:51,115 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:51,115 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -100.00 	 cIDON = [0 4], cIDOFF = [0 4]
10:12:51,116 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:51,116 root DEBUG dOFF/dON = 0.0
10:12:51,116 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.59434400982346, 'dON1': 1.0554937579088948, 'cIDON1': array([0, 4], dtype=int64), 'dON_patch_1': 1.0554937579088948, 'nTON': 1, 'dON': 1.0554937579088948, 'dxOFFAngle': 89.73149113571904, 'dOFF1': 3.61787266168998e-06, 'cIDOFF1': array([0, 4], dtype=int64), 'dOFF_patch_1': 3.61787266168998e-06, 'nTOFF': 1, 'dOFF': 3.61787266168998e-06, 'SUCCESS': False}
10:12:51,123 root DEBUG 

=================== Experiment ID #317 	 Dual Point ID: 319 ===================
10:12:51,135 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.270E-09|<1.000E-06)
10:12:51,135 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:51,418 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.387E-01 	 Total distance: 1.387E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([148], dtype=int64), array([[False]])]] 	 class: [3 5]
10:12:51,786 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.290E-01 	 Total distance: 7.290E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([93], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:12:52,19 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.941E-01 	 Total distance: 9.232E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([216], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:12:52,20 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:52,20 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 73.87 	 cIDON = [3 5], cIDOFF = [3 5]
10:12:52,20 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:52,20 root DEBUG dOFF/dON = 6.7
10:12:52,20 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.91657248048011, 'dON1': 0.13872088594395207, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.13872088594395207, 'nTON': 1, 'dON': 0.13872088594395207, 'dxOFFAngle': 89.79340199332705, 'dOFF1': 0.9231742505838048, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.9231742505838048, 'nTOFF': 1, 'dOFF': 0.9231742505838048, 'SUCCESS': True}
10:12:52,26 root DEBUG 

=================== Experiment ID #318 	 Dual Point ID: 320 ===================
10:12:52,36 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.549E-08|<1.000E-06)
10:12:52,36 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:52,381 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.617E+00 	 Total distance: 1.617E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([10], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:12:52,589 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.778E-01 	 Total distance: 1.994E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([38], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:12:52,955 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.013E+00 	 Total distance: 1.013E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([171], dtype=int64), array([[False]])]] 	 class: [0 1]
10:12:52,956 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:52,956 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -32.63 	 cIDON = [0 1], cIDOFF = [0 1]
10:12:52,957 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:52,957 root DEBUG dOFF/dON = 0.5
10:12:52,957 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.61929397176367, 'dON1': 1.9943430922740777, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 1.9943430922740777, 'nTON': 1, 'dON': 1.9943430922740777, 'dxOFFAngle': 89.9827636247265, 'dOFF1': 1.012953471186409, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 1.012953471186409, 'nTOFF': 1, 'dOFF': 1.012953471186409, 'SUCCESS': False}
10:12:52,974 root DEBUG 

=================== Experiment ID #319 	 Dual Point ID: 321 ===================
10:12:52,983 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.610E-08|<1.000E-06)
10:12:52,984 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:53,292 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.113E-01 	 Total distance: 1.113E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([215], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:12:53,487 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.373E-01 	 Total distance: 2.486E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([208], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:12:53,807 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.748E-02 	 Total distance: 5.748E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([23], dtype=int64), array([[False]])]] 	 class: [6 9]
10:12:54,6 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.207E-01 	 Total distance: 4.782E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([20], dtype=int64), array([[False]])]] 	 class: [6 9]
10:12:54,185 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.881E-02 	 Total distance: 4.970E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([70], dtype=int64), array([[False]])]] 	 class: [6 9]
10:12:54,185 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:54,186 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 33.32 	 cIDON = [6 9], cIDOFF = [6 9]
10:12:54,186 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:54,186 root DEBUG dOFF/dON = 2.0
10:12:54,186 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.96130316188281, 'dON1': 0.2486141856387014, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.2486141856387014, 'nTON': 1, 'dON': 0.2486141856387014, 'dxOFFAngle': 88.27370610283756, 'dOFF1': 0.4970285412901264, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.4970285412901264, 'nTOFF': 1, 'dOFF': 0.4970285412901264, 'SUCCESS': True}
10:12:54,199 root DEBUG 

=================== Experiment ID #320 	 Dual Point ID: 322 ===================
10:12:54,210 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.329E-08|<1.000E-06)
10:12:54,210 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:54,514 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.441E-01 	 Total distance: 5.441E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([251], dtype=int64), array([[False]])]] 	 class: [2 6]
10:12:54,775 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.380E-02 	 Total distance: 3.380E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([167], dtype=int64), array([[False]])]] 	 class: [2 6]
10:12:54,776 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:54,776 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -88.30 	 cIDON = [2 6], cIDOFF = [2 6]
10:12:54,777 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:54,777 root DEBUG dOFF/dON = 0.1
10:12:54,777 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.5283788761239, 'dON1': 0.5441347185519021, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.5441347185519021, 'nTON': 1, 'dON': 0.5441347185519021, 'dxOFFAngle': 89.33997996426798, 'dOFF1': 0.033801485096029905, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.033801485096029905, 'nTOFF': 1, 'dOFF': 0.033801485096029905, 'SUCCESS': False}
10:12:54,788 root DEBUG 

=================== Experiment ID #321 	 Dual Point ID: 323 ===================
10:12:54,798 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.341E-09|<1.000E-06)
10:12:54,798 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:55,18 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.177E+00 	 Total distance: 1.177E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([156], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:12:55,200 root DEBUG Side: ON	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.670E-01 	 Total distance: 1.344E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([101], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:12:55,491 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.022E-01 	 Total distance: 3.022E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([18], dtype=int64), array([[False]])]] 	 class: [4 8]
10:12:55,665 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.025E-01 	 Total distance: 8.047E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([171], dtype=int64), array([[False]])]] 	 class: [4 8]
10:12:55,665 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:55,666 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -25.08 	 cIDON = [4 8], cIDOFF = [4 8]
10:12:55,666 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:55,666 root DEBUG dOFF/dON = 0.6
10:12:55,666 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.90538717029594, 'dON1': 1.343540875825102, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 1.343540875825102, 'nTON': 1, 'dON': 1.343540875825102, 'dxOFFAngle': 87.84484511085863, 'dOFF1': 0.8046786451680042, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.8046786451680042, 'nTOFF': 1, 'dOFF': 0.8046786451680042, 'SUCCESS': False}
10:12:55,672 root DEBUG 

=================== Experiment ID #322 	 Dual Point ID: 324 ===================
10:12:55,680 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.068E-08|<1.000E-06)
10:12:55,680 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:55,889 root DEBUG Side: ON	 Angle(dx0, dx): 0.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.096E-01 	 Total distance: 2.096E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([34], dtype=int64), array([[False]])]] 	 class: [7 9]
10:12:56,151 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.855E-02 	 Total distance: 1.855E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([22], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:12:56,152 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:56,152 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -83.74 	 cIDON = [7 9], cIDOFF = [7 9]
10:12:56,152 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:56,152 root DEBUG dOFF/dON = 0.1
10:12:56,152 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.48099439033562, 'dON1': 0.20961130804813205, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.20961130804813205, 'nTON': 1, 'dON': 0.20961130804813205, 'dxOFFAngle': 88.9357934992831, 'dOFF1': 0.018554000532878298, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.018554000532878298, 'nTOFF': 1, 'dOFF': 0.018554000532878298, 'SUCCESS': False}
10:12:56,162 root DEBUG 

=================== Experiment ID #323 	 Dual Point ID: 325 ===================
10:12:56,172 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.789E-09|<1.000E-06)
10:12:56,172 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:56,477 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.157E+00 	 Total distance: 2.157E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([192], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:12:56,723 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.848E-02 	 Total distance: 2.848E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([63], dtype=int64), array([[False]])]] 	 class: [2 7]
10:12:56,997 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.215E-01 	 Total distance: 5.500E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([37], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:12:56,997 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:56,998 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -59.37 	 cIDON = [2 7], cIDOFF = [2 7]
10:12:56,998 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:56,998 root DEBUG dOFF/dON = 0.3
10:12:56,998 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.95423329689784, 'dON1': 2.156895521577414, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 2.156895521577414, 'nTON': 1, 'dON': 2.156895521577414, 'dxOFFAngle': 89.77429624770345, 'dOFF1': 0.5499598763420958, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.5499598763420958, 'nTOFF': 1, 'dOFF': 0.5499598763420958, 'SUCCESS': False}
10:12:57,9 root DEBUG 

=================== Experiment ID #324 	 Dual Point ID: 326 ===================
10:12:57,19 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.106E-08|<1.000E-06)
10:12:57,20 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:57,268 root DEBUG Side: ON	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.148E-01 	 Total distance: 1.148E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([112], dtype=int64), array([[False]])]] 	 class: [5 7]
10:12:57,413 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.051E-02 	 Total distance: 1.953E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([236], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:12:57,637 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.459E-01 	 Total distance: 1.459E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([26], dtype=int64), array([[False]])]] 	 class: [5 7]
10:12:57,877 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.956E-01 	 Total distance: 4.415E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([4], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:12:57,877 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:57,877 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 38.67 	 cIDON = [5 7], cIDOFF = [5 7]
10:12:57,877 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:57,878 root DEBUG dOFF/dON = 2.3
10:12:57,878 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.00580008204551, 'dON1': 0.19526803289135236, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.19526803289135236, 'nTON': 1, 'dON': 0.19526803289135236, 'dxOFFAngle': 87.86985859905022, 'dOFF1': 0.44146545767202844, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.44146545767202844, 'nTOFF': 1, 'dOFF': 0.44146545767202844, 'SUCCESS': True}
10:12:57,888 root DEBUG 

=================== Experiment ID #325 	 Dual Point ID: 327 ===================
10:12:57,896 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.534E-08|<1.000E-06)
10:12:57,897 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:58,286 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.846E-01 	 Total distance: 4.846E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([81], dtype=int64), array([[False]])]] 	 class: [1 2]
10:12:58,517 root DEBUG Side: OFF	 Angle(dx0, dx): 0.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.342E-06 	 Total distance: 4.342E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 2]
10:12:58,517 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:58,517 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -100.00 	 cIDON = [1 2], cIDOFF = [1 2]
10:12:58,518 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:12:58,518 root DEBUG dOFF/dON = 0.0
10:12:58,518 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.3413156795368, 'dON1': 0.4846219329291069, 'cIDON1': array([1, 2], dtype=int64), 'dON_patch_1': 0.4846219329291069, 'nTON': 1, 'dON': 0.4846219329291069, 'dxOFFAngle': 89.29464143171873, 'dOFF1': 4.341728525299482e-06, 'cIDOFF1': array([1, 2], dtype=int64), 'dOFF_patch_1': 4.341728525299482e-06, 'nTOFF': 1, 'dOFF': 4.341728525299482e-06, 'SUCCESS': False}
10:12:58,528 root DEBUG 

=================== Experiment ID #326 	 Dual Point ID: 328 ===================
10:12:58,542 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.766E-09|<1.000E-06)
10:12:58,542 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:12:58,915 root DEBUG Side: ON	 Angle(dx0, dx): 0.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.220E-01 	 Total distance: 5.220E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([40], dtype=int64), array([[False]])]] 	 class: [1 8]
10:12:59,154 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.212E-01 	 Total distance: 1.212E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([12], dtype=int64), array([[False]])]] 	 class: [0 8]
10:12:59,389 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.317E-02 	 Total distance: 1.644E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([73], dtype=int64), array([[False]])]] 	 class: [0 8]
10:12:59,568 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.461E-01 	 Total distance: 4.105E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([48], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:12:59,872 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.037E-01 	 Total distance: 7.142E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([100], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:12:59,872 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:12:59,873 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 15.55 	 cIDON = [1 8], cIDOFF = [0 8]
10:12:59,873 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:12:59,873 root DEBUG dOFF/dON = 1.4
10:12:59,873 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.42986624899794, 'dON1': 0.5219945882635559, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 0.5219945882635559, 'nTON': 1, 'dON': 0.5219945882635559, 'dxOFFAngle': 89.62596128459782, 'dOFF1': 0.7142057824548078, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.7142057824548078, 'nTOFF': 1, 'dOFF': 0.7142057824548078, 'SUCCESS': True}
10:12:59,883 root DEBUG 

=================== Experiment ID #327 	 Dual Point ID: 329 ===================
10:12:59,895 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.118E-08|<1.000E-06)
10:12:59,895 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:00,132 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.363E-01 	 Total distance: 3.363E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([212], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:13:00,452 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.280E-01 	 Total distance: 1.280E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([227], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:13:00,452 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:00,452 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -44.85 	 cIDON = [2 3], cIDOFF = [2 3]
10:13:00,452 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:00,452 root DEBUG dOFF/dON = 0.4
10:13:00,452 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.80645031070748, 'dON1': 0.336304091328645, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.336304091328645, 'nTON': 1, 'dON': 0.336304091328645, 'dxOFFAngle': 89.299961294159, 'dOFF1': 0.1280309158155987, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.1280309158155987, 'nTOFF': 1, 'dOFF': 0.1280309158155987, 'SUCCESS': False}
10:13:00,463 root DEBUG 

=================== Experiment ID #328 	 Dual Point ID: 330 ===================
10:13:00,472 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.527E-09|<1.000E-06)
10:13:00,472 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:00,745 root DEBUG Side: ON	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.865E-01 	 Total distance: 4.865E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([3], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:13:01,35 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.415E-01 	 Total distance: 7.415E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([234], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:13:01,214 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.073E+00 	 Total distance: 1.814E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([249], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:13:01,379 root DEBUG Side: OFF	 Angle(dx0, dx): 1.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.209E+00 	 Total distance: 3.023E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([42], dtype=int64), array([[False]])]] 	 class: [0 1]
10:13:01,379 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:01,379 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 72.27 	 cIDON = [0 1], cIDOFF = [0 1]
10:13:01,379 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:01,379 root DEBUG dOFF/dON = 6.2
10:13:01,380 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.54627175114103, 'dON1': 0.4865358857061062, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.4865358857061062, 'nTON': 1, 'dON': 0.4865358857061062, 'dxOFFAngle': 88.60028273357807, 'dOFF1': 3.0225722199011646, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 3.0225722199011646, 'nTOFF': 1, 'dOFF': 3.0225722199011646, 'SUCCESS': True}
10:13:01,392 root DEBUG 

=================== Experiment ID #329 	 Dual Point ID: 331 ===================
10:13:01,401 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.371E-08|<1.000E-06)
10:13:01,401 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:01,693 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.013E-02 	 Total distance: 4.013E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([5], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:13:02,15 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.438E-01 	 Total distance: 9.839E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([83], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:13:02,203 root DEBUG Side: ON	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.446E-01 	 Total distance: 1.728E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([202], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:13:02,558 root DEBUG Side: OFF	 Angle(dx0, dx): 0.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.188E-01 	 Total distance: 1.188E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([42], dtype=int64), array([[False]])]] 	 class: [6 9]
10:13:02,558 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:02,559 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -87.14 	 cIDON = [6 9], cIDOFF = [6 9]
10:13:02,559 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:02,559 root DEBUG dOFF/dON = 0.1
10:13:02,559 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.54786551503929, 'dON1': 1.7284822047335742, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 1.7284822047335742, 'nTON': 1, 'dON': 1.7284822047335742, 'dxOFFAngle': 88.44715477782579, 'dOFF1': 0.11875556430955923, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.11875556430955923, 'nTOFF': 1, 'dOFF': 0.11875556430955923, 'SUCCESS': False}
10:13:02,569 root DEBUG 

=================== Experiment ID #330 	 Dual Point ID: 332 ===================
10:13:02,583 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.694E-08|<1.000E-06)
10:13:02,583 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:02,903 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.622E-01 	 Total distance: 9.622E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([51], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:13:03,206 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.231E-02 	 Total distance: 1.044E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([118], dtype=int64), array([[False]])]] 	 class: [6 9]
10:13:03,423 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.235E+00 	 Total distance: 2.279E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([16], dtype=int64), array([[False]])]] 	 class: [6 9]
10:13:03,626 root DEBUG Side: ON	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.645E+00 	 Total distance: 3.924E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([252], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:13:03,909 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.448E-04 	 Total distance: 7.448E-04 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([156], dtype=int64), array([[False]])]] 	 class: [6 9]
10:13:04,135 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.869E-01 	 Total distance: 9.877E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([240], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:13:04,397 root DEBUG Side: OFF	 Angle(dx0, dx): 0.97 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.274E-01 	 Total distance: 1.415E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([49], dtype=int64), array([[False]])]] 	 class: [6 9]
10:13:04,397 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:04,397 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -46.99 	 cIDON = [6 9], cIDOFF = [6 9]
10:13:04,398 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:04,398 root DEBUG dOFF/dON = 0.4
10:13:04,398 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.9685825659864, 'dON1': 3.92409166038511, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 3.92409166038511, 'nTON': 1, 'dON': 3.92409166038511, 'dxOFFAngle': 88.53546227400295, 'dOFF1': 1.4151015199297579, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 1.4151015199297579, 'nTOFF': 1, 'dOFF': 1.4151015199297579, 'SUCCESS': False}
10:13:04,411 root DEBUG 

=================== Experiment ID #331 	 Dual Point ID: 333 ===================
10:13:04,421 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.939E-08|<1.000E-06)
10:13:04,421 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:04,718 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.712E-02 	 Total distance: 4.712E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([235], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:13:04,914 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.549E+00 	 Total distance: 1.596E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([248], dtype=int64), array([[False]])]] 	 class: [2 7]
10:13:05,150 root DEBUG Side: ON	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.058E+00 	 Total distance: 2.654E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([86], dtype=int64), array([[False]])]] 	 class: [2 7]
10:13:05,375 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.015E+00 	 Total distance: 4.669E+00 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([109], dtype=int64), array([[False]])]] 	 class: [2 7]
10:13:05,629 root DEBUG Side: ON	 Angle(dx0, dx): 1.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.436E-01 	 Total distance: 4.912E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([4], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:13:05,859 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.449E-01 	 Total distance: 1.449E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([150], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:13:05,859 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:05,859 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -94.27 	 cIDON = [2 7], cIDOFF = [2 7]
10:13:05,859 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:05,860 root DEBUG dOFF/dON = 0.0
10:13:05,860 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.97391240403836, 'dON1': 4.912445157381452, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 4.912445157381452, 'nTON': 1, 'dON': 4.912445157381452, 'dxOFFAngle': 89.90726539435694, 'dOFF1': 0.14491682938336609, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.14491682938336609, 'nTOFF': 1, 'dOFF': 0.14491682938336609, 'SUCCESS': False}
10:13:05,871 root DEBUG 

=================== Experiment ID #332 	 Dual Point ID: 334 ===================
10:13:05,885 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.277E-08|<1.000E-06)
10:13:05,885 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:06,261 root DEBUG Side: ON	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.180E-02 	 Total distance: 2.180E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([47], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:13:06,563 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.780E-01 	 Total distance: 3.780E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([11], dtype=int64), array([[False]])]] 	 class: [4 7]
10:13:06,765 root DEBUG Side: OFF	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.679E-02 	 Total distance: 4.648E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([131], dtype=int64), array([[False]])]] 	 class: [4 7]
10:13:06,765 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:06,765 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 91.04 	 cIDON = [4 7], cIDOFF = [4 7]
10:13:06,766 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:06,766 root DEBUG dOFF/dON = 21.3
10:13:06,766 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.84409708438244, 'dON1': 0.021799694828780008, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.021799694828780008, 'nTON': 1, 'dON': 0.021799694828780008, 'dxOFFAngle': 89.66034696405654, 'dOFF1': 0.46479627851345745, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.46479627851345745, 'nTOFF': 1, 'dOFF': 0.46479627851345745, 'SUCCESS': True}
10:13:06,775 root DEBUG 

=================== Experiment ID #333 	 Dual Point ID: 335 ===================
10:13:06,786 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.089E-10|<1.000E-06)
10:13:06,786 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:07,103 root DEBUG Side: ON	 Angle(dx0, dx): 0.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.378E-01 	 Total distance: 6.378E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([1], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:13:07,409 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.603E-01 	 Total distance: 1.603E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([151], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:13:07,618 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.134E-01 	 Total distance: 5.737E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([180], dtype=int64), array([[False]])]] 	 class: [8 9]
10:13:07,755 root DEBUG Side: OFF	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.411E-01 	 Total distance: 1.015E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([79], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:13:07,755 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:07,755 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 22.82 	 cIDON = [8 9], cIDOFF = [8 9]
10:13:07,756 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:07,756 root DEBUG dOFF/dON = 1.6
10:13:07,756 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.54667291045297, 'dON1': 0.6377932308305241, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.6377932308305241, 'nTON': 1, 'dON': 0.6377932308305241, 'dxOFFAngle': 88.76800340242467, 'dOFF1': 1.014849752170576, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 1.014849752170576, 'nTOFF': 1, 'dOFF': 1.014849752170576, 'SUCCESS': True}
10:13:07,763 root DEBUG 

=================== Experiment ID #334 	 Dual Point ID: 336 ===================
10:13:07,773 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.345E-09|<1.000E-06)
10:13:07,773 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:08,90 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.697E-02 	 Total distance: 2.697E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([190], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:13:08,342 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.078E-02 	 Total distance: 7.775E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([144], dtype=int64), array([[False]])]] 	 class: [7 9]
10:13:08,584 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.242E-02 	 Total distance: 1.302E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([165], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:13:08,885 root DEBUG Side: OFF	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.290E-02 	 Total distance: 3.290E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([85], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:13:09,102 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.162E-01 	 Total distance: 5.491E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([98], dtype=int64), array([[False]])]] 	 class: [7 9]
10:13:09,102 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:09,103 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 61.68 	 cIDON = [7 9], cIDOFF = [7 9]
10:13:09,103 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:09,103 root DEBUG dOFF/dON = 4.2
10:13:09,103 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.69296492178975, 'dON1': 0.13017137726153968, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.13017137726153968, 'nTON': 1, 'dON': 0.13017137726153968, 'dxOFFAngle': 89.80656645322414, 'dOFF1': 0.5491397293478306, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.5491397293478306, 'nTOFF': 1, 'dOFF': 0.5491397293478306, 'SUCCESS': True}
10:13:09,120 root DEBUG 

=================== Experiment ID #335 	 Dual Point ID: 337 ===================
10:13:09,128 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.597E-08|<1.000E-06)
10:13:09,128 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:09,355 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.138E-02 	 Total distance: 7.138E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([167], dtype=int64), array([[False]])]] 	 class: [4 8]
10:13:09,565 root DEBUG Side: ON	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.931E-02 	 Total distance: 1.607E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([229], dtype=int64), array([[False]])]] 	 class: [4 8]
10:13:09,856 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.729E-01 	 Total distance: 3.729E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([160], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:13:09,856 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:09,857 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 39.77 	 cIDON = [4 8], cIDOFF = [4 8]
10:13:09,857 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:09,857 root DEBUG dOFF/dON = 2.3
10:13:09,857 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.56644435436546, 'dON1': 0.16068774314066508, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.16068774314066508, 'nTON': 1, 'dON': 0.16068774314066508, 'dxOFFAngle': 88.86035485138093, 'dOFF1': 0.37288999833312986, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.37288999833312986, 'nTOFF': 1, 'dOFF': 0.37288999833312986, 'SUCCESS': True}
10:13:09,870 root DEBUG 

=================== Experiment ID #336 	 Dual Point ID: 338 ===================
10:13:09,882 root DEBUG CONTROL: 	 WARNING! 	 (target neuron output > tolerance: |3.557E-06|>1.000E-06)
10:13:09,884 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:09,884 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:09,884 root DEBUG 

=================== Experiment ID #336 	 Dual Point ID: 339 ===================
10:13:09,894 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.736E-08|<1.000E-06)
10:13:09,894 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:10,151 root DEBUG Side: ON	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.727E-01 	 Total distance: 2.727E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([15], dtype=int64), array([[False]])]] 	 class: [5 6]
10:13:10,455 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.238E-01 	 Total distance: 3.238E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([67], dtype=int64), array([[False]])]] 	 class: [5 6]
10:13:10,455 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:10,456 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 8.56 	 cIDON = [5 6], cIDOFF = [5 6]
10:13:10,456 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:10,456 root DEBUG dOFF/dON = 1.2
10:13:10,456 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.85455575633262, 'dON1': 0.27273121445151516, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.27273121445151516, 'nTON': 1, 'dON': 0.27273121445151516, 'dxOFFAngle': 89.57620163973733, 'dOFF1': 0.3237962223308014, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.3237962223308014, 'nTOFF': 1, 'dOFF': 0.3237962223308014, 'SUCCESS': True}
10:13:10,466 root DEBUG 

=================== Experiment ID #337 	 Dual Point ID: 340 ===================
10:13:10,475 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.917E-08|<1.000E-06)
10:13:10,476 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:10,773 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.596E-01 	 Total distance: 1.596E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([34], dtype=int64), array([[False]])]] 	 class: [5 7]
10:13:11,72 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.867E-02 	 Total distance: 7.867E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([59], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:13:11,247 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.211E-02 	 Total distance: 1.508E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([31], dtype=int64), array([[False]])]] 	 class: [5 7]
10:13:11,247 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:11,247 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -2.86 	 cIDON = [5 7], cIDOFF = [5 7]
10:13:11,247 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:11,247 root DEBUG dOFF/dON = 0.9
10:13:11,247 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.74036671175634, 'dON1': 0.15964792368692768, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.15964792368692768, 'nTON': 1, 'dON': 0.15964792368692768, 'dxOFFAngle': 89.7099530798429, 'dOFF1': 0.15077955129404869, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.15077955129404869, 'nTOFF': 1, 'dOFF': 0.15077955129404869, 'SUCCESS': False}
10:13:11,255 root DEBUG 

=================== Experiment ID #338 	 Dual Point ID: 341 ===================
10:13:11,263 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.207E-09|<1.000E-06)
10:13:11,263 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:11,519 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.873E-01 	 Total distance: 8.873E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([213], dtype=int64), array([[False]])]] 	 class: [6 9]
10:13:11,793 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.284E-01 	 Total distance: 1.284E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([29], dtype=int64), array([[False]])]] 	 class: [6 9]
10:13:12,10 root DEBUG Side: OFF	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.252E-01 	 Total distance: 3.536E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([223], dtype=int64), array([[False]])]] 	 class: [6 9]
10:13:12,10 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:12,10 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -43.01 	 cIDON = [6 9], cIDOFF = [6 9]
10:13:12,10 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:12,11 root DEBUG dOFF/dON = 0.4
10:13:12,11 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.80844409382591, 'dON1': 0.8873291357874502, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.8873291357874502, 'nTON': 1, 'dON': 0.8873291357874502, 'dxOFFAngle': 89.60800817430794, 'dOFF1': 0.35357332614306347, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.35357332614306347, 'nTOFF': 1, 'dOFF': 0.35357332614306347, 'SUCCESS': False}
10:13:12,22 root DEBUG 

=================== Experiment ID #339 	 Dual Point ID: 342 ===================
10:13:12,30 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.792E-08|<1.000E-06)
10:13:12,31 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:12,337 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.754E-01 	 Total distance: 1.754E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([28], dtype=int64), array([[False]])]] 	 class: [0 1]
10:13:12,582 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.666E-01 	 Total distance: 9.666E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([85], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:13:12,789 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.133E-03 	 Total distance: 9.727E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([247], dtype=int64), array([[False]])]] 	 class: [0 1]
10:13:12,789 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:12,789 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 69.45 	 cIDON = [0 1], cIDOFF = [0 1]
10:13:12,789 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:12,790 root DEBUG dOFF/dON = 5.5
10:13:12,790 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.48088829910313, 'dON1': 0.1753758609645495, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.1753758609645495, 'nTON': 1, 'dON': 0.1753758609645495, 'dxOFFAngle': 89.4622483834844, 'dOFF1': 0.9727204428665595, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.9727204428665595, 'nTOFF': 1, 'dOFF': 0.9727204428665595, 'SUCCESS': True}
10:13:12,801 root DEBUG 

=================== Experiment ID #340 	 Dual Point ID: 343 ===================
10:13:12,811 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.600E-09|<1.000E-06)
10:13:12,811 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:13,111 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.359E-01 	 Total distance: 2.359E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([207], dtype=int64), array([[False]])]] 	 class: [6 9]
10:13:13,392 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.647E-02 	 Total distance: 9.647E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([83], dtype=int64), array([[False]])]] 	 class: [6 9]
10:13:13,393 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:13,393 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -41.96 	 cIDON = [6 9], cIDOFF = [6 9]
10:13:13,393 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:13,393 root DEBUG dOFF/dON = 0.4
10:13:13,393 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.3769912425709, 'dON1': 0.2359444108992012, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.2359444108992012, 'nTON': 1, 'dON': 0.2359444108992012, 'dxOFFAngle': 89.32381646776285, 'dOFF1': 0.09646972108361818, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.09646972108361818, 'nTOFF': 1, 'dOFF': 0.09646972108361818, 'SUCCESS': False}
10:13:13,404 root DEBUG 

=================== Experiment ID #341 	 Dual Point ID: 344 ===================
10:13:13,414 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.638E-09|<1.000E-06)
10:13:13,414 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:13,693 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.272E-03 	 Total distance: 1.272E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([188], dtype=int64), array([[False]])]] 	 class: [7 9]
10:13:13,909 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.663E-01 	 Total distance: 6.676E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([22], dtype=int64), array([[False]])]] 	 class: [7 9]
10:13:14,188 root DEBUG Side: OFF	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.476E-01 	 Total distance: 3.476E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([192], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:13:14,189 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:14,189 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -31.51 	 cIDON = [7 9], cIDOFF = [7 9]
10:13:14,189 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:14,189 root DEBUG dOFF/dON = 0.5
10:13:14,189 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.71499359947161, 'dON1': 0.6675617380570025, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.6675617380570025, 'nTON': 1, 'dON': 0.6675617380570025, 'dxOFFAngle': 88.91182244717507, 'dOFF1': 0.34762790394685295, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.34762790394685295, 'nTOFF': 1, 'dOFF': 0.34762790394685295, 'SUCCESS': False}
10:13:14,196 root DEBUG 

=================== Experiment ID #342 	 Dual Point ID: 345 ===================
10:13:14,205 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.769E-08|<1.000E-06)
10:13:14,205 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:14,580 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.448E+00 	 Total distance: 1.448E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([11], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:13:14,804 root DEBUG Side: ON	 Angle(dx0, dx): 0.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.064E-03 	 Total distance: 1.457E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([192], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:13:15,160 root DEBUG Side: OFF	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.059E-01 	 Total distance: 3.059E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([253], dtype=int64), array([[False]])]] 	 class: [5 6]
10:13:15,160 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:15,160 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -65.31 	 cIDON = [5 6], cIDOFF = [5 6]
10:13:15,160 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:15,160 root DEBUG dOFF/dON = 0.2
10:13:15,161 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.56070804939205, 'dON1': 1.457450565627994, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 1.457450565627994, 'nTON': 1, 'dON': 1.457450565627994, 'dxOFFAngle': 88.25736843623444, 'dOFF1': 0.30587005178007604, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.30587005178007604, 'nTOFF': 1, 'dOFF': 0.30587005178007604, 'SUCCESS': False}
10:13:15,168 root DEBUG 

=================== Experiment ID #343 	 Dual Point ID: 346 ===================
10:13:15,178 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.627E-10|<1.000E-06)
10:13:15,178 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:15,402 root DEBUG Side: ON	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.273E-01 	 Total distance: 3.273E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([171], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:13:15,722 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.298E-01 	 Total distance: 3.298E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([87], dtype=int64), array([[False]])]] 	 class: [2 7]
10:13:15,722 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:15,722 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 0.37 	 cIDON = [2 7], cIDOFF = [2 7]
10:13:15,723 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:15,723 root DEBUG dOFF/dON = 1.0
10:13:15,723 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.48205297906979, 'dON1': 0.3273266791554643, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.3273266791554643, 'nTON': 1, 'dON': 0.3273266791554643, 'dxOFFAngle': 89.57121602319424, 'dOFF1': 0.32975589325372123, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.32975589325372123, 'nTOFF': 1, 'dOFF': 0.32975589325372123, 'SUCCESS': True}
10:13:15,732 root DEBUG 

=================== Experiment ID #344 	 Dual Point ID: 347 ===================
10:13:15,740 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.207E-08|<1.000E-06)
10:13:15,741 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:16,97 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.699E-02 	 Total distance: 8.699E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([154], dtype=int64), array([[False]])]] 	 class: [2 7]
10:13:16,265 root DEBUG Side: ON	 Angle(dx0, dx): 0.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.602E-02 	 Total distance: 1.630E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([2, 3], dtype=int64), array([[0.],
       [1.]])]] 	 class: [3 7]
10:13:16,529 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.486E-02 	 Total distance: 2.486E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([111], dtype=int64), array([[False]])]] 	 class: [2 7]
10:13:16,529 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:16,529 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -73.53 	 cIDON = [2 7], cIDOFF = [2 7]
10:13:16,529 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:16,529 root DEBUG dOFF/dON = 0.2
10:13:16,529 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.68568299115434, 'dON1': 0.16300744706337322, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.16300744706337322, 'nTON': 1, 'dON': 0.16300744706337322, 'dxOFFAngle': 89.67853475310866, 'dOFF1': 0.024862139240564813, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.024862139240564813, 'nTOFF': 1, 'dOFF': 0.024862139240564813, 'SUCCESS': False}
10:13:16,537 root DEBUG 

=================== Experiment ID #345 	 Dual Point ID: 348 ===================
10:13:16,543 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.438E-10|<1.000E-06)
10:13:16,544 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:16,867 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.993E-01 	 Total distance: 5.993E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([184], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:13:17,71 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.950E-02 	 Total distance: 6.388E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([10], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:13:17,310 root DEBUG Side: OFF	 Angle(dx0, dx): 0.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.846E-01 	 Total distance: 2.846E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([37], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:13:17,310 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:17,310 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -38.35 	 cIDON = [7 9], cIDOFF = [7 9]
10:13:17,310 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:17,311 root DEBUG dOFF/dON = 0.4
10:13:17,311 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.62433951230366, 'dON1': 0.6387627871442997, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.6387627871442997, 'nTON': 1, 'dON': 0.6387627871442997, 'dxOFFAngle': 88.77726603832615, 'dOFF1': 0.2846225650828325, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.2846225650828325, 'nTOFF': 1, 'dOFF': 0.2846225650828325, 'SUCCESS': False}
10:13:17,320 root DEBUG 

=================== Experiment ID #346 	 Dual Point ID: 349 ===================
10:13:17,326 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.778E-09|<1.000E-06)
10:13:17,326 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:17,636 root DEBUG Side: ON	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.889E-01 	 Total distance: 1.889E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([58], dtype=int64), array([[False]])]] 	 class: [5 6]
10:13:17,994 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.548E-01 	 Total distance: 1.548E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([69], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:13:17,994 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:17,995 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -9.90 	 cIDON = [5 6], cIDOFF = [5 6]
10:13:17,995 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:17,995 root DEBUG dOFF/dON = 0.8
10:13:17,995 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.45900287912751, 'dON1': 0.1888730463236882, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.1888730463236882, 'nTON': 1, 'dON': 0.1888730463236882, 'dxOFFAngle': 89.33016848565332, 'dOFF1': 0.15484297745891035, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.15484297745891035, 'nTOFF': 1, 'dOFF': 0.15484297745891035, 'SUCCESS': False}
10:13:18,6 root DEBUG 

=================== Experiment ID #347 	 Dual Point ID: 350 ===================
10:13:18,17 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.017E-08|<1.000E-06)
10:13:18,17 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:18,299 root DEBUG Side: ON	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.300E-01 	 Total distance: 9.300E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([121], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:13:18,634 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.045E+00 	 Total distance: 2.045E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([59], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:13:18,800 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.717E-01 	 Total distance: 2.217E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([66], dtype=int64), array([[False]])]] 	 class: [2 8]
10:13:18,954 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.223E-02 	 Total distance: 2.229E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([86], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:13:19,146 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.709E-01 	 Total distance: 2.400E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([179], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:13:19,146 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:19,146 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 44.14 	 cIDON = [2 8], cIDOFF = [2 8]
10:13:19,146 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:19,147 root DEBUG dOFF/dON = 2.6
10:13:19,147 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.69512795399382, 'dON1': 0.930028494946016, 'cIDON1': array([2, 8], dtype=int64), 'dON_patch_1': 0.930028494946016, 'nTON': 1, 'dON': 0.930028494946016, 'dxOFFAngle': 89.63482819520254, 'dOFF1': 2.4000219620129215, 'cIDOFF1': array([2, 8], dtype=int64), 'dOFF_patch_1': 2.4000219620129215, 'nTOFF': 1, 'dOFF': 2.4000219620129215, 'SUCCESS': True}
10:13:19,159 root DEBUG 

=================== Experiment ID #348 	 Dual Point ID: 351 ===================
10:13:19,171 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.450E-09|<1.000E-06)
10:13:19,171 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:19,431 root DEBUG Side: ON	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.404E-01 	 Total distance: 6.404E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([49], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:13:19,681 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.753E-02 	 Total distance: 9.753E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([190], dtype=int64), array([[False]])]] 	 class: [2 6]
10:13:19,834 root DEBUG Side: OFF	 Angle(dx0, dx): 0.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.462E-01 	 Total distance: 3.437E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([54], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:13:19,834 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:19,834 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -30.15 	 cIDON = [2 6], cIDOFF = [2 6]
10:13:19,834 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:19,834 root DEBUG dOFF/dON = 0.5
10:13:19,834 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.96211204066321, 'dON1': 0.6404166376249585, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.6404166376249585, 'nTON': 1, 'dON': 0.6404166376249585, 'dxOFFAngle': 88.9746771954226, 'dOFF1': 0.3436934403958239, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.3436934403958239, 'nTOFF': 1, 'dOFF': 0.3436934403958239, 'SUCCESS': False}
10:13:19,841 root DEBUG 

=================== Experiment ID #349 	 Dual Point ID: 352 ===================
10:13:19,850 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.125E-08|<1.000E-06)
10:13:19,850 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:20,84 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.290E-01 	 Total distance: 4.290E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([11], dtype=int64), array([[False]])]] 	 class: [8 9]
10:13:20,404 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.780E-02 	 Total distance: 3.780E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([151], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:13:20,642 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.401E-01 	 Total distance: 4.778E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([241], dtype=int64), array([[False]])]] 	 class: [8 9]
10:13:20,642 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:20,642 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 5.38 	 cIDON = [8 9], cIDOFF = [8 9]
10:13:20,642 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:20,642 root DEBUG dOFF/dON = 1.1
10:13:20,642 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.63876393719293, 'dON1': 0.4290422698568691, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.4290422698568691, 'nTON': 1, 'dON': 0.4290422698568691, 'dxOFFAngle': 89.65627061319474, 'dOFF1': 0.47784990801294014, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.47784990801294014, 'nTOFF': 1, 'dOFF': 0.47784990801294014, 'SUCCESS': True}
10:13:20,652 root DEBUG 

=================== Experiment ID #350 	 Dual Point ID: 353 ===================
10:13:20,664 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.513E-09|<1.000E-06)
10:13:20,664 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:20,948 root DEBUG Side: ON	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.163E-01 	 Total distance: 1.163E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([238], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:13:21,229 root DEBUG Side: OFF	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.783E-02 	 Total distance: 1.783E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([85], dtype=int64), array([[False]])]] 	 class: [3 5]
10:13:21,229 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:21,230 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -73.41 	 cIDON = [3 5], cIDOFF = [3 5]
10:13:21,230 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:21,230 root DEBUG dOFF/dON = 0.2
10:13:21,230 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.8810114644213, 'dON1': 0.11626531525191501, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.11626531525191501, 'nTON': 1, 'dON': 0.11626531525191501, 'dxOFFAngle': 88.81083837828828, 'dOFF1': 0.01782745528204936, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.01782745528204936, 'nTOFF': 1, 'dOFF': 0.01782745528204936, 'SUCCESS': False}
10:13:21,242 root DEBUG 

=================== Experiment ID #351 	 Dual Point ID: 354 ===================
10:13:21,253 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.121E-09|<1.000E-06)
10:13:21,253 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:21,566 root DEBUG Side: ON	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.004E-01 	 Total distance: 1.004E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([132], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:13:21,773 root DEBUG Side: OFF	 Angle(dx0, dx): 0.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.590E-02 	 Total distance: 2.590E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([48], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:13:21,773 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:21,773 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -59.01 	 cIDON = [3 4], cIDOFF = [3 4]
10:13:21,773 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:21,773 root DEBUG dOFF/dON = 0.3
10:13:21,773 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.99014226804255, 'dON1': 0.10044809121149818, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.10044809121149818, 'nTON': 1, 'dON': 0.10044809121149818, 'dxOFFAngle': 89.28059110806028, 'dOFF1': 0.025897042373869583, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.025897042373869583, 'nTOFF': 1, 'dOFF': 0.025897042373869583, 'SUCCESS': False}
10:13:21,780 root DEBUG 

=================== Experiment ID #352 	 Dual Point ID: 355 ===================
10:13:21,788 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.651E-09|<1.000E-06)
10:13:21,789 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:22,12 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.399E-01 	 Total distance: 1.399E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([190], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:13:22,207 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.329E-01 	 Total distance: 2.728E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([1], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:13:22,441 root DEBUG Side: OFF	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.820E-01 	 Total distance: 2.820E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([184], dtype=int64), array([[False]])]] 	 class: [3 5]
10:13:22,442 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:22,442 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 1.65 	 cIDON = [3 5], cIDOFF = [3 5]
10:13:22,442 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:22,442 root DEBUG dOFF/dON = 1.0
10:13:22,442 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.87807504223639, 'dON1': 0.27283317215261427, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.27283317215261427, 'nTON': 1, 'dON': 0.27283317215261427, 'dxOFFAngle': 88.89447397860168, 'dOFF1': 0.28197718472668293, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.28197718472668293, 'nTOFF': 1, 'dOFF': 0.28197718472668293, 'SUCCESS': True}
10:13:22,450 root DEBUG 

=================== Experiment ID #353 	 Dual Point ID: 356 ===================
10:13:22,464 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.796E-07|<1.000E-06)
10:13:22,464 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:22,744 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.142E+00 	 Total distance: 2.142E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([42], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:13:22,918 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.511E-01 	 Total distance: 2.593E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([194], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:13:23,87 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.239E-01 	 Total distance: 3.417E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([82], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:13:23,362 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.749E-01 	 Total distance: 4.749E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([230], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:13:23,560 root DEBUG Side: OFF	 Angle(dx0, dx): 0.86 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.920E+00 	 Total distance: 2.395E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([6], dtype=int64), array([[False]])]] 	 class: [3 5]
10:13:23,560 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:23,560 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -17.58 	 cIDON = [3 5], cIDOFF = [3 5]
10:13:23,561 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:23,561 root DEBUG dOFF/dON = 0.7
10:13:23,561 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.0962963722452, 'dON1': 3.4165183107675214, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 3.4165183107675214, 'nTON': 1, 'dON': 3.4165183107675214, 'dxOFFAngle': 88.80777187385387, 'dOFF1': 2.3946497884419746, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 2.3946497884419746, 'nTOFF': 1, 'dOFF': 2.3946497884419746, 'SUCCESS': False}
10:13:23,579 root DEBUG 

=================== Experiment ID #354 	 Dual Point ID: 357 ===================
10:13:23,589 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.554E-08|<1.000E-06)
10:13:23,589 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:23,837 root DEBUG Side: ON	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.223E-01 	 Total distance: 4.223E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([10], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:13:24,172 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.455E-02 	 Total distance: 2.455E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([20], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:13:24,172 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:24,172 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -89.01 	 cIDON = [3 7], cIDOFF = [3 7]
10:13:24,173 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:24,173 root DEBUG dOFF/dON = 0.1
10:13:24,173 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.87929195713276, 'dON1': 0.4222975513481503, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.4222975513481503, 'nTON': 1, 'dON': 0.4222975513481503, 'dxOFFAngle': 89.83815704599617, 'dOFF1': 0.024552159372512816, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.024552159372512816, 'nTOFF': 1, 'dOFF': 0.024552159372512816, 'SUCCESS': False}
10:13:24,181 root DEBUG 

=================== Experiment ID #355 	 Dual Point ID: 358 ===================
10:13:24,193 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.629E-08|<1.000E-06)
10:13:24,193 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:24,511 root DEBUG Side: ON	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.415E+00 	 Total distance: 1.415E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([226], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:13:24,794 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.438E+00 	 Total distance: 1.438E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([50], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:13:24,794 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:24,794 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 0.82 	 cIDON = [2 8], cIDOFF = [2 8]
10:13:24,794 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:24,794 root DEBUG dOFF/dON = 1.0
10:13:24,794 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.10211205179509, 'dON1': 1.4149866463555447, 'cIDON1': array([2, 8], dtype=int64), 'dON_patch_1': 1.4149866463555447, 'nTON': 1, 'dON': 1.4149866463555447, 'dxOFFAngle': 89.04408397862095, 'dOFF1': 1.4383705362334247, 'cIDOFF1': array([2, 8], dtype=int64), 'dOFF_patch_1': 1.4383705362334247, 'nTOFF': 1, 'dOFF': 1.4383705362334247, 'SUCCESS': True}
10:13:24,802 root DEBUG 

=================== Experiment ID #356 	 Dual Point ID: 359 ===================
10:13:24,812 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.310E-09|<1.000E-06)
10:13:24,812 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:25,62 root DEBUG Side: ON	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.764E-01 	 Total distance: 6.764E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([53], dtype=int64), array([[False]])]] 	 class: [0 1]
10:13:25,326 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.004E+00 	 Total distance: 1.004E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([140], dtype=int64), array([[False]])]] 	 class: [0 1]
10:13:25,599 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.461E-02 	 Total distance: 1.049E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([191], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:13:25,833 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.473E+00 	 Total distance: 2.522E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([16], dtype=int64), array([[False]])]] 	 class: [0 1]
10:13:25,833 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:25,833 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 57.70 	 cIDON = [0 1], cIDOFF = [0 1]
10:13:25,833 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:25,834 root DEBUG dOFF/dON = 3.7
10:13:25,834 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.89179195763536, 'dON1': 0.6764174394541996, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.6764174394541996, 'nTON': 1, 'dON': 0.6764174394541996, 'dxOFFAngle': 88.73205894889568, 'dOFF1': 2.521828842222523, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 2.521828842222523, 'nTOFF': 1, 'dOFF': 2.521828842222523, 'SUCCESS': True}
10:13:25,846 root DEBUG 

=================== Experiment ID #357 	 Dual Point ID: 360 ===================
10:13:25,851 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.241E-08|<1.000E-06)
10:13:25,851 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:26,172 root DEBUG Side: ON	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.266E-01 	 Total distance: 4.266E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([59], dtype=int64), array([[False]])]] 	 class: [2 4]
10:13:26,332 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.727E-01 	 Total distance: 6.993E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([78], dtype=int64), array([[False]])]] 	 class: [2 4]
10:13:26,640 root DEBUG Side: OFF	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.515E+00 	 Total distance: 1.515E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([236], dtype=int64), array([[False]])]] 	 class: [2 4]
10:13:26,640 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:26,641 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 36.85 	 cIDON = [2 4], cIDOFF = [2 4]
10:13:26,641 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:26,641 root DEBUG dOFF/dON = 2.2
10:13:26,641 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.13216690294388, 'dON1': 0.6992762500921501, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.6992762500921501, 'nTON': 1, 'dON': 0.6992762500921501, 'dxOFFAngle': 87.32568052381701, 'dOFF1': 1.5152270978418347, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 1.5152270978418347, 'nTOFF': 1, 'dOFF': 1.5152270978418347, 'SUCCESS': True}
10:13:26,651 root DEBUG 

=================== Experiment ID #358 	 Dual Point ID: 361 ===================
10:13:26,660 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.632E-07|<1.000E-06)
10:13:26,661 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:26,965 root DEBUG Side: ON	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.074E-01 	 Total distance: 7.074E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([173], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:13:27,269 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.377E+00 	 Total distance: 1.377E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([244], dtype=int64), array([[False]])]] 	 class: [6 7]
10:13:27,435 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.197E+00 	 Total distance: 2.573E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([190], dtype=int64), array([[False]])]] 	 class: [6 7]
10:13:27,435 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:27,436 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 56.88 	 cIDON = [6 7], cIDOFF = [6 7]
10:13:27,436 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:27,436 root DEBUG dOFF/dON = 3.6
10:13:27,436 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.90815345313698, 'dON1': 0.7073567098271063, 'cIDON1': array([6, 7], dtype=int64), 'dON_patch_1': 0.7073567098271063, 'nTON': 1, 'dON': 0.7073567098271063, 'dxOFFAngle': 89.82988271163467, 'dOFF1': 2.57336579255864, 'cIDOFF1': array([6, 7], dtype=int64), 'dOFF_patch_1': 2.57336579255864, 'nTOFF': 1, 'dOFF': 2.57336579255864, 'SUCCESS': True}
10:13:27,452 root DEBUG 

=================== Experiment ID #359 	 Dual Point ID: 362 ===================
10:13:27,459 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.231E-08|<1.000E-06)
10:13:27,460 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:27,780 root DEBUG Side: ON	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.343E+00 	 Total distance: 1.343E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([115], dtype=int64), array([[False]])]] 	 class: [3 7]
10:13:28,44 root DEBUG Side: OFF	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.308E-01 	 Total distance: 3.308E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([14], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:13:28,44 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:28,44 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -60.47 	 cIDON = [3 7], cIDOFF = [3 7]
10:13:28,44 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:28,44 root DEBUG dOFF/dON = 0.2
10:13:28,45 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.41077146682915, 'dON1': 1.3430271100820839, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 1.3430271100820839, 'nTON': 1, 'dON': 1.3430271100820839, 'dxOFFAngle': 87.98161540640722, 'dOFF1': 0.3308281516285715, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.3308281516285715, 'nTOFF': 1, 'dOFF': 0.3308281516285715, 'SUCCESS': False}
10:13:28,56 root DEBUG 

=================== Experiment ID #360 	 Dual Point ID: 363 ===================
10:13:28,64 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.135E-08|<1.000E-06)
10:13:28,64 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:28,319 root DEBUG Side: ON	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.040E-01 	 Total distance: 2.040E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([2], dtype=int64), array([[False]])]] 	 class: [5 7]
10:13:28,502 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.256E-01 	 Total distance: 4.296E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([70], dtype=int64), array([[False]])]] 	 class: [5 7]
10:13:28,633 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.159E-01 	 Total distance: 5.454E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([179], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:13:28,864 root DEBUG Side: ON	 Angle(dx0, dx): 1.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.691E-01 	 Total distance: 1.215E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([1, 5], dtype=int64), array([[1.],
       [0.]])]] 	 class: [1 7]
10:13:29,184 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.426E+00 	 Total distance: 2.426E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([39], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:13:29,184 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:29,184 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 33.27 	 cIDON = [5 7], cIDOFF = [5 7]
10:13:29,185 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:29,185 root DEBUG dOFF/dON = 2.0
10:13:29,185 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.39113454472094, 'dON1': 1.2145636423652175, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 1.2145636423652175, 'nTON': 1, 'dON': 1.2145636423652175, 'dxOFFAngle': 89.43340982320156, 'dOFF1': 2.4255130694197478, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 2.4255130694197478, 'nTOFF': 1, 'dOFF': 2.4255130694197478, 'SUCCESS': True}
10:13:29,193 root DEBUG 

=================== Experiment ID #361 	 Dual Point ID: 364 ===================
10:13:29,199 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.118E-08|<1.000E-06)
10:13:29,199 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:29,443 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.034E-02 	 Total distance: 9.034E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([166], dtype=int64), array([[False]])]] 	 class: [0 1]
10:13:29,604 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.550E-01 	 Total distance: 3.454E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([154], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:13:29,935 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.324E-02 	 Total distance: 1.324E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([49], dtype=int64), array([[False]])]] 	 class: [0 1]
10:13:30,186 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.450E-01 	 Total distance: 3.582E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([190], dtype=int64), array([[False]])]] 	 class: [0 1]
10:13:30,508 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.117E+00 	 Total distance: 1.475E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([79], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:13:30,508 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:30,508 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 62.05 	 cIDON = [0 1], cIDOFF = [0 1]
10:13:30,508 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:30,508 root DEBUG dOFF/dON = 4.3
10:13:30,508 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.88016659708227, 'dON1': 0.3453677630044686, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.3453677630044686, 'nTON': 1, 'dON': 0.3453677630044686, 'dxOFFAngle': 89.97884959373688, 'dOFF1': 1.4747757084938966, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 1.4747757084938966, 'nTOFF': 1, 'dOFF': 1.4747757084938966, 'SUCCESS': True}
10:13:30,515 root DEBUG 

=================== Experiment ID #362 	 Dual Point ID: 365 ===================
10:13:30,524 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.478E-08|<1.000E-06)
10:13:30,524 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:30,790 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.042E-01 	 Total distance: 6.042E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([213], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:13:30,979 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.987E-02 	 Total distance: 6.741E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([19], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:13:31,200 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.987E-03 	 Total distance: 6.987E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([20], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:13:31,200 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:31,201 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -97.95 	 cIDON = [3 7], cIDOFF = [3 7]
10:13:31,201 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:31,201 root DEBUG dOFF/dON = 0.0
10:13:31,201 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.53455746010513, 'dON1': 0.674058061850297, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.674058061850297, 'nTON': 1, 'dON': 0.674058061850297, 'dxOFFAngle': 89.89930515195675, 'dOFF1': 0.006987493319648876, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.006987493319648876, 'nTOFF': 1, 'dOFF': 0.006987493319648876, 'SUCCESS': False}
10:13:31,210 root DEBUG 

=================== Experiment ID #363 	 Dual Point ID: 366 ===================
10:13:31,220 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.063E-09|<1.000E-06)
10:13:31,220 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:31,531 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.025E-02 	 Total distance: 3.025E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([231], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:13:31,836 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.543E-02 	 Total distance: 6.543E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([85], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:13:31,836 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:31,836 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 36.76 	 cIDON = [5 7], cIDOFF = [5 7]
10:13:31,837 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:31,837 root DEBUG dOFF/dON = 2.2
10:13:31,837 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.91673676539511, 'dON1': 0.030254831953959994, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.030254831953959994, 'nTON': 1, 'dON': 0.030254831953959994, 'dxOFFAngle': 89.5656597070496, 'dOFF1': 0.06542677069373, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.06542677069373, 'nTOFF': 1, 'dOFF': 0.06542677069373, 'SUCCESS': True}
10:13:31,848 root DEBUG 

=================== Experiment ID #364 	 Dual Point ID: 367 ===================
10:13:31,856 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.263E-08|<1.000E-06)
10:13:31,856 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:32,171 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.103E+00 	 Total distance: 1.103E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([49], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:13:32,343 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.230E-01 	 Total distance: 1.926E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([154], dtype=int64), array([[False]])]] 	 class: [5 7]
10:13:32,498 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.719E-01 	 Total distance: 2.398E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([184], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:13:32,695 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.003E-01 	 Total distance: 2.498E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([12], dtype=int64), array([[False]])]] 	 class: [5 7]
10:13:32,938 root DEBUG Side: OFF	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.778E-01 	 Total distance: 2.778E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([128], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:13:32,939 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:32,939 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -79.98 	 cIDON = [5 7], cIDOFF = [5 7]
10:13:32,939 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:32,939 root DEBUG dOFF/dON = 0.1
10:13:32,939 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.35283391610203, 'dON1': 2.4981955288204043, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 2.4981955288204043, 'nTON': 1, 'dON': 2.4981955288204043, 'dxOFFAngle': 88.3562139885594, 'dOFF1': 0.27783872707167534, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.27783872707167534, 'nTOFF': 1, 'dOFF': 0.27783872707167534, 'SUCCESS': False}
10:13:32,947 root DEBUG 

=================== Experiment ID #365 	 Dual Point ID: 368 ===================
10:13:32,954 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.713E-09|<1.000E-06)
10:13:32,955 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:33,229 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.671E-01 	 Total distance: 1.671E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([45], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:13:33,456 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.677E-02 	 Total distance: 1.939E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([19], dtype=int64), array([[False]])]] 	 class: [3 6]
10:13:33,737 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.373E-01 	 Total distance: 4.373E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([139], dtype=int64), array([[False]])]] 	 class: [3 6]
10:13:33,737 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:33,738 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 38.57 	 cIDON = [3 6], cIDOFF = [3 6]
10:13:33,738 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:33,738 root DEBUG dOFF/dON = 2.3
10:13:33,738 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.96607377139259, 'dON1': 0.19385154782108696, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.19385154782108696, 'nTON': 1, 'dON': 0.19385154782108696, 'dxOFFAngle': 89.89419768368023, 'dOFF1': 0.43727518806891835, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.43727518806891835, 'nTOFF': 1, 'dOFF': 0.43727518806891835, 'SUCCESS': True}
10:13:33,749 root DEBUG 

=================== Experiment ID #366 	 Dual Point ID: 369 ===================
10:13:33,756 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.161E-09|<1.000E-06)
10:13:33,756 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:34,36 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.582E-02 	 Total distance: 3.582E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([42], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:13:34,408 root DEBUG Side: ON	 Angle(dx0, dx): 0.73 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.754E-01 	 Total distance: 4.112E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([34], dtype=int64), array([[False]])]] 	 class: [4 8]
10:13:34,862 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.537E-01 	 Total distance: 2.537E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([84], dtype=int64), array([[False]])]] 	 class: [4 8]
10:13:34,862 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:34,862 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -23.69 	 cIDON = [4 8], cIDOFF = [4 8]
10:13:34,863 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:34,863 root DEBUG dOFF/dON = 0.6
10:13:34,863 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.31493292662562, 'dON1': 0.41120522097584616, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.41120522097584616, 'nTON': 1, 'dON': 0.41120522097584616, 'dxOFFAngle': 89.8291547126431, 'dOFF1': 0.2536987680719367, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.2536987680719367, 'nTOFF': 1, 'dOFF': 0.2536987680719367, 'SUCCESS': False}
10:13:34,876 root DEBUG 

=================== Experiment ID #367 	 Dual Point ID: 370 ===================
10:13:34,890 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.214E-08|<1.000E-06)
10:13:34,891 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:35,189 root DEBUG Side: ON	 Angle(dx0, dx): 0.87 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.448E-06 	 Total distance: 1.448E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 9]
10:13:35,508 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.378E-01 	 Total distance: 4.378E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([217], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:13:35,742 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.275E-01 	 Total distance: 5.652E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([211], dtype=int64), array([[False]])]] 	 class: [0 9]
10:13:36,7 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.569E-01 	 Total distance: 1.122E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([202], dtype=int64), array([[False]])]] 	 class: [0 9]
10:13:36,7 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:36,7 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [0 9], cIDOFF = [0 9]
10:13:36,7 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:36,7 root DEBUG dOFF/dON = 775182.3
10:13:36,7 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.53551580805929, 'dON1': 1.4476060208459684e-06, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 1.4476060208459684e-06, 'nTON': 1, 'dON': 1.4476060208459684e-06, 'dxOFFAngle': 88.6607027042034, 'dOFF1': 1.1221585727146812, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 1.1221585727146812, 'nTOFF': 1, 'dOFF': 1.1221585727146812, 'SUCCESS': True}
10:13:36,17 root DEBUG 

=================== Experiment ID #368 	 Dual Point ID: 371 ===================
10:13:36,25 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.860E-08|<1.000E-06)
10:13:36,25 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:36,354 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.057E-01 	 Total distance: 1.057E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([252], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:13:36,482 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.295E-03 	 Total distance: 1.110E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([169], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:13:36,671 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.355E+00 	 Total distance: 1.466E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([57], dtype=int64), array([[False]])]] 	 class: [0 1]
10:13:36,900 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.857E-01 	 Total distance: 2.352E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([138], dtype=int64), array([[False]])]] 	 class: [0 1]
10:13:37,238 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.044E-01 	 Total distance: 2.044E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([204], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:13:37,238 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:37,239 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -84.01 	 cIDON = [0 1], cIDOFF = [0 1]
10:13:37,239 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:37,239 root DEBUG dOFF/dON = 0.1
10:13:37,239 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.22169403457274, 'dON1': 2.35208776585704, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 2.35208776585704, 'nTON': 1, 'dON': 2.35208776585704, 'dxOFFAngle': 89.22924166327843, 'dOFF1': 0.2044332936475528, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.2044332936475528, 'nTOFF': 1, 'dOFF': 0.2044332936475528, 'SUCCESS': False}
10:13:37,250 root DEBUG 

=================== Experiment ID #369 	 Dual Point ID: 372 ===================
10:13:37,260 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.939E-09|<1.000E-06)
10:13:37,260 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:37,505 root DEBUG Side: ON	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.406E-06 	 Total distance: 9.406E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:13:37,773 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.348E-01 	 Total distance: 5.348E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([147], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:13:37,774 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:37,774 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [1 8], cIDOFF = [1 8]
10:13:37,774 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:37,774 root DEBUG dOFF/dON = 56851.4
10:13:37,774 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.80391685888584, 'dON1': 9.406420713190713e-06, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 9.406420713190713e-06, 'nTON': 1, 'dON': 9.406420713190713e-06, 'dxOFFAngle': 89.22034644412076, 'dOFF1': 0.5347681112170737, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 0.5347681112170737, 'nTOFF': 1, 'dOFF': 0.5347681112170737, 'SUCCESS': True}
10:13:37,784 root DEBUG 

=================== Experiment ID #370 	 Dual Point ID: 373 ===================
10:13:37,795 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.164E-09|<1.000E-06)
10:13:37,795 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:38,126 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.916E-01 	 Total distance: 1.916E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([10], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:13:38,329 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.106E-01 	 Total distance: 6.022E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([42], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:13:38,541 root DEBUG Side: ON	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.069E-01 	 Total distance: 7.091E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([71], dtype=int64), array([[False]])]] 	 class: [3 5]
10:13:38,911 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.484E-01 	 Total distance: 1.484E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([68], dtype=int64), array([[False]])]] 	 class: [3 5]
10:13:39,127 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.647E-01 	 Total distance: 4.131E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([20], dtype=int64), array([[False]])]] 	 class: [3 5]
10:13:39,350 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.419E-01 	 Total distance: 5.549E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([239], dtype=int64), array([[False]])]] 	 class: [3 5]
10:13:39,350 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:39,350 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -12.20 	 cIDON = [3 5], cIDOFF = [3 5]
10:13:39,350 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:39,350 root DEBUG dOFF/dON = 0.8
10:13:39,350 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.34534760633808, 'dON1': 0.7091246395256409, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.7091246395256409, 'nTON': 1, 'dON': 0.7091246395256409, 'dxOFFAngle': 88.77717096929561, 'dOFF1': 0.5549267386830267, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.5549267386830267, 'nTOFF': 1, 'dOFF': 0.5549267386830267, 'SUCCESS': False}
10:13:39,360 root DEBUG 

=================== Experiment ID #371 	 Dual Point ID: 374 ===================
10:13:39,369 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.985E-10|<1.000E-06)
10:13:39,369 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:39,700 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.681E-01 	 Total distance: 2.681E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([113], dtype=int64), array([[False]])]] 	 class: [2 8]
10:13:39,923 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.004E-03 	 Total distance: 7.004E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([56], dtype=int64), array([[False]])]] 	 class: [2 8]
10:13:39,923 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:39,923 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -94.91 	 cIDON = [2 8], cIDOFF = [2 8]
10:13:39,923 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:39,923 root DEBUG dOFF/dON = 0.0
10:13:39,923 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.97734441119756, 'dON1': 0.2680995305311956, 'cIDON1': array([2, 8], dtype=int64), 'dON_patch_1': 0.2680995305311956, 'nTON': 1, 'dON': 0.2680995305311956, 'dxOFFAngle': 89.91995057380143, 'dOFF1': 0.0070041313960691074, 'cIDOFF1': array([2, 8], dtype=int64), 'dOFF_patch_1': 0.0070041313960691074, 'nTOFF': 1, 'dOFF': 0.0070041313960691074, 'SUCCESS': False}
10:13:39,932 root DEBUG 

=================== Experiment ID #372 	 Dual Point ID: 375 ===================
10:13:39,940 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.959E-09|<1.000E-06)
10:13:39,941 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:40,238 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.546E-01 	 Total distance: 1.546E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([217], dtype=int64), array([[False]])]] 	 class: [3 5]
10:13:40,484 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.043E-01 	 Total distance: 4.589E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([179], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:13:40,707 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.473E-01 	 Total distance: 6.062E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([143], dtype=int64), array([[False]])]] 	 class: [3 5]
10:13:41,29 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.809E-02 	 Total distance: 1.809E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([131], dtype=int64), array([[False]])]] 	 class: [3 5]
10:13:41,269 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.391E-01 	 Total distance: 2.572E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([192], dtype=int64), array([[False]])]] 	 class: [3 5]
10:13:41,474 root DEBUG Side: OFF	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.296E+00 	 Total distance: 1.553E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([235], dtype=int64), array([[False]])]] 	 class: [3 5]
10:13:41,709 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.671E-01 	 Total distance: 1.920E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([0], dtype=int64), array([[False]])]] 	 class: [3 5]
10:13:41,709 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:41,709 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 52.02 	 cIDON = [3 5], cIDOFF = [3 5]
10:13:41,709 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:41,709 root DEBUG dOFF/dON = 3.2
10:13:41,709 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.71406515374929, 'dON1': 0.6061756471826724, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.6061756471826724, 'nTON': 1, 'dON': 0.6061756471826724, 'dxOFFAngle': 89.92836992259285, 'dOFF1': 1.9204512804350304, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 1.9204512804350304, 'nTOFF': 1, 'dOFF': 1.9204512804350304, 'SUCCESS': True}
10:13:41,717 root DEBUG 

=================== Experiment ID #373 	 Dual Point ID: 376 ===================
10:13:41,726 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.424E-08|<1.000E-06)
10:13:41,727 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:42,109 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.977E-01 	 Total distance: 3.977E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([67], dtype=int64), array([[False]])]] 	 class: [0 1]
10:13:42,425 root DEBUG Side: OFF	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.191E-02 	 Total distance: 3.191E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([178], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:13:42,609 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.228E+00 	 Total distance: 1.260E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([29], dtype=int64), array([[False]])]] 	 class: [0 1]
10:13:42,610 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:42,610 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 52.02 	 cIDON = [0 1], cIDOFF = [0 1]
10:13:42,610 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:42,610 root DEBUG dOFF/dON = 3.2
10:13:42,610 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.71294815444841, 'dON1': 0.3977414285831766, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.3977414285831766, 'nTON': 1, 'dON': 0.3977414285831766, 'dxOFFAngle': 88.47891284462476, 'dOFF1': 1.2602652052128132, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 1.2602652052128132, 'nTOFF': 1, 'dOFF': 1.2602652052128132, 'SUCCESS': True}
10:13:42,620 root DEBUG 

=================== Experiment ID #374 	 Dual Point ID: 377 ===================
10:13:42,627 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.359E-10|<1.000E-06)
10:13:42,627 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:42,992 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.566E-02 	 Total distance: 5.566E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([29], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:13:43,220 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.528E-02 	 Total distance: 7.094E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([5], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:13:43,368 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.189E-02 	 Total distance: 1.328E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([213], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:13:43,602 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.593E-02 	 Total distance: 1.588E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([34], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:13:43,765 root DEBUG Side: ON	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.416E-02 	 Total distance: 2.029E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([79], dtype=int64), array([[False]])]] 	 class: [7 9]
10:13:44,42 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.916E-03 	 Total distance: 6.916E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([6], dtype=int64), array([[False]])]] 	 class: [7 9]
10:13:44,43 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:44,43 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -93.41 	 cIDON = [7 9], cIDOFF = [7 9]
10:13:44,43 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:44,43 root DEBUG dOFF/dON = 0.0
10:13:44,43 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.62621448802331, 'dON1': 0.2029268797246055, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.2029268797246055, 'nTON': 1, 'dON': 0.2029268797246055, 'dxOFFAngle': 89.98896289625945, 'dOFF1': 0.006915849564900791, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.006915849564900791, 'nTOFF': 1, 'dOFF': 0.006915849564900791, 'SUCCESS': False}
10:13:44,51 root DEBUG 

=================== Experiment ID #375 	 Dual Point ID: 378 ===================
10:13:44,64 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.142E-09|<1.000E-06)
10:13:44,64 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:44,356 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.058E-01 	 Total distance: 1.058E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([93], dtype=int64), array([[False]])]] 	 class: [2 7]
10:13:44,626 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.818E-01 	 Total distance: 5.877E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([30], dtype=int64), array([[False]])]] 	 class: [2 7]
10:13:44,802 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.299E-01 	 Total distance: 9.176E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([200], dtype=int64), array([[False]])]] 	 class: [2 7]
10:13:44,958 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.571E-01 	 Total distance: 1.075E+00 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([184], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:13:45,258 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.319E-01 	 Total distance: 1.207E+00 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([7], dtype=int64), array([[False]])]] 	 class: [2 7]
10:13:45,568 root DEBUG Side: ON	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.094E-01 	 Total distance: 2.016E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([63], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:13:45,914 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.798E-01 	 Total distance: 5.798E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([194], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:13:45,914 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:45,914 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -55.33 	 cIDON = [2 7], cIDOFF = [2 7]
10:13:45,914 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:45,914 root DEBUG dOFF/dON = 0.3
10:13:45,914 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.7654783555522, 'dON1': 2.015941350837562, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 2.015941350837562, 'nTON': 1, 'dON': 2.015941350837562, 'dxOFFAngle': 89.57817750639093, 'dOFF1': 0.5797879117222455, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.5797879117222455, 'nTOFF': 1, 'dOFF': 0.5797879117222455, 'SUCCESS': False}
10:13:45,924 root DEBUG 

=================== Experiment ID #376 	 Dual Point ID: 379 ===================
10:13:45,935 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.187E-08|<1.000E-06)
10:13:45,935 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:46,278 root DEBUG Side: ON	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.309E-01 	 Total distance: 3.309E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([136], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:13:46,527 root DEBUG Side: OFF	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.236E-06 	 Total distance: 7.236E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:13:46,528 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:46,528 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -100.00 	 cIDON = [1 8], cIDOFF = [1 8]
10:13:46,528 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:46,528 root DEBUG dOFF/dON = 0.0
10:13:46,528 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.26740988386595, 'dON1': 0.3308988533075468, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 0.3308988533075468, 'nTON': 1, 'dON': 0.3308988533075468, 'dxOFFAngle': 89.44832443797515, 'dOFF1': 7.236001286796614e-06, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 7.236001286796614e-06, 'nTOFF': 1, 'dOFF': 7.236001286796614e-06, 'SUCCESS': False}
10:13:46,538 root DEBUG 

=================== Experiment ID #377 	 Dual Point ID: 380 ===================
10:13:46,547 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.344E-08|<1.000E-06)
10:13:46,547 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:46,882 root DEBUG Side: ON	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.229E-01 	 Total distance: 4.229E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([10], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:13:47,156 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.462E-01 	 Total distance: 3.462E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([92], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:13:47,156 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:47,156 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -9.97 	 cIDON = [0 1], cIDOFF = [0 1]
10:13:47,156 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:47,156 root DEBUG dOFF/dON = 0.8
10:13:47,156 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.24807091973824, 'dON1': 0.42285037750592774, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.42285037750592774, 'nTON': 1, 'dON': 0.42285037750592774, 'dxOFFAngle': 89.21092178177761, 'dOFF1': 0.3462022813082234, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.3462022813082234, 'nTOFF': 1, 'dOFF': 0.3462022813082234, 'SUCCESS': False}
10:13:47,170 root DEBUG 

=================== Experiment ID #378 	 Dual Point ID: 381 ===================
10:13:47,179 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.781E-08|<1.000E-06)
10:13:47,179 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:47,559 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.323E-01 	 Total distance: 4.323E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([91], dtype=int64), array([[ True]])]] 	 class: [0 2]
10:13:47,818 root DEBUG Side: OFF	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.520E-05 	 Total distance: 1.520E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 2]
10:13:47,819 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:47,819 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.99 	 cIDON = [0 2], cIDOFF = [0 2]
10:13:47,819 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:47,819 root DEBUG dOFF/dON = 0.0
10:13:47,819 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.41180446015206, 'dON1': 0.43231836159939574, 'cIDON1': array([0, 2], dtype=int64), 'dON_patch_1': 0.43231836159939574, 'nTON': 1, 'dON': 0.43231836159939574, 'dxOFFAngle': 89.11519778563088, 'dOFF1': 1.5196710322286015e-05, 'cIDOFF1': array([0, 2], dtype=int64), 'dOFF_patch_1': 1.5196710322286015e-05, 'nTOFF': 1, 'dOFF': 1.5196710322286015e-05, 'SUCCESS': False}
10:13:47,832 root DEBUG 

=================== Experiment ID #379 	 Dual Point ID: 382 ===================
10:13:47,841 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.229E-08|<1.000E-06)
10:13:47,841 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:48,131 root DEBUG Side: ON	 Angle(dx0, dx): 2.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.447E-06 	 Total distance: 1.447E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 8]
10:13:48,374 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.158E-01 	 Total distance: 2.158E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([8], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:13:48,374 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:48,374 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [0 8], cIDOFF = [0 8]
10:13:48,374 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:48,374 root DEBUG dOFF/dON = 149053.8
10:13:48,374 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.74323838180378, 'dON1': 1.4474813714749407e-06, 'cIDON1': array([0, 8], dtype=int64), 'dON_patch_1': 1.4474813714749407e-06, 'nTON': 1, 'dON': 1.4474813714749407e-06, 'dxOFFAngle': 88.97945375194956, 'dOFF1': 0.21575257795885708, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.21575257795885708, 'nTOFF': 1, 'dOFF': 0.21575257795885708, 'SUCCESS': True}
10:13:48,386 root DEBUG 

=================== Experiment ID #380 	 Dual Point ID: 383 ===================
10:13:48,397 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.508E-08|<1.000E-06)
10:13:48,397 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:48,735 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.203E-01 	 Total distance: 6.203E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([17], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:13:49,20 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.924E-01 	 Total distance: 8.127E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([1], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:13:49,348 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.781E-01 	 Total distance: 9.781E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([194], dtype=int64), array([[False]])]] 	 class: [2 7]
10:13:49,592 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.972E-03 	 Total distance: 9.801E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([69], dtype=int64), array([[False]])]] 	 class: [2 7]
10:13:49,842 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.587E-01 	 Total distance: 1.339E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([36], dtype=int64), array([[False]])]] 	 class: [2 7]
10:13:50,35 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.691E-01 	 Total distance: 1.508E+00 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([238], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:13:50,318 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.769E-01 	 Total distance: 1.885E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([61], dtype=int64), array([[False]])]] 	 class: [2 7]
10:13:50,318 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:50,318 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 39.74 	 cIDON = [2 7], cIDOFF = [2 7]
10:13:50,318 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:50,318 root DEBUG dOFF/dON = 2.3
10:13:50,318 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.54980371687147, 'dON1': 0.8127278111897712, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.8127278111897712, 'nTON': 1, 'dON': 0.8127278111897712, 'dxOFFAngle': 89.62914926266018, 'dOFF1': 1.8847215847432695, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 1.8847215847432695, 'nTOFF': 1, 'dOFF': 1.8847215847432695, 'SUCCESS': True}
10:13:50,330 root DEBUG 

=================== Experiment ID #381 	 Dual Point ID: 384 ===================
10:13:50,341 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.121E-07|<1.000E-06)
10:13:50,341 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:50,658 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.690E-01 	 Total distance: 3.690E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([237], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:13:50,813 root DEBUG Side: ON	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.408E-03 	 Total distance: 3.764E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([53], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:13:51,103 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.168E+00 	 Total distance: 2.168E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([252], dtype=int64), array([[False]])]] 	 class: [3 7]
10:13:51,414 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.133E-01 	 Total distance: 2.582E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([232], dtype=int64), array([[False]])]] 	 class: [3 7]
10:13:51,673 root DEBUG Side: OFF	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.730E+00 	 Total distance: 6.311E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([171], dtype=int64), array([[False]])]] 	 class: [3 7]
10:13:51,673 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:51,674 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 88.74 	 cIDON = [3 7], cIDOFF = [3 7]
10:13:51,674 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:51,674 root DEBUG dOFF/dON = 16.8
10:13:51,674 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.12684189874439, 'dON1': 0.3764431010560496, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.3764431010560496, 'nTON': 1, 'dON': 0.3764431010560496, 'dxOFFAngle': 89.02714135155358, 'dOFF1': 6.311451285569552, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 6.311451285569552, 'nTOFF': 1, 'dOFF': 6.311451285569552, 'SUCCESS': True}
10:13:51,684 root DEBUG 

=================== Experiment ID #382 	 Dual Point ID: 385 ===================
10:13:51,692 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.032E-08|<1.000E-06)
10:13:51,692 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:52,36 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.615E-01 	 Total distance: 5.615E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([188], dtype=int64), array([[False]])]] 	 class: [5 7]
10:13:52,267 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.747E-01 	 Total distance: 9.362E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([244], dtype=int64), array([[False]])]] 	 class: [5 7]
10:13:52,596 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.811E-01 	 Total distance: 1.811E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([229], dtype=int64), array([[False]])]] 	 class: [5 7]
10:13:52,596 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:52,597 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -67.59 	 cIDON = [5 7], cIDOFF = [5 7]
10:13:52,597 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:52,597 root DEBUG dOFF/dON = 0.2
10:13:52,597 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.99999193081291, 'dON1': 0.9362036319658349, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.9362036319658349, 'nTON': 1, 'dON': 0.9362036319658349, 'dxOFFAngle': 89.35254841784766, 'dOFF1': 0.18105298451810317, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.18105298451810317, 'nTOFF': 1, 'dOFF': 0.18105298451810317, 'SUCCESS': False}
10:13:52,604 root DEBUG 

=================== Experiment ID #383 	 Dual Point ID: 386 ===================
10:13:52,611 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.675E-08|<1.000E-06)
10:13:52,612 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:52,969 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.693E-01 	 Total distance: 5.693E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([200], dtype=int64), array([[False]])]] 	 class: [2 7]
10:13:53,234 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.098E+00 	 Total distance: 1.098E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([85], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:13:53,445 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.412E-01 	 Total distance: 1.239E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([2], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:13:53,709 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.423E-02 	 Total distance: 1.334E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([159], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:13:53,709 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:53,709 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 40.17 	 cIDON = [2 7], cIDOFF = [2 7]
10:13:53,709 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:53,709 root DEBUG dOFF/dON = 2.3
10:13:53,709 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.6745866262353, 'dON1': 0.5692621693153734, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.5692621693153734, 'nTON': 1, 'dON': 0.5692621693153734, 'dxOFFAngle': 89.54493543642769, 'dOFF1': 1.3336385287375747, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 1.3336385287375747, 'nTOFF': 1, 'dOFF': 1.3336385287375747, 'SUCCESS': True}
10:13:53,722 root DEBUG 

=================== Experiment ID #384 	 Dual Point ID: 387 ===================
10:13:53,732 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.794E-08|<1.000E-06)
10:13:53,733 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:53,986 root DEBUG Side: ON	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.580E-01 	 Total distance: 6.580E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([139], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:13:54,284 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.322E+00 	 Total distance: 1.322E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([194], dtype=int64), array([[False]])]] 	 class: [5 9]
10:13:54,529 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.853E-02 	 Total distance: 1.350E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([22], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:13:54,529 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:54,529 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 34.48 	 cIDON = [5 9], cIDOFF = [5 9]
10:13:54,529 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:54,529 root DEBUG dOFF/dON = 2.1
10:13:54,529 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.388482227144, 'dON1': 0.6580199894940986, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.6580199894940986, 'nTON': 1, 'dON': 0.6580199894940986, 'dxOFFAngle': 89.32593713934408, 'dOFF1': 1.3504799967043697, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 1.3504799967043697, 'nTOFF': 1, 'dOFF': 1.3504799967043697, 'SUCCESS': True}
10:13:54,537 root DEBUG 

=================== Experiment ID #385 	 Dual Point ID: 388 ===================
10:13:54,547 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.111E-08|<1.000E-06)
10:13:54,547 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:54,778 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.729E-03 	 Total distance: 5.729E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([154], dtype=int64), array([[False]])]] 	 class: [3 7]
10:13:55,28 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.002E-02 	 Total distance: 8.002E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([240], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:13:55,192 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.674E-02 	 Total distance: 1.168E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([54], dtype=int64), array([[False]])]] 	 class: [3 7]
10:13:55,192 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:55,192 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 90.65 	 cIDON = [3 7], cIDOFF = [3 7]
10:13:55,192 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:55,192 root DEBUG dOFF/dON = 20.4
10:13:55,192 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.85634857823776, 'dON1': 0.005729218241173855, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.005729218241173855, 'nTON': 1, 'dON': 0.005729218241173855, 'dxOFFAngle': 89.92470667411698, 'dOFF1': 0.11676129351358831, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.11676129351358831, 'nTOFF': 1, 'dOFF': 0.11676129351358831, 'SUCCESS': True}
10:13:55,200 root DEBUG 

=================== Experiment ID #386 	 Dual Point ID: 389 ===================
10:13:55,209 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.368E-09|<1.000E-06)
10:13:55,209 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:55,501 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.779E-01 	 Total distance: 1.779E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([125], dtype=int64), array([[False]])]] 	 class: [3 6]
10:13:55,879 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.194E-01 	 Total distance: 3.194E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([216], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:13:55,879 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:55,879 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 28.45 	 cIDON = [3 6], cIDOFF = [3 6]
10:13:55,879 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:55,879 root DEBUG dOFF/dON = 1.8
10:13:55,879 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.08222132502821, 'dON1': 0.1779008146852355, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.1779008146852355, 'nTON': 1, 'dON': 0.1779008146852355, 'dxOFFAngle': 89.3914832037513, 'dOFF1': 0.31936557188144504, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.31936557188144504, 'nTOFF': 1, 'dOFF': 0.31936557188144504, 'SUCCESS': True}
10:13:55,895 root DEBUG 

=================== Experiment ID #387 	 Dual Point ID: 390 ===================
10:13:55,909 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.047E-08|<1.000E-06)
10:13:55,909 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:56,227 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.965E-01 	 Total distance: 8.965E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([114], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:13:56,427 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.575E-01 	 Total distance: 1.254E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([196], dtype=int64), array([[False]])]] 	 class: [3 6]
10:13:56,724 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.005E+00 	 Total distance: 1.005E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([27], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:13:56,724 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:56,724 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -11.01 	 cIDON = [3 6], cIDOFF = [3 6]
10:13:56,724 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:13:56,724 root DEBUG dOFF/dON = 0.8
10:13:56,724 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.38537323195285, 'dON1': 1.2539798912542581, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 1.2539798912542581, 'nTON': 1, 'dON': 1.2539798912542581, 'dxOFFAngle': 89.13227601139988, 'dOFF1': 1.005298329253579, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 1.005298329253579, 'nTOFF': 1, 'dOFF': 1.005298329253579, 'SUCCESS': False}
10:13:56,736 root DEBUG 

=================== Experiment ID #388 	 Dual Point ID: 391 ===================
10:13:56,746 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.176E-08|<1.000E-06)
10:13:56,746 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:13:57,84 root DEBUG Side: ON	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.478E-01 	 Total distance: 2.478E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([171], dtype=int64), array([[False]])]] 	 class: [7 8]
10:13:57,430 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.037E-01 	 Total distance: 3.037E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([102], dtype=int64), array([[ True]])]] 	 class: [7 8]
10:13:57,655 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.649E-01 	 Total distance: 6.687E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([96], dtype=int64), array([[False]])]] 	 class: [7 8]
10:13:57,812 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.300E-01 	 Total distance: 1.199E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([135], dtype=int64), array([[ True]])]] 	 class: [7 8]
10:13:57,812 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:13:57,812 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 65.74 	 cIDON = [7 8], cIDOFF = [7 8]
10:13:57,812 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:13:57,812 root DEBUG dOFF/dON = 4.8
10:13:57,812 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.25095359550419, 'dON1': 0.24778846317431713, 'cIDON1': array([7, 8], dtype=int64), 'dON_patch_1': 0.24778846317431713, 'nTON': 1, 'dON': 0.24778846317431713, 'dxOFFAngle': 89.47563578295426, 'dOFF1': 1.1986393547210454, 'cIDOFF1': array([7, 8], dtype=int64), 'dOFF_patch_1': 1.1986393547210454, 'nTOFF': 1, 'dOFF': 1.1986393547210454, 'SUCCESS': True}
10:13:58,117 matplotlib.pyplot DEBUG Loaded backend tkagg version 8.6.
10:13:58,169 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:13:58,170 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:13:58,170 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:13:58,170 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:13:58,170 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 1189
10:13:58,175 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:13:58,175 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:13:58,176 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:13:58,176 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:13:58,176 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 2994
10:13:58,209 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:13:58,209 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:13:58,209 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:13:58,209 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:13:58,209 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 696
10:13:58,213 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:13:58,213 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:13:58,213 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:13:58,214 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:13:58,214 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 526
10:13:58,218 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:13:58,218 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:13:58,218 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:13:58,218 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:13:58,218 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 499
10:13:58,222 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:13:58,222 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:13:58,222 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:13:58,222 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:13:58,222 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 673
10:13:58,227 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:13:58,227 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:13:58,227 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:13:58,227 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:13:58,227 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 922
10:13:58,231 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:13:58,231 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:13:58,231 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:13:58,231 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:13:58,231 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 568
10:13:58,234 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:13:58,234 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:13:58,234 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:13:58,234 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:13:58,234 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 626
10:13:58,240 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
10:13:58,240 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,240 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,240 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:13:58,240 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:13:58,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:13:58,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,242 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,242 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,242 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,242 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,242 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,242 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,242 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,242 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:13:58,242 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,242 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,242 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,242 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,242 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,242 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,242 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,242 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,242 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:13:58,242 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,242 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,242 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,242 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,242 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,242 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,242 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:13:58,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:13:58,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:13:58,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:58,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:13:58,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:58,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:13:58,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:13:58,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:13:58,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:13:58,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:13:58,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,247 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,247 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:13:58,247 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,247 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,247 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,247 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,247 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,247 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,247 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,247 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,247 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:13:58,247 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:58,247 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,248 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,248 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,248 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,248 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,248 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,248 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,248 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,248 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,248 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,248 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,248 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:13:58,248 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,248 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:13:58,248 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:13:58,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:13:58,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:58,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:58,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:58,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,251 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,251 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,251 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,251 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,251 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,251 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:13:58,251 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,251 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,251 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,251 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,251 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,251 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,251 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,251 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:58,251 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,251 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:58,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:13:58,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:58,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:13:58,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:13:58,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:13:58,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:58,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:13:58,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:13:58,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:13:58,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:13:58,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,255 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:13:58,255 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,255 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,255 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,255 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,255 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:58,255 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,255 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,255 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,255 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,255 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,255 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:58,255 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,255 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,256 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,256 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,256 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,256 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,256 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,256 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,256 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,256 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,256 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,256 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,256 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,256 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,256 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,256 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,256 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:13:58,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:58,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:58,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:13:58,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:13:58,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,261 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,261 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,261 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,261 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:58,261 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,261 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,261 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,261 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,261 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,261 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,261 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,261 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,261 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,261 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,261 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,261 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,262 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,262 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,262 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,262 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:13:58,262 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,262 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,262 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,262 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,262 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:13:58,262 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,262 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:13:58,262 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:13:58,262 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,262 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,263 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,263 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,263 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,263 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,263 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,263 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,263 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,263 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,263 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,263 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,263 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,263 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,264 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,264 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,264 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,264 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,264 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:13:58,264 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,264 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,264 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,264 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,264 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,264 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:58,264 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,265 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,265 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,265 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:13:58,265 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,265 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,265 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,265 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,265 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,265 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,265 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,265 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,265 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,265 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,265 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,266 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,266 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,266 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,266 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,266 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:13:58,266 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,266 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,266 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,266 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,266 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,266 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,266 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,266 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,266 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,266 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:58,267 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,267 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,267 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,267 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:13:58,267 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,267 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,267 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:58,267 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,267 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,267 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,267 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:58,267 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,268 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,268 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,268 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,268 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
10:13:58,497 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
10:13:58,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:13:58,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:13:58,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:13:58,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:13:58,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:13:58,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:13:58,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:13:58,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:13:58,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:58,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:13:58,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:58,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:13:58,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:13:58,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:13:58,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:13:58,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:13:58,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:13:58,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:13:58,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:58,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,508 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,508 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,508 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,508 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,508 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:13:58,508 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,508 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:13:58,508 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:13:58,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:13:58,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:58,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,510 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,510 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,510 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:58,510 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,510 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:58,510 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,510 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,510 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,510 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,510 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,510 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,511 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,511 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,511 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,511 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,511 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,511 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,511 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,511 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,511 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,511 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,511 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:13:58,511 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,511 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,511 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:58,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:58,513 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,513 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,513 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:13:58,513 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:58,513 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,513 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:13:58,513 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,513 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:13:58,513 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,513 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,513 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:13:58,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:58,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:13:58,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:13:58,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:13:58,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:13:58,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:13:58,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:58,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:58,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:13:58,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:58,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:58,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:13:58,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:13:58,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:58,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:13:58,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:13:58,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:13:58,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:13:58,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:13:58,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:58,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:13:58,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:13:58,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:58,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:13:58,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:58,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:58,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,529 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
10:13:58,734 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0.
10:13:58,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:13:58,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:13:58,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,735 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:13:58,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,736 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:13:58,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:13:58,737 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:13:58,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:13:58,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:13:58,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,738 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:58,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:13:58,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,739 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:58,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:13:58,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,740 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:13:58,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,741 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:13:58,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:13:58,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:13:58,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,742 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:13:58,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:13:58,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:58,743 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:13:58,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:13:58,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:13:58,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:13:58,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,744 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:58,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:58,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:58,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,745 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,746 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,746 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,746 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,746 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,746 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,746 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,747 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,747 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,747 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:13:58,747 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,747 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,747 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,747 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,747 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,747 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,747 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,747 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:58,747 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,748 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,748 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,748 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,748 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,748 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,748 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,748 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,748 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,748 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:58,748 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,748 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,749 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:13:58,749 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:58,749 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,749 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:13:58,749 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,749 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:13:58,749 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,749 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,749 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,749 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,749 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,750 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,750 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,750 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:13:58,750 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,750 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,750 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,750 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,750 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,750 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,750 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:58,750 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,750 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,751 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,751 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,751 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,751 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,751 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,751 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:13:58,751 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,751 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,751 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:13:58,751 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,751 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:13:58,751 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,751 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:13:58,752 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,752 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:13:58,752 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,752 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,752 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,752 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,752 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:58,752 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,752 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,752 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,752 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,752 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,752 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:58,753 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,753 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,753 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,753 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,753 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,753 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,753 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,753 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,754 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,754 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,754 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,754 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,754 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,754 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,754 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,754 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,754 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,754 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,754 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,754 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,754 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,754 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,755 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,755 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,755 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,755 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,755 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:13:58,755 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,755 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,755 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,755 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,755 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,756 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,756 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,756 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,756 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,756 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,756 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,756 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,756 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,756 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,756 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,756 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,757 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,757 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,757 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,757 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,757 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:58,757 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,757 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,757 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,757 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,758 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,758 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,758 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,758 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,758 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,758 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,758 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,758 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,758 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,758 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:58,758 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:13:58,759 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,759 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,759 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,759 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,759 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,759 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,759 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,759 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,759 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,759 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,759 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,759 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:13:58,760 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,760 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,760 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,760 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,760 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:58,760 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,760 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,760 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,760 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,760 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,760 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,760 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,760 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,761 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,761 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,761 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,761 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,761 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,761 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,761 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,761 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:13:58,761 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,761 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,761 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,762 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,762 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:13:58,762 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,762 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:13:58,762 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:13:58,762 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,762 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,762 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,762 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,762 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,762 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,762 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,763 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,763 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,763 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,763 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,763 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,763 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,763 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,763 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,764 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,764 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:13:58,764 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:13:58,764 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:13:58,764 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,764 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,764 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,764 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,764 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,764 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:13:58,764 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,765 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,765 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,765 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:13:58,765 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,765 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,765 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,765 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,765 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,765 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,765 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,765 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,766 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,766 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,766 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,766 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,766 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,766 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,766 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,766 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:13:58,766 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,766 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,766 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,767 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,767 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,767 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,767 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:13:58,767 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,767 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,767 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:13:58,767 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,768 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,768 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,768 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:13:58,768 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,768 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,768 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:58,768 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:13:58,768 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,768 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:13:58,769 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:13:58,769 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,769 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,769 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,769 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:13:58,769 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
