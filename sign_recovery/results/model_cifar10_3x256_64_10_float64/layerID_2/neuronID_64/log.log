10:08:23,313 root DEBUG Check that model weights are dtype tf.float64: 	 <dtype: 'float64'>
10:08:23,314 root INFO eps: 1e-06
10:08:23,314 root INFO tol: 1e-06
10:08:23,314 root DEBUG Load dual points from file: ../data/dual_points_cifar10_3x256_64_10_float64.
10:08:23,321 root DEBUG 

=================== Experiment ID #0 	 Dual Point ID: 1 ===================
10:08:23,346 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.735E-07|<1.000E-06)
10:08:23,346 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:23,844 root DEBUG Side: ON	 Angle(dx0, dx): 3.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.509E-02 	 Total distance: 1.509E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([36], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:24,195 root DEBUG Side: ON	 Angle(dx0, dx): 0.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.367E-04 	 Total distance: 1.572E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([195], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:24,530 root DEBUG Side: ON	 Angle(dx0, dx): 3.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.817E-02 	 Total distance: 3.389E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([63], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:24,957 root DEBUG Side: OFF	 Angle(dx0, dx): 1.95 deg 	 Angle(n, nold): 1.74 deg 	 Distance in patch: 5.922E-02 	 Total distance: 5.922E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([200], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:25,241 root DEBUG Side: OFF	 Angle(dx0, dx): 7.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.057E-02 	 Total distance: 6.979E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([242], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:25,241 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:25,241 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 34.62 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:25,242 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:25,242 root DEBUG dOFF/dON = 2.1
10:08:25,242 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 68.66188359158943, 'dON1': 0.033894205743621744, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.033894205743621744, 'nTON': 1, 'dON': 0.033894205743621744, 'dxOFFAngle': 70.94921878951197, 'dOFF1': 0.0697888014884046, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.0697888014884046, 'nTOFF': 1, 'dOFF': 0.0697888014884046, 'SUCCESS': True}
10:08:25,250 root DEBUG 

=================== Experiment ID #1 	 Dual Point ID: 2 ===================
10:08:25,280 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.127E-07|<1.000E-06)
10:08:25,280 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:25,717 root DEBUG Side: ON	 Angle(dx0, dx): 6.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.820E-02 	 Total distance: 1.820E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([3, 9], dtype=int64), array([[0.],
       [1.]])]] 	 class: [5 9]
10:08:26,229 root DEBUG Side: OFF	 Angle(dx0, dx): 1.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.068E-02 	 Total distance: 2.068E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([135], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:26,230 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:26,230 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 6.36 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:26,230 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:26,230 root DEBUG dOFF/dON = 1.1
10:08:26,231 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.62139251222331, 'dON1': 0.018201970004468344, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.018201970004468344, 'nTON': 1, 'dON': 0.018201970004468344, 'dxOFFAngle': 89.02192455427958, 'dOFF1': 0.020675754434424872, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.020675754434424872, 'nTOFF': 1, 'dOFF': 0.020675754434424872, 'SUCCESS': True}
10:08:26,241 root DEBUG 

=================== Experiment ID #2 	 Dual Point ID: 3 ===================
10:08:26,261 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.596E-08|<1.000E-06)
10:08:26,261 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:26,788 root DEBUG Side: ON	 Angle(dx0, dx): 5.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.274E-03 	 Total distance: 3.274E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([52], dtype=int64), array([[False]])]] 	 class: [0 2]
10:08:27,146 root DEBUG Side: ON	 Angle(dx0, dx): 2.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.679E-02 	 Total distance: 3.007E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([29], dtype=int64), array([[ True]])]] 	 class: [0 2]
10:08:27,619 root DEBUG Side: OFF	 Angle(dx0, dx): 26.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.042E-05 	 Total distance: 1.042E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 2]
10:08:27,619 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:27,619 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.93 	 cIDON = [0 2], cIDOFF = [1 2]
10:08:27,619 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:27,619 root DEBUG dOFF/dON = 0.0
10:08:27,619 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 56.80246889091763, 'dON1': 0.030066421338826532, 'cIDON1': array([0, 2], dtype=int64), 'dON_patch_1': 0.030066421338826532, 'nTON': 1, 'dON': 0.030066421338826532, 'dxOFFAngle': 73.43577244718246, 'dOFF1': 1.0416257530665858e-05, 'cIDOFF1': array([1, 2], dtype=int64), 'dOFF_patch_1': 1.0416257530665858e-05, 'nTOFF': 1, 'dOFF': 1.0416257530665858e-05, 'SUCCESS': False}
10:08:27,630 root DEBUG 

=================== Experiment ID #3 	 Dual Point ID: 4 ===================
10:08:27,663 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.482E-07|<1.000E-06)
10:08:27,663 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:28,78 root DEBUG Side: ON	 Angle(dx0, dx): 2.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.543E-01 	 Total distance: 1.543E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([21], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:08:28,351 root DEBUG Side: ON	 Angle(dx0, dx): 2.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.553E-02 	 Total distance: 1.698E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([132], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:08:28,737 root DEBUG Side: OFF	 Angle(dx0, dx): 17.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.884E-05 	 Total distance: 2.884E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 8]
10:08:28,737 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:28,737 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.97 	 cIDON = [1 8], cIDOFF = [0 8]
10:08:28,738 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:28,738 root DEBUG dOFF/dON = 0.0
10:08:28,738 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.84459868094214, 'dON1': 0.16978748623433448, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 0.16978748623433448, 'nTON': 1, 'dON': 0.16978748623433448, 'dxOFFAngle': 73.46419816794021, 'dOFF1': 2.8837440331438102e-05, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 2.8837440331438102e-05, 'nTOFF': 1, 'dOFF': 2.8837440331438102e-05, 'SUCCESS': False}
10:08:28,744 root DEBUG 

=================== Experiment ID #4 	 Dual Point ID: 5 ===================
10:08:28,778 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.099E-07|<1.000E-06)
10:08:28,779 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:29,147 root DEBUG Side: ON	 Angle(dx0, dx): 6.14 deg 	 Angle(n, nold): 6.09 deg 	 Distance in patch: 6.492E-02 	 Total distance: 6.492E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([112], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:29,369 root DEBUG Side: ON	 Angle(dx0, dx): 6.14 deg 	 Angle(n, nold): 6.09 deg 	 Distance in patch: 6.639E-08 	 Total distance: 6.492E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([112], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:29,542 root DEBUG Side: ON	 Angle(dx0, dx): 6.14 deg 	 Angle(n, nold): 6.09 deg 	 Distance in patch: 1.330E-07 	 Total distance: 6.492E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([112], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:29,720 root DEBUG Side: ON	 Angle(dx0, dx): 6.14 deg 	 Angle(n, nold): 6.09 deg 	 Distance in patch: 6.639E-08 	 Total distance: 6.492E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([112], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:29,728 root DEBUG Got stuck in too many past-layer relus.
10:08:29,851 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:08:29,852 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:08:29,853 root DEBUG 

=================== Experiment ID #4 	 Dual Point ID: 6 ===================
10:08:29,893 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.151E-07|<1.000E-06)
10:08:29,894 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:30,320 root DEBUG Side: ON	 Angle(dx0, dx): 6.49 deg 	 Angle(n, nold): 7.20 deg 	 Distance in patch: 1.284E-02 	 Total distance: 1.284E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([50], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:30,534 root DEBUG Side: ON	 Angle(dx0, dx): 4.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.709E-02 	 Total distance: 2.993E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([51], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:30,902 root DEBUG Side: OFF	 Angle(dx0, dx): 3.87 deg 	 Angle(n, nold): 7.20 deg 	 Distance in patch: 1.346E-02 	 Total distance: 1.346E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([38], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:30,902 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:30,902 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -37.94 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:30,903 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:30,903 root DEBUG dOFF/dON = 0.4
10:08:30,903 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.63129725607826, 'dON1': 0.029925766984421953, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.029925766984421953, 'nTON': 1, 'dON': 0.029925766984421953, 'dxOFFAngle': 79.50995887727905, 'dOFF1': 0.013464049029885416, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.013464049029885416, 'nTOFF': 1, 'dOFF': 0.013464049029885416, 'SUCCESS': False}
10:08:30,912 root DEBUG 

=================== Experiment ID #5 	 Dual Point ID: 7 ===================
10:08:30,943 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.881E-08|<1.000E-06)
10:08:30,943 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:31,425 root DEBUG Side: ON	 Angle(dx0, dx): 0.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.152E-02 	 Total distance: 3.152E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([127], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:31,742 root DEBUG Side: OFF	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.518E-02 	 Total distance: 1.518E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([59], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:31,742 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:31,743 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -34.97 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:31,743 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:31,743 root DEBUG dOFF/dON = 0.5
10:08:31,743 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.2353142080708, 'dON1': 0.03151619955766107, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.03151619955766107, 'nTON': 1, 'dON': 0.03151619955766107, 'dxOFFAngle': 76.6024970414521, 'dOFF1': 0.015183734797844654, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.015183734797844654, 'nTOFF': 1, 'dOFF': 0.015183734797844654, 'SUCCESS': False}
10:08:31,753 root DEBUG 

=================== Experiment ID #6 	 Dual Point ID: 8 ===================
10:08:31,779 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.905E-08|<1.000E-06)
10:08:31,780 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:32,245 root DEBUG Side: ON	 Angle(dx0, dx): 4.60 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.157E-02 	 Total distance: 3.157E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([77], dtype=int64), array([[False]])]] 	 class: [2 8]
10:08:32,637 root DEBUG Side: OFF	 Angle(dx0, dx): 1.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.966E-03 	 Total distance: 1.966E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([135], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:08:32,969 root DEBUG Side: OFF	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.716E-02 	 Total distance: 5.912E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([248], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:08:33,158 root DEBUG Side: OFF	 Angle(dx0, dx): 2.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.921E-03 	 Total distance: 6.205E-02 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[2, array([21], dtype=int64), array([[False]])]] 	 class: [2 8]
10:08:33,427 root DEBUG Side: OFF	 Angle(dx0, dx): 1.86 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.104E-02 	 Total distance: 1.131E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[2, array([68], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:08:33,624 root DEBUG Side: OFF	 Angle(dx0, dx): 0.48 deg 	 Angle(n, nold): 0.44 deg 	 Distance in patch: 3.293E-02 	 Total distance: 1.460E-01 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([128], dtype=int64), array([[False]])]] 	 class: [2 8]
10:08:33,846 root DEBUG Side: OFF	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.428E-01 	 Total distance: 2.888E-01 	 Future toggles: 0 	 Past toggles: 6 	 Toggled: [[2, array([217], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:08:34,134 root DEBUG Side: OFF	 Angle(dx0, dx): 3.94 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.738E-02 	 Total distance: 3.462E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([121], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:08:34,134 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:34,135 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 83.28 	 cIDON = [2 8], cIDOFF = [2 8]
10:08:34,135 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:34,135 root DEBUG dOFF/dON = 11.0
10:08:34,135 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.65755666915743, 'dON1': 0.03157055917842227, 'cIDON1': array([2, 8], dtype=int64), 'dON_patch_1': 0.03157055917842227, 'nTON': 1, 'dON': 0.03157055917842227, 'dxOFFAngle': 82.85684820873273, 'dOFF1': 0.3461545911198321, 'cIDOFF1': array([2, 8], dtype=int64), 'dOFF_patch_1': 0.3461545911198321, 'nTOFF': 1, 'dOFF': 0.3461545911198321, 'SUCCESS': True}
10:08:34,144 root DEBUG 

=================== Experiment ID #7 	 Dual Point ID: 9 ===================
10:08:34,179 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.956E-07|<1.000E-06)
10:08:34,179 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:34,621 root DEBUG Side: ON	 Angle(dx0, dx): 1.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.909E-01 	 Total distance: 1.909E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([59], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:34,885 root DEBUG Side: ON	 Angle(dx0, dx): 11.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.941E-02 	 Total distance: 2.503E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([171], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:35,364 root DEBUG Side: OFF	 Angle(dx0, dx): 15.54 deg 	 Angle(n, nold): 11.11 deg 	 Distance in patch: 1.108E-01 	 Total distance: 1.108E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([132], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:35,634 root DEBUG Side: OFF	 Angle(dx0, dx): 3.26 deg 	 Angle(n, nold): 3.40 deg 	 Distance in patch: 7.550E-03 	 Total distance: 1.183E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([195], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:35,823 root DEBUG Side: OFF	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.43 deg 	 Distance in patch: 1.059E-02 	 Total distance: 1.289E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([232], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:36,89 root DEBUG Side: OFF	 Angle(dx0, dx): 1.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.989E-03 	 Total distance: 1.369E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[2, array([48], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:36,347 root DEBUG Side: OFF	 Angle(dx0, dx): 2.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.739E-02 	 Total distance: 1.843E-01 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[2, array([183], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:36,645 root DEBUG Side: OFF	 Angle(dx0, dx): 5.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.264E-02 	 Total distance: 2.069E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([44], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:36,646 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:36,646 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -9.49 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:36,646 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:36,646 root DEBUG dOFF/dON = 0.8
10:08:36,647 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 58.78735024289217, 'dON1': 0.2503131463375536, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.2503131463375536, 'nTON': 1, 'dON': 0.2503131463375536, 'dxOFFAngle': 65.0943278594515, 'dOFF1': 0.2069193658706081, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.2069193658706081, 'nTOFF': 1, 'dOFF': 0.2069193658706081, 'SUCCESS': False}
10:08:36,657 root DEBUG 

=================== Experiment ID #8 	 Dual Point ID: 10 ===================
10:08:36,680 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.060E-07|<1.000E-06)
10:08:36,680 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:37,122 root DEBUG Side: ON	 Angle(dx0, dx): 13.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.815E-04 	 Total distance: 2.815E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([16], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:37,539 root DEBUG Side: OFF	 Angle(dx0, dx): 2.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.244E-03 	 Total distance: 5.244E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([192], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:37,539 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:37,539 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 89.81 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:37,539 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:37,539 root DEBUG dOFF/dON = 18.6
10:08:37,539 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 70.71851502802782, 'dON1': 0.00028149435541198324, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.00028149435541198324, 'nTON': 1, 'dON': 0.00028149435541198324, 'dxOFFAngle': 78.20880812976019, 'dOFF1': 0.005243721541521297, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.005243721541521297, 'nTOFF': 1, 'dOFF': 0.005243721541521297, 'SUCCESS': True}
10:08:37,546 root DEBUG 

=================== Experiment ID #9 	 Dual Point ID: 11 ===================
10:08:37,569 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.473E-07|<1.000E-06)
10:08:37,569 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:37,999 root DEBUG Side: ON	 Angle(dx0, dx): 7.59 deg 	 Angle(n, nold): 7.77 deg 	 Distance in patch: 2.006E-02 	 Total distance: 2.006E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([242], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:38,233 root DEBUG Side: ON	 Angle(dx0, dx): 7.59 deg 	 Angle(n, nold): 7.77 deg 	 Distance in patch: 2.588E-06 	 Total distance: 2.006E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([242], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:38,409 root DEBUG Side: ON	 Angle(dx0, dx): 7.59 deg 	 Angle(n, nold): 7.77 deg 	 Distance in patch: 8.044E-08 	 Total distance: 2.006E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([242], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:38,610 root DEBUG Side: ON	 Angle(dx0, dx): 7.59 deg 	 Angle(n, nold): 7.77 deg 	 Distance in patch: 1.617E-07 	 Total distance: 2.006E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([242], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:38,815 root DEBUG Side: ON	 Angle(dx0, dx): 7.59 deg 	 Angle(n, nold): 7.77 deg 	 Distance in patch: 8.044E-08 	 Total distance: 2.006E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([242], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:38,823 root DEBUG Got stuck in too many past-layer relus.
10:08:38,973 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:08:38,973 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:08:38,974 root DEBUG 

=================== Experiment ID #9 	 Dual Point ID: 12 ===================
10:08:38,999 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.174E-07|<1.000E-06)
10:08:38,999 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:39,444 root DEBUG Side: ON	 Angle(dx0, dx): 4.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.460E-01 	 Total distance: 1.460E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([87], dtype=int64), array([[False]])]] 	 class: [2 5]
10:08:39,833 root DEBUG Side: OFF	 Angle(dx0, dx): 1.73 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.459E-02 	 Total distance: 1.459E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([7], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:08:39,833 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:39,833 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -81.83 	 cIDON = [2 5], cIDOFF = [2 5]
10:08:39,834 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:39,834 root DEBUG dOFF/dON = 0.1
10:08:39,834 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.6795107210006, 'dON1': 0.14596029237631905, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.14596029237631905, 'nTON': 1, 'dON': 0.14596029237631905, 'dxOFFAngle': 79.55084474443645, 'dOFF1': 0.01458592858016571, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.01458592858016571, 'nTOFF': 1, 'dOFF': 0.01458592858016571, 'SUCCESS': False}
10:08:39,844 root DEBUG 

=================== Experiment ID #10 	 Dual Point ID: 13 ===================
10:08:39,878 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.115E-07|<1.000E-06)
10:08:39,878 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:40,294 root DEBUG Side: ON	 Angle(dx0, dx): 1.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.869E-03 	 Total distance: 8.869E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([18], dtype=int64), array([[False]])]] 	 class: [4 9]
10:08:40,691 root DEBUG Side: OFF	 Angle(dx0, dx): 9.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.149E-03 	 Total distance: 2.149E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 9], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 4]
10:08:40,692 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:40,692 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -60.99 	 cIDON = [4 9], cIDOFF = [4 9]
10:08:40,692 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:40,692 root DEBUG dOFF/dON = 0.2
10:08:40,692 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.64557554210843, 'dON1': 0.008868864704541268, 'cIDON1': array([4, 9], dtype=int64), 'dON_patch_1': 0.008868864704541268, 'nTON': 1, 'dON': 0.008868864704541268, 'dxOFFAngle': 82.40686040745172, 'dOFF1': 0.0021491648457648478, 'cIDOFF1': array([4, 9], dtype=int64), 'dOFF_patch_1': 0.0021491648457648478, 'nTOFF': 1, 'dOFF': 0.0021491648457648478, 'SUCCESS': False}
10:08:40,698 root DEBUG 

=================== Experiment ID #11 	 Dual Point ID: 14 ===================
10:08:40,736 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.451E-07|<1.000E-06)
10:08:40,736 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:41,112 root DEBUG Side: ON	 Angle(dx0, dx): 2.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.328E-02 	 Total distance: 4.328E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([42], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:08:41,571 root DEBUG Side: OFF	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.130E-02 	 Total distance: 3.130E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([94], dtype=int64), array([[False]])]] 	 class: [1 9]
10:08:41,781 root DEBUG Side: OFF	 Angle(dx0, dx): 5.77 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.152E-02 	 Total distance: 1.228E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([38], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:08:41,782 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:41,782 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 47.89 	 cIDON = [0 9], cIDOFF = [1 9]
10:08:41,782 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:41,782 root DEBUG dOFF/dON = 2.8
10:08:41,782 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.63665819583417, 'dON1': 0.04327595894118305, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.04327595894118305, 'nTON': 1, 'dON': 0.04327595894118305, 'dxOFFAngle': 88.16040691144204, 'dOFF1': 0.12281159201697683, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.12281159201697683, 'nTOFF': 1, 'dOFF': 0.12281159201697683, 'SUCCESS': True}
10:08:41,788 root DEBUG 

=================== Experiment ID #12 	 Dual Point ID: 15 ===================
10:08:41,825 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.256E-07|<1.000E-06)
10:08:41,825 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:42,281 root DEBUG Side: ON	 Angle(dx0, dx): 1.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.962E-02 	 Total distance: 1.962E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([200], dtype=int64), array([[False]])]] 	 class: [2 4]
10:08:42,850 root DEBUG Side: OFF	 Angle(dx0, dx): 0.79 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.944E-02 	 Total distance: 3.944E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([3], dtype=int64), array([[False]])]] 	 class: [2 4]
10:08:42,850 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:42,851 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 33.57 	 cIDON = [2 4], cIDOFF = [2 4]
10:08:42,851 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:42,851 root DEBUG dOFF/dON = 2.0
10:08:42,851 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.42362340073173, 'dON1': 0.01961697864421933, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.01961697864421933, 'nTON': 1, 'dON': 0.01961697864421933, 'dxOFFAngle': 86.36321134794733, 'dOFF1': 0.0394441994600858, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.0394441994600858, 'nTOFF': 1, 'dOFF': 0.0394441994600858, 'SUCCESS': True}
10:08:42,862 root DEBUG 

=================== Experiment ID #13 	 Dual Point ID: 16 ===================
10:08:42,893 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.005E-08|<1.000E-06)
10:08:42,893 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:43,274 root DEBUG Side: ON	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.742E-02 	 Total distance: 1.742E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([198], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:43,550 root DEBUG Side: ON	 Angle(dx0, dx): 17.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.081E-01 	 Total distance: 1.256E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 3], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 3]
10:08:43,941 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.235E-01 	 Total distance: 1.235E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([213], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:44,155 root DEBUG Side: OFF	 Angle(dx0, dx): 0.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.864E-02 	 Total distance: 1.422E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([232], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:44,155 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:44,156 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 6.20 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:44,156 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:44,156 root DEBUG dOFF/dON = 1.1
10:08:44,156 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.03639505415521, 'dON1': 0.12556288239259966, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.12556288239259966, 'nTON': 1, 'dON': 0.12556288239259966, 'dxOFFAngle': 82.77075811087181, 'dOFF1': 0.14216066412755496, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.14216066412755496, 'nTOFF': 1, 'dOFF': 0.14216066412755496, 'SUCCESS': True}
10:08:44,172 root DEBUG 

=================== Experiment ID #14 	 Dual Point ID: 17 ===================
10:08:44,201 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.429E-07|<1.000E-06)
10:08:44,202 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:44,722 root DEBUG Side: ON	 Angle(dx0, dx): 2.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.818E-04 	 Total distance: 4.818E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([106], dtype=int64), array([[False]])]] 	 class: [2 4]
10:08:45,47 root DEBUG Side: OFF	 Angle(dx0, dx): 3.46 deg 	 Angle(n, nold): 1.70 deg 	 Distance in patch: 2.986E-02 	 Total distance: 2.986E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([187], dtype=int64), array([[False]])]] 	 class: [2 4]
10:08:45,226 root DEBUG Side: OFF	 Angle(dx0, dx): 3.46 deg 	 Angle(n, nold): 1.70 deg 	 Distance in patch: 1.382E-07 	 Total distance: 2.986E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([187], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:08:45,391 root DEBUG Side: OFF	 Angle(dx0, dx): 3.46 deg 	 Angle(n, nold): 1.70 deg 	 Distance in patch: 6.909E-08 	 Total distance: 2.986E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([187], dtype=int64), array([[False]])]] 	 class: [2 4]
10:08:45,548 root DEBUG Side: OFF	 Angle(dx0, dx): 3.46 deg 	 Angle(n, nold): 1.70 deg 	 Distance in patch: 6.908E-08 	 Total distance: 2.986E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([187], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:08:45,551 root DEBUG Got stuck in too many past-layer relus.
10:08:45,551 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:08:45,551 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:08:45,552 root DEBUG 

=================== Experiment ID #14 	 Dual Point ID: 18 ===================
10:08:45,574 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.765E-08|<1.000E-06)
10:08:45,574 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:46,13 root DEBUG Side: ON	 Angle(dx0, dx): 0.71 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.746E-02 	 Total distance: 9.746E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([161], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:46,199 root DEBUG Side: ON	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.57 deg 	 Distance in patch: 1.728E-03 	 Total distance: 9.919E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([142], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:46,407 root DEBUG Side: ON	 Angle(dx0, dx): 0.71 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.874E-02 	 Total distance: 1.379E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[2, array([61], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:46,617 root DEBUG Side: ON	 Angle(dx0, dx): 13.67 deg 	 Angle(n, nold): 13.70 deg 	 Distance in patch: 1.273E-03 	 Total distance: 1.392E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([45], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:46,795 root DEBUG Side: ON	 Angle(dx0, dx): 13.67 deg 	 Angle(n, nold): 13.70 deg 	 Distance in patch: 1.043E-06 	 Total distance: 1.392E-01 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([45], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:47,6 root DEBUG Side: ON	 Angle(dx0, dx): 13.67 deg 	 Angle(n, nold): 13.70 deg 	 Distance in patch: 5.203E-07 	 Total distance: 1.392E-01 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([45], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:47,217 root DEBUG Side: ON	 Angle(dx0, dx): 13.67 deg 	 Angle(n, nold): 13.70 deg 	 Distance in patch: 2.608E-07 	 Total distance: 1.392E-01 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([45], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:47,423 root DEBUG Side: ON	 Angle(dx0, dx): 13.67 deg 	 Angle(n, nold): 13.70 deg 	 Distance in patch: 1.301E-07 	 Total distance: 1.392E-01 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([45], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:47,434 root DEBUG Got stuck in too many past-layer relus.
10:08:47,580 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:08:47,580 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:08:47,582 root DEBUG 

=================== Experiment ID #14 	 Dual Point ID: 19 ===================
10:08:47,621 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.617E-08|<1.000E-06)
10:08:47,621 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:48,66 root DEBUG Side: ON	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.793E-02 	 Total distance: 2.793E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([239], dtype=int64), array([[False]])]] 	 class: [0 9]
10:08:48,478 root DEBUG Side: OFF	 Angle(dx0, dx): 3.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.981E-02 	 Total distance: 3.981E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([20], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:08:48,478 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:48,478 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 17.54 	 cIDON = [0 9], cIDOFF = [1 9]
10:08:48,478 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:48,478 root DEBUG dOFF/dON = 1.4
10:08:48,478 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.85687138605414, 'dON1': 0.027932488085989315, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.027932488085989315, 'nTON': 1, 'dON': 0.027932488085989315, 'dxOFFAngle': 65.41598384794528, 'dOFF1': 0.03981152985673957, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.03981152985673957, 'nTOFF': 1, 'dOFF': 0.03981152985673957, 'SUCCESS': True}
10:08:48,484 root DEBUG 

=================== Experiment ID #15 	 Dual Point ID: 20 ===================
10:08:48,502 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.969E-08|<1.000E-06)
10:08:48,502 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:48,834 root DEBUG Side: ON	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.348E-02 	 Total distance: 2.348E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([49], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:49,72 root DEBUG Side: ON	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.435E-02 	 Total distance: 6.783E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([74], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:49,437 root DEBUG Side: OFF	 Angle(dx0, dx): 3.73 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.360E-01 	 Total distance: 1.360E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([225], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:49,437 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:49,437 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 33.43 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:49,438 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:49,438 root DEBUG dOFF/dON = 2.0
10:08:49,438 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 79.73967829107868, 'dON1': 0.06782665845518955, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.06782665845518955, 'nTON': 1, 'dON': 0.06782665845518955, 'dxOFFAngle': 84.15576490613348, 'dOFF1': 0.13595796841327507, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.13595796841327507, 'nTOFF': 1, 'dOFF': 0.13595796841327507, 'SUCCESS': True}
10:08:49,449 root DEBUG 

=================== Experiment ID #16 	 Dual Point ID: 21 ===================
10:08:49,475 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.787E-07|<1.000E-06)
10:08:49,475 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:50,42 root DEBUG Side: ON	 Angle(dx0, dx): 3.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.694E-04 	 Total distance: 9.694E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([155], dtype=int64), array([[False]])]] 	 class: [4 6]
10:08:50,435 root DEBUG Side: OFF	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.785E-02 	 Total distance: 2.785E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([66], dtype=int64), array([[False]])]] 	 class: [4 6]
10:08:50,435 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:50,436 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 93.27 	 cIDON = [4 6], cIDOFF = [4 6]
10:08:50,436 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:50,436 root DEBUG dOFF/dON = 28.7
10:08:50,436 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.71055509167729, 'dON1': 0.0009693696945573574, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.0009693696945573574, 'nTON': 1, 'dON': 0.0009693696945573574, 'dxOFFAngle': 81.76739349247644, 'dOFF1': 0.02785469437443258, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.02785469437443258, 'nTOFF': 1, 'dOFF': 0.02785469437443258, 'SUCCESS': True}
10:08:50,447 root DEBUG 

=================== Experiment ID #17 	 Dual Point ID: 22 ===================
10:08:50,483 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.039E-08|<1.000E-06)
10:08:50,483 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:50,909 root DEBUG Side: ON	 Angle(dx0, dx): 1.36 deg 	 Angle(n, nold): 1.46 deg 	 Distance in patch: 2.264E-02 	 Total distance: 2.264E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([231], dtype=int64), array([[False]])]] 	 class: [4 7]
10:08:51,226 root DEBUG Side: ON	 Angle(dx0, dx): 10.84 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.590E-02 	 Total distance: 7.854E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([29], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:08:51,582 root DEBUG Side: OFF	 Angle(dx0, dx): 3.56 deg 	 Angle(n, nold): 1.46 deg 	 Distance in patch: 1.038E-01 	 Total distance: 1.038E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([54], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:08:51,582 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:51,582 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 13.84 	 cIDON = [4 7], cIDOFF = [4 7]
10:08:51,582 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:51,582 root DEBUG dOFF/dON = 1.3
10:08:51,583 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.71596362378409, 'dON1': 0.07854107027272664, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.07854107027272664, 'nTON': 1, 'dON': 0.07854107027272664, 'dxOFFAngle': 88.55512286980746, 'dOFF1': 0.1037725647170971, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.1037725647170971, 'nTOFF': 1, 'dOFF': 0.1037725647170971, 'SUCCESS': True}
10:08:51,590 root DEBUG 

=================== Experiment ID #18 	 Dual Point ID: 23 ===================
10:08:51,617 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.068E-07|<1.000E-06)
10:08:51,618 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:52,112 root DEBUG Side: ON	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.262E-02 	 Total distance: 1.262E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([154], dtype=int64), array([[False]])]] 	 class: [3 4]
10:08:52,327 root DEBUG Side: ON	 Angle(dx0, dx): 3.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.621E-02 	 Total distance: 2.883E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([234], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:08:52,815 root DEBUG Side: OFF	 Angle(dx0, dx): 0.87 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.468E-01 	 Total distance: 1.468E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([7], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:08:52,815 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:52,815 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 67.16 	 cIDON = [3 4], cIDOFF = [3 4]
10:08:52,815 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:52,815 root DEBUG dOFF/dON = 5.1
10:08:52,815 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 75.9014945382796, 'dON1': 0.028828888493510983, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.028828888493510983, 'nTON': 1, 'dON': 0.028828888493510983, 'dxOFFAngle': 83.30145209419213, 'dOFF1': 0.14675484611195508, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.14675484611195508, 'nTOFF': 1, 'dOFF': 0.14675484611195508, 'SUCCESS': True}
10:08:52,823 root DEBUG 

=================== Experiment ID #19 	 Dual Point ID: 24 ===================
10:08:52,861 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.051E-07|<1.000E-06)
10:08:52,862 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:53,325 root DEBUG Side: ON	 Angle(dx0, dx): 2.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.560E-03 	 Total distance: 4.560E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([185], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:53,595 root DEBUG Side: ON	 Angle(dx0, dx): 14.01 deg 	 Angle(n, nold): 14.15 deg 	 Distance in patch: 3.337E-02 	 Total distance: 3.793E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([60], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:53,846 root DEBUG Side: ON	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.38 deg 	 Distance in patch: 7.959E-02 	 Total distance: 1.175E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([46], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:54,112 root DEBUG Side: ON	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.25 deg 	 Distance in patch: 5.984E-03 	 Total distance: 1.235E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([176], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:54,379 root DEBUG Side: ON	 Angle(dx0, dx): 5.98 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.392E-02 	 Total distance: 1.474E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([31], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:54,885 root DEBUG Side: OFF	 Angle(dx0, dx): 1.16 deg 	 Angle(n, nold): 14.16 deg 	 Distance in patch: 6.761E-02 	 Total distance: 6.761E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([152], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:54,885 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:54,885 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -37.11 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:54,885 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:54,885 root DEBUG dOFF/dON = 0.5
10:08:54,886 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 75.64555971907772, 'dON1': 0.1474216656576927, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.1474216656576927, 'nTON': 1, 'dON': 0.1474216656576927, 'dxOFFAngle': 74.65744111872948, 'dOFF1': 0.06761245809712012, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.06761245809712012, 'nTOFF': 1, 'dOFF': 0.06761245809712012, 'SUCCESS': False}
10:08:54,896 root DEBUG 

=================== Experiment ID #20 	 Dual Point ID: 25 ===================
10:08:54,923 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.489E-07|<1.000E-06)
10:08:54,923 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:55,421 root DEBUG Side: ON	 Angle(dx0, dx): 4.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.037E-02 	 Total distance: 4.037E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([29], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:55,908 root DEBUG Side: OFF	 Angle(dx0, dx): 4.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.221E-02 	 Total distance: 6.221E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([81], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:56,191 root DEBUG Side: OFF	 Angle(dx0, dx): 0.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.620E-01 	 Total distance: 3.242E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([52], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:56,515 root DEBUG Side: OFF	 Angle(dx0, dx): 0.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.830E-02 	 Total distance: 3.825E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[2, array([145], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:56,695 root DEBUG Side: OFF	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.39 deg 	 Distance in patch: 8.872E-02 	 Total distance: 4.712E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([114], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:56,944 root DEBUG Side: OFF	 Angle(dx0, dx): 15.42 deg 	 Angle(n, nold): 15.31 deg 	 Distance in patch: 1.228E-02 	 Total distance: 4.835E-01 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([119], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:57,117 root DEBUG Side: OFF	 Angle(dx0, dx): 15.42 deg 	 Angle(n, nold): 15.31 deg 	 Distance in patch: 2.399E-06 	 Total distance: 4.835E-01 	 Future toggles: 0 	 Past toggles: 6 	 Toggled: [[1, array([119], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:57,263 root DEBUG Side: OFF	 Angle(dx0, dx): 15.42 deg 	 Angle(n, nold): 15.31 deg 	 Distance in patch: 7.333E-08 	 Total distance: 4.835E-01 	 Future toggles: 0 	 Past toggles: 6 	 Toggled: [[1, array([119], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:57,427 root DEBUG Side: OFF	 Angle(dx0, dx): 15.42 deg 	 Angle(n, nold): 15.31 deg 	 Distance in patch: 2.998E-07 	 Total distance: 4.835E-01 	 Future toggles: 0 	 Past toggles: 6 	 Toggled: [[1, array([119], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:57,625 root DEBUG Side: OFF	 Angle(dx0, dx): 15.42 deg 	 Angle(n, nold): 15.31 deg 	 Distance in patch: 7.333E-08 	 Total distance: 4.835E-01 	 Future toggles: 0 	 Past toggles: 6 	 Toggled: [[1, array([119], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:57,652 root DEBUG Got stuck in too many past-layer relus.
10:08:57,652 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:08:57,653 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:08:57,654 root DEBUG 

=================== Experiment ID #20 	 Dual Point ID: 26 ===================
10:08:57,694 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.565E-07|<1.000E-06)
10:08:57,694 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:58,160 root DEBUG Side: ON	 Angle(dx0, dx): 13.97 deg 	 Angle(n, nold): 9.98 deg 	 Distance in patch: 1.784E-03 	 Total distance: 1.784E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([251], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:58,327 root DEBUG Side: ON	 Angle(dx0, dx): 13.97 deg 	 Angle(n, nold): 9.98 deg 	 Distance in patch: 2.891E-07 	 Total distance: 1.785E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([251], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:58,481 root DEBUG Side: ON	 Angle(dx0, dx): 13.97 deg 	 Angle(n, nold): 9.98 deg 	 Distance in patch: 7.152E-08 	 Total distance: 1.785E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([251], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:58,642 root DEBUG Side: ON	 Angle(dx0, dx): 13.97 deg 	 Angle(n, nold): 9.98 deg 	 Distance in patch: 1.446E-07 	 Total distance: 1.785E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([251], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:58,647 root DEBUG Got stuck in too many past-layer relus.
10:08:58,835 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:08:58,837 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:08:58,837 root DEBUG 

=================== Experiment ID #20 	 Dual Point ID: 27 ===================
10:08:58,857 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.185E-07|<1.000E-06)
10:08:58,857 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:59,314 root DEBUG Side: ON	 Angle(dx0, dx): 12.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.967E-02 	 Total distance: 4.967E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([45], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:59,717 root DEBUG Side: OFF	 Angle(dx0, dx): 5.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.189E-03 	 Total distance: 4.189E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([38], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:59,895 root DEBUG Side: OFF	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.742E-03 	 Total distance: 1.093E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([63], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:59,896 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:59,896 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -63.92 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:59,896 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:59,896 root DEBUG dOFF/dON = 0.2
10:08:59,896 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.98393108210101, 'dON1': 0.04966798001850055, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.04966798001850055, 'nTON': 1, 'dON': 0.04966798001850055, 'dxOFFAngle': 89.47115075137567, 'dOFF1': 0.01093131563145256, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.01093131563145256, 'nTOFF': 1, 'dOFF': 0.01093131563145256, 'SUCCESS': False}
10:08:59,904 root DEBUG 

=================== Experiment ID #21 	 Dual Point ID: 28 ===================
10:08:59,947 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.028E-07|<1.000E-06)
10:08:59,947 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:00,312 root DEBUG Side: ON	 Angle(dx0, dx): 7.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.825E-06 	 Total distance: 1.825E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 9]
10:09:00,775 root DEBUG Side: OFF	 Angle(dx0, dx): 2.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.313E-02 	 Total distance: 3.313E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([58], dtype=int64), array([[False]])]] 	 class: [1 9]
10:09:00,776 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:00,776 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.99 	 cIDON = [0 9], cIDOFF = [1 9]
10:09:00,776 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:00,776 root DEBUG dOFF/dON = 18158.0
10:09:00,776 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.14588053878386, 'dON1': 1.8245851399224126e-06, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 1.8245851399224126e-06, 'nTON': 1, 'dON': 1.8245851399224126e-06, 'dxOFFAngle': 89.97068782224021, 'dOFF1': 0.0331307513960096, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.0331307513960096, 'nTOFF': 1, 'dOFF': 0.0331307513960096, 'SUCCESS': True}
10:09:00,783 root DEBUG 

=================== Experiment ID #22 	 Dual Point ID: 29 ===================
10:09:00,813 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.588E-07|<1.000E-06)
10:09:00,814 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:01,225 root DEBUG Side: ON	 Angle(dx0, dx): 1.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.841E-02 	 Total distance: 2.841E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([63], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:01,632 root DEBUG Side: OFF	 Angle(dx0, dx): 1.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.755E-02 	 Total distance: 2.755E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([188], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:01,871 root DEBUG Side: OFF	 Angle(dx0, dx): 1.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.580E-02 	 Total distance: 7.335E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([69], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:01,871 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:01,871 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 44.16 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:01,872 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:01,872 root DEBUG dOFF/dON = 2.6
10:09:01,872 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.46903515900607, 'dON1': 0.028408862497720243, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.028408862497720243, 'nTON': 1, 'dON': 0.028408862497720243, 'dxOFFAngle': 80.70715211706012, 'dOFF1': 0.0733503210165346, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.0733503210165346, 'nTOFF': 1, 'dOFF': 0.0733503210165346, 'SUCCESS': True}
10:09:01,883 root DEBUG 

=================== Experiment ID #23 	 Dual Point ID: 30 ===================
10:09:01,916 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.282E-07|<1.000E-06)
10:09:01,916 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:02,364 root DEBUG Side: ON	 Angle(dx0, dx): 3.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.076E-04 	 Total distance: 9.076E-04 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([205], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:09:02,580 root DEBUG Side: ON	 Angle(dx0, dx): 5.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.986E-03 	 Total distance: 5.893E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([29], dtype=int64), array([[False]])]] 	 class: [4 8]
10:09:02,892 root DEBUG Side: OFF	 Angle(dx0, dx): 2.92 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.089E-02 	 Total distance: 5.089E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([225], dtype=int64), array([[False]])]] 	 class: [4 8]
10:09:03,132 root DEBUG Side: OFF	 Angle(dx0, dx): 2.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.130E-02 	 Total distance: 9.219E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([12], dtype=int64), array([[False]])]] 	 class: [4 8]
10:09:03,132 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:03,132 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 87.98 	 cIDON = [4 8], cIDOFF = [4 8]
10:09:03,132 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:03,132 root DEBUG dOFF/dON = 15.6
10:09:03,132 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 74.7009772747508, 'dON1': 0.0058934195891322564, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.0058934195891322564, 'nTON': 1, 'dON': 0.0058934195891322564, 'dxOFFAngle': 74.6457069090847, 'dOFF1': 0.09219233296130364, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.09219233296130364, 'nTOFF': 1, 'dOFF': 0.09219233296130364, 'SUCCESS': True}
10:09:03,143 root DEBUG 

=================== Experiment ID #24 	 Dual Point ID: 31 ===================
10:09:03,171 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.898E-07|<1.000E-06)
10:09:03,171 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:03,648 root DEBUG Side: ON	 Angle(dx0, dx): 1.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.467E-01 	 Total distance: 1.467E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([89], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:04,124 root DEBUG Side: OFF	 Angle(dx0, dx): 2.79 deg 	 Angle(n, nold): 2.81 deg 	 Distance in patch: 4.300E-02 	 Total distance: 4.300E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([248], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:04,339 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.303E-01 	 Total distance: 2.733E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([77], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:04,340 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:04,340 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 30.14 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:04,340 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:04,340 root DEBUG dOFF/dON = 1.9
10:09:04,340 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.49726674503641, 'dON1': 0.14672058903217505, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.14672058903217505, 'nTON': 1, 'dON': 0.14672058903217505, 'dxOFFAngle': 88.69058934752861, 'dOFF1': 0.2733058739174113, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.2733058739174113, 'nTOFF': 1, 'dOFF': 0.2733058739174113, 'SUCCESS': True}
10:09:04,353 root DEBUG 

=================== Experiment ID #25 	 Dual Point ID: 32 ===================
10:09:04,384 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.195E-07|<1.000E-06)
10:09:04,385 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:04,807 root DEBUG Side: ON	 Angle(dx0, dx): 26.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.954E-01 	 Total distance: 1.954E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([6, 8], dtype=int64), array([[0.],
       [1.]])]] 	 class: [5 8]
10:09:05,168 root DEBUG Side: OFF	 Angle(dx0, dx): 1.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.546E-02 	 Total distance: 3.546E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([84], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:09:05,168 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:05,168 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -69.29 	 cIDON = [5 6], cIDOFF = [5 6]
10:09:05,168 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:05,168 root DEBUG dOFF/dON = 0.2
10:09:05,168 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 55.1808886920062, 'dON1': 0.19543324044294383, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.19543324044294383, 'nTON': 1, 'dON': 0.19543324044294383, 'dxOFFAngle': 68.42041750561141, 'dOFF1': 0.0354567872788298, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.0354567872788298, 'nTOFF': 1, 'dOFF': 0.0354567872788298, 'SUCCESS': False}
10:09:05,174 root DEBUG 

=================== Experiment ID #26 	 Dual Point ID: 33 ===================
10:09:05,212 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.995E-08|<1.000E-06)
10:09:05,212 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:05,645 root DEBUG Side: ON	 Angle(dx0, dx): 2.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.642E-02 	 Total distance: 4.642E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([39], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:06,1 root DEBUG Side: OFF	 Angle(dx0, dx): 0.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.722E-02 	 Total distance: 4.722E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([0], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:06,2 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:06,2 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 0.86 	 cIDON = [2 6], cIDOFF = [2 6]
10:09:06,2 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:06,2 root DEBUG dOFF/dON = 1.0
10:09:06,2 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.30171714046769, 'dON1': 0.04641721520414627, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.04641721520414627, 'nTON': 1, 'dON': 0.04641721520414627, 'dxOFFAngle': 87.78944390211174, 'dOFF1': 0.04721785473831033, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.04721785473831033, 'nTOFF': 1, 'dOFF': 0.04721785473831033, 'SUCCESS': True}
10:09:06,11 root DEBUG 

=================== Experiment ID #27 	 Dual Point ID: 34 ===================
10:09:06,31 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.393E-07|<1.000E-06)
10:09:06,31 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:06,526 root DEBUG Side: ON	 Angle(dx0, dx): 10.43 deg 	 Angle(n, nold): 10.77 deg 	 Distance in patch: 6.489E-02 	 Total distance: 6.489E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([212], dtype=int64), array([[False]])]] 	 class: [1 8]
10:09:06,655 root DEBUG Side: ON	 Angle(dx0, dx): 10.43 deg 	 Angle(n, nold): 10.77 deg 	 Distance in patch: 2.053E-06 	 Total distance: 6.489E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([212], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:09:06,825 root DEBUG Side: ON	 Angle(dx0, dx): 10.43 deg 	 Angle(n, nold): 10.77 deg 	 Distance in patch: 8.457E-08 	 Total distance: 6.489E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([212], dtype=int64), array([[False]])]] 	 class: [1 8]
10:09:07,20 root DEBUG Side: ON	 Angle(dx0, dx): 10.43 deg 	 Angle(n, nold): 10.77 deg 	 Distance in patch: 3.422E-07 	 Total distance: 6.489E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([212], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:09:07,191 root DEBUG Side: ON	 Angle(dx0, dx): 10.43 deg 	 Angle(n, nold): 10.77 deg 	 Distance in patch: 8.457E-08 	 Total distance: 6.489E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([212], dtype=int64), array([[False]])]] 	 class: [1 8]
10:09:07,202 root DEBUG Got stuck in too many past-layer relus.
10:09:07,329 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:09:07,330 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:09:07,332 root DEBUG 

=================== Experiment ID #27 	 Dual Point ID: 35 ===================
10:09:07,362 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.740E-07|<1.000E-06)
10:09:07,363 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:07,736 root DEBUG Side: ON	 Angle(dx0, dx): 1.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.388E-03 	 Total distance: 2.388E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([167], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:08,16 root DEBUG Side: ON	 Angle(dx0, dx): 20.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.020E-01 	 Total distance: 1.044E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([17], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:08,488 root DEBUG Side: OFF	 Angle(dx0, dx): 0.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.809E-02 	 Total distance: 5.809E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([8], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:08,489 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:08,489 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -28.51 	 cIDON = [2 4], cIDOFF = [2 4]
10:09:08,489 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:08,489 root DEBUG dOFF/dON = 0.6
10:09:08,489 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 71.60156907359274, 'dON1': 0.10442980711794782, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.10442980711794782, 'nTON': 1, 'dON': 0.10442980711794782, 'dxOFFAngle': 82.25693408377492, 'dOFF1': 0.058094251269021235, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.058094251269021235, 'nTOFF': 1, 'dOFF': 0.058094251269021235, 'SUCCESS': False}
10:09:08,501 root DEBUG 

=================== Experiment ID #28 	 Dual Point ID: 36 ===================
10:09:08,532 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.752E-07|<1.000E-06)
10:09:08,532 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:08,944 root DEBUG Side: ON	 Angle(dx0, dx): 1.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.578E-03 	 Total distance: 7.578E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([171], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:09,219 root DEBUG Side: ON	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.046E-02 	 Total distance: 5.804E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([192], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:09,479 root DEBUG Side: ON	 Angle(dx0, dx): 8.85 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.982E-02 	 Total distance: 7.786E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([37], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:09,927 root DEBUG Side: OFF	 Angle(dx0, dx): 2.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.228E-02 	 Total distance: 1.228E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([17], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:10,165 root DEBUG Side: OFF	 Angle(dx0, dx): 6.85 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.993E-02 	 Total distance: 6.221E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([119], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:10,166 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:10,166 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -11.18 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:10,166 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:10,166 root DEBUG dOFF/dON = 0.8
10:09:10,166 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 65.84057945950025, 'dON1': 0.07786349491085322, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.07786349491085322, 'nTON': 1, 'dON': 0.07786349491085322, 'dxOFFAngle': 58.21765660213557, 'dOFF1': 0.06220832760705359, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.06220832760705359, 'nTOFF': 1, 'dOFF': 0.06220832760705359, 'SUCCESS': False}
10:09:10,178 root DEBUG 

=================== Experiment ID #29 	 Dual Point ID: 37 ===================
10:09:10,203 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.790E-07|<1.000E-06)
10:09:10,203 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:10,634 root DEBUG Side: ON	 Angle(dx0, dx): 2.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.171E-02 	 Total distance: 1.171E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([56], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:11,69 root DEBUG Side: OFF	 Angle(dx0, dx): 1.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.810E-03 	 Total distance: 5.810E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([198], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:11,340 root DEBUG Side: OFF	 Angle(dx0, dx): 2.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.014E-01 	 Total distance: 1.072E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([35], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:11,537 root DEBUG Side: OFF	 Angle(dx0, dx): 3.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.175E-03 	 Total distance: 1.154E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([27], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:11,537 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:11,538 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 81.58 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:11,538 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:11,538 root DEBUG dOFF/dON = 9.9
10:09:11,538 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.66749114640825, 'dON1': 0.011706025224352946, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.011706025224352946, 'nTON': 1, 'dON': 0.011706025224352946, 'dxOFFAngle': 88.40604896845063, 'dOFF1': 0.11540200652806065, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.11540200652806065, 'nTOFF': 1, 'dOFF': 0.11540200652806065, 'SUCCESS': True}
10:09:11,549 root DEBUG 

=================== Experiment ID #30 	 Dual Point ID: 38 ===================
10:09:11,586 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.042E-07|<1.000E-06)
10:09:11,586 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:12,205 root DEBUG Side: ON	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.494E-02 	 Total distance: 1.494E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([82], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:12,462 root DEBUG Side: ON	 Angle(dx0, dx): 9.06 deg 	 Angle(n, nold): 10.67 deg 	 Distance in patch: 3.939E-02 	 Total distance: 5.434E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([212], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:12,775 root DEBUG Side: ON	 Angle(dx0, dx): 3.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.241E-02 	 Total distance: 7.675E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([200], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:13,119 root DEBUG Side: OFF	 Angle(dx0, dx): 6.45 deg 	 Angle(n, nold): 10.67 deg 	 Distance in patch: 3.796E-02 	 Total distance: 3.796E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([10], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:13,119 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:13,119 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -33.82 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:13,119 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:13,119 root DEBUG dOFF/dON = 0.5
10:09:13,120 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 79.00242911915029, 'dON1': 0.07674666183599642, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.07674666183599642, 'nTON': 1, 'dON': 0.07674666183599642, 'dxOFFAngle': 79.33498966817372, 'dOFF1': 0.03795816286595299, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.03795816286595299, 'nTOFF': 1, 'dOFF': 0.03795816286595299, 'SUCCESS': False}
10:09:13,126 root DEBUG 

=================== Experiment ID #31 	 Dual Point ID: 39 ===================
10:09:13,163 root DEBUG CONTROL: 	 WARNING! 	 (target neuron output > tolerance: |1.242E-06|>1.000E-06)
10:09:13,163 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:13,163 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:13,164 root DEBUG 

=================== Experiment ID #31 	 Dual Point ID: 40 ===================
10:09:13,201 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.410E-07|<1.000E-06)
10:09:13,202 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:13,762 root DEBUG Side: ON	 Angle(dx0, dx): 4.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.630E-02 	 Total distance: 3.630E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([57], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:14,144 root DEBUG Side: OFF	 Angle(dx0, dx): 2.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.325E-03 	 Total distance: 5.325E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([67], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:14,415 root DEBUG Side: OFF	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.145E-01 	 Total distance: 1.198E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([185], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:14,753 root DEBUG Side: OFF	 Angle(dx0, dx): 2.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.508E-02 	 Total distance: 1.649E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([229], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:14,754 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:14,755 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 63.91 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:14,755 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:14,755 root DEBUG dOFF/dON = 4.5
10:09:14,755 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.50123899877234, 'dON1': 0.03630446286915612, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.03630446286915612, 'nTON': 1, 'dON': 0.03630446286915612, 'dxOFFAngle': 85.78353835561659, 'dOFF1': 0.1648983444012565, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.1648983444012565, 'nTOFF': 1, 'dOFF': 0.1648983444012565, 'SUCCESS': True}
10:09:14,765 root DEBUG 

=================== Experiment ID #32 	 Dual Point ID: 41 ===================
10:09:14,795 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.973E-07|<1.000E-06)
10:09:14,796 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:15,233 root DEBUG Side: ON	 Angle(dx0, dx): 1.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.858E-02 	 Total distance: 2.858E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([81], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:15,647 root DEBUG Side: OFF	 Angle(dx0, dx): 2.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.031E-01 	 Total distance: 1.031E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([121], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:15,647 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:15,648 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 56.58 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:15,648 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:15,648 root DEBUG dOFF/dON = 3.6
10:09:15,648 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.70928094042154, 'dON1': 0.02858281242639273, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.02858281242639273, 'nTON': 1, 'dON': 0.02858281242639273, 'dxOFFAngle': 84.77646647601392, 'dOFF1': 0.10308705522901399, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.10308705522901399, 'nTOFF': 1, 'dOFF': 0.10308705522901399, 'SUCCESS': True}
10:09:15,661 root DEBUG 

=================== Experiment ID #33 	 Dual Point ID: 42 ===================
10:09:15,681 root DEBUG CONTROL: 	 WARNING! 	 (target neuron output > tolerance: |1.148E-06|>1.000E-06)
10:09:15,682 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:15,682 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:15,682 root DEBUG 

=================== Experiment ID #33 	 Dual Point ID: 43 ===================
10:09:15,724 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.488E-07|<1.000E-06)
10:09:15,724 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:16,156 root DEBUG Side: ON	 Angle(dx0, dx): 1.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.450E-01 	 Total distance: 1.450E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([200], dtype=int64), array([[False]])]] 	 class: [6 9]
10:09:16,564 root DEBUG Side: OFF	 Angle(dx0, dx): 2.73 deg 	 Angle(n, nold): 2.58 deg 	 Distance in patch: 2.314E-02 	 Total distance: 2.314E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([76], dtype=int64), array([[False]])]] 	 class: [6 9]
10:09:16,773 root DEBUG Side: OFF	 Angle(dx0, dx): 3.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.862E-02 	 Total distance: 9.176E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([50], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:09:17,97 root DEBUG Side: OFF	 Angle(dx0, dx): 1.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.070E-02 	 Total distance: 1.825E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([21], dtype=int64), array([[False]])]] 	 class: [6 9]
10:09:17,97 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:17,97 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 11.45 	 cIDON = [6 9], cIDOFF = [6 9]
10:09:17,98 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:17,98 root DEBUG dOFF/dON = 1.3
10:09:17,98 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.69486178510357, 'dON1': 0.1449814063322586, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.1449814063322586, 'nTON': 1, 'dON': 0.1449814063322586, 'dxOFFAngle': 78.78855626144814, 'dOFF1': 0.18246597822280142, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.18246597822280142, 'nTOFF': 1, 'dOFF': 0.18246597822280142, 'SUCCESS': True}
10:09:17,114 root DEBUG 

=================== Experiment ID #34 	 Dual Point ID: 44 ===================
10:09:17,152 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.964E-07|<1.000E-06)
10:09:17,153 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:17,683 root DEBUG Side: ON	 Angle(dx0, dx): 2.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.491E-02 	 Total distance: 7.491E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([148], dtype=int64), array([[False]])]] 	 class: [0 2]
10:09:18,110 root DEBUG Side: OFF	 Angle(dx0, dx): 4.71 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.841E-01 	 Total distance: 1.841E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([47], dtype=int64), array([[False]])]] 	 class: [1 2]
10:09:18,380 root DEBUG Side: OFF	 Angle(dx0, dx): 10.27 deg 	 Angle(n, nold): 10.04 deg 	 Distance in patch: 4.660E-02 	 Total distance: 2.307E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([211], dtype=int64), array([[False]])]] 	 class: [1 2]
10:09:18,638 root DEBUG Side: OFF	 Angle(dx0, dx): 1.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.781E-02 	 Total distance: 2.885E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[2, array([179], dtype=int64), array([[False]])]] 	 class: [1 2]
10:09:18,898 root DEBUG Side: OFF	 Angle(dx0, dx): 3.85 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.414E-02 	 Total distance: 3.026E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([26], dtype=int64), array([[ True]])]] 	 class: [1 2]
10:09:18,898 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:18,898 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 60.32 	 cIDON = [0 2], cIDOFF = [1 2]
10:09:18,898 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:18,898 root DEBUG dOFF/dON = 4.0
10:09:18,898 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.58895789137007, 'dON1': 0.07490680007186315, 'cIDON1': array([0, 2], dtype=int64), 'dON_patch_1': 0.07490680007186315, 'nTON': 1, 'dON': 0.07490680007186315, 'dxOFFAngle': 88.31980818744952, 'dOFF1': 0.3026258776149641, 'cIDOFF1': array([1, 2], dtype=int64), 'dOFF_patch_1': 0.3026258776149641, 'nTOFF': 1, 'dOFF': 0.3026258776149641, 'SUCCESS': True}
10:09:18,909 root DEBUG 

=================== Experiment ID #35 	 Dual Point ID: 45 ===================
10:09:18,943 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.038E-07|<1.000E-06)
10:09:18,944 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:19,453 root DEBUG Side: ON	 Angle(dx0, dx): 1.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.516E-02 	 Total distance: 7.516E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([220], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:09:19,877 root DEBUG Side: OFF	 Angle(dx0, dx): 0.97 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.267E-03 	 Total distance: 4.267E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([146], dtype=int64), array([[False]])]] 	 class: [0 8]
10:09:20,169 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.676E-03 	 Total distance: 1.094E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([128], dtype=int64), array([[False]])]] 	 class: [0 8]
10:09:20,169 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:20,169 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -74.58 	 cIDON = [1 8], cIDOFF = [0 8]
10:09:20,170 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:20,170 root DEBUG dOFF/dON = 0.1
10:09:20,170 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.20267157621595, 'dON1': 0.07515647549913164, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 0.07515647549913164, 'nTON': 1, 'dON': 0.07515647549913164, 'dxOFFAngle': 86.59812243299778, 'dOFF1': 0.010943084051247741, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.010943084051247741, 'nTOFF': 1, 'dOFF': 0.010943084051247741, 'SUCCESS': False}
10:09:20,177 root DEBUG 

=================== Experiment ID #36 	 Dual Point ID: 46 ===================
10:09:20,212 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.396E-07|<1.000E-06)
10:09:20,212 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:20,644 root DEBUG Side: ON	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.34 deg 	 Distance in patch: 5.344E-02 	 Total distance: 5.344E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([104], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:09:20,884 root DEBUG Side: ON	 Angle(dx0, dx): 1.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.799E-01 	 Total distance: 2.333E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([181], dtype=int64), array([[False]])]] 	 class: [3 8]
10:09:21,164 root DEBUG Side: ON	 Angle(dx0, dx): 10.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.512E-02 	 Total distance: 3.184E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 8], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 3]
10:09:21,550 root DEBUG Side: OFF	 Angle(dx0, dx): 1.56 deg 	 Angle(n, nold): 0.34 deg 	 Distance in patch: 7.623E-02 	 Total distance: 7.623E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([47], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:09:21,551 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:21,551 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -61.37 	 cIDON = [3 8], cIDOFF = [3 8]
10:09:21,551 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:21,551 root DEBUG dOFF/dON = 0.2
10:09:21,551 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.43851165750652, 'dON1': 0.31843762758570404, 'cIDON1': array([3, 8], dtype=int64), 'dON_patch_1': 0.31843762758570404, 'nTON': 1, 'dON': 0.31843762758570404, 'dxOFFAngle': 88.39210032862343, 'dOFF1': 0.0762323023152427, 'cIDOFF1': array([3, 8], dtype=int64), 'dOFF_patch_1': 0.0762323023152427, 'nTOFF': 1, 'dOFF': 0.0762323023152427, 'SUCCESS': False}
10:09:21,568 root DEBUG 

=================== Experiment ID #37 	 Dual Point ID: 47 ===================
10:09:21,589 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.200E-07|<1.000E-06)
10:09:21,590 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:22,81 root DEBUG Side: ON	 Angle(dx0, dx): 1.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.828E-03 	 Total distance: 8.828E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([210], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:09:22,258 root DEBUG Side: ON	 Angle(dx0, dx): 1.83 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.586E-02 	 Total distance: 2.469E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([35], dtype=int64), array([[False]])]] 	 class: [2 3]
10:09:22,679 root DEBUG Side: OFF	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.55 deg 	 Distance in patch: 1.047E-02 	 Total distance: 1.047E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([123], dtype=int64), array([[False]])]] 	 class: [2 3]
10:09:22,959 root DEBUG Side: OFF	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.851E-02 	 Total distance: 2.898E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([240], dtype=int64), array([[False]])]] 	 class: [2 3]
10:09:23,186 root DEBUG Side: OFF	 Angle(dx0, dx): 1.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.027E-02 	 Total distance: 3.925E-02 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[2, array([232], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:09:23,443 root DEBUG Side: OFF	 Angle(dx0, dx): 5.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.515E-03 	 Total distance: 4.376E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([20], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:09:23,443 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:23,443 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 27.87 	 cIDON = [2 3], cIDOFF = [2 3]
10:09:23,444 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:23,444 root DEBUG dOFF/dON = 1.8
10:09:23,444 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 77.90555779423879, 'dON1': 0.024685012507824317, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.024685012507824317, 'nTON': 1, 'dON': 0.024685012507824317, 'dxOFFAngle': 88.68371515100239, 'dOFF1': 0.04376159685397115, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.04376159685397115, 'nTOFF': 1, 'dOFF': 0.04376159685397115, 'SUCCESS': True}
10:09:23,453 root DEBUG 

=================== Experiment ID #38 	 Dual Point ID: 48 ===================
10:09:23,486 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.885E-07|<1.000E-06)
10:09:23,487 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:23,911 root DEBUG Side: ON	 Angle(dx0, dx): 2.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.767E-02 	 Total distance: 4.767E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([213], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:24,258 root DEBUG Side: ON	 Angle(dx0, dx): 7.54 deg 	 Angle(n, nold): 10.02 deg 	 Distance in patch: 5.578E-02 	 Total distance: 1.035E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([212], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:24,520 root DEBUG Side: ON	 Angle(dx0, dx): 3.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.261E-03 	 Total distance: 1.047E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[2, array([125], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:24,819 root DEBUG Side: ON	 Angle(dx0, dx): 2.98 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.785E-02 	 Total distance: 1.226E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[2, array([246], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:25,99 root DEBUG Side: ON	 Angle(dx0, dx): 5.89 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.083E-02 	 Total distance: 1.334E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([8], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:25,516 root DEBUG Side: OFF	 Angle(dx0, dx): 0.90 deg 	 Angle(n, nold): 10.02 deg 	 Distance in patch: 4.956E-02 	 Total distance: 4.956E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([89], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:25,516 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:25,516 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -45.82 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:25,517 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:25,517 root DEBUG dOFF/dON = 0.4
10:09:25,517 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 67.77499880150421, 'dON1': 0.13338396432507604, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.13338396432507604, 'nTON': 1, 'dON': 0.13338396432507604, 'dxOFFAngle': 70.87184575839055, 'dOFF1': 0.04956345242332551, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.04956345242332551, 'nTOFF': 1, 'dOFF': 0.04956345242332551, 'SUCCESS': False}
10:09:25,527 root DEBUG 

=================== Experiment ID #39 	 Dual Point ID: 49 ===================
10:09:25,561 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.835E-07|<1.000E-06)
10:09:25,561 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:26,41 root DEBUG Side: ON	 Angle(dx0, dx): 1.85 deg 	 Angle(n, nold): 1.05 deg 	 Distance in patch: 8.062E-03 	 Total distance: 8.062E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([213], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:26,252 root DEBUG Side: ON	 Angle(dx0, dx): 10.37 deg 	 Angle(n, nold): 11.77 deg 	 Distance in patch: 2.701E-02 	 Total distance: 3.507E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([246], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:26,463 root DEBUG Side: ON	 Angle(dx0, dx): 10.37 deg 	 Angle(n, nold): 11.77 deg 	 Distance in patch: 1.090E-06 	 Total distance: 3.507E-02 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([246], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:26,651 root DEBUG Side: ON	 Angle(dx0, dx): 10.37 deg 	 Angle(n, nold): 11.77 deg 	 Distance in patch: 6.743E-08 	 Total distance: 3.507E-02 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([246], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:26,841 root DEBUG Side: ON	 Angle(dx0, dx): 10.37 deg 	 Angle(n, nold): 11.77 deg 	 Distance in patch: 1.363E-07 	 Total distance: 3.507E-02 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([246], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:27,47 root DEBUG Side: ON	 Angle(dx0, dx): 10.37 deg 	 Angle(n, nold): 11.77 deg 	 Distance in patch: 6.743E-08 	 Total distance: 3.507E-02 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([246], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:27,56 root DEBUG Got stuck in too many past-layer relus.
10:09:27,228 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:09:27,228 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:09:27,229 root DEBUG 

=================== Experiment ID #39 	 Dual Point ID: 50 ===================
10:09:27,267 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.949E-08|<1.000E-06)
10:09:27,267 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:27,709 root DEBUG Side: ON	 Angle(dx0, dx): 1.07 deg 	 Angle(n, nold): 1.09 deg 	 Distance in patch: 4.465E-02 	 Total distance: 4.465E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([219], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:27,971 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.158E-01 	 Total distance: 1.605E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([208], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:28,269 root DEBUG Side: ON	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.123E-01 	 Total distance: 2.727E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[2, array([183], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:28,538 root DEBUG Side: ON	 Angle(dx0, dx): 4.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.582E-02 	 Total distance: 3.186E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([39], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:28,955 root DEBUG Side: OFF	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 1.20 deg 	 Distance in patch: 2.083E-02 	 Total distance: 2.083E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([156], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:29,268 root DEBUG Side: OFF	 Angle(dx0, dx): 1.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.853E-02 	 Total distance: 4.936E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([146], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:29,553 root DEBUG Side: OFF	 Angle(dx0, dx): 7.14 deg 	 Angle(n, nold): 7.18 deg 	 Distance in patch: 2.068E-01 	 Total distance: 2.561E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([180], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:29,731 root DEBUG Side: OFF	 Angle(dx0, dx): 7.14 deg 	 Angle(n, nold): 7.18 deg 	 Distance in patch: 3.097E-07 	 Total distance: 2.561E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([180], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:29,939 root DEBUG Side: OFF	 Angle(dx0, dx): 7.14 deg 	 Angle(n, nold): 7.18 deg 	 Distance in patch: 7.715E-08 	 Total distance: 2.561E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([180], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:30,126 root DEBUG Side: OFF	 Angle(dx0, dx): 7.14 deg 	 Angle(n, nold): 7.18 deg 	 Distance in patch: 3.097E-07 	 Total distance: 2.561E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([180], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:30,132 root DEBUG Got stuck in too many past-layer relus.
10:09:30,132 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:09:30,132 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:09:30,133 root DEBUG 

=================== Experiment ID #39 	 Dual Point ID: 51 ===================
10:09:30,169 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.945E-08|<1.000E-06)
10:09:30,169 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:30,633 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.269E-02 	 Total distance: 1.269E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([169], dtype=int64), array([[ True]])]] 	 class: [0 4]
10:09:31,53 root DEBUG Side: OFF	 Angle(dx0, dx): 12.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.385E-05 	 Total distance: 2.385E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 4]
10:09:31,53 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:31,54 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.62 	 cIDON = [0 4], cIDOFF = [1 4]
10:09:31,54 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:31,54 root DEBUG dOFF/dON = 0.0
10:09:31,54 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.66585017779832, 'dON1': 0.012690029972414144, 'cIDON1': array([0, 4], dtype=int64), 'dON_patch_1': 0.012690029972414144, 'nTON': 1, 'dON': 0.012690029972414144, 'dxOFFAngle': 73.43591182811083, 'dOFF1': 2.385258712841448e-05, 'cIDOFF1': array([1, 4], dtype=int64), 'dOFF_patch_1': 2.385258712841448e-05, 'nTOFF': 1, 'dOFF': 2.385258712841448e-05, 'SUCCESS': False}
10:09:31,64 root DEBUG 

=================== Experiment ID #40 	 Dual Point ID: 52 ===================
10:09:31,100 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.171E-08|<1.000E-06)
10:09:31,100 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:31,555 root DEBUG Side: ON	 Angle(dx0, dx): 2.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.263E-02 	 Total distance: 2.263E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([114], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:31,915 root DEBUG Side: OFF	 Angle(dx0, dx): 2.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.192E-02 	 Total distance: 1.192E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([7], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:31,915 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:31,915 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -31.00 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:31,915 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:31,916 root DEBUG dOFF/dON = 0.5
10:09:31,916 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 61.81183682917131, 'dON1': 0.022629770207940714, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.022629770207940714, 'nTON': 1, 'dON': 0.022629770207940714, 'dxOFFAngle': 68.5922157752191, 'dOFF1': 0.01191969023568543, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.01191969023568543, 'nTOFF': 1, 'dOFF': 0.01191969023568543, 'SUCCESS': False}
10:09:31,925 root DEBUG 

=================== Experiment ID #41 	 Dual Point ID: 53 ===================
10:09:31,962 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.109E-07|<1.000E-06)
10:09:31,962 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:32,383 root DEBUG Side: ON	 Angle(dx0, dx): 4.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.048E-02 	 Total distance: 5.048E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([51], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:32,796 root DEBUG Side: OFF	 Angle(dx0, dx): 1.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.240E-02 	 Total distance: 6.240E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([79], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:33,34 root DEBUG Side: OFF	 Angle(dx0, dx): 6.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.350E-02 	 Total distance: 8.590E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([78], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:33,34 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:33,34 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 25.97 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:33,34 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:33,34 root DEBUG dOFF/dON = 1.7
10:09:33,34 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 70.76179917657477, 'dON1': 0.05048270662713655, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.05048270662713655, 'nTON': 1, 'dON': 0.05048270662713655, 'dxOFFAngle': 69.74194123553039, 'dOFF1': 0.0859025479168311, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.0859025479168311, 'nTOFF': 1, 'dOFF': 0.0859025479168311, 'SUCCESS': True}
10:09:33,41 root DEBUG 

=================== Experiment ID #42 	 Dual Point ID: 54 ===================
10:09:33,67 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.498E-07|<1.000E-06)
10:09:33,67 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:33,541 root DEBUG Side: ON	 Angle(dx0, dx): 11.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.521E-02 	 Total distance: 3.521E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([0], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:33,954 root DEBUG Side: OFF	 Angle(dx0, dx): 12.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.687E-02 	 Total distance: 9.687E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([7], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:33,954 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:33,955 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 46.69 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:33,955 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:33,955 root DEBUG dOFF/dON = 2.8
10:09:33,955 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.16598237820412, 'dON1': 0.035207334766619656, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.035207334766619656, 'nTON': 1, 'dON': 0.035207334766619656, 'dxOFFAngle': 76.2012959955494, 'dOFF1': 0.09687494303572287, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.09687494303572287, 'nTOFF': 1, 'dOFF': 0.09687494303572287, 'SUCCESS': True}
10:09:33,965 root DEBUG 

=================== Experiment ID #43 	 Dual Point ID: 55 ===================
10:09:33,989 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.782E-07|<1.000E-06)
10:09:33,989 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:34,426 root DEBUG Side: ON	 Angle(dx0, dx): 3.87 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.611E-02 	 Total distance: 2.611E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([13], dtype=int64), array([[False]])]] 	 class: [0 9]
10:09:34,787 root DEBUG Side: OFF	 Angle(dx0, dx): 5.71 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.644E-02 	 Total distance: 7.644E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([85], dtype=int64), array([[False]])]] 	 class: [1 9]
10:09:34,787 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:34,787 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 49.08 	 cIDON = [0 9], cIDOFF = [1 9]
10:09:34,787 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:34,787 root DEBUG dOFF/dON = 2.9
10:09:34,787 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.02525678162502, 'dON1': 0.026109917570325752, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.026109917570325752, 'nTON': 1, 'dON': 0.026109917570325752, 'dxOFFAngle': 73.43097276645344, 'dOFF1': 0.0764420110069488, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.0764420110069488, 'nTOFF': 1, 'dOFF': 0.0764420110069488, 'SUCCESS': True}
10:09:34,798 root DEBUG 

=================== Experiment ID #44 	 Dual Point ID: 56 ===================
10:09:34,820 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.929E-07|<1.000E-06)
10:09:34,820 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:35,242 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.276E-02 	 Total distance: 4.276E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([145], dtype=int64), array([[False]])]] 	 class: [6 9]
10:09:35,508 root DEBUG Side: ON	 Angle(dx0, dx): 15.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.436E-02 	 Total distance: 9.712E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([2, 9], dtype=int64), array([[1.],
       [0.]])]] 	 class: [2 6]
10:09:35,853 root DEBUG Side: OFF	 Angle(dx0, dx): 3.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.464E-02 	 Total distance: 8.464E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([157], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:09:35,854 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:35,854 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -6.86 	 cIDON = [6 9], cIDOFF = [6 9]
10:09:35,854 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:35,854 root DEBUG dOFF/dON = 0.9
10:09:35,854 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.48432675284293, 'dON1': 0.0971207969151566, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.0971207969151566, 'nTON': 1, 'dON': 0.0971207969151566, 'dxOFFAngle': 85.91832353982707, 'dOFF1': 0.08464347986475536, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.08464347986475536, 'nTOFF': 1, 'dOFF': 0.08464347986475536, 'SUCCESS': False}
10:09:35,864 root DEBUG 

=================== Experiment ID #45 	 Dual Point ID: 57 ===================
10:09:35,899 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.225E-07|<1.000E-06)
10:09:35,899 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:36,384 root DEBUG Side: ON	 Angle(dx0, dx): 2.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.795E-02 	 Total distance: 2.795E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([103], dtype=int64), array([[False]])]] 	 class: [2 3]
10:09:36,577 root DEBUG Side: ON	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.989E-03 	 Total distance: 3.193E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([18], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:09:36,781 root DEBUG Side: ON	 Angle(dx0, dx): 2.89 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.754E-02 	 Total distance: 5.947E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([42], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:09:37,224 root DEBUG Side: OFF	 Angle(dx0, dx): 2.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.192E-02 	 Total distance: 1.192E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([246], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:09:37,453 root DEBUG Side: OFF	 Angle(dx0, dx): 3.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.457E-02 	 Total distance: 2.649E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([62], dtype=int64), array([[False]])]] 	 class: [2 3]
10:09:37,453 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:37,453 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -38.37 	 cIDON = [2 3], cIDOFF = [2 3]
10:09:37,453 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:37,453 root DEBUG dOFF/dON = 0.4
10:09:37,453 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 79.94625826256159, 'dON1': 0.05947248269383168, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.05947248269383168, 'nTON': 1, 'dON': 0.05947248269383168, 'dxOFFAngle': 89.7269460696092, 'dOFF1': 0.026486042228183966, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.026486042228183966, 'nTOFF': 1, 'dOFF': 0.026486042228183966, 'SUCCESS': False}
10:09:37,459 root DEBUG 

=================== Experiment ID #46 	 Dual Point ID: 58 ===================
10:09:37,478 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.740E-07|<1.000E-06)
10:09:37,478 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:37,902 root DEBUG Side: ON	 Angle(dx0, dx): 2.88 deg 	 Angle(n, nold): 2.69 deg 	 Distance in patch: 7.216E-03 	 Total distance: 7.216E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([152], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:38,153 root DEBUG Side: ON	 Angle(dx0, dx): 3.09 deg 	 Angle(n, nold): 3.07 deg 	 Distance in patch: 3.485E-02 	 Total distance: 4.207E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([250], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:38,422 root DEBUG Side: ON	 Angle(dx0, dx): 0.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.949E-02 	 Total distance: 9.156E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([49], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:38,784 root DEBUG Side: OFF	 Angle(dx0, dx): 3.25 deg 	 Angle(n, nold): 4.39 deg 	 Distance in patch: 4.592E-02 	 Total distance: 4.592E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([23], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:38,784 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:38,785 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -33.20 	 cIDON = [5 7], cIDOFF = [5 7]
10:09:38,785 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:38,785 root DEBUG dOFF/dON = 0.5
10:09:38,785 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.84813523492262, 'dON1': 0.09155594344070209, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.09155594344070209, 'nTON': 1, 'dON': 0.09155594344070209, 'dxOFFAngle': 85.70557558440768, 'dOFF1': 0.04591833010783821, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.04591833010783821, 'nTOFF': 1, 'dOFF': 0.04591833010783821, 'SUCCESS': False}
10:09:38,795 root DEBUG 

=================== Experiment ID #47 	 Dual Point ID: 59 ===================
10:09:38,823 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.032E-07|<1.000E-06)
10:09:38,824 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:39,271 root DEBUG Side: ON	 Angle(dx0, dx): 6.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.135E-02 	 Total distance: 1.135E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([30], dtype=int64), array([[False]])]] 	 class: [2 9]
10:09:39,586 root DEBUG Side: OFF	 Angle(dx0, dx): 4.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.930E-03 	 Total distance: 5.930E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([81], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:09:39,586 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:39,587 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -31.37 	 cIDON = [2 9], cIDOFF = [2 9]
10:09:39,587 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:39,587 root DEBUG dOFF/dON = 0.5
10:09:39,587 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.81328425234577, 'dON1': 0.011350207079262388, 'cIDON1': array([2, 9], dtype=int64), 'dON_patch_1': 0.011350207079262388, 'nTON': 1, 'dON': 0.011350207079262388, 'dxOFFAngle': 66.96146668786344, 'dOFF1': 0.005929760025237958, 'cIDOFF1': array([2, 9], dtype=int64), 'dOFF_patch_1': 0.005929760025237958, 'nTOFF': 1, 'dOFF': 0.005929760025237958, 'SUCCESS': False}
10:09:39,597 root DEBUG 

=================== Experiment ID #48 	 Dual Point ID: 60 ===================
10:09:39,637 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.032E-07|<1.000E-06)
10:09:39,637 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:40,14 root DEBUG Side: ON	 Angle(dx0, dx): 8.87 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.012E-02 	 Total distance: 1.012E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([60], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:40,482 root DEBUG Side: OFF	 Angle(dx0, dx): 0.60 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.417E-01 	 Total distance: 1.417E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([154], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:40,692 root DEBUG Side: OFF	 Angle(dx0, dx): 2.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.040E-01 	 Total distance: 2.457E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([15], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:40,692 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:40,692 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 92.09 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:40,692 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:40,692 root DEBUG dOFF/dON = 24.3
10:09:40,692 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 61.22238241044725, 'dON1': 0.010124472943262864, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.010124472943262864, 'nTON': 1, 'dON': 0.010124472943262864, 'dxOFFAngle': 70.02103856970717, 'dOFF1': 0.24572003627222072, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.24572003627222072, 'nTOFF': 1, 'dOFF': 0.24572003627222072, 'SUCCESS': True}
10:09:40,699 root DEBUG 

=================== Experiment ID #49 	 Dual Point ID: 61 ===================
10:09:40,730 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.721E-07|<1.000E-06)
10:09:40,731 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:41,199 root DEBUG Side: ON	 Angle(dx0, dx): 5.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.943E-02 	 Total distance: 3.943E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([7], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:09:41,683 root DEBUG Side: OFF	 Angle(dx0, dx): 3.98 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.168E-01 	 Total distance: 1.168E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([14], dtype=int64), array([[False]])]] 	 class: [5 9]
10:09:41,683 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:41,684 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 49.52 	 cIDON = [5 9], cIDOFF = [5 9]
10:09:41,684 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:41,684 root DEBUG dOFF/dON = 3.0
10:09:41,684 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 73.78356746535762, 'dON1': 0.03942538212888473, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.03942538212888473, 'nTON': 1, 'dON': 0.03942538212888473, 'dxOFFAngle': 76.18414635064048, 'dOFF1': 0.11678981844518461, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.11678981844518461, 'nTOFF': 1, 'dOFF': 0.11678981844518461, 'SUCCESS': True}
10:09:41,696 root DEBUG 

=================== Experiment ID #50 	 Dual Point ID: 62 ===================
10:09:41,737 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.486E-08|<1.000E-06)
10:09:41,738 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:42,105 root DEBUG Side: ON	 Angle(dx0, dx): 4.02 deg 	 Angle(n, nold): 4.48 deg 	 Distance in patch: 8.076E-03 	 Total distance: 8.076E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([217], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:42,392 root DEBUG Side: ON	 Angle(dx0, dx): 3.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.941E-02 	 Total distance: 5.749E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([39], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:42,808 root DEBUG Side: OFF	 Angle(dx0, dx): 5.86 deg 	 Angle(n, nold): 8.76 deg 	 Distance in patch: 8.223E-02 	 Total distance: 8.223E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([170], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:43,36 root DEBUG Side: OFF	 Angle(dx0, dx): 4.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.546E-01 	 Total distance: 4.368E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([208], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:43,36 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:43,36 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 76.74 	 cIDON = [2 6], cIDOFF = [2 6]
10:09:43,37 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:43,37 root DEBUG dOFF/dON = 7.6
10:09:43,37 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.62308356289188, 'dON1': 0.05748844647701257, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.05748844647701257, 'nTON': 1, 'dON': 0.05748844647701257, 'dxOFFAngle': 82.16489261616024, 'dOFF1': 0.4368342378858818, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.4368342378858818, 'nTOFF': 1, 'dOFF': 0.4368342378858818, 'SUCCESS': True}
10:09:43,47 root DEBUG 

=================== Experiment ID #51 	 Dual Point ID: 63 ===================
10:09:43,73 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.987E-07|<1.000E-06)
10:09:43,74 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:43,480 root DEBUG Side: ON	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.607E-02 	 Total distance: 2.607E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([45], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:09:43,716 root DEBUG Side: ON	 Angle(dx0, dx): 0.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.172E-04 	 Total distance: 2.658E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([189], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:09:44,92 root DEBUG Side: OFF	 Angle(dx0, dx): 1.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.533E-01 	 Total distance: 1.533E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([169], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:09:44,92 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:44,92 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 70.44 	 cIDON = [3 8], cIDOFF = [3 8]
10:09:44,92 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:44,92 root DEBUG dOFF/dON = 5.8
10:09:44,92 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.6122558403191, 'dON1': 0.026583982173047842, 'cIDON1': array([3, 8], dtype=int64), 'dON_patch_1': 0.026583982173047842, 'nTON': 1, 'dON': 0.026583982173047842, 'dxOFFAngle': 85.67435350606043, 'dOFF1': 0.15330413474111074, 'cIDOFF1': array([3, 8], dtype=int64), 'dOFF_patch_1': 0.15330413474111074, 'nTOFF': 1, 'dOFF': 0.15330413474111074, 'SUCCESS': True}
10:09:44,102 root DEBUG 

=================== Experiment ID #52 	 Dual Point ID: 64 ===================
10:09:44,129 root DEBUG CONTROL: 	 WARNING! 	 (target neuron output > tolerance: |1.027E-06|>1.000E-06)
10:09:44,129 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:44,129 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:44,130 root DEBUG 

=================== Experiment ID #52 	 Dual Point ID: 65 ===================
10:09:44,162 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.540E-07|<1.000E-06)
10:09:44,162 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:44,567 root DEBUG Side: ON	 Angle(dx0, dx): 1.77 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.497E-02 	 Total distance: 2.497E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([198], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:44,968 root DEBUG Side: OFF	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.32 deg 	 Distance in patch: 1.440E-02 	 Total distance: 1.440E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([104], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:45,175 root DEBUG Side: OFF	 Angle(dx0, dx): 1.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.377E-02 	 Total distance: 7.817E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([40], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:45,175 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:45,176 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 51.59 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:45,176 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:45,176 root DEBUG dOFF/dON = 3.1
10:09:45,176 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 77.40026923829153, 'dON1': 0.024965857460844388, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.024965857460844388, 'nTON': 1, 'dON': 0.024965857460844388, 'dxOFFAngle': 78.48074499063209, 'dOFF1': 0.07817045090939968, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.07817045090939968, 'nTOFF': 1, 'dOFF': 0.07817045090939968, 'SUCCESS': True}
10:09:45,183 root DEBUG 

=================== Experiment ID #53 	 Dual Point ID: 66 ===================
10:09:45,206 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.988E-07|<1.000E-06)
10:09:45,207 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:45,574 root DEBUG Side: ON	 Angle(dx0, dx): 1.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.842E-03 	 Total distance: 6.842E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([66], dtype=int64), array([[False]])]] 	 class: [5 6]
10:09:45,772 root DEBUG Side: ON	 Angle(dx0, dx): 1.84 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.210E-03 	 Total distance: 8.052E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([150], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:09:46,160 root DEBUG Side: OFF	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.020E-02 	 Total distance: 1.020E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([217], dtype=int64), array([[False]])]] 	 class: [5 6]
10:09:46,392 root DEBUG Side: OFF	 Angle(dx0, dx): 3.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.078E-02 	 Total distance: 7.098E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([147], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:09:46,392 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:46,393 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 79.62 	 cIDON = [5 6], cIDOFF = [5 6]
10:09:46,393 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:46,393 root DEBUG dOFF/dON = 8.8
10:09:46,393 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 73.23480130404607, 'dON1': 0.008051909883748017, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.008051909883748017, 'nTON': 1, 'dON': 0.008051909883748017, 'dxOFFAngle': 81.83741574256747, 'dOFF1': 0.07097743888959833, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.07097743888959833, 'nTOFF': 1, 'dOFF': 0.07097743888959833, 'SUCCESS': True}
10:09:46,403 root DEBUG 

=================== Experiment ID #54 	 Dual Point ID: 67 ===================
10:09:46,430 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.078E-07|<1.000E-06)
10:09:46,430 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:46,915 root DEBUG Side: ON	 Angle(dx0, dx): 1.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.942E-02 	 Total distance: 9.942E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([84], dtype=int64), array([[False]])]] 	 class: [2 8]
10:09:47,313 root DEBUG Side: OFF	 Angle(dx0, dx): 3.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.451E-02 	 Total distance: 4.451E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([227], dtype=int64), array([[False]])]] 	 class: [2 8]
10:09:47,583 root DEBUG Side: OFF	 Angle(dx0, dx): 4.62 deg 	 Angle(n, nold): 2.13 deg 	 Distance in patch: 1.358E-01 	 Total distance: 1.803E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([148], dtype=int64), array([[False]])]] 	 class: [2 8]
10:09:47,871 root DEBUG Side: OFF	 Angle(dx0, dx): 0.98 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.564E-01 	 Total distance: 4.367E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[2, array([114], dtype=int64), array([[False]])]] 	 class: [2 8]
10:09:48,103 root DEBUG Side: OFF	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.504E-02 	 Total distance: 4.617E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[2, array([149], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:09:48,310 root DEBUG Side: OFF	 Angle(dx0, dx): 3.94 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.847E-02 	 Total distance: 5.002E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([30], dtype=int64), array([[False]])]] 	 class: [2 8]
10:09:48,311 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:48,311 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 66.84 	 cIDON = [2 8], cIDOFF = [2 8]
10:09:48,311 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:48,311 root DEBUG dOFF/dON = 5.0
10:09:48,311 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.23913822447126, 'dON1': 0.09941557095673997, 'cIDON1': array([2, 8], dtype=int64), 'dON_patch_1': 0.09941557095673997, 'nTON': 1, 'dON': 0.09941557095673997, 'dxOFFAngle': 82.3780834523729, 'dOFF1': 0.5002051133820875, 'cIDOFF1': array([2, 8], dtype=int64), 'dOFF_patch_1': 0.5002051133820875, 'nTOFF': 1, 'dOFF': 0.5002051133820875, 'SUCCESS': True}
10:09:48,324 root DEBUG 

=================== Experiment ID #55 	 Dual Point ID: 68 ===================
10:09:48,342 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.136E-07|<1.000E-06)
10:09:48,342 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:48,775 root DEBUG Side: ON	 Angle(dx0, dx): 1.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.134E-01 	 Total distance: 1.134E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([47], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:49,195 root DEBUG Side: OFF	 Angle(dx0, dx): 5.52 deg 	 Angle(n, nold): 5.78 deg 	 Distance in patch: 1.292E-01 	 Total distance: 1.292E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([86], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:49,395 root DEBUG Side: OFF	 Angle(dx0, dx): 1.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.156E-02 	 Total distance: 1.507E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([215], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:49,395 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:49,396 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 14.14 	 cIDON = [2 6], cIDOFF = [2 6]
10:09:49,396 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:49,396 root DEBUG dOFF/dON = 1.3
10:09:49,396 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.80196216209156, 'dON1': 0.11337519317699712, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.11337519317699712, 'nTON': 1, 'dON': 0.11337519317699712, 'dxOFFAngle': 88.06994092196604, 'dOFF1': 0.15071495612011404, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.15071495612011404, 'nTOFF': 1, 'dOFF': 0.15071495612011404, 'SUCCESS': True}
10:09:49,405 root DEBUG 

=================== Experiment ID #56 	 Dual Point ID: 69 ===================
10:09:49,433 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.295E-08|<1.000E-06)
10:09:49,434 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:49,822 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.515E-02 	 Total distance: 2.515E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([162], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:09:50,109 root DEBUG Side: ON	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.135E-03 	 Total distance: 3.029E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([121], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:09:50,535 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.553E-02 	 Total distance: 5.553E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([225], dtype=int64), array([[False]])]] 	 class: [4 6]
10:09:50,535 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:50,536 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 29.42 	 cIDON = [4 6], cIDOFF = [4 6]
10:09:50,536 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:50,536 root DEBUG dOFF/dON = 1.8
10:09:50,536 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 74.53515749229956, 'dON1': 0.03028518665567894, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.03028518665567894, 'nTON': 1, 'dON': 0.03028518665567894, 'dxOFFAngle': 74.65210580571619, 'dOFF1': 0.055527962197649175, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.055527962197649175, 'nTOFF': 1, 'dOFF': 0.055527962197649175, 'SUCCESS': True}
10:09:50,545 root DEBUG 

=================== Experiment ID #57 	 Dual Point ID: 70 ===================
10:09:50,579 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.889E-07|<1.000E-06)
10:09:50,579 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:50,996 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.03 deg 	 Distance in patch: 9.137E-03 	 Total distance: 9.137E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([34], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:51,234 root DEBUG Side: ON	 Angle(dx0, dx): 2.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.703E-02 	 Total distance: 4.617E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([35], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:51,659 root DEBUG Side: OFF	 Angle(dx0, dx): 2.39 deg 	 Angle(n, nold): 0.03 deg 	 Distance in patch: 3.666E-02 	 Total distance: 3.666E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([122], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:51,864 root DEBUG Side: OFF	 Angle(dx0, dx): 0.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.357E-02 	 Total distance: 6.023E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([90], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:52,119 root DEBUG Side: OFF	 Angle(dx0, dx): 0.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.219E-01 	 Total distance: 2.821E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[2, array([36], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:52,380 root DEBUG Side: OFF	 Angle(dx0, dx): 1.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.439E-02 	 Total distance: 3.065E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[2, array([0], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:52,656 root DEBUG Side: OFF	 Angle(dx0, dx): 1.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.886E-02 	 Total distance: 3.253E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([148], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:52,656 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:52,656 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 75.14 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:52,656 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:52,656 root DEBUG dOFF/dON = 7.0
10:09:52,656 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 75.91592976498575, 'dON1': 0.04617044521177702, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.04617044521177702, 'nTON': 1, 'dON': 0.04617044521177702, 'dxOFFAngle': 73.33900521553419, 'dOFF1': 0.3253286241455677, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.3253286241455677, 'nTOFF': 1, 'dOFF': 0.3253286241455677, 'SUCCESS': True}
10:09:52,666 root DEBUG 

=================== Experiment ID #58 	 Dual Point ID: 71 ===================
10:09:52,694 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.722E-07|<1.000E-06)
10:09:52,695 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:53,127 root DEBUG Side: ON	 Angle(dx0, dx): 9.53 deg 	 Angle(n, nold): 11.68 deg 	 Distance in patch: 9.171E-02 	 Total distance: 9.171E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([251], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:53,338 root DEBUG Side: ON	 Angle(dx0, dx): 9.53 deg 	 Angle(n, nold): 11.68 deg 	 Distance in patch: 3.955E-06 	 Total distance: 9.171E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([251], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:53,544 root DEBUG Side: ON	 Angle(dx0, dx): 9.53 deg 	 Angle(n, nold): 11.68 deg 	 Distance in patch: 8.159E-08 	 Total distance: 9.171E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([251], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:53,745 root DEBUG Side: ON	 Angle(dx0, dx): 9.53 deg 	 Angle(n, nold): 11.68 deg 	 Distance in patch: 3.296E-07 	 Total distance: 9.171E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([251], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:53,941 root DEBUG Side: ON	 Angle(dx0, dx): 9.53 deg 	 Angle(n, nold): 11.68 deg 	 Distance in patch: 8.159E-08 	 Total distance: 9.171E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([251], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:53,958 root DEBUG Got stuck in too many past-layer relus.
10:09:54,132 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:09:54,132 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:09:54,134 root DEBUG 

=================== Experiment ID #58 	 Dual Point ID: 72 ===================
10:09:54,165 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.109E-07|<1.000E-06)
10:09:54,165 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:54,585 root DEBUG Side: ON	 Angle(dx0, dx): 0.71 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.373E-03 	 Total distance: 9.373E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([49], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:54,955 root DEBUG Side: OFF	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.058E-02 	 Total distance: 2.058E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([49], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:54,955 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:54,956 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 37.41 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:54,956 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:54,956 root DEBUG dOFF/dON = 2.2
10:09:54,956 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.07842090222621, 'dON1': 0.009373449852436183, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.009373449852436183, 'nTON': 1, 'dON': 0.009373449852436183, 'dxOFFAngle': 83.57904432478993, 'dOFF1': 0.020578497313553552, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.020578497313553552, 'nTOFF': 1, 'dOFF': 0.020578497313553552, 'SUCCESS': True}
10:09:54,965 root DEBUG 

=================== Experiment ID #59 	 Dual Point ID: 73 ===================
10:09:54,997 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.323E-07|<1.000E-06)
10:09:54,997 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:55,410 root DEBUG Side: ON	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.414E-02 	 Total distance: 4.414E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([106], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:55,829 root DEBUG Side: OFF	 Angle(dx0, dx): 6.45 deg 	 Angle(n, nold): 5.45 deg 	 Distance in patch: 2.183E-01 	 Total distance: 2.183E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([97], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:56,41 root DEBUG Side: OFF	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.798E-02 	 Total distance: 2.362E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([42], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:56,41 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:56,41 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 68.51 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:56,41 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:56,41 root DEBUG dOFF/dON = 5.4
10:09:56,41 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.5614231071649, 'dON1': 0.04414399468282483, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.04414399468282483, 'nTON': 1, 'dON': 0.04414399468282483, 'dxOFFAngle': 73.69679159757786, 'dOFF1': 0.23623131912164652, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.23623131912164652, 'nTOFF': 1, 'dOFF': 0.23623131912164652, 'SUCCESS': True}
10:09:56,52 root DEBUG 

=================== Experiment ID #60 	 Dual Point ID: 74 ===================
10:09:56,75 root DEBUG CONTROL: 	 WARNING! 	 (target neuron output > tolerance: |1.196E-06|>1.000E-06)
10:09:56,75 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:56,75 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:56,76 root DEBUG 

=================== Experiment ID #60 	 Dual Point ID: 75 ===================
10:09:56,113 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.980E-07|<1.000E-06)
10:09:56,114 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:56,589 root DEBUG Side: ON	 Angle(dx0, dx): 1.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.780E-01 	 Total distance: 1.780E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([85], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:56,998 root DEBUG Side: OFF	 Angle(dx0, dx): 1.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.075E-01 	 Total distance: 2.075E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([179], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:57,235 root DEBUG Side: OFF	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.895E-02 	 Total distance: 2.364E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([18], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:57,466 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.31 deg 	 Distance in patch: 5.377E-03 	 Total distance: 2.418E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([102], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:57,729 root DEBUG Side: OFF	 Angle(dx0, dx): 7.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.502E-01 	 Total distance: 3.920E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([175], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:57,730 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:57,730 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 37.55 	 cIDON = [5 7], cIDOFF = [5 7]
10:09:57,730 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:57,730 root DEBUG dOFF/dON = 2.2
10:09:57,730 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.60530074032064, 'dON1': 0.17797788094337036, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.17797788094337036, 'nTON': 1, 'dON': 0.17797788094337036, 'dxOFFAngle': 78.25623577475125, 'dOFF1': 0.39197912883312014, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.39197912883312014, 'nTOFF': 1, 'dOFF': 0.39197912883312014, 'SUCCESS': True}
10:09:57,740 root DEBUG 

=================== Experiment ID #61 	 Dual Point ID: 76 ===================
10:09:57,771 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.726E-07|<1.000E-06)
10:09:57,771 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:58,194 root DEBUG Side: ON	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.255E-01 	 Total distance: 1.255E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([142], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:09:58,427 root DEBUG Side: ON	 Angle(dx0, dx): 4.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.667E-01 	 Total distance: 2.922E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([61], dtype=int64), array([[False]])]] 	 class: [2 3]
10:09:58,833 root DEBUG Side: OFF	 Angle(dx0, dx): 1.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.262E-01 	 Total distance: 1.262E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([50], dtype=int64), array([[False]])]] 	 class: [2 3]
10:09:58,833 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:58,834 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -39.65 	 cIDON = [2 3], cIDOFF = [2 3]
10:09:58,834 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:58,834 root DEBUG dOFF/dON = 0.4
10:09:58,834 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.96740782167802, 'dON1': 0.2921658601755357, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.2921658601755357, 'nTON': 1, 'dON': 0.2921658601755357, 'dxOFFAngle': 88.15421085525429, 'dOFF1': 0.1262493270523974, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.1262493270523974, 'nTOFF': 1, 'dOFF': 0.1262493270523974, 'SUCCESS': False}
10:09:58,843 root DEBUG 

=================== Experiment ID #62 	 Dual Point ID: 77 ===================
10:09:58,867 root DEBUG CONTROL: 	 WARNING! 	 (target neuron output > tolerance: |1.058E-06|>1.000E-06)
10:09:58,867 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:58,867 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:58,868 root DEBUG 

=================== Experiment ID #62 	 Dual Point ID: 78 ===================
10:09:58,908 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.131E-07|<1.000E-06)
10:09:58,908 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:59,323 root DEBUG Side: ON	 Angle(dx0, dx): 7.22 deg 	 Angle(n, nold): 6.44 deg 	 Distance in patch: 9.403E-04 	 Total distance: 9.403E-04 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([97], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:59,601 root DEBUG Side: ON	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.635E-02 	 Total distance: 6.729E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([24], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:00,8 root DEBUG Side: OFF	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 6.44 deg 	 Distance in patch: 5.950E-02 	 Total distance: 5.950E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([71], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:00,8 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:00,8 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -6.14 	 cIDON = [5 7], cIDOFF = [5 7]
10:10:00,8 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:00,8 root DEBUG dOFF/dON = 0.9
10:10:00,9 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.15211827897404, 'dON1': 0.06728857527643045, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.06728857527643045, 'nTON': 1, 'dON': 0.06728857527643045, 'dxOFFAngle': 77.52433816850328, 'dOFF1': 0.05949880649947429, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.05949880649947429, 'nTOFF': 1, 'dOFF': 0.05949880649947429, 'SUCCESS': False}
10:10:00,20 root DEBUG 

=================== Experiment ID #63 	 Dual Point ID: 79 ===================
10:10:00,47 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.285E-08|<1.000E-06)
10:10:00,48 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:00,529 root DEBUG Side: ON	 Angle(dx0, dx): 1.61 deg 	 Angle(n, nold): 1.18 deg 	 Distance in patch: 2.607E-02 	 Total distance: 2.607E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([122], dtype=int64), array([[ True]])]] 	 class: [0 3]
10:10:00,748 root DEBUG Side: ON	 Angle(dx0, dx): 15.55 deg 	 Angle(n, nold): 16.07 deg 	 Distance in patch: 3.244E-02 	 Total distance: 5.851E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([60], dtype=int64), array([[ True]])]] 	 class: [0 3]
10:10:00,901 root DEBUG Side: ON	 Angle(dx0, dx): 15.55 deg 	 Angle(n, nold): 16.07 deg 	 Distance in patch: 8.927E-08 	 Total distance: 5.851E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([60], dtype=int64), array([[False]])]] 	 class: [0 3]
10:10:01,76 root DEBUG Side: ON	 Angle(dx0, dx): 15.55 deg 	 Angle(n, nold): 16.07 deg 	 Distance in patch: 9.019E-08 	 Total distance: 5.851E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([60], dtype=int64), array([[ True]])]] 	 class: [0 3]
10:10:01,267 root DEBUG Side: ON	 Angle(dx0, dx): 15.55 deg 	 Angle(n, nold): 16.07 deg 	 Distance in patch: 8.927E-08 	 Total distance: 5.851E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([60], dtype=int64), array([[False]])]] 	 class: [0 3]
10:10:01,277 root DEBUG Got stuck in too many past-layer relus.
10:10:01,442 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:10:01,443 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:10:01,444 root DEBUG 

=================== Experiment ID #63 	 Dual Point ID: 80 ===================
10:10:01,475 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.445E-07|<1.000E-06)
10:10:01,475 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:01,880 root DEBUG Side: ON	 Angle(dx0, dx): 6.71 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.629E-02 	 Total distance: 1.629E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([66], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:10:02,278 root DEBUG Side: OFF	 Angle(dx0, dx): 2.73 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.535E-02 	 Total distance: 1.535E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([132], dtype=int64), array([[False]])]] 	 class: [2 5]
10:10:02,511 root DEBUG Side: OFF	 Angle(dx0, dx): 2.73 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.405E-01 	 Total distance: 1.558E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([139], dtype=int64), array([[False]])]] 	 class: [2 5]
10:10:02,794 root DEBUG Side: OFF	 Angle(dx0, dx): 1.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.826E-02 	 Total distance: 2.141E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([196], dtype=int64), array([[False]])]] 	 class: [2 5]
10:10:02,795 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:02,795 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 85.86 	 cIDON = [2 5], cIDOFF = [2 5]
10:10:02,795 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:02,795 root DEBUG dOFF/dON = 13.1
10:10:02,795 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 62.11114537367094, 'dON1': 0.016292166300974718, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.016292166300974718, 'nTON': 1, 'dON': 0.016292166300974718, 'dxOFFAngle': 75.4558062476124, 'dOFF1': 0.21407618927294325, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.21407618927294325, 'nTOFF': 1, 'dOFF': 0.21407618927294325, 'SUCCESS': True}
10:10:02,805 root DEBUG 

=================== Experiment ID #64 	 Dual Point ID: 81 ===================
10:10:02,834 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.093E-08|<1.000E-06)
10:10:02,834 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:03,274 root DEBUG Side: ON	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.20 deg 	 Distance in patch: 2.054E-03 	 Total distance: 2.054E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([176], dtype=int64), array([[False]])]] 	 class: [2 5]
10:10:03,479 root DEBUG Side: ON	 Angle(dx0, dx): 0.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.671E-05 	 Total distance: 2.131E-03 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([90], dtype=int64), array([[False]])]] 	 class: [2 5]
10:10:03,695 root DEBUG Side: ON	 Angle(dx0, dx): 5.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.464E-02 	 Total distance: 1.677E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([202], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:10:04,89 root DEBUG Side: OFF	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.20 deg 	 Distance in patch: 2.171E-02 	 Total distance: 2.171E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([23], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:10:04,90 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:04,90 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 12.86 	 cIDON = [2 5], cIDOFF = [2 5]
10:10:04,90 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:04,90 root DEBUG dOFF/dON = 1.3
10:10:04,90 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 59.589746438952204, 'dON1': 0.016766357771510254, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.016766357771510254, 'nTON': 1, 'dON': 0.016766357771510254, 'dxOFFAngle': 76.63450933048877, 'dOFF1': 0.021712914502601342, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.021712914502601342, 'nTOFF': 1, 'dOFF': 0.021712914502601342, 'SUCCESS': True}
10:10:04,98 root DEBUG 

=================== Experiment ID #65 	 Dual Point ID: 82 ===================
10:10:04,133 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.925E-07|<1.000E-06)
10:10:04,133 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:04,470 root DEBUG Side: ON	 Angle(dx0, dx): 19.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.643E-03 	 Total distance: 8.643E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([43], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:04,855 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.365E-02 	 Total distance: 5.365E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([55], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:04,856 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:04,856 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 72.25 	 cIDON = [3 6], cIDOFF = [3 6]
10:10:04,856 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:04,856 root DEBUG dOFF/dON = 6.2
10:10:04,856 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 79.60211525881476, 'dON1': 0.008642986312026195, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.008642986312026195, 'nTON': 1, 'dON': 0.008642986312026195, 'dxOFFAngle': 85.25115677986038, 'dOFF1': 0.053646565524672535, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.053646565524672535, 'nTOFF': 1, 'dOFF': 0.053646565524672535, 'SUCCESS': True}
10:10:04,862 root DEBUG 

=================== Experiment ID #66 	 Dual Point ID: 83 ===================
10:10:04,896 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.241E-07|<1.000E-06)
10:10:04,896 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:05,303 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.991E-03 	 Total distance: 9.991E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([196], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:05,710 root DEBUG Side: OFF	 Angle(dx0, dx): 0.56 deg 	 Angle(n, nold): 0.90 deg 	 Distance in patch: 9.367E-02 	 Total distance: 9.367E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([75], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:05,940 root DEBUG Side: OFF	 Angle(dx0, dx): 4.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.162E-01 	 Total distance: 2.099E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([15], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:05,941 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:05,941 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 90.91 	 cIDON = [2 7], cIDOFF = [2 7]
10:10:05,941 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:05,941 root DEBUG dOFF/dON = 21.0
10:10:05,941 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.73739480330971, 'dON1': 0.009991183090215025, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.009991183090215025, 'nTON': 1, 'dON': 0.009991183090215025, 'dxOFFAngle': 81.17224192430085, 'dOFF1': 0.20989807652622927, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.20989807652622927, 'nTOFF': 1, 'dOFF': 0.20989807652622927, 'SUCCESS': True}
10:10:05,950 root DEBUG 

=================== Experiment ID #67 	 Dual Point ID: 84 ===================
10:10:05,984 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.555E-07|<1.000E-06)
10:10:05,984 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:06,351 root DEBUG Side: ON	 Angle(dx0, dx): 6.99 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.170E-06 	 Total distance: 1.170E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 9]
10:10:06,754 root DEBUG Side: OFF	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.28 deg 	 Distance in patch: 4.422E-02 	 Total distance: 4.422E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([127], dtype=int64), array([[False]])]] 	 class: [0 9]
10:10:06,927 root DEBUG Side: OFF	 Angle(dx0, dx): 5.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.030E-02 	 Total distance: 1.045E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([30], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:10:06,928 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:06,928 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [0 9], cIDOFF = [0 9]
10:10:06,928 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:06,928 root DEBUG dOFF/dON = 89334.5
10:10:06,928 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.54960548411324, 'dON1': 1.1699999359957528e-06, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 1.1699999359957528e-06, 'nTON': 1, 'dON': 1.1699999359957528e-06, 'dxOFFAngle': 78.90258648393224, 'dOFF1': 0.10452133649606866, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.10452133649606866, 'nTOFF': 1, 'dOFF': 0.10452133649606866, 'SUCCESS': True}
10:10:06,940 root DEBUG 

=================== Experiment ID #68 	 Dual Point ID: 85 ===================
10:10:06,974 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.903E-07|<1.000E-06)
10:10:06,975 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:07,414 root DEBUG Side: ON	 Angle(dx0, dx): 3.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.410E-02 	 Total distance: 1.410E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([231], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:07,816 root DEBUG Side: OFF	 Angle(dx0, dx): 1.97 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.912E-02 	 Total distance: 3.912E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([154], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:07,816 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:07,817 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 47.00 	 cIDON = [5 7], cIDOFF = [5 7]
10:10:07,817 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:07,817 root DEBUG dOFF/dON = 2.8
10:10:07,817 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 76.75077305107632, 'dON1': 0.014104834985011567, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.014104834985011567, 'nTON': 1, 'dON': 0.014104834985011567, 'dxOFFAngle': 75.07982083861611, 'dOFF1': 0.03911743447164613, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.03911743447164613, 'nTOFF': 1, 'dOFF': 0.03911743447164613, 'SUCCESS': True}
10:10:07,827 root DEBUG 

=================== Experiment ID #69 	 Dual Point ID: 86 ===================
10:10:07,864 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.004E-07|<1.000E-06)
10:10:07,864 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:08,339 root DEBUG Side: ON	 Angle(dx0, dx): 1.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.706E-02 	 Total distance: 3.706E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([255], dtype=int64), array([[False]])]] 	 class: [0 5]
10:10:08,733 root DEBUG Side: OFF	 Angle(dx0, dx): 12.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.858E-05 	 Total distance: 9.858E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 5]
10:10:08,733 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:08,734 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.47 	 cIDON = [0 5], cIDOFF = [1 5]
10:10:08,734 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:08,734 root DEBUG dOFF/dON = 0.0
10:10:08,734 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 63.76987852095357, 'dON1': 0.03706034584332518, 'cIDON1': array([0, 5], dtype=int64), 'dON_patch_1': 0.03706034584332518, 'nTON': 1, 'dON': 0.03706034584332518, 'dxOFFAngle': 65.77549240465241, 'dOFF1': 9.857975891027848e-05, 'cIDOFF1': array([1, 5], dtype=int64), 'dOFF_patch_1': 9.857975891027848e-05, 'nTOFF': 1, 'dOFF': 9.857975891027848e-05, 'SUCCESS': False}
10:10:08,744 root DEBUG 

=================== Experiment ID #70 	 Dual Point ID: 87 ===================
10:10:08,783 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.234E-07|<1.000E-06)
10:10:08,783 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:09,210 root DEBUG Side: ON	 Angle(dx0, dx): 3.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.051E-03 	 Total distance: 5.051E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([182], dtype=int64), array([[False]])]] 	 class: [2 4]
10:10:09,534 root DEBUG Side: OFF	 Angle(dx0, dx): 0.96 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.476E-03 	 Total distance: 6.476E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([174], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:10:09,725 root DEBUG Side: OFF	 Angle(dx0, dx): 0.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.376E-02 	 Total distance: 2.024E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([76], dtype=int64), array([[False]])]] 	 class: [2 4]
10:10:09,954 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.470E-02 	 Total distance: 3.494E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([139], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:10:09,954 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:09,954 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 74.74 	 cIDON = [2 4], cIDOFF = [2 4]
10:10:09,954 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:09,954 root DEBUG dOFF/dON = 6.9
10:10:09,954 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 76.06791443683157, 'dON1': 0.005051407565869666, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.005051407565869666, 'nTON': 1, 'dON': 0.005051407565869666, 'dxOFFAngle': 77.98956145062617, 'dOFF1': 0.03493768587597021, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.03493768587597021, 'nTOFF': 1, 'dOFF': 0.03493768587597021, 'SUCCESS': True}
10:10:09,964 root DEBUG 

=================== Experiment ID #71 	 Dual Point ID: 88 ===================
10:10:09,997 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.183E-07|<1.000E-06)
10:10:09,997 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:10,451 root DEBUG Side: ON	 Angle(dx0, dx): 0.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.786E-02 	 Total distance: 4.786E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([224], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:10,873 root DEBUG Side: OFF	 Angle(dx0, dx): 5.62 deg 	 Angle(n, nold): 7.12 deg 	 Distance in patch: 5.291E-03 	 Total distance: 5.291E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([222], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:11,140 root DEBUG Side: OFF	 Angle(dx0, dx): 1.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.054E-03 	 Total distance: 6.345E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([26], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:11,140 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:11,141 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -76.59 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:11,141 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:11,141 root DEBUG dOFF/dON = 0.1
10:10:11,141 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.43860535743545, 'dON1': 0.047859554677487384, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.047859554677487384, 'nTON': 1, 'dON': 0.047859554677487384, 'dxOFFAngle': 84.7170163825, 'dOFF1': 0.006344761237966265, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.006344761237966265, 'nTOFF': 1, 'dOFF': 0.006344761237966265, 'SUCCESS': False}
10:10:11,150 root DEBUG 

=================== Experiment ID #72 	 Dual Point ID: 89 ===================
10:10:11,175 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.435E-07|<1.000E-06)
10:10:11,175 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:11,717 root DEBUG Side: ON	 Angle(dx0, dx): 1.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.973E-02 	 Total distance: 4.973E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([146], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:10:12,128 root DEBUG Side: OFF	 Angle(dx0, dx): 3.15 deg 	 Angle(n, nold): 3.12 deg 	 Distance in patch: 1.798E-01 	 Total distance: 1.798E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([131], dtype=int64), array([[False]])]] 	 class: [3 4]
10:10:12,325 root DEBUG Side: OFF	 Angle(dx0, dx): 3.15 deg 	 Angle(n, nold): 3.12 deg 	 Distance in patch: 6.215E-07 	 Total distance: 1.798E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([131], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:10:12,554 root DEBUG Side: OFF	 Angle(dx0, dx): 3.15 deg 	 Angle(n, nold): 3.12 deg 	 Distance in patch: 1.553E-07 	 Total distance: 1.798E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([131], dtype=int64), array([[False]])]] 	 class: [3 4]
10:10:12,762 root DEBUG Side: OFF	 Angle(dx0, dx): 3.15 deg 	 Angle(n, nold): 3.12 deg 	 Distance in patch: 7.769E-08 	 Total distance: 1.798E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([131], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:10:12,768 root DEBUG Got stuck in too many past-layer relus.
10:10:12,768 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:10:12,769 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:10:12,770 root DEBUG 

=================== Experiment ID #72 	 Dual Point ID: 90 ===================
10:10:12,790 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.669E-08|<1.000E-06)
10:10:12,790 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:13,278 root DEBUG Side: ON	 Angle(dx0, dx): 2.77 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.859E-04 	 Total distance: 1.859E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([18], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:10:13,718 root DEBUG Side: OFF	 Angle(dx0, dx): 11.20 deg 	 Angle(n, nold): 7.80 deg 	 Distance in patch: 2.021E-01 	 Total distance: 2.021E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([141], dtype=int64), array([[False]])]] 	 class: [1 8]
10:10:13,961 root DEBUG Side: OFF	 Angle(dx0, dx): 3.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.825E-02 	 Total distance: 2.303E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([58], dtype=int64), array([[False]])]] 	 class: [1 8]
10:10:13,962 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:13,962 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.84 	 cIDON = [0 8], cIDOFF = [1 8]
10:10:13,962 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:13,962 root DEBUG dOFF/dON = 1238.9
10:10:13,962 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.06411710131687, 'dON1': 0.0001858940752045876, 'cIDON1': array([0, 8], dtype=int64), 'dON_patch_1': 0.0001858940752045876, 'nTON': 1, 'dON': 0.0001858940752045876, 'dxOFFAngle': 76.12579775785075, 'dOFF1': 0.23031008912477555, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 0.23031008912477555, 'nTOFF': 1, 'dOFF': 0.23031008912477555, 'SUCCESS': True}
10:10:13,972 root DEBUG 

=================== Experiment ID #73 	 Dual Point ID: 91 ===================
10:10:14,14 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.003E-07|<1.000E-06)
10:10:14,15 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:14,407 root DEBUG Side: ON	 Angle(dx0, dx): 2.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.576E-02 	 Total distance: 1.576E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([148], dtype=int64), array([[False]])]] 	 class: [0 3]
10:10:14,694 root DEBUG Side: OFF	 Angle(dx0, dx): 22.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.882E-05 	 Total distance: 3.882E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 3]
10:10:14,694 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:14,694 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.51 	 cIDON = [0 3], cIDOFF = [1 3]
10:10:14,694 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:14,694 root DEBUG dOFF/dON = 0.0
10:10:14,694 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 61.1722110153214, 'dON1': 0.015757390361016147, 'cIDON1': array([0, 3], dtype=int64), 'dON_patch_1': 0.015757390361016147, 'nTON': 1, 'dON': 0.015757390361016147, 'dxOFFAngle': 64.42557206078872, 'dOFF1': 3.882137012211879e-05, 'cIDOFF1': array([1, 3], dtype=int64), 'dOFF_patch_1': 3.882137012211879e-05, 'nTOFF': 1, 'dOFF': 3.882137012211879e-05, 'SUCCESS': False}
10:10:14,708 root DEBUG 

=================== Experiment ID #74 	 Dual Point ID: 92 ===================
10:10:14,733 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.319E-07|<1.000E-06)
10:10:14,733 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:15,196 root DEBUG Side: ON	 Angle(dx0, dx): 0.94 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.906E-03 	 Total distance: 2.906E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([190], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:15,475 root DEBUG Side: ON	 Angle(dx0, dx): 24.23 deg 	 Angle(n, nold): 24.36 deg 	 Distance in patch: 6.439E-03 	 Total distance: 9.344E-03 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([221], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:15,685 root DEBUG Side: ON	 Angle(dx0, dx): 18.54 deg 	 Angle(n, nold): 18.84 deg 	 Distance in patch: 1.761E-02 	 Total distance: 2.695E-02 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([234], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:15,866 root DEBUG Side: ON	 Angle(dx0, dx): 0.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.925E-02 	 Total distance: 5.620E-02 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[2, array([72], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:16,106 root DEBUG Side: ON	 Angle(dx0, dx): 26.94 deg 	 Angle(n, nold): 27.08 deg 	 Distance in patch: 6.431E-03 	 Total distance: 6.264E-02 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([221], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:16,248 root DEBUG Side: ON	 Angle(dx0, dx): 26.94 deg 	 Angle(n, nold): 27.08 deg 	 Distance in patch: 8.243E-08 	 Total distance: 6.264E-02 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([221], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:16,491 root DEBUG Side: ON	 Angle(dx0, dx): 26.94 deg 	 Angle(n, nold): 27.08 deg 	 Distance in patch: 2.202E-06 	 Total distance: 6.264E-02 	 Future toggles: 0 	 Past toggles: 6 	 Toggled: [[1, array([221], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:16,708 root DEBUG Side: ON	 Angle(dx0, dx): 26.94 deg 	 Angle(n, nold): 27.08 deg 	 Distance in patch: 8.243E-08 	 Total distance: 6.264E-02 	 Future toggles: 0 	 Past toggles: 6 	 Toggled: [[1, array([221], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:16,879 root DEBUG Side: ON	 Angle(dx0, dx): 26.94 deg 	 Angle(n, nold): 27.08 deg 	 Distance in patch: 2.202E-06 	 Total distance: 6.264E-02 	 Future toggles: 0 	 Past toggles: 7 	 Toggled: [[1, array([221], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:17,66 root DEBUG Side: ON	 Angle(dx0, dx): 26.94 deg 	 Angle(n, nold): 27.08 deg 	 Distance in patch: 8.243E-08 	 Total distance: 6.264E-02 	 Future toggles: 0 	 Past toggles: 7 	 Toggled: [[1, array([221], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:17,330 root DEBUG Side: ON	 Angle(dx0, dx): 26.94 deg 	 Angle(n, nold): 27.08 deg 	 Distance in patch: 2.937E-06 	 Total distance: 6.264E-02 	 Future toggles: 0 	 Past toggles: 8 	 Toggled: [[1, array([221], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:17,338 root DEBUG Got stuck in too many past-layer relus.
10:10:17,484 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:10:17,484 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:10:17,486 root DEBUG 

=================== Experiment ID #74 	 Dual Point ID: 93 ===================
10:10:17,519 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.606E-07|<1.000E-06)
10:10:17,519 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:18,45 root DEBUG Side: ON	 Angle(dx0, dx): 1.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.754E-02 	 Total distance: 8.754E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([183], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:18,290 root DEBUG Side: ON	 Angle(dx0, dx): 24.95 deg 	 Angle(n, nold): 25.79 deg 	 Distance in patch: 1.374E-03 	 Total distance: 8.891E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([30], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:18,489 root DEBUG Side: ON	 Angle(dx0, dx): 24.95 deg 	 Angle(n, nold): 25.79 deg 	 Distance in patch: 6.216E-06 	 Total distance: 8.892E-02 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([30], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:18,640 root DEBUG Side: ON	 Angle(dx0, dx): 24.95 deg 	 Angle(n, nold): 25.79 deg 	 Distance in patch: 8.865E-08 	 Total distance: 8.892E-02 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([30], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:18,903 root DEBUG Side: ON	 Angle(dx0, dx): 24.95 deg 	 Angle(n, nold): 25.79 deg 	 Distance in patch: 3.108E-06 	 Total distance: 8.892E-02 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([30], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:19,116 root DEBUG Side: ON	 Angle(dx0, dx): 24.95 deg 	 Angle(n, nold): 25.79 deg 	 Distance in patch: 8.865E-08 	 Total distance: 8.892E-02 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([30], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:19,285 root DEBUG Side: ON	 Angle(dx0, dx): 24.95 deg 	 Angle(n, nold): 25.79 deg 	 Distance in patch: 2.331E-06 	 Total distance: 8.892E-02 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([30], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:19,438 root DEBUG Side: ON	 Angle(dx0, dx): 24.95 deg 	 Angle(n, nold): 25.79 deg 	 Distance in patch: 8.865E-08 	 Total distance: 8.892E-02 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([30], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:19,632 root DEBUG Side: ON	 Angle(dx0, dx): 24.95 deg 	 Angle(n, nold): 25.79 deg 	 Distance in patch: 2.331E-06 	 Total distance: 8.893E-02 	 Future toggles: 0 	 Past toggles: 6 	 Toggled: [[1, array([30], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:19,638 root DEBUG Got stuck in too many past-layer relus.
10:10:19,792 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:10:19,792 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:10:19,794 root DEBUG 

=================== Experiment ID #74 	 Dual Point ID: 94 ===================
10:10:19,811 root DEBUG CONTROL: 	 WARNING! 	 (target neuron output > tolerance: |3.951E-06|>1.000E-06)
10:10:19,811 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:19,811 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:19,813 root DEBUG 

=================== Experiment ID #74 	 Dual Point ID: 95 ===================
10:10:19,852 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.260E-07|<1.000E-06)
10:10:19,852 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:20,376 root DEBUG Side: ON	 Angle(dx0, dx): 2.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.833E-02 	 Total distance: 5.833E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([17], dtype=int64), array([[False]])]] 	 class: [2 5]
10:10:20,729 root DEBUG Side: OFF	 Angle(dx0, dx): 0.94 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.199E-02 	 Total distance: 1.199E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([24], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:10:21,3 root DEBUG Side: OFF	 Angle(dx0, dx): 0.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.151E-02 	 Total distance: 3.350E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([47], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:10:21,3 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:21,3 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -27.04 	 cIDON = [2 5], cIDOFF = [2 5]
10:10:21,3 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:21,4 root DEBUG dOFF/dON = 0.6
10:10:21,4 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.94634781907273, 'dON1': 0.05832752286598536, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.05832752286598536, 'nTON': 1, 'dON': 0.05832752286598536, 'dxOFFAngle': 80.37931605379879, 'dOFF1': 0.0334969707571314, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.0334969707571314, 'nTOFF': 1, 'dOFF': 0.0334969707571314, 'SUCCESS': False}
10:10:21,11 root DEBUG 

=================== Experiment ID #75 	 Dual Point ID: 96 ===================
10:10:21,41 root DEBUG CONTROL: 	 WARNING! 	 (target neuron output > tolerance: |1.061E-06|>1.000E-06)
10:10:21,41 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:21,41 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:21,42 root DEBUG 

=================== Experiment ID #75 	 Dual Point ID: 97 ===================
10:10:21,69 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.184E-07|<1.000E-06)
10:10:21,70 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:21,520 root DEBUG Side: ON	 Angle(dx0, dx): 1.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.099E-01 	 Total distance: 1.099E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([0], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:22,3 root DEBUG Side: OFF	 Angle(dx0, dx): 5.66 deg 	 Angle(n, nold): 1.34 deg 	 Distance in patch: 3.419E-02 	 Total distance: 3.419E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([133], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:22,186 root DEBUG Side: OFF	 Angle(dx0, dx): 4.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.567E-03 	 Total distance: 3.676E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([62], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:22,186 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:22,186 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -49.87 	 cIDON = [3 6], cIDOFF = [3 6]
10:10:22,187 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:22,187 root DEBUG dOFF/dON = 0.3
10:10:22,187 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 50.39781955791349, 'dON1': 0.10987262512190074, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.10987262512190074, 'nTON': 1, 'dON': 0.10987262512190074, 'dxOFFAngle': 62.29130147540688, 'dOFF1': 0.03675604197428051, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.03675604197428051, 'nTOFF': 1, 'dOFF': 0.03675604197428051, 'SUCCESS': False}
10:10:22,192 root DEBUG 

=================== Experiment ID #76 	 Dual Point ID: 98 ===================
10:10:22,220 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.166E-08|<1.000E-06)
10:10:22,220 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:22,692 root DEBUG Side: ON	 Angle(dx0, dx): 1.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.320E-02 	 Total distance: 1.320E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([45], dtype=int64), array([[ True]])]] 	 class: [5 8]
10:10:23,57 root DEBUG Side: OFF	 Angle(dx0, dx): 0.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.162E-02 	 Total distance: 4.162E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([1], dtype=int64), array([[False]])]] 	 class: [5 8]
10:10:23,58 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:23,58 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 51.85 	 cIDON = [5 8], cIDOFF = [5 8]
10:10:23,58 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:23,58 root DEBUG dOFF/dON = 3.2
10:10:23,58 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.57896934712579, 'dON1': 0.013196320777045236, 'cIDON1': array([5, 8], dtype=int64), 'dON_patch_1': 0.013196320777045236, 'nTON': 1, 'dON': 0.013196320777045236, 'dxOFFAngle': 86.07044632515591, 'dOFF1': 0.041616059190438405, 'cIDOFF1': array([5, 8], dtype=int64), 'dOFF_patch_1': 0.041616059190438405, 'nTOFF': 1, 'dOFF': 0.041616059190438405, 'SUCCESS': True}
10:10:23,68 root DEBUG 

=================== Experiment ID #77 	 Dual Point ID: 99 ===================
10:10:23,105 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.406E-07|<1.000E-06)
10:10:23,106 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:23,518 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.932E-02 	 Total distance: 3.932E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([137], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:10:23,969 root DEBUG Side: OFF	 Angle(dx0, dx): 1.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.847E-02 	 Total distance: 3.847E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([125], dtype=int64), array([[False]])]] 	 class: [5 9]
10:10:23,970 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:23,970 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -1.10 	 cIDON = [5 9], cIDOFF = [5 9]
10:10:23,970 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:23,970 root DEBUG dOFF/dON = 1.0
10:10:23,970 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.44501284062045, 'dON1': 0.03932417098191984, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.03932417098191984, 'nTON': 1, 'dON': 0.03932417098191984, 'dxOFFAngle': 87.77779905677012, 'dOFF1': 0.03847060665632016, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.03847060665632016, 'nTOFF': 1, 'dOFF': 0.03847060665632016, 'SUCCESS': False}
10:10:23,981 root DEBUG 

=================== Experiment ID #78 	 Dual Point ID: 100 ===================
10:10:24,12 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.298E-08|<1.000E-06)
10:10:24,12 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:24,368 root DEBUG Side: ON	 Angle(dx0, dx): 2.71 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.897E-02 	 Total distance: 1.897E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([50], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:24,764 root DEBUG Side: OFF	 Angle(dx0, dx): 1.86 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.156E-01 	 Total distance: 2.156E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([57], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:24,764 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:24,764 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 83.82 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:24,764 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:24,764 root DEBUG dOFF/dON = 11.4
10:10:24,764 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 77.04865272992173, 'dON1': 0.018971437119962686, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.018971437119962686, 'nTON': 1, 'dON': 0.018971437119962686, 'dxOFFAngle': 86.06743859451258, 'dOFF1': 0.21556246562736686, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.21556246562736686, 'nTOFF': 1, 'dOFF': 0.21556246562736686, 'SUCCESS': True}
10:10:24,771 root DEBUG 

=================== Experiment ID #79 	 Dual Point ID: 101 ===================
10:10:24,803 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.044E-07|<1.000E-06)
10:10:24,804 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:25,279 root DEBUG Side: ON	 Angle(dx0, dx): 0.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.870E-03 	 Total distance: 4.870E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([92], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:25,505 root DEBUG Side: ON	 Angle(dx0, dx): 5.93 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.431E-02 	 Total distance: 5.918E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([13], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:25,831 root DEBUG Side: ON	 Angle(dx0, dx): 3.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.756E-02 	 Total distance: 9.674E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([14], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:26,211 root DEBUG Side: OFF	 Angle(dx0, dx): 1.71 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.509E-02 	 Total distance: 5.509E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([83], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:26,453 root DEBUG Side: OFF	 Angle(dx0, dx): 2.78 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.980E-02 	 Total distance: 1.149E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([82], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:26,454 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:26,454 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 8.57 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:26,454 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:26,454 root DEBUG dOFF/dON = 1.2
10:10:26,454 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 61.64567277735922, 'dON1': 0.096739234987039, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.096739234987039, 'nTON': 1, 'dON': 0.096739234987039, 'dxOFFAngle': 57.00158151878747, 'dOFF1': 0.11488066414338116, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.11488066414338116, 'nTOFF': 1, 'dOFF': 0.11488066414338116, 'SUCCESS': True}
10:10:26,464 root DEBUG 

=================== Experiment ID #80 	 Dual Point ID: 102 ===================
10:10:26,485 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.816E-07|<1.000E-06)
10:10:26,485 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:26,914 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.603E-02 	 Total distance: 4.603E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([85], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:27,302 root DEBUG Side: OFF	 Angle(dx0, dx): 3.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.820E-03 	 Total distance: 3.820E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([215], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:27,620 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.109E-02 	 Total distance: 7.491E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([47], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:27,826 root DEBUG Side: OFF	 Angle(dx0, dx): 8.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.254E-02 	 Total distance: 8.746E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([58], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:27,826 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:27,826 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 31.04 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:27,826 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:27,826 root DEBUG dOFF/dON = 1.9
10:10:27,826 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.67886258260228, 'dON1': 0.04602704828683911, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.04602704828683911, 'nTON': 1, 'dON': 0.04602704828683911, 'dxOFFAngle': 80.09471072101219, 'dOFF1': 0.08745636728407297, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.08745636728407297, 'nTOFF': 1, 'dOFF': 0.08745636728407297, 'SUCCESS': True}
10:10:27,836 root DEBUG 

=================== Experiment ID #81 	 Dual Point ID: 103 ===================
10:10:27,863 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.503E-07|<1.000E-06)
10:10:27,863 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:28,230 root DEBUG Side: ON	 Angle(dx0, dx): 1.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.195E-02 	 Total distance: 5.195E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([0], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:28,648 root DEBUG Side: OFF	 Angle(dx0, dx): 2.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.652E-03 	 Total distance: 2.652E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([44], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:28,648 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:28,648 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -90.28 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:28,648 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:28,648 root DEBUG dOFF/dON = 0.1
10:10:28,648 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.68970008210577, 'dON1': 0.05194575977182579, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.05194575977182579, 'nTON': 1, 'dON': 0.05194575977182579, 'dxOFFAngle': 87.3876828398788, 'dOFF1': 0.002652459706267903, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.002652459706267903, 'nTOFF': 1, 'dOFF': 0.002652459706267903, 'SUCCESS': False}
10:10:28,655 root DEBUG 

=================== Experiment ID #82 	 Dual Point ID: 104 ===================
10:10:28,685 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.509E-07|<1.000E-06)
10:10:28,685 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:29,123 root DEBUG Side: ON	 Angle(dx0, dx): 6.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.126E-02 	 Total distance: 3.126E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([126], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:10:29,384 root DEBUG Side: ON	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.065E-01 	 Total distance: 1.378E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([31], dtype=int64), array([[False]])]] 	 class: [2 9]
10:10:29,778 root DEBUG Side: OFF	 Angle(dx0, dx): 3.26 deg 	 Angle(n, nold): 0.89 deg 	 Distance in patch: 2.960E-02 	 Total distance: 2.960E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([43], dtype=int64), array([[False]])]] 	 class: [2 9]
10:10:29,976 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.056E-02 	 Total distance: 5.016E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([40], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:10:29,976 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:29,976 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -46.63 	 cIDON = [2 9], cIDOFF = [2 9]
10:10:29,976 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:29,976 root DEBUG dOFF/dON = 0.4
10:10:29,976 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 74.1967283479069, 'dON1': 0.13780720295049054, 'cIDON1': array([2, 9], dtype=int64), 'dON_patch_1': 0.13780720295049054, 'nTON': 1, 'dON': 0.13780720295049054, 'dxOFFAngle': 86.28446557215482, 'dOFF1': 0.050160549564974635, 'cIDOFF1': array([2, 9], dtype=int64), 'dOFF_patch_1': 0.050160549564974635, 'nTOFF': 1, 'dOFF': 0.050160549564974635, 'SUCCESS': False}
10:10:29,984 root DEBUG 

=================== Experiment ID #83 	 Dual Point ID: 105 ===================
10:10:30,20 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.755E-07|<1.000E-06)
10:10:30,20 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:30,414 root DEBUG Side: ON	 Angle(dx0, dx): 7.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.167E-02 	 Total distance: 4.167E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([17], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:10:30,852 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.605E-03 	 Total distance: 3.605E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([52], dtype=int64), array([[False]])]] 	 class: [1 9]
10:10:30,853 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:30,853 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -84.08 	 cIDON = [0 9], cIDOFF = [1 9]
10:10:30,853 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:30,853 root DEBUG dOFF/dON = 0.1
10:10:30,853 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.30551280731655, 'dON1': 0.04166954363122031, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.04166954363122031, 'nTON': 1, 'dON': 0.04166954363122031, 'dxOFFAngle': 80.8661144986346, 'dOFF1': 0.003604797083584703, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.003604797083584703, 'nTOFF': 1, 'dOFF': 0.003604797083584703, 'SUCCESS': False}
10:10:30,863 root DEBUG 

=================== Experiment ID #84 	 Dual Point ID: 106 ===================
10:10:30,890 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.283E-07|<1.000E-06)
10:10:30,891 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:31,314 root DEBUG Side: ON	 Angle(dx0, dx): 6.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.338E-02 	 Total distance: 3.338E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([4], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:10:31,662 root DEBUG Side: OFF	 Angle(dx0, dx): 5.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.313E-02 	 Total distance: 7.313E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([48], dtype=int64), array([[False]])]] 	 class: [4 7]
10:10:31,662 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:31,662 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 37.32 	 cIDON = [4 7], cIDOFF = [4 7]
10:10:31,662 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:31,662 root DEBUG dOFF/dON = 2.2
10:10:31,662 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.03690547429972, 'dON1': 0.033384230237033005, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.033384230237033005, 'nTON': 1, 'dON': 0.033384230237033005, 'dxOFFAngle': 83.62526734193611, 'dOFF1': 0.07313386215245152, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.07313386215245152, 'nTOFF': 1, 'dOFF': 0.07313386215245152, 'SUCCESS': True}
10:10:31,670 root DEBUG 

=================== Experiment ID #85 	 Dual Point ID: 107 ===================
10:10:31,697 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.464E-07|<1.000E-06)
10:10:31,697 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:32,19 root DEBUG Side: ON	 Angle(dx0, dx): 14.10 deg 	 Angle(n, nold): 8.98 deg 	 Distance in patch: 1.885E-02 	 Total distance: 1.885E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([197], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:32,255 root DEBUG Side: ON	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.226E-03 	 Total distance: 2.308E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([171], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:32,663 root DEBUG Side: OFF	 Angle(dx0, dx): 0.83 deg 	 Angle(n, nold): 9.25 deg 	 Distance in patch: 9.869E-02 	 Total distance: 9.869E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([117], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:32,895 root DEBUG Side: OFF	 Angle(dx0, dx): 38.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.884E-02 	 Total distance: 1.175E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([1, 9], dtype=int64), array([[1.],
       [0.]])]] 	 class: [1 8]
10:10:32,896 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:32,896 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 67.17 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:32,896 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:32,896 root DEBUG dOFF/dON = 5.1
10:10:32,896 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 61.08446183096501, 'dON1': 0.023077456616647143, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.023077456616647143, 'nTON': 1, 'dON': 0.023077456616647143, 'dxOFFAngle': 61.68672181274374, 'dOFF1': 0.11753000342255236, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.11753000342255236, 'nTOFF': 1, 'dOFF': 0.11753000342255236, 'SUCCESS': True}
10:10:32,905 root DEBUG 

=================== Experiment ID #86 	 Dual Point ID: 108 ===================
10:10:32,936 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.095E-07|<1.000E-06)
10:10:32,936 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:33,349 root DEBUG Side: ON	 Angle(dx0, dx): 2.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.878E-03 	 Total distance: 2.878E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([19], dtype=int64), array([[False]])]] 	 class: [6 8]
10:10:33,867 root DEBUG Side: OFF	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.986E-02 	 Total distance: 3.986E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([51], dtype=int64), array([[ True]])]] 	 class: [6 8]
10:10:33,868 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:33,868 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 86.53 	 cIDON = [6 8], cIDOFF = [6 8]
10:10:33,868 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:33,868 root DEBUG dOFF/dON = 13.8
10:10:33,868 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.03926902553988, 'dON1': 0.002878222879061663, 'cIDON1': array([6, 8], dtype=int64), 'dON_patch_1': 0.002878222879061663, 'nTON': 1, 'dON': 0.002878222879061663, 'dxOFFAngle': 87.28517004422672, 'dOFF1': 0.03985803121847688, 'cIDOFF1': array([6, 8], dtype=int64), 'dOFF_patch_1': 0.03985803121847688, 'nTOFF': 1, 'dOFF': 0.03985803121847688, 'SUCCESS': True}
10:10:33,883 root DEBUG 

=================== Experiment ID #87 	 Dual Point ID: 109 ===================
10:10:33,921 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.993E-07|<1.000E-06)
10:10:33,921 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:34,317 root DEBUG Side: ON	 Angle(dx0, dx): 21.12 deg 	 Angle(n, nold): 21.93 deg 	 Distance in patch: 7.018E-02 	 Total distance: 7.018E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([30], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:34,535 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.339E-04 	 Total distance: 7.042E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([37], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:34,793 root DEBUG Side: ON	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.57 deg 	 Distance in patch: 2.263E-02 	 Total distance: 9.305E-02 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([3], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:35,21 root DEBUG Side: ON	 Angle(dx0, dx): 5.97 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.572E-02 	 Total distance: 1.588E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([41], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:35,424 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 21.91 deg 	 Distance in patch: 3.401E-03 	 Total distance: 3.401E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([79], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:35,728 root DEBUG Side: OFF	 Angle(dx0, dx): 3.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.130E-02 	 Total distance: 4.470E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([166], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:35,970 root DEBUG Side: OFF	 Angle(dx0, dx): 4.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.254E-01 	 Total distance: 1.701E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([229], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:35,970 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:35,970 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 3.44 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:35,970 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:35,970 root DEBUG dOFF/dON = 1.1
10:10:35,970 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.13465471168091, 'dON1': 0.15877551610939375, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.15877551610939375, 'nTON': 1, 'dON': 0.15877551610939375, 'dxOFFAngle': 67.02777641482994, 'dOFF1': 0.17009567115104052, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.17009567115104052, 'nTOFF': 1, 'dOFF': 0.17009567115104052, 'SUCCESS': True}
10:10:35,977 root DEBUG 

=================== Experiment ID #88 	 Dual Point ID: 110 ===================
10:10:35,994 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.697E-07|<1.000E-06)
10:10:35,994 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:36,315 root DEBUG Side: ON	 Angle(dx0, dx): 4.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.526E-07 	 Total distance: 3.526E-07 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 9]
10:10:36,563 root DEBUG Side: ON	 Angle(dx0, dx): 0.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.949E-02 	 Total distance: 7.949E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([186], dtype=int64), array([[False]])]] 	 class: [0 9]
10:10:36,795 root DEBUG Side: ON	 Angle(dx0, dx): 3.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.789E-02 	 Total distance: 9.738E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([242], dtype=int64), array([[False]])]] 	 class: [0 9]
10:10:37,200 root DEBUG Side: OFF	 Angle(dx0, dx): 0.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.983E-02 	 Total distance: 7.983E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([20], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:10:37,200 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:37,201 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -9.90 	 cIDON = [0 9], cIDOFF = [1 9]
10:10:37,201 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:37,201 root DEBUG dOFF/dON = 0.8
10:10:37,201 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.49306991767287, 'dON1': 0.09737858624673712, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.09737858624673712, 'nTON': 1, 'dON': 0.09737858624673712, 'dxOFFAngle': 83.81470462163784, 'dOFF1': 0.0798328667746904, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.0798328667746904, 'nTOFF': 1, 'dOFF': 0.0798328667746904, 'SUCCESS': False}
10:10:37,210 root DEBUG 

=================== Experiment ID #89 	 Dual Point ID: 111 ===================
10:10:37,243 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.229E-07|<1.000E-06)
10:10:37,244 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:37,668 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.821E-02 	 Total distance: 5.821E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([33], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:37,959 root DEBUG Side: ON	 Angle(dx0, dx): 1.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.793E-02 	 Total distance: 9.614E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([90], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:38,198 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.024E-02 	 Total distance: 1.564E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([220], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:38,520 root DEBUG Side: OFF	 Angle(dx0, dx): 22.68 deg 	 Angle(n, nold): 23.91 deg 	 Distance in patch: 1.118E-01 	 Total distance: 1.118E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([30], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:38,772 root DEBUG Side: OFF	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.40 deg 	 Distance in patch: 6.455E-03 	 Total distance: 1.183E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([46], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:38,987 root DEBUG Side: OFF	 Angle(dx0, dx): 0.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.570E-02 	 Total distance: 2.140E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[2, array([143], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:39,215 root DEBUG Side: OFF	 Angle(dx0, dx): 2.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.918E-02 	 Total distance: 2.831E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([11], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:39,216 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:39,216 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 28.84 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:39,216 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:39,216 root DEBUG dOFF/dON = 1.8
10:10:39,216 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.92424028531612, 'dON1': 0.15637621526585416, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.15637621526585416, 'nTON': 1, 'dON': 0.15637621526585416, 'dxOFFAngle': 80.10137951926819, 'dOFF1': 0.28314103054754747, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.28314103054754747, 'nTOFF': 1, 'dOFF': 0.28314103054754747, 'SUCCESS': True}
10:10:39,227 root DEBUG 

=================== Experiment ID #90 	 Dual Point ID: 112 ===================
10:10:39,266 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.479E-07|<1.000E-06)
10:10:39,267 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:39,685 root DEBUG Side: ON	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.748E-01 	 Total distance: 1.748E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([248], dtype=int64), array([[False]])]] 	 class: [0 8]
10:10:39,978 root DEBUG Side: ON	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.773E-03 	 Total distance: 1.806E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([40], dtype=int64), array([[False]])]] 	 class: [0 8]
10:10:40,383 root DEBUG Side: OFF	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.862E-02 	 Total distance: 2.862E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([132], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:10:40,638 root DEBUG Side: OFF	 Angle(dx0, dx): 19.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.078E-03 	 Total distance: 3.169E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:10:40,638 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:40,639 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -70.14 	 cIDON = [0 8], cIDOFF = [1 8]
10:10:40,639 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:40,639 root DEBUG dOFF/dON = 0.2
10:10:40,639 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.05368240456895, 'dON1': 0.18061911704122885, 'cIDON1': array([0, 8], dtype=int64), 'dON_patch_1': 0.18061911704122885, 'nTON': 1, 'dON': 0.18061911704122885, 'dxOFFAngle': 70.42214659388881, 'dOFF1': 0.03169486327383797, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 0.03169486327383797, 'nTOFF': 1, 'dOFF': 0.03169486327383797, 'SUCCESS': False}
10:10:40,645 root DEBUG 

=================== Experiment ID #91 	 Dual Point ID: 113 ===================
10:10:40,682 root DEBUG CONTROL: 	 WARNING! 	 (target neuron output > tolerance: |1.020E-06|>1.000E-06)
10:10:40,682 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:40,683 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:40,683 root DEBUG 

=================== Experiment ID #91 	 Dual Point ID: 114 ===================
10:10:40,716 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.228E-07|<1.000E-06)
10:10:40,717 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:41,162 root DEBUG Side: ON	 Angle(dx0, dx): 1.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.533E-02 	 Total distance: 6.533E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([218], dtype=int64), array([[False]])]] 	 class: [6 9]
10:10:41,520 root DEBUG Side: OFF	 Angle(dx0, dx): 2.52 deg 	 Angle(n, nold): 2.51 deg 	 Distance in patch: 8.159E-02 	 Total distance: 8.159E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([198], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:10:41,764 root DEBUG Side: OFF	 Angle(dx0, dx): 3.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.056E-03 	 Total distance: 8.465E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([228], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:10:41,940 root DEBUG Side: OFF	 Angle(dx0, dx): 1.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.657E-04 	 Total distance: 8.492E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([6], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:10:41,941 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:41,941 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 13.04 	 cIDON = [6 9], cIDOFF = [6 9]
10:10:41,941 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:41,941 root DEBUG dOFF/dON = 1.3
10:10:41,941 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.63083986528288, 'dON1': 0.0653279394523046, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.0653279394523046, 'nTON': 1, 'dON': 0.0653279394523046, 'dxOFFAngle': 73.88998461306085, 'dOFF1': 0.08491646771330066, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.08491646771330066, 'nTOFF': 1, 'dOFF': 0.08491646771330066, 'SUCCESS': True}
10:10:41,950 root DEBUG 

=================== Experiment ID #92 	 Dual Point ID: 115 ===================
10:10:41,989 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.600E-07|<1.000E-06)
10:10:41,989 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:42,417 root DEBUG Side: ON	 Angle(dx0, dx): 15.26 deg 	 Angle(n, nold): 17.77 deg 	 Distance in patch: 7.269E-02 	 Total distance: 7.269E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([80], dtype=int64), array([[False]])]] 	 class: [2 9]
10:10:42,665 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.157E-03 	 Total distance: 7.385E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([35], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:10:43,23 root DEBUG Side: OFF	 Angle(dx0, dx): 3.61 deg 	 Angle(n, nold): 17.77 deg 	 Distance in patch: 1.104E-01 	 Total distance: 1.104E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([37], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:10:43,310 root DEBUG Side: OFF	 Angle(dx0, dx): 1.87 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.662E-02 	 Total distance: 1.570E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([82], dtype=int64), array([[False]])]] 	 class: [2 9]
10:10:43,573 root DEBUG Side: OFF	 Angle(dx0, dx): 3.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.086E-01 	 Total distance: 2.656E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([24], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:10:43,574 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:43,574 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 56.48 	 cIDON = [2 9], cIDOFF = [2 9]
10:10:43,574 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:43,574 root DEBUG dOFF/dON = 3.6
10:10:43,574 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 65.14694518705349, 'dON1': 0.07384500168125378, 'cIDON1': array([2, 9], dtype=int64), 'dON_patch_1': 0.07384500168125378, 'nTON': 1, 'dON': 0.07384500168125378, 'dxOFFAngle': 64.65425058056752, 'dOFF1': 0.26555261019993587, 'cIDOFF1': array([2, 9], dtype=int64), 'dOFF_patch_1': 0.26555261019993587, 'nTOFF': 1, 'dOFF': 0.26555261019993587, 'SUCCESS': True}
10:10:43,585 root DEBUG 

=================== Experiment ID #93 	 Dual Point ID: 116 ===================
10:10:43,612 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.160E-07|<1.000E-06)
10:10:43,612 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:44,89 root DEBUG Side: ON	 Angle(dx0, dx): 4.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.425E-02 	 Total distance: 4.425E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([31], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:10:44,317 root DEBUG Side: ON	 Angle(dx0, dx): 3.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.380E-02 	 Total distance: 5.805E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([14], dtype=int64), array([[False]])]] 	 class: [3 8]
10:10:44,747 root DEBUG Side: OFF	 Angle(dx0, dx): 1.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.882E-01 	 Total distance: 1.882E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([87], dtype=int64), array([[False]])]] 	 class: [3 8]
10:10:44,747 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:44,747 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 52.86 	 cIDON = [3 8], cIDOFF = [3 8]
10:10:44,748 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:44,748 root DEBUG dOFF/dON = 3.2
10:10:44,748 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 68.7468374189345, 'dON1': 0.05804754083269095, 'cIDON1': array([3, 8], dtype=int64), 'dON_patch_1': 0.05804754083269095, 'nTON': 1, 'dON': 0.05804754083269095, 'dxOFFAngle': 84.18896524090886, 'dOFF1': 0.18822224879255064, 'cIDOFF1': array([3, 8], dtype=int64), 'dOFF_patch_1': 0.18822224879255064, 'nTOFF': 1, 'dOFF': 0.18822224879255064, 'SUCCESS': True}
10:10:44,762 root DEBUG 

=================== Experiment ID #94 	 Dual Point ID: 117 ===================
10:10:44,799 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.717E-07|<1.000E-06)
10:10:44,799 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:45,218 root DEBUG Side: ON	 Angle(dx0, dx): 2.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.158E-01 	 Total distance: 1.158E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([55], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:10:45,579 root DEBUG Side: OFF	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.541E-01 	 Total distance: 3.541E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([252], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:10:45,823 root DEBUG Side: OFF	 Angle(dx0, dx): 4.20 deg 	 Angle(n, nold): 3.60 deg 	 Distance in patch: 1.963E-02 	 Total distance: 3.737E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([106], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:10:46,8 root DEBUG Side: OFF	 Angle(dx0, dx): 4.20 deg 	 Angle(n, nold): 3.60 deg 	 Distance in patch: 6.977E-08 	 Total distance: 3.737E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([106], dtype=int64), array([[False]])]] 	 class: [3 8]
10:10:46,210 root DEBUG Side: OFF	 Angle(dx0, dx): 4.20 deg 	 Angle(n, nold): 3.60 deg 	 Distance in patch: 6.983E-08 	 Total distance: 3.737E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([106], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:10:46,404 root DEBUG Side: OFF	 Angle(dx0, dx): 4.20 deg 	 Angle(n, nold): 3.60 deg 	 Distance in patch: 6.977E-08 	 Total distance: 3.737E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([106], dtype=int64), array([[False]])]] 	 class: [3 8]
10:10:46,415 root DEBUG Got stuck in too many past-layer relus.
10:10:46,415 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:10:46,415 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:10:46,417 root DEBUG 

=================== Experiment ID #94 	 Dual Point ID: 118 ===================
10:10:46,451 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.075E-07|<1.000E-06)
10:10:46,452 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:46,869 root DEBUG Side: ON	 Angle(dx0, dx): 1.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.506E-02 	 Total distance: 3.506E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([26], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:10:47,380 root DEBUG Side: OFF	 Angle(dx0, dx): 3.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.259E-01 	 Total distance: 1.259E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([2], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:10:47,380 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:47,381 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 56.43 	 cIDON = [3 8], cIDOFF = [3 8]
10:10:47,381 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:47,381 root DEBUG dOFF/dON = 3.6
10:10:47,381 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 72.54427634702525, 'dON1': 0.03505503575098808, 'cIDON1': array([3, 8], dtype=int64), 'dON_patch_1': 0.03505503575098808, 'nTON': 1, 'dON': 0.03505503575098808, 'dxOFFAngle': 82.78051045417465, 'dOFF1': 0.12585837164517644, 'cIDOFF1': array([3, 8], dtype=int64), 'dOFF_patch_1': 0.12585837164517644, 'nTOFF': 1, 'dOFF': 0.12585837164517644, 'SUCCESS': True}
10:10:47,392 root DEBUG 

=================== Experiment ID #95 	 Dual Point ID: 119 ===================
10:10:47,414 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.620E-07|<1.000E-06)
10:10:47,414 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:47,808 root DEBUG Side: ON	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.29 deg 	 Distance in patch: 3.720E-03 	 Total distance: 3.720E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([203], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:10:48,115 root DEBUG Side: ON	 Angle(dx0, dx): 5.88 deg 	 Angle(n, nold): 5.98 deg 	 Distance in patch: 1.525E-02 	 Total distance: 1.897E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([2], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:10:48,325 root DEBUG Side: ON	 Angle(dx0, dx): 2.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.503E-03 	 Total distance: 2.248E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([58], dtype=int64), array([[False]])]] 	 class: [2 3]
10:10:48,802 root DEBUG Side: OFF	 Angle(dx0, dx): 3.07 deg 	 Angle(n, nold): 5.98 deg 	 Distance in patch: 5.364E-03 	 Total distance: 5.364E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([185], dtype=int64), array([[False]])]] 	 class: [2 3]
10:10:48,803 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:48,803 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -61.46 	 cIDON = [2 3], cIDOFF = [2 3]
10:10:48,803 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:48,803 root DEBUG dOFF/dON = 0.2
10:10:48,803 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.00505782106421, 'dON1': 0.02247573800392745, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.02247573800392745, 'nTON': 1, 'dON': 0.02247573800392745, 'dxOFFAngle': 81.40881517330956, 'dOFF1': 0.00536408554581341, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.00536408554581341, 'nTOFF': 1, 'dOFF': 0.00536408554581341, 'SUCCESS': False}
10:10:48,815 root DEBUG 

=================== Experiment ID #96 	 Dual Point ID: 120 ===================
10:10:48,855 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.175E-07|<1.000E-06)
10:10:48,856 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:49,368 root DEBUG Side: ON	 Angle(dx0, dx): 0.88 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.717E-02 	 Total distance: 3.717E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([50], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:10:49,760 root DEBUG Side: OFF	 Angle(dx0, dx): 3.60 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.133E-02 	 Total distance: 7.133E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([81], dtype=int64), array([[False]])]] 	 class: [2 3]
10:10:49,760 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:49,761 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 31.49 	 cIDON = [2 3], cIDOFF = [2 3]
10:10:49,761 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:49,761 root DEBUG dOFF/dON = 1.9
10:10:49,761 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.90591566957248, 'dON1': 0.037167452038767264, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.037167452038767264, 'nTON': 1, 'dON': 0.037167452038767264, 'dxOFFAngle': 89.54417258719539, 'dOFF1': 0.071333624590483, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.071333624590483, 'nTOFF': 1, 'dOFF': 0.071333624590483, 'SUCCESS': True}
10:10:49,772 root DEBUG 

=================== Experiment ID #97 	 Dual Point ID: 121 ===================
10:10:49,801 root DEBUG CONTROL: 	 WARNING! 	 (target neuron output > tolerance: |1.160E-06|>1.000E-06)
10:10:49,801 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:49,801 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:49,802 root DEBUG 

=================== Experiment ID #97 	 Dual Point ID: 122 ===================
10:10:49,841 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.724E-08|<1.000E-06)
10:10:49,841 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:50,279 root DEBUG Side: ON	 Angle(dx0, dx): 9.93 deg 	 Angle(n, nold): 7.44 deg 	 Distance in patch: 3.769E-02 	 Total distance: 3.769E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([50], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:10:50,432 root DEBUG Side: ON	 Angle(dx0, dx): 9.93 deg 	 Angle(n, nold): 7.44 deg 	 Distance in patch: 1.799E-07 	 Total distance: 3.769E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([50], dtype=int64), array([[False]])]] 	 class: [5 6]
10:10:50,623 root DEBUG Side: ON	 Angle(dx0, dx): 9.93 deg 	 Angle(n, nold): 7.44 deg 	 Distance in patch: 1.814E-07 	 Total distance: 3.769E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([50], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:10:50,816 root DEBUG Side: ON	 Angle(dx0, dx): 9.93 deg 	 Angle(n, nold): 7.44 deg 	 Distance in patch: 8.996E-08 	 Total distance: 3.769E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([50], dtype=int64), array([[False]])]] 	 class: [5 6]
10:10:50,835 root DEBUG Got stuck in too many past-layer relus.
10:10:51,43 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:10:51,43 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:10:51,45 root DEBUG 

=================== Experiment ID #97 	 Dual Point ID: 123 ===================
10:10:51,85 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.937E-07|<1.000E-06)
10:10:51,86 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:51,485 root DEBUG Side: ON	 Angle(dx0, dx): 3.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.295E-02 	 Total distance: 9.295E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([50], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:51,869 root DEBUG Side: OFF	 Angle(dx0, dx): 0.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.695E-02 	 Total distance: 6.695E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([204], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:52,220 root DEBUG Side: OFF	 Angle(dx0, dx): 1.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.150E-02 	 Total distance: 1.184E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([21], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:52,552 root DEBUG Side: OFF	 Angle(dx0, dx): 5.69 deg 	 Angle(n, nold): 5.81 deg 	 Distance in patch: 9.086E-03 	 Total distance: 1.275E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([207], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:52,824 root DEBUG Side: OFF	 Angle(dx0, dx): 1.83 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.228E-03 	 Total distance: 1.308E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[2, array([101], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:53,130 root DEBUG Side: OFF	 Angle(dx0, dx): 1.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.572E-02 	 Total distance: 1.765E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([148], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:53,130 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:53,131 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 31.00 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:53,131 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:53,131 root DEBUG dOFF/dON = 1.9
10:10:53,131 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 73.48881242304593, 'dON1': 0.09294879215066484, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.09294879215066484, 'nTON': 1, 'dON': 0.09294879215066484, 'dxOFFAngle': 80.10983784206586, 'dOFF1': 0.17647907819345704, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.17647907819345704, 'nTOFF': 1, 'dOFF': 0.17647907819345704, 'SUCCESS': True}
10:10:53,144 root DEBUG 

=================== Experiment ID #98 	 Dual Point ID: 124 ===================
10:10:53,187 root DEBUG CONTROL: 	 WARNING! 	 (target neuron output > tolerance: |1.030E-06|>1.000E-06)
10:10:53,187 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:53,187 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:53,187 root DEBUG 

=================== Experiment ID #98 	 Dual Point ID: 125 ===================
10:10:53,224 root DEBUG CONTROL: 	 WARNING! 	 (target neuron output > tolerance: |1.192E-06|>1.000E-06)
10:10:53,225 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:53,225 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:53,225 root DEBUG 

=================== Experiment ID #98 	 Dual Point ID: 126 ===================
10:10:53,263 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.525E-07|<1.000E-06)
10:10:53,263 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:53,748 root DEBUG Side: ON	 Angle(dx0, dx): 3.04 deg 	 Angle(n, nold): 3.44 deg 	 Distance in patch: 5.563E-03 	 Total distance: 5.563E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([178], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:53,922 root DEBUG Side: ON	 Angle(dx0, dx): 3.04 deg 	 Angle(n, nold): 3.44 deg 	 Distance in patch: 1.351E-07 	 Total distance: 5.563E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([178], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:54,143 root DEBUG Side: ON	 Angle(dx0, dx): 3.04 deg 	 Angle(n, nold): 3.44 deg 	 Distance in patch: 5.411E-07 	 Total distance: 5.564E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([178], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:54,296 root DEBUG Side: ON	 Angle(dx0, dx): 3.04 deg 	 Angle(n, nold): 3.44 deg 	 Distance in patch: 6.756E-08 	 Total distance: 5.564E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([178], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:54,311 root DEBUG Got stuck in too many past-layer relus.
10:10:54,489 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:10:54,489 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:10:54,490 root DEBUG 

=================== Experiment ID #98 	 Dual Point ID: 127 ===================
10:10:54,530 root DEBUG CONTROL: 	 WARNING! 	 (target neuron output > tolerance: |1.804E-06|>1.000E-06)
10:10:54,531 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:54,531 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:54,533 root DEBUG 

=================== Experiment ID #98 	 Dual Point ID: 128 ===================
10:10:54,560 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.246E-07|<1.000E-06)
10:10:54,560 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:54,966 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.04 deg 	 Distance in patch: 1.201E-01 	 Total distance: 1.201E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([87], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:55,177 root DEBUG Side: ON	 Angle(dx0, dx): 0.87 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.413E-04 	 Total distance: 1.204E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([165], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:55,622 root DEBUG Side: OFF	 Angle(dx0, dx): 0.84 deg 	 Angle(n, nold): 0.04 deg 	 Distance in patch: 1.263E-02 	 Total distance: 1.263E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([128], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:55,622 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:55,622 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -81.01 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:55,622 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:55,622 root DEBUG dOFF/dON = 0.1
10:10:55,622 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.30961782443077, 'dON1': 0.12039087175866371, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.12039087175866371, 'nTON': 1, 'dON': 0.12039087175866371, 'dxOFFAngle': 89.47743289073208, 'dOFF1': 0.012631531961426943, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.012631531961426943, 'nTOFF': 1, 'dOFF': 0.012631531961426943, 'SUCCESS': False}
10:10:55,631 root DEBUG 

=================== Experiment ID #99 	 Dual Point ID: 129 ===================
10:10:55,664 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.352E-07|<1.000E-06)
10:10:55,664 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:56,189 root DEBUG Side: ON	 Angle(dx0, dx): 2.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.351E-02 	 Total distance: 2.351E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([60], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:10:56,573 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.076E-02 	 Total distance: 1.076E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([32], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:10:56,899 root DEBUG Side: OFF	 Angle(dx0, dx): 2.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.612E-02 	 Total distance: 9.688E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([37], dtype=int64), array([[False]])]] 	 class: [1 8]
10:10:56,899 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:56,899 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 60.95 	 cIDON = [0 8], cIDOFF = [1 8]
10:10:56,899 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:56,899 root DEBUG dOFF/dON = 4.1
10:10:56,901 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.35804494746323, 'dON1': 0.02350621518764328, 'cIDON1': array([0, 8], dtype=int64), 'dON_patch_1': 0.02350621518764328, 'nTON': 1, 'dON': 0.02350621518764328, 'dxOFFAngle': 82.4986884013454, 'dOFF1': 0.09688160737282481, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 0.09688160737282481, 'nTOFF': 1, 'dOFF': 0.09688160737282481, 'SUCCESS': True}
10:10:56,912 root DEBUG 

=================== Experiment ID #100 	 Dual Point ID: 130 ===================
10:10:56,945 root DEBUG CONTROL: 	 WARNING! 	 (target neuron output > tolerance: |1.119E-06|>1.000E-06)
10:10:56,945 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:56,945 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:56,945 root DEBUG 

=================== Experiment ID #100 	 Dual Point ID: 131 ===================
10:10:56,975 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.331E-07|<1.000E-06)
10:10:56,976 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:57,408 root DEBUG Side: ON	 Angle(dx0, dx): 2.71 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.850E-02 	 Total distance: 9.850E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([2], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:57,778 root DEBUG Side: OFF	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.590E-01 	 Total distance: 1.590E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([94], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:57,980 root DEBUG Side: OFF	 Angle(dx0, dx): 2.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.183E-02 	 Total distance: 2.009E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([31], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:57,980 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:57,980 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 34.20 	 cIDON = [2 6], cIDOFF = [2 6]
10:10:57,982 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:57,982 root DEBUG dOFF/dON = 2.0
10:10:57,982 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.190473340222, 'dON1': 0.0984950601735077, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.0984950601735077, 'nTON': 1, 'dON': 0.0984950601735077, 'dxOFFAngle': 81.18666213685145, 'dOFF1': 0.20087010801451013, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.20087010801451013, 'nTOFF': 1, 'dOFF': 0.20087010801451013, 'SUCCESS': True}
10:10:57,997 root DEBUG 

=================== Experiment ID #101 	 Dual Point ID: 132 ===================
10:10:58,32 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.178E-07|<1.000E-06)
10:10:58,32 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:58,428 root DEBUG Side: ON	 Angle(dx0, dx): 1.79 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.067E-03 	 Total distance: 6.067E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([204], dtype=int64), array([[False]])]] 	 class: [3 8]
10:10:58,818 root DEBUG Side: OFF	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.039E-02 	 Total distance: 1.039E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([30], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:10:58,819 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:58,819 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 26.28 	 cIDON = [3 8], cIDOFF = [3 8]
10:10:58,819 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:58,819 root DEBUG dOFF/dON = 1.7
10:10:58,819 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.62019933076313, 'dON1': 0.006066782328168429, 'cIDON1': array([3, 8], dtype=int64), 'dON_patch_1': 0.006066782328168429, 'nTON': 1, 'dON': 0.006066782328168429, 'dxOFFAngle': 87.26871074044425, 'dOFF1': 0.010391308056118287, 'cIDOFF1': array([3, 8], dtype=int64), 'dOFF_patch_1': 0.010391308056118287, 'nTOFF': 1, 'dOFF': 0.010391308056118287, 'SUCCESS': True}
10:10:58,990 matplotlib.pyplot DEBUG Loaded backend tkagg version 8.6.
10:10:59,62 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:59,63 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:59,63 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:59,63 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:59,63 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 1189
10:10:59,71 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:59,72 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:59,72 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:59,72 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:59,72 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 2994
10:10:59,107 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:59,107 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:59,108 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:59,108 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:59,108 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 696
10:10:59,116 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:59,116 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:59,116 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:59,116 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:59,116 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 526
10:10:59,121 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:59,121 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:59,121 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:59,121 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:59,121 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 499
10:10:59,126 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:59,127 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:59,127 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:59,127 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:59,127 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 673
10:10:59,132 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:59,132 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:59,132 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:59,132 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:59,133 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 922
10:10:59,137 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:59,137 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:59,138 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:59,138 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:59,138 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 568
10:10:59,141 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:59,141 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:59,141 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:59,141 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:59,141 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 626
10:10:59,153 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
10:10:59,154 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,154 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,154 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:10:59,154 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:10:59,154 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:10:59,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,155 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:10:59,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:10:59,156 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:59,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:10:59,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:10:59,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,157 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:59,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:10:59,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:59,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,158 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:10:59,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:59,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,159 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,160 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:59,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:59,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:10:59,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:59,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,161 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:10:59,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:59,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:59,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:10:59,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:10:59,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:59,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,162 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:59,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:59,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:59,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,163 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:10:59,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:59,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:59,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,164 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:10:59,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:59,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:59,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:59,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:10:59,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:59,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,165 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:59,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:10:59,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:10:59,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:10:59,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:59,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:59,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:59,166 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,167 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:10:59,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,168 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:59,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:59,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:10:59,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,169 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:10:59,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:59,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,170 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:10:59,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:10:59,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:10:59,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:10:59,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,171 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:59,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:59,172 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:10:59,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:59,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,173 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:59,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:10:59,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:59,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:59,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,174 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,174 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
10:10:59,272 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
10:10:59,272 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,272 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,272 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:10:59,272 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:10:59,272 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,273 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,273 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,273 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,273 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,273 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,273 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,273 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,273 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:10:59,273 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,273 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,274 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,274 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,274 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,274 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,274 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,274 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,274 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,274 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,274 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,274 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,274 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,275 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,275 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,275 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,275 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,275 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,275 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,275 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,275 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,275 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,275 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:10:59,276 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,276 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,276 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,276 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,276 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,276 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,276 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,276 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,276 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:10:59,276 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,276 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,277 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,277 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,277 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,277 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,277 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:59,277 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,277 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,277 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:10:59,277 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,277 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,277 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,277 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,278 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:10:59,278 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,278 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,278 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,278 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,278 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,278 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,278 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,278 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,278 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,278 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,279 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,279 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,279 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,279 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,279 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,279 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,279 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,279 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:59,279 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,279 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,279 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:10:59,280 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,280 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,280 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,280 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,280 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,280 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,280 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,280 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,280 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:59,280 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,280 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,280 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,281 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:10:59,281 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,281 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,281 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,281 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,281 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,281 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,281 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,281 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,281 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,281 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,282 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,282 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:59,282 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,282 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,282 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,282 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,282 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,282 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,282 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,282 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,282 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,282 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,283 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,283 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,283 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,283 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,283 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,283 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,283 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,283 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,283 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,284 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,284 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,284 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,284 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,284 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,284 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,284 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,284 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,284 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,284 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,284 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,284 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,284 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,284 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,284 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,284 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:59,284 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:59,284 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,284 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:10:59,284 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,284 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,284 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,285 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,285 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,285 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,285 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,285 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,285 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,285 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,285 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,285 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,285 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:59,285 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,285 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,285 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,285 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,285 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,285 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,285 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,285 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,285 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:10:59,285 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:59,286 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,286 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,286 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,286 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,286 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,286 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,286 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,286 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,286 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,286 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,286 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,287 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:59,287 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,287 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:10:59,287 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:10:59,287 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,287 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,287 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:59,287 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,287 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,287 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,288 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,288 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:59,288 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,288 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,288 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,288 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,288 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,288 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,288 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,288 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,289 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,289 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:59,289 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,289 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:59,289 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,289 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,289 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,289 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,289 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,289 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,289 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,289 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,290 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,290 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,290 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,290 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,290 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,290 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,290 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,290 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,290 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:10:59,290 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,290 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,291 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,291 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,291 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,291 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,291 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,291 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:59,291 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,291 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,291 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,291 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,291 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,292 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,292 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,292 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,292 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,292 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:59,292 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,292 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,292 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:10:59,292 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:59,292 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,292 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:59,292 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,293 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:59,293 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,293 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,293 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,293 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,293 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,293 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,293 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,293 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:10:59,293 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,293 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,294 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,294 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,294 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,294 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,294 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:59,294 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,294 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,294 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,294 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,294 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,294 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:59,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:10:59,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:10:59,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:10:59,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:59,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:59,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:59,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:10:59,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,300 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,300 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,300 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,300 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,300 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,300 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,300 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,300 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,300 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,300 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,300 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,301 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,301 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,301 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,301 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:59,301 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,301 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,301 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,301 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,301 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,301 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,301 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,301 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,301 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,301 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,301 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,301 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,301 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,302 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:59,302 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:10:59,302 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,302 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,302 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,302 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,302 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,302 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,302 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,302 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,302 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,303 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,303 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,303 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:10:59,303 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,303 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,303 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,303 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,303 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:59,303 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,303 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,303 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,304 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,304 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,304 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,304 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,304 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,304 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,304 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,304 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,304 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,304 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,304 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,304 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,305 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:10:59,305 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,305 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,305 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,305 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,305 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:10:59,305 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,305 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:10:59,305 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:10:59,305 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,306 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,306 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,306 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,306 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,306 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,306 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,306 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,306 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,306 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,306 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,306 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,306 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,307 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,307 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,307 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,307 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,307 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,307 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:59,307 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,307 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,307 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,307 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,307 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,308 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:59,308 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,308 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,308 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,308 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:10:59,308 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,308 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,308 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,308 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,308 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,308 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,309 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,309 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,309 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,309 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,309 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,309 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,309 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,309 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,309 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,309 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:59,309 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,310 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,310 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,310 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,310 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,310 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,310 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,310 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,310 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,310 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:59,310 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,311 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,311 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,311 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:10:59,311 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,311 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,311 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:59,311 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,311 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,311 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,311 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:59,311 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,312 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,312 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,312 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,312 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
10:10:59,512 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0.
10:10:59,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:10:59,513 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:10:59,513 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,513 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,513 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,513 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,513 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,513 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,513 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,513 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:10:59,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:10:59,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:10:59,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:59,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:10:59,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:10:59,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:59,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:10:59,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:59,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:10:59,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:59,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:59,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:59,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:10:59,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:59,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:10:59,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:59,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:59,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,530 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:10:59,530 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:10:59,530 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,530 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,530 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:59,530 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,530 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,530 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,530 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,530 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:59,530 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,530 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,531 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,531 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,531 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,531 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,531 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,531 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,531 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,531 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:59,531 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,531 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:59,531 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,531 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,532 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,532 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,532 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,532 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,532 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,532 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,532 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,532 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,532 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,532 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,532 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,532 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,533 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,533 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,533 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:10:59,533 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,533 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,533 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,533 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,533 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,533 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,533 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,533 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:59,533 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,534 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,534 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,534 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,534 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,534 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,534 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,534 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,534 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,534 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:59,534 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,534 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,534 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:10:59,534 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:59,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:59,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:59,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:10:59,536 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,536 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,536 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,536 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,536 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,536 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,536 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:59,536 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,536 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,536 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,536 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,536 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,537 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,537 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,537 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:59,537 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,537 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,537 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:10:59,537 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,537 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:10:59,537 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,537 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:10:59,538 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,538 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:59,538 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,538 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,538 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,538 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,538 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:59,538 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,538 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,538 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,538 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,538 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,539 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:59,539 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,539 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,539 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,539 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,539 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,539 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,539 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,539 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,539 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,539 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,539 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,540 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,540 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,540 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,540 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,540 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,540 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,540 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,540 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,540 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,540 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,540 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,541 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,541 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,541 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,541 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,541 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:10:59,541 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,541 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,541 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,541 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,541 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,541 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,542 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,542 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,542 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,542 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,542 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,542 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,542 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,542 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,542 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,542 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,542 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,543 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,543 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,543 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,543 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:59,543 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,543 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,543 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,543 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,543 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,543 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,543 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,544 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,544 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,544 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,544 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,544 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,544 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,544 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:59,544 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:10:59,544 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,544 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,544 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,544 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,545 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,545 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,545 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,545 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,545 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,545 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,545 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,545 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:10:59,545 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,545 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,545 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,545 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,546 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:59,546 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,546 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,546 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,546 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,546 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,546 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,546 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,546 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,546 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,546 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,547 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,547 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,547 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,547 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,547 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,547 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:10:59,547 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,547 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,547 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,547 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,547 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:10:59,547 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,548 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:10:59,548 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:10:59,548 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,548 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,548 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,548 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,548 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,548 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,548 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,548 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,548 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,548 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,549 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,549 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,549 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,549 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,549 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,549 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,549 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:59,549 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:59,549 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:59,549 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,549 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:59,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:10:59,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,551 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,551 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,551 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,551 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,551 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,551 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,551 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,551 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,551 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,551 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,552 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,552 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:59,552 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,552 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,552 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,552 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,552 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,552 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,552 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:59,552 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,552 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,552 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:59,553 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,553 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,553 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,553 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:10:59,553 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,553 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,553 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:59,553 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:59,553 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,553 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:59,554 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:59,554 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,554 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,554 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,554 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:59,554 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
