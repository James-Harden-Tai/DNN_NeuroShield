10:08:19,612 root DEBUG Check that model weights are dtype tf.float64: 	 <dtype: 'float64'>
10:08:19,613 root INFO eps: 1e-06
10:08:19,613 root INFO tol: 1e-06
10:08:19,613 root DEBUG Load dual points from file: ../data/dual_points_cifar10_3x256_64_10_float64.
10:08:19,619 root DEBUG 

=================== Experiment ID #0 	 Dual Point ID: 1 ===================
10:08:19,648 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.313E-07|<1.000E-06)
10:08:19,648 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:20,190 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.024E-02 	 Total distance: 1.024E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([88], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:20,609 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.541E-02 	 Total distance: 4.565E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([35], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:21,230 root DEBUG Side: OFF	 Angle(dx0, dx): 0.60 deg 	 Angle(n, nold): 1.62 deg 	 Distance in patch: 2.651E-02 	 Total distance: 2.651E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([178], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:21,482 root DEBUG Side: OFF	 Angle(dx0, dx): 1.57 deg 	 Angle(n, nold): 2.00 deg 	 Distance in patch: 1.191E-02 	 Total distance: 3.842E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([191], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:21,856 root DEBUG Side: OFF	 Angle(dx0, dx): 1.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.112E-02 	 Total distance: 7.954E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([22], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:21,856 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:21,856 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 27.07 	 cIDON = [3 7], cIDOFF = [3 7]
10:08:21,857 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:21,857 root DEBUG dOFF/dON = 1.7
10:08:21,857 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 71.81940483175458, 'dON1': 0.045651183664728784, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.045651183664728784, 'nTON': 1, 'dON': 0.045651183664728784, 'dxOFFAngle': 70.87060536252898, 'dOFF1': 0.07954433906199668, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.07954433906199668, 'nTOFF': 1, 'dOFF': 0.07954433906199668, 'SUCCESS': True}
10:08:21,867 root DEBUG 

=================== Experiment ID #1 	 Dual Point ID: 2 ===================
10:08:21,892 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.033E-07|<1.000E-06)
10:08:21,892 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:22,477 root DEBUG Side: ON	 Angle(dx0, dx): 10.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.545E-02 	 Total distance: 1.545E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([43], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:23,8 root DEBUG Side: OFF	 Angle(dx0, dx): 4.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.812E-02 	 Total distance: 2.812E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([38], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:23,9 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:23,9 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 29.08 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:23,10 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:23,10 root DEBUG dOFF/dON = 1.8
10:08:23,10 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 70.47632403350772, 'dON1': 0.015453251048555832, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.015453251048555832, 'nTON': 1, 'dON': 0.015453251048555832, 'dxOFFAngle': 68.95345268712069, 'dOFF1': 0.02812438174368401, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.02812438174368401, 'nTOFF': 1, 'dOFF': 0.02812438174368401, 'SUCCESS': True}
10:08:23,28 root DEBUG 

=================== Experiment ID #2 	 Dual Point ID: 3 ===================
10:08:23,50 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.201E-07|<1.000E-06)
10:08:23,50 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:23,483 root DEBUG Side: ON	 Angle(dx0, dx): 8.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.881E-02 	 Total distance: 3.881E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([141], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:08:23,813 root DEBUG Side: ON	 Angle(dx0, dx): 11.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.426E-02 	 Total distance: 1.331E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([215], dtype=int64), array([[False]])]] 	 class: [4 8]
10:08:24,356 root DEBUG Side: OFF	 Angle(dx0, dx): 19.56 deg 	 Angle(n, nold): 19.37 deg 	 Distance in patch: 2.256E-01 	 Total distance: 2.256E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([29], dtype=int64), array([[False]])]] 	 class: [4 8]
10:08:24,665 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.506E-02 	 Total distance: 2.807E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([233], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:08:24,903 root DEBUG Side: OFF	 Angle(dx0, dx): 0.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.380E-03 	 Total distance: 2.831E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([11], dtype=int64), array([[False]])]] 	 class: [4 8]
10:08:24,903 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:24,903 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 36.04 	 cIDON = [4 8], cIDOFF = [4 8]
10:08:24,903 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:24,903 root DEBUG dOFF/dON = 2.1
10:08:24,903 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 75.92431991817189, 'dON1': 0.13307732320102098, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.13307732320102098, 'nTON': 1, 'dON': 0.13307732320102098, 'dxOFFAngle': 80.34733186951426, 'dOFF1': 0.2830585916780893, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.2830585916780893, 'nTOFF': 1, 'dOFF': 0.2830585916780893, 'SUCCESS': True}
10:08:24,910 root DEBUG 

=================== Experiment ID #3 	 Dual Point ID: 4 ===================
10:08:24,928 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.457E-08|<1.000E-06)
10:08:24,929 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:25,403 root DEBUG Side: ON	 Angle(dx0, dx): 1.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.985E-02 	 Total distance: 7.985E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([54], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:25,965 root DEBUG Side: OFF	 Angle(dx0, dx): 7.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.503E-03 	 Total distance: 8.503E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([101], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:25,965 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:25,966 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -80.75 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:25,966 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:25,966 root DEBUG dOFF/dON = 0.1
10:08:25,966 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 71.45328931369582, 'dON1': 0.07984779966227723, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.07984779966227723, 'nTON': 1, 'dON': 0.07984779966227723, 'dxOFFAngle': 74.0261262318146, 'dOFF1': 0.008503013302022454, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.008503013302022454, 'nTOFF': 1, 'dOFF': 0.008503013302022454, 'SUCCESS': False}
10:08:25,979 root DEBUG 

=================== Experiment ID #4 	 Dual Point ID: 5 ===================
10:08:26,12 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.654E-07|<1.000E-06)
10:08:26,12 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:26,482 root DEBUG Side: ON	 Angle(dx0, dx): 4.29 deg 	 Angle(n, nold): 3.61 deg 	 Distance in patch: 9.448E-02 	 Total distance: 9.448E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([27], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:26,803 root DEBUG Side: ON	 Angle(dx0, dx): 4.77 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.864E-01 	 Total distance: 2.809E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([47], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:27,248 root DEBUG Side: OFF	 Angle(dx0, dx): 15.70 deg 	 Angle(n, nold): 3.61 deg 	 Distance in patch: 1.699E-02 	 Total distance: 1.699E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([7, 9], dtype=int64), array([[0.],
       [1.]])]] 	 class: [3 9]
10:08:27,249 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:27,249 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -88.60 	 cIDON = [3 7], cIDOFF = [3 7]
10:08:27,249 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:27,249 root DEBUG dOFF/dON = 0.1
10:08:27,249 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.6697927509125, 'dON1': 0.2809160408847308, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.2809160408847308, 'nTON': 1, 'dON': 0.2809160408847308, 'dxOFFAngle': 80.50084850051826, 'dOFF1': 0.016987390047375667, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.016987390047375667, 'nTOFF': 1, 'dOFF': 0.016987390047375667, 'SUCCESS': False}
10:08:27,255 root DEBUG 

=================== Experiment ID #5 	 Dual Point ID: 6 ===================
10:08:27,284 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.477E-07|<1.000E-06)
10:08:27,285 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:27,808 root DEBUG Side: ON	 Angle(dx0, dx): 2.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.608E-01 	 Total distance: 2.608E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([36], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:08:28,44 root DEBUG Side: ON	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.641E-02 	 Total distance: 2.772E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([217], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:08:28,466 root DEBUG Side: OFF	 Angle(dx0, dx): 1.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.734E-02 	 Total distance: 4.734E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([114], dtype=int64), array([[False]])]] 	 class: [3 4]
10:08:28,467 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:28,467 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -70.82 	 cIDON = [3 4], cIDOFF = [3 4]
10:08:28,467 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:28,467 root DEBUG dOFF/dON = 0.2
10:08:28,467 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.41798487305063, 'dON1': 0.2771953333744807, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.2771953333744807, 'nTON': 1, 'dON': 0.2771953333744807, 'dxOFFAngle': 89.99503058381237, 'dOFF1': 0.047343895610845545, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.047343895610845545, 'nTOFF': 1, 'dOFF': 0.047343895610845545, 'SUCCESS': False}
10:08:28,477 root DEBUG 

=================== Experiment ID #6 	 Dual Point ID: 7 ===================
10:08:28,496 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.820E-07|<1.000E-06)
10:08:28,496 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:28,972 root DEBUG Side: ON	 Angle(dx0, dx): 1.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.868E-03 	 Total distance: 8.868E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([124], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:29,322 root DEBUG Side: OFF	 Angle(dx0, dx): 0.94 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.239E-02 	 Total distance: 1.239E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([65], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:29,323 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:29,323 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 16.58 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:29,323 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:29,323 root DEBUG dOFF/dON = 1.4
10:08:29,323 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 76.16169709041975, 'dON1': 0.008868372297373759, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.008868372297373759, 'nTON': 1, 'dON': 0.008868372297373759, 'dxOFFAngle': 79.87093145144304, 'dOFF1': 0.012393116315689911, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.012393116315689911, 'nTOFF': 1, 'dOFF': 0.012393116315689911, 'SUCCESS': True}
10:08:29,329 root DEBUG 

=================== Experiment ID #7 	 Dual Point ID: 8 ===================
10:08:29,351 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.760E-07|<1.000E-06)
10:08:29,352 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:29,760 root DEBUG Side: ON	 Angle(dx0, dx): 3.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.123E-01 	 Total distance: 1.123E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([10], dtype=int64), array([[False]])]] 	 class: [0 7]
10:08:30,145 root DEBUG Side: OFF	 Angle(dx0, dx): 3.22 deg 	 Angle(n, nold): 3.35 deg 	 Distance in patch: 5.172E-02 	 Total distance: 5.172E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([189], dtype=int64), array([[False]])]] 	 class: [1 7]
10:08:30,380 root DEBUG Side: OFF	 Angle(dx0, dx): 1.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.353E-02 	 Total distance: 1.252E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([197], dtype=int64), array([[False]])]] 	 class: [1 7]
10:08:30,610 root DEBUG Side: OFF	 Angle(dx0, dx): 7.36 deg 	 Angle(n, nold): 6.92 deg 	 Distance in patch: 1.084E-01 	 Total distance: 2.336E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([74], dtype=int64), array([[False]])]] 	 class: [1 7]
10:08:30,874 root DEBUG Side: OFF	 Angle(dx0, dx): 5.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.637E-02 	 Total distance: 3.000E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[2, array([33], dtype=int64), array([[False]])]] 	 class: [1 7]
10:08:31,53 root DEBUG Side: OFF	 Angle(dx0, dx): 5.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.472E-01 	 Total distance: 4.472E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([127], dtype=int64), array([[ True]])]] 	 class: [1 7]
10:08:31,53 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:31,53 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 59.86 	 cIDON = [0 7], cIDOFF = [1 7]
10:08:31,54 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:31,54 root DEBUG dOFF/dON = 4.0
10:08:31,54 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 75.53204934763141, 'dON1': 0.11226719934398292, 'cIDON1': array([0, 7], dtype=int64), 'dON_patch_1': 0.11226719934398292, 'nTON': 1, 'dON': 0.11226719934398292, 'dxOFFAngle': 87.37486838701663, 'dOFF1': 0.44715606371591254, 'cIDOFF1': array([1, 7], dtype=int64), 'dOFF_patch_1': 0.44715606371591254, 'nTOFF': 1, 'dOFF': 0.44715606371591254, 'SUCCESS': True}
10:08:31,60 root DEBUG 

=================== Experiment ID #8 	 Dual Point ID: 9 ===================
10:08:31,99 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.051E-07|<1.000E-06)
10:08:31,99 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:31,528 root DEBUG Side: ON	 Angle(dx0, dx): 2.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.939E-02 	 Total distance: 2.939E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([47], dtype=int64), array([[False]])]] 	 class: [2 4]
10:08:31,844 root DEBUG Side: ON	 Angle(dx0, dx): 4.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.307E-02 	 Total distance: 9.246E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([146], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:08:32,324 root DEBUG Side: OFF	 Angle(dx0, dx): 7.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.977E-02 	 Total distance: 1.977E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([10], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:08:32,325 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:32,325 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -64.76 	 cIDON = [2 4], cIDOFF = [2 4]
10:08:32,325 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:32,325 root DEBUG dOFF/dON = 0.2
10:08:32,325 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 63.97312579755037, 'dON1': 0.0924625152231753, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.0924625152231753, 'nTON': 1, 'dON': 0.0924625152231753, 'dxOFFAngle': 65.95270847153783, 'dOFF1': 0.019773779666973197, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.019773779666973197, 'nTOFF': 1, 'dOFF': 0.019773779666973197, 'SUCCESS': False}
10:08:32,338 root DEBUG 

=================== Experiment ID #9 	 Dual Point ID: 10 ===================
10:08:32,375 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.520E-07|<1.000E-06)
10:08:32,375 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:32,895 root DEBUG Side: ON	 Angle(dx0, dx): 3.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.842E-02 	 Total distance: 4.842E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([17], dtype=int64), array([[False]])]] 	 class: [0 8]
10:08:33,273 root DEBUG Side: OFF	 Angle(dx0, dx): 22.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.811E-06 	 Total distance: 1.811E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 8]
10:08:33,274 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:33,274 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.99 	 cIDON = [0 8], cIDOFF = [0 8]
10:08:33,274 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:33,274 root DEBUG dOFF/dON = 0.0
10:08:33,274 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 65.84925641536132, 'dON1': 0.04841520973309308, 'cIDON1': array([0, 8], dtype=int64), 'dON_patch_1': 0.04841520973309308, 'nTON': 1, 'dON': 0.04841520973309308, 'dxOFFAngle': 65.24548069773945, 'dOFF1': 1.8111604019934904e-06, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 1.8111604019934904e-06, 'nTOFF': 1, 'dOFF': 1.8111604019934904e-06, 'SUCCESS': False}
10:08:33,280 root DEBUG 

=================== Experiment ID #10 	 Dual Point ID: 11 ===================
10:08:33,308 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.609E-07|<1.000E-06)
10:08:33,308 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:33,705 root DEBUG Side: ON	 Angle(dx0, dx): 11.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.933E-02 	 Total distance: 1.933E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([154], dtype=int64), array([[False]])]] 	 class: [2 3]
10:08:34,143 root DEBUG Side: OFF	 Angle(dx0, dx): 10.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.447E-02 	 Total distance: 1.447E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([28], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:08:34,144 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:34,144 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -14.38 	 cIDON = [2 3], cIDOFF = [2 3]
10:08:34,144 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:34,144 root DEBUG dOFF/dON = 0.7
10:08:34,144 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 60.96641713905284, 'dON1': 0.019330540954189228, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.019330540954189228, 'nTON': 1, 'dON': 0.019330540954189228, 'dxOFFAngle': 59.2974312742147, 'dOFF1': 0.01447062205398887, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.01447062205398887, 'nTOFF': 1, 'dOFF': 0.01447062205398887, 'SUCCESS': False}
10:08:34,154 root DEBUG 

=================== Experiment ID #11 	 Dual Point ID: 12 ===================
10:08:34,196 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.936E-07|<1.000E-06)
10:08:34,196 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:34,624 root DEBUG Side: ON	 Angle(dx0, dx): 0.99 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.361E-03 	 Total distance: 7.361E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([154], dtype=int64), array([[False]])]] 	 class: [4 6]
10:08:35,23 root DEBUG Side: OFF	 Angle(dx0, dx): 2.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.467E-03 	 Total distance: 3.467E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([53], dtype=int64), array([[False]])]] 	 class: [4 6]
10:08:35,345 root DEBUG Side: OFF	 Angle(dx0, dx): 2.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.915E-02 	 Total distance: 4.261E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([213], dtype=int64), array([[False]])]] 	 class: [4 6]
10:08:35,574 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.403E-01 	 Total distance: 1.829E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[2, array([7], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:08:35,796 root DEBUG Side: OFF	 Angle(dx0, dx): 3.19 deg 	 Angle(n, nold): 1.98 deg 	 Distance in patch: 1.480E-02 	 Total distance: 1.977E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([206], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:08:36,83 root DEBUG Side: OFF	 Angle(dx0, dx): 0.87 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.265E-03 	 Total distance: 2.059E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([54], dtype=int64), array([[False]])]] 	 class: [4 6]
10:08:36,83 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:36,83 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 93.10 	 cIDON = [4 6], cIDOFF = [4 6]
10:08:36,84 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:36,84 root DEBUG dOFF/dON = 28.0
10:08:36,84 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.16328996248843, 'dON1': 0.007361000966219108, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.007361000966219108, 'nTON': 1, 'dON': 0.007361000966219108, 'dxOFFAngle': 89.21747199522605, 'dOFF1': 0.20593969805359932, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.20593969805359932, 'nTOFF': 1, 'dOFF': 0.20593969805359932, 'SUCCESS': True}
10:08:36,91 root DEBUG 

=================== Experiment ID #12 	 Dual Point ID: 13 ===================
10:08:36,125 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.861E-07|<1.000E-06)
10:08:36,125 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:36,669 root DEBUG Side: ON	 Angle(dx0, dx): 13.43 deg 	 Angle(n, nold): 13.90 deg 	 Distance in patch: 1.063E-01 	 Total distance: 1.063E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([175], dtype=int64), array([[False]])]] 	 class: [3 4]
10:08:36,915 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.243E-02 	 Total distance: 1.487E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([180], dtype=int64), array([[False]])]] 	 class: [3 4]
10:08:37,400 root DEBUG Side: OFF	 Angle(dx0, dx): 6.34 deg 	 Angle(n, nold): 14.78 deg 	 Distance in patch: 9.077E-02 	 Total distance: 9.077E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([188], dtype=int64), array([[False]])]] 	 class: [3 4]
10:08:37,748 root DEBUG Side: OFF	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.112E-03 	 Total distance: 9.588E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([65], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:08:38,10 root DEBUG Side: OFF	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.640E-01 	 Total distance: 3.599E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[2, array([218], dtype=int64), array([[False]])]] 	 class: [3 4]
10:08:38,239 root DEBUG Side: OFF	 Angle(dx0, dx): 1.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.277E-02 	 Total distance: 3.826E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([2], dtype=int64), array([[False]])]] 	 class: [3 4]
10:08:38,240 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:38,240 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 44.02 	 cIDON = [3 4], cIDOFF = [3 4]
10:08:38,240 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:38,240 root DEBUG dOFF/dON = 2.6
10:08:38,240 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.07556575671943, 'dON1': 0.14873445070078128, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.14873445070078128, 'nTON': 1, 'dON': 0.14873445070078128, 'dxOFFAngle': 76.15465058056519, 'dOFF1': 0.382620079396061, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.382620079396061, 'nTOFF': 1, 'dOFF': 0.382620079396061, 'SUCCESS': True}
10:08:38,256 root DEBUG 

=================== Experiment ID #13 	 Dual Point ID: 14 ===================
10:08:38,290 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.729E-07|<1.000E-06)
10:08:38,291 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:38,772 root DEBUG Side: ON	 Angle(dx0, dx): 7.00 deg 	 Angle(n, nold): 8.06 deg 	 Distance in patch: 4.389E-02 	 Total distance: 4.389E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([145], dtype=int64), array([[False]])]] 	 class: [5 6]
10:08:38,946 root DEBUG Side: ON	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.375E-02 	 Total distance: 5.764E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([44], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:08:39,441 root DEBUG Side: OFF	 Angle(dx0, dx): 2.32 deg 	 Angle(n, nold): 8.06 deg 	 Distance in patch: 1.247E-02 	 Total distance: 1.247E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([5], dtype=int64), array([[False]])]] 	 class: [5 6]
10:08:39,441 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:39,442 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -64.44 	 cIDON = [5 6], cIDOFF = [5 6]
10:08:39,442 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:39,442 root DEBUG dOFF/dON = 0.2
10:08:39,442 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.56835633068556, 'dON1': 0.05763847321915925, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.05763847321915925, 'nTON': 1, 'dON': 0.05763847321915925, 'dxOFFAngle': 82.10754634977667, 'dOFF1': 0.012465132621209775, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.012465132621209775, 'nTOFF': 1, 'dOFF': 0.012465132621209775, 'SUCCESS': False}
10:08:39,451 root DEBUG 

=================== Experiment ID #14 	 Dual Point ID: 15 ===================
10:08:39,484 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.314E-07|<1.000E-06)
10:08:39,484 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:39,911 root DEBUG Side: ON	 Angle(dx0, dx): 3.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.557E-02 	 Total distance: 3.557E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([208], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:40,391 root DEBUG Side: OFF	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.795E-02 	 Total distance: 9.795E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([6], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:40,646 root DEBUG Side: OFF	 Angle(dx0, dx): 2.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.191E-02 	 Total distance: 1.799E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([232], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:40,850 root DEBUG Side: OFF	 Angle(dx0, dx): 3.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.322E-02 	 Total distance: 2.131E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[2, array([242], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:41,160 root DEBUG Side: OFF	 Angle(dx0, dx): 0.78 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.120E-02 	 Total distance: 2.243E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([47], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:41,160 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:41,161 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 72.63 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:41,161 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:41,161 root DEBUG dOFF/dON = 6.3
10:08:41,161 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.52327582346395, 'dON1': 0.03556555684578009, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.03556555684578009, 'nTON': 1, 'dON': 0.03556555684578009, 'dxOFFAngle': 86.45832976435675, 'dOFF1': 0.2242846871017225, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.2242846871017225, 'nTOFF': 1, 'dOFF': 0.2242846871017225, 'SUCCESS': True}
10:08:41,169 root DEBUG 

=================== Experiment ID #15 	 Dual Point ID: 16 ===================
10:08:41,197 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.528E-07|<1.000E-06)
10:08:41,197 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:41,627 root DEBUG Side: ON	 Angle(dx0, dx): 0.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.382E-01 	 Total distance: 1.382E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([196], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:41,862 root DEBUG Side: ON	 Angle(dx0, dx): 0.71 deg 	 Angle(n, nold): 0.52 deg 	 Distance in patch: 2.167E-01 	 Total distance: 3.549E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([254], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:42,159 root DEBUG Side: ON	 Angle(dx0, dx): 5.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.160E-02 	 Total distance: 4.165E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([55], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:42,657 root DEBUG Side: OFF	 Angle(dx0, dx): 0.71 deg 	 Angle(n, nold): 0.82 deg 	 Distance in patch: 3.666E-02 	 Total distance: 3.666E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([40], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:43,1 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.21 deg 	 Distance in patch: 1.200E-01 	 Total distance: 1.567E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([129], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:43,181 root DEBUG Side: OFF	 Angle(dx0, dx): 3.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.564E-02 	 Total distance: 2.023E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([19], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:43,182 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:43,182 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -34.62 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:43,182 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:43,182 root DEBUG dOFF/dON = 0.5
10:08:43,182 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 63.89356845081903, 'dON1': 0.41653856103661985, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.41653856103661985, 'nTON': 1, 'dON': 0.41653856103661985, 'dxOFFAngle': 66.56001516325635, 'dOFF1': 0.20229952880992785, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.20229952880992785, 'nTOFF': 1, 'dOFF': 0.20229952880992785, 'SUCCESS': False}
10:08:43,189 root DEBUG 

=================== Experiment ID #16 	 Dual Point ID: 17 ===================
10:08:43,222 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.054E-07|<1.000E-06)
10:08:43,222 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:43,639 root DEBUG Side: ON	 Angle(dx0, dx): 5.68 deg 	 Angle(n, nold): 5.46 deg 	 Distance in patch: 9.728E-03 	 Total distance: 9.728E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([130], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:43,839 root DEBUG Side: ON	 Angle(dx0, dx): 5.68 deg 	 Angle(n, nold): 5.46 deg 	 Distance in patch: 8.807E-08 	 Total distance: 9.728E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([130], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:44,70 root DEBUG Side: ON	 Angle(dx0, dx): 5.68 deg 	 Angle(n, nold): 5.46 deg 	 Distance in patch: 8.812E-08 	 Total distance: 9.728E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([130], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:44,294 root DEBUG Side: ON	 Angle(dx0, dx): 5.68 deg 	 Angle(n, nold): 5.46 deg 	 Distance in patch: 8.807E-08 	 Total distance: 9.728E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([130], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:44,300 root DEBUG Got stuck in too many past-layer relus.
10:08:44,478 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:08:44,478 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:08:44,479 root DEBUG 

=================== Experiment ID #16 	 Dual Point ID: 18 ===================
10:08:44,518 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.687E-07|<1.000E-06)
10:08:44,518 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:44,980 root DEBUG Side: ON	 Angle(dx0, dx): 13.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.750E-02 	 Total distance: 7.750E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([5, 7], dtype=int64), array([[1.],
       [0.]])]] 	 class: [3 5]
10:08:45,329 root DEBUG Side: OFF	 Angle(dx0, dx): 6.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.410E-03 	 Total distance: 9.410E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([11], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:45,476 root DEBUG Side: OFF	 Angle(dx0, dx): 6.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.772E-06 	 Total distance: 9.413E-03 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([11], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:45,665 root DEBUG Side: OFF	 Angle(dx0, dx): 6.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.617E-08 	 Total distance: 9.413E-03 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([11], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:45,900 root DEBUG Side: OFF	 Angle(dx0, dx): 6.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.732E-07 	 Total distance: 9.413E-03 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([11], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:46,85 root DEBUG Side: OFF	 Angle(dx0, dx): 6.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.617E-08 	 Total distance: 9.413E-03 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([11], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:46,106 root DEBUG Got stuck in too many past-layer relus.
10:08:46,106 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:08:46,107 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:08:46,108 root DEBUG 

=================== Experiment ID #16 	 Dual Point ID: 19 ===================
10:08:46,145 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.627E-07|<1.000E-06)
10:08:46,145 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:46,595 root DEBUG Side: ON	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.24 deg 	 Distance in patch: 7.635E-03 	 Total distance: 7.635E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([23], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:46,863 root DEBUG Side: ON	 Angle(dx0, dx): 2.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.687E-02 	 Total distance: 1.045E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([17], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:47,310 root DEBUG Side: OFF	 Angle(dx0, dx): 2.18 deg 	 Angle(n, nold): 0.24 deg 	 Distance in patch: 8.602E-02 	 Total distance: 8.602E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([179], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:47,310 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:47,311 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -9.70 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:47,311 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:47,311 root DEBUG dOFF/dON = 0.8
10:08:47,311 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 72.19335610146794, 'dON1': 0.10450391668291331, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.10450391668291331, 'nTON': 1, 'dON': 0.10450391668291331, 'dxOFFAngle': 72.33256807202774, 'dOFF1': 0.0860168704579146, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.0860168704579146, 'nTOFF': 1, 'dOFF': 0.0860168704579146, 'SUCCESS': False}
10:08:47,325 root DEBUG 

=================== Experiment ID #17 	 Dual Point ID: 20 ===================
10:08:47,357 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.171E-07|<1.000E-06)
10:08:47,357 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:47,837 root DEBUG Side: ON	 Angle(dx0, dx): 1.98 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.112E-02 	 Total distance: 5.112E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([102], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:48,289 root DEBUG Side: OFF	 Angle(dx0, dx): 0.95 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.794E-02 	 Total distance: 1.794E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([56], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:48,289 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:48,290 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -48.05 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:48,290 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:48,290 root DEBUG dOFF/dON = 0.4
10:08:48,290 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 77.29565649670691, 'dON1': 0.05112378840496576, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.05112378840496576, 'nTON': 1, 'dON': 0.05112378840496576, 'dxOFFAngle': 79.85091710593143, 'dOFF1': 0.017940649418860394, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.017940649418860394, 'nTOFF': 1, 'dOFF': 0.017940649418860394, 'SUCCESS': False}
10:08:48,296 root DEBUG 

=================== Experiment ID #18 	 Dual Point ID: 21 ===================
10:08:48,320 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.849E-07|<1.000E-06)
10:08:48,320 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:48,735 root DEBUG Side: ON	 Angle(dx0, dx): 1.92 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.399E-03 	 Total distance: 2.399E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([245], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:08:49,129 root DEBUG Side: OFF	 Angle(dx0, dx): 1.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.427E-02 	 Total distance: 4.427E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([166], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:08:49,129 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:49,130 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 89.72 	 cIDON = [3 4], cIDOFF = [3 4]
10:08:49,130 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:49,130 root DEBUG dOFF/dON = 18.4
10:08:49,130 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.36939825918162, 'dON1': 0.002399479085546339, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.002399479085546339, 'nTON': 1, 'dON': 0.002399479085546339, 'dxOFFAngle': 81.48633718564096, 'dOFF1': 0.04426639194070464, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.04426639194070464, 'nTOFF': 1, 'dOFF': 0.04426639194070464, 'SUCCESS': True}
10:08:49,141 root DEBUG 

=================== Experiment ID #19 	 Dual Point ID: 22 ===================
10:08:49,179 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.527E-07|<1.000E-06)
10:08:49,179 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:49,661 root DEBUG Side: ON	 Angle(dx0, dx): 0.97 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.033E-01 	 Total distance: 1.033E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([88], dtype=int64), array([[False]])]] 	 class: [1 8]
10:08:50,66 root DEBUG Side: ON	 Angle(dx0, dx): 14.83 deg 	 Angle(n, nold): 13.08 deg 	 Distance in patch: 3.199E-02 	 Total distance: 1.353E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([55], dtype=int64), array([[False]])]] 	 class: [1 8]
10:08:50,245 root DEBUG Side: ON	 Angle(dx0, dx): 14.83 deg 	 Angle(n, nold): 13.08 deg 	 Distance in patch: 1.053E-06 	 Total distance: 1.353E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([55], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:08:50,414 root DEBUG Side: ON	 Angle(dx0, dx): 14.83 deg 	 Angle(n, nold): 13.08 deg 	 Distance in patch: 1.297E-07 	 Total distance: 1.353E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([55], dtype=int64), array([[False]])]] 	 class: [1 8]
10:08:50,583 root DEBUG Side: ON	 Angle(dx0, dx): 14.83 deg 	 Angle(n, nold): 13.08 deg 	 Distance in patch: 1.317E-07 	 Total distance: 1.353E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([55], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:08:50,740 root DEBUG Side: ON	 Angle(dx0, dx): 14.83 deg 	 Angle(n, nold): 13.08 deg 	 Distance in patch: 1.297E-07 	 Total distance: 1.353E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([55], dtype=int64), array([[False]])]] 	 class: [1 8]
10:08:50,748 root DEBUG Got stuck in too many past-layer relus.
10:08:50,861 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:08:50,861 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:08:50,862 root DEBUG 

=================== Experiment ID #19 	 Dual Point ID: 23 ===================
10:08:50,892 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.776E-08|<1.000E-06)
10:08:50,892 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:51,334 root DEBUG Side: ON	 Angle(dx0, dx): 3.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.985E-02 	 Total distance: 1.985E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([61], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:51,794 root DEBUG Side: OFF	 Angle(dx0, dx): 0.63 deg 	 Angle(n, nold): 0.59 deg 	 Distance in patch: 2.000E-03 	 Total distance: 2.000E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([40], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:52,76 root DEBUG Side: OFF	 Angle(dx0, dx): 1.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.004E-02 	 Total distance: 2.204E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([20], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:52,76 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:52,77 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 5.25 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:52,77 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:52,77 root DEBUG dOFF/dON = 1.1
10:08:52,77 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.85244509443062, 'dON1': 0.019846801848476658, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.019846801848476658, 'nTON': 1, 'dON': 0.019846801848476658, 'dxOFFAngle': 85.19922007359479, 'dOFF1': 0.022044171531864807, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.022044171531864807, 'nTOFF': 1, 'dOFF': 0.022044171531864807, 'SUCCESS': True}
10:08:52,91 root DEBUG 

=================== Experiment ID #20 	 Dual Point ID: 24 ===================
10:08:52,121 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.037E-07|<1.000E-06)
10:08:52,121 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:52,586 root DEBUG Side: ON	 Angle(dx0, dx): 0.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.683E-02 	 Total distance: 2.683E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([141], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:08:52,875 root DEBUG Side: ON	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.133E-03 	 Total distance: 2.797E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([208], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:08:53,232 root DEBUG Side: ON	 Angle(dx0, dx): 5.83 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.119E-02 	 Total distance: 1.092E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([2], dtype=int64), array([[False]])]] 	 class: [2 6]
10:08:53,669 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.583E-02 	 Total distance: 2.583E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([87], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:08:53,979 root DEBUG Side: OFF	 Angle(dx0, dx): 2.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.981E-02 	 Total distance: 6.564E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([12], dtype=int64), array([[False]])]] 	 class: [2 6]
10:08:54,237 root DEBUG Side: OFF	 Angle(dx0, dx): 2.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.956E-02 	 Total distance: 8.520E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([254], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:08:54,237 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:54,238 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -12.33 	 cIDON = [2 6], cIDOFF = [2 6]
10:08:54,238 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:54,238 root DEBUG dOFF/dON = 0.8
10:08:54,238 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.56677580825298, 'dON1': 0.10915790551851753, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.10915790551851753, 'nTON': 1, 'dON': 0.10915790551851753, 'dxOFFAngle': 84.41785970871355, 'dOFF1': 0.08520120917127766, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.08520120917127766, 'nTOFF': 1, 'dOFF': 0.08520120917127766, 'SUCCESS': False}
10:08:54,256 root DEBUG 

=================== Experiment ID #21 	 Dual Point ID: 25 ===================
10:08:54,297 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.164E-07|<1.000E-06)
10:08:54,297 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:54,848 root DEBUG Side: ON	 Angle(dx0, dx): 8.84 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.775E-02 	 Total distance: 2.775E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([124], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:08:55,424 root DEBUG Side: OFF	 Angle(dx0, dx): 6.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.691E-01 	 Total distance: 2.691E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([49], dtype=int64), array([[False]])]] 	 class: [4 6]
10:08:55,728 root DEBUG Side: OFF	 Angle(dx0, dx): 2.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.116E-02 	 Total distance: 3.302E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([74], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:08:55,728 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:55,728 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 84.50 	 cIDON = [4 6], cIDOFF = [4 6]
10:08:55,729 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:55,729 root DEBUG dOFF/dON = 11.9
10:08:55,729 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.02609317445425, 'dON1': 0.027745304995716126, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.027745304995716126, 'nTON': 1, 'dON': 0.027745304995716126, 'dxOFFAngle': 80.36858450242342, 'dOFF1': 0.3302408343654166, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.3302408343654166, 'nTOFF': 1, 'dOFF': 0.3302408343654166, 'SUCCESS': True}
10:08:55,739 root DEBUG 

=================== Experiment ID #22 	 Dual Point ID: 26 ===================
10:08:55,762 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.509E-07|<1.000E-06)
10:08:55,763 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:56,217 root DEBUG Side: ON	 Angle(dx0, dx): 3.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.472E-03 	 Total distance: 2.472E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([14], dtype=int64), array([[False]])]] 	 class: [4 6]
10:08:56,664 root DEBUG Side: OFF	 Angle(dx0, dx): 0.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.388E-02 	 Total distance: 2.388E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([137], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:08:56,664 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:56,664 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 81.24 	 cIDON = [4 6], cIDOFF = [4 6]
10:08:56,665 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:56,665 root DEBUG dOFF/dON = 9.7
10:08:56,665 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.10468513509812, 'dON1': 0.0024724719776105697, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.0024724719776105697, 'nTON': 1, 'dON': 0.0024724719776105697, 'dxOFFAngle': 78.87557290323913, 'dOFF1': 0.023883919717663415, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.023883919717663415, 'nTOFF': 1, 'dOFF': 0.023883919717663415, 'SUCCESS': True}
10:08:56,671 root DEBUG 

=================== Experiment ID #23 	 Dual Point ID: 27 ===================
10:08:56,701 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.542E-07|<1.000E-06)
10:08:56,701 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:57,173 root DEBUG Side: ON	 Angle(dx0, dx): 12.08 deg 	 Angle(n, nold): 12.13 deg 	 Distance in patch: 1.550E-01 	 Total distance: 1.550E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([212], dtype=int64), array([[False]])]] 	 class: [4 6]
10:08:57,349 root DEBUG Side: ON	 Angle(dx0, dx): 12.08 deg 	 Angle(n, nold): 12.13 deg 	 Distance in patch: 3.207E-06 	 Total distance: 1.550E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([212], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:08:57,538 root DEBUG Side: ON	 Angle(dx0, dx): 12.08 deg 	 Angle(n, nold): 12.13 deg 	 Distance in patch: 9.846E-08 	 Total distance: 1.550E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([212], dtype=int64), array([[False]])]] 	 class: [4 6]
10:08:57,681 root DEBUG Side: ON	 Angle(dx0, dx): 12.08 deg 	 Angle(n, nold): 12.13 deg 	 Distance in patch: 4.009E-07 	 Total distance: 1.550E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([212], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:08:57,872 root DEBUG Side: ON	 Angle(dx0, dx): 12.08 deg 	 Angle(n, nold): 12.13 deg 	 Distance in patch: 9.846E-08 	 Total distance: 1.550E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([212], dtype=int64), array([[False]])]] 	 class: [4 6]
10:08:57,887 root DEBUG Got stuck in too many past-layer relus.
10:08:58,31 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:08:58,31 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:08:58,33 root DEBUG 

=================== Experiment ID #23 	 Dual Point ID: 28 ===================
10:08:58,55 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.022E-08|<1.000E-06)
10:08:58,55 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:58,404 root DEBUG Side: ON	 Angle(dx0, dx): 17.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.143E-07 	 Total distance: 2.143E-07 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 3]
10:08:58,605 root DEBUG Side: ON	 Angle(dx0, dx): 1.99 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.519E-02 	 Total distance: 7.519E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([87], dtype=int64), array([[ True]])]] 	 class: [1 3]
10:08:58,978 root DEBUG Side: OFF	 Angle(dx0, dx): 15.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.205E-06 	 Total distance: 3.205E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 3]
10:08:58,978 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:58,978 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.99 	 cIDON = [1 3], cIDOFF = [1 3]
10:08:58,978 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:58,978 root DEBUG dOFF/dON = 0.0
10:08:58,978 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 63.08014719614413, 'dON1': 0.07518683760157809, 'cIDON1': array([1, 3], dtype=int64), 'dON_patch_1': 0.07518683760157809, 'nTON': 1, 'dON': 0.07518683760157809, 'dxOFFAngle': 72.51105707117885, 'dOFF1': 3.2049084775925e-06, 'cIDOFF1': array([1, 3], dtype=int64), 'dOFF_patch_1': 3.2049084775925e-06, 'nTOFF': 1, 'dOFF': 3.2049084775925e-06, 'SUCCESS': False}
10:08:58,988 root DEBUG 

=================== Experiment ID #24 	 Dual Point ID: 29 ===================
10:08:59,7 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.273E-08|<1.000E-06)
10:08:59,7 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:59,424 root DEBUG Side: ON	 Angle(dx0, dx): 1.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.807E-02 	 Total distance: 3.807E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([164], dtype=int64), array([[ True]])]] 	 class: [1 3]
10:08:59,686 root DEBUG Side: ON	 Angle(dx0, dx): 1.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.905E-02 	 Total distance: 8.712E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([124], dtype=int64), array([[ True]])]] 	 class: [1 3]
10:09:00,2 root DEBUG Side: ON	 Angle(dx0, dx): 1.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.610E-02 	 Total distance: 1.432E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([30], dtype=int64), array([[ True]])]] 	 class: [1 3]
10:09:00,410 root DEBUG Side: OFF	 Angle(dx0, dx): 9.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.187E-02 	 Total distance: 1.187E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([7], dtype=int64), array([[False]])]] 	 class: [0 3]
10:09:00,411 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:00,411 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -84.69 	 cIDON = [1 3], cIDOFF = [0 3]
10:09:00,411 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:00,411 root DEBUG dOFF/dON = 0.1
10:09:00,411 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 71.0358737246877, 'dON1': 0.1432257296597369, 'cIDON1': array([1, 3], dtype=int64), 'dON_patch_1': 0.1432257296597369, 'nTON': 1, 'dON': 0.1432257296597369, 'dxOFFAngle': 64.39380421066485, 'dOFF1': 0.01186916656080852, 'cIDOFF1': array([0, 3], dtype=int64), 'dOFF_patch_1': 0.01186916656080852, 'nTOFF': 1, 'dOFF': 0.01186916656080852, 'SUCCESS': False}
10:09:00,421 root DEBUG 

=================== Experiment ID #25 	 Dual Point ID: 30 ===================
10:09:00,448 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.222E-07|<1.000E-06)
10:09:00,449 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:00,824 root DEBUG Side: ON	 Angle(dx0, dx): 5.84 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.639E-02 	 Total distance: 8.639E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([69], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:01,281 root DEBUG Side: OFF	 Angle(dx0, dx): 3.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.227E-02 	 Total distance: 6.227E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([57], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:01,281 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:01,281 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -16.22 	 cIDON = [4 7], cIDOFF = [4 7]
10:09:01,281 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:01,281 root DEBUG dOFF/dON = 0.7
10:09:01,281 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 66.36314741146909, 'dON1': 0.08638730402262419, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.08638730402262419, 'nTON': 1, 'dON': 0.08638730402262419, 'dxOFFAngle': 75.05773988009716, 'dOFF1': 0.062269545108144954, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.062269545108144954, 'nTOFF': 1, 'dOFF': 0.062269545108144954, 'SUCCESS': False}
10:09:01,296 root DEBUG 

=================== Experiment ID #26 	 Dual Point ID: 31 ===================
10:09:01,321 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.384E-07|<1.000E-06)
10:09:01,321 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:01,666 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.158E-03 	 Total distance: 8.158E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([202], dtype=int64), array([[False]])]] 	 class: [4 5]
10:09:01,865 root DEBUG Side: ON	 Angle(dx0, dx): 5.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.667E-03 	 Total distance: 1.383E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([234], dtype=int64), array([[False]])]] 	 class: [4 5]
10:09:02,230 root DEBUG Side: OFF	 Angle(dx0, dx): 5.23 deg 	 Angle(n, nold): 6.64 deg 	 Distance in patch: 3.487E-03 	 Total distance: 3.487E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([162], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:09:02,519 root DEBUG Side: OFF	 Angle(dx0, dx): 2.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.699E-02 	 Total distance: 8.048E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([155], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:09:02,519 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:02,520 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 70.68 	 cIDON = [4 5], cIDOFF = [4 5]
10:09:02,520 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:02,520 root DEBUG dOFF/dON = 5.8
10:09:02,520 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 76.36548448392242, 'dON1': 0.013825072471356555, 'cIDON1': array([4, 5], dtype=int64), 'dON_patch_1': 0.013825072471356555, 'nTON': 1, 'dON': 0.013825072471356555, 'dxOFFAngle': 75.53826752703561, 'dOFF1': 0.08047664081809781, 'cIDOFF1': array([4, 5], dtype=int64), 'dOFF_patch_1': 0.08047664081809781, 'nTOFF': 1, 'dOFF': 0.08047664081809781, 'SUCCESS': True}
10:09:02,526 root DEBUG 

=================== Experiment ID #27 	 Dual Point ID: 32 ===================
10:09:02,557 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.927E-07|<1.000E-06)
10:09:02,557 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:02,970 root DEBUG Side: ON	 Angle(dx0, dx): 6.77 deg 	 Angle(n, nold): 6.43 deg 	 Distance in patch: 1.166E-02 	 Total distance: 1.166E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([33], dtype=int64), array([[False]])]] 	 class: [6 9]
10:09:03,180 root DEBUG Side: ON	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.586E-02 	 Total distance: 3.751E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([55], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:09:03,598 root DEBUG Side: OFF	 Angle(dx0, dx): 1.56 deg 	 Angle(n, nold): 6.43 deg 	 Distance in patch: 6.620E-03 	 Total distance: 6.620E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([155], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:09:03,598 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:03,598 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -70.00 	 cIDON = [6 9], cIDOFF = [6 9]
10:09:03,598 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:03,598 root DEBUG dOFF/dON = 0.2
10:09:03,598 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 66.8641526546595, 'dON1': 0.03751458825775074, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.03751458825775074, 'nTON': 1, 'dON': 0.03751458825775074, 'dxOFFAngle': 70.48462911266503, 'dOFF1': 0.006619830839163254, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.006619830839163254, 'nTOFF': 1, 'dOFF': 0.006619830839163254, 'SUCCESS': False}
10:09:03,607 root DEBUG 

=================== Experiment ID #28 	 Dual Point ID: 33 ===================
10:09:03,636 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.084E-08|<1.000E-06)
10:09:03,636 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:03,996 root DEBUG Side: ON	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.61 deg 	 Distance in patch: 1.921E-02 	 Total distance: 1.921E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([73], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:09:04,168 root DEBUG Side: ON	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.264E-02 	 Total distance: 3.184E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([228], dtype=int64), array([[False]])]] 	 class: [4 9]
10:09:04,519 root DEBUG Side: OFF	 Angle(dx0, dx): 0.92 deg 	 Angle(n, nold): 0.61 deg 	 Distance in patch: 4.327E-03 	 Total distance: 4.327E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([116], dtype=int64), array([[False]])]] 	 class: [4 9]
10:09:04,520 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:04,521 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -76.07 	 cIDON = [4 9], cIDOFF = [4 9]
10:09:04,521 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:04,521 root DEBUG dOFF/dON = 0.1
10:09:04,521 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.68852564366597, 'dON1': 0.03184464999783537, 'cIDON1': array([4, 9], dtype=int64), 'dON_patch_1': 0.03184464999783537, 'nTON': 1, 'dON': 0.03184464999783537, 'dxOFFAngle': 88.57597572922853, 'dOFF1': 0.004327412901034134, 'cIDOFF1': array([4, 9], dtype=int64), 'dOFF_patch_1': 0.004327412901034134, 'nTOFF': 1, 'dOFF': 0.004327412901034134, 'SUCCESS': False}
10:09:04,530 root DEBUG 

=================== Experiment ID #29 	 Dual Point ID: 34 ===================
10:09:04,550 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.901E-08|<1.000E-06)
10:09:04,551 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:04,962 root DEBUG Side: ON	 Angle(dx0, dx): 1.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.076E-02 	 Total distance: 1.076E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([47], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:05,305 root DEBUG Side: OFF	 Angle(dx0, dx): 8.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.652E-02 	 Total distance: 2.652E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([18], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:05,305 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:05,305 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 42.28 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:05,305 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:05,305 root DEBUG dOFF/dON = 2.5
10:09:05,306 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.32493772420722, 'dON1': 0.010759074386212297, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.010759074386212297, 'nTON': 1, 'dON': 0.010759074386212297, 'dxOFFAngle': 83.9765046788822, 'dOFF1': 0.026522045285635634, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.026522045285635634, 'nTOFF': 1, 'dOFF': 0.026522045285635634, 'SUCCESS': True}
10:09:05,317 root DEBUG 

=================== Experiment ID #30 	 Dual Point ID: 35 ===================
10:09:05,336 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.129E-07|<1.000E-06)
10:09:05,336 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:05,823 root DEBUG Side: ON	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.031E-02 	 Total distance: 1.031E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([247], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:05,995 root DEBUG Side: ON	 Angle(dx0, dx): 0.77 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.873E-02 	 Total distance: 5.905E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([43], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:06,394 root DEBUG Side: OFF	 Angle(dx0, dx): 0.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.174E-02 	 Total distance: 7.174E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([89], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:06,573 root DEBUG Side: OFF	 Angle(dx0, dx): 1.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.563E-02 	 Total distance: 9.737E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([222], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:06,825 root DEBUG Side: OFF	 Angle(dx0, dx): 1.99 deg 	 Angle(n, nold): 1.68 deg 	 Distance in patch: 5.604E-02 	 Total distance: 1.534E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([178], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:07,120 root DEBUG Side: OFF	 Angle(dx0, dx): 0.85 deg 	 Angle(n, nold): 1.13 deg 	 Distance in patch: 9.835E-03 	 Total distance: 1.632E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([133], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:07,344 root DEBUG Side: OFF	 Angle(dx0, dx): 0.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.898E-01 	 Total distance: 3.531E-01 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[2, array([52], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:07,721 root DEBUG Side: OFF	 Angle(dx0, dx): 2.03 deg 	 Angle(n, nold): 1.94 deg 	 Distance in patch: 1.656E-01 	 Total distance: 5.187E-01 	 Future toggles: 0 	 Past toggles: 6 	 Toggled: [[1, array([206], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:08,5 root DEBUG Side: OFF	 Angle(dx0, dx): 7.90 deg 	 Angle(n, nold): 8.41 deg 	 Distance in patch: 1.761E-01 	 Total distance: 6.948E-01 	 Future toggles: 0 	 Past toggles: 7 	 Toggled: [[1, array([97], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:08,278 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.629E-03 	 Total distance: 7.034E-01 	 Future toggles: 0 	 Past toggles: 8 	 Toggled: [[2, array([247], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:08,588 root DEBUG Side: OFF	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.122E-02 	 Total distance: 7.346E-01 	 Future toggles: 0 	 Past toggles: 9 	 Toggled: [[2, array([186], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:08,806 root DEBUG Side: OFF	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.340E-02 	 Total distance: 8.280E-01 	 Future toggles: 0 	 Past toggles: 10 	 Toggled: [[2, array([167], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:08,893 root DEBUG Got stuck in too many past-layer relus.
10:09:08,894 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:09:08,894 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:09:08,895 root DEBUG 

=================== Experiment ID #30 	 Dual Point ID: 36 ===================
10:09:08,928 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.463E-07|<1.000E-06)
10:09:08,928 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:09,329 root DEBUG Side: ON	 Angle(dx0, dx): 9.41 deg 	 Angle(n, nold): 9.19 deg 	 Distance in patch: 6.442E-03 	 Total distance: 6.442E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([55], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:09,494 root DEBUG Side: ON	 Angle(dx0, dx): 9.41 deg 	 Angle(n, nold): 9.19 deg 	 Distance in patch: 7.383E-07 	 Total distance: 6.442E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([55], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:09,717 root DEBUG Side: ON	 Angle(dx0, dx): 9.41 deg 	 Angle(n, nold): 9.19 deg 	 Distance in patch: 1.834E-07 	 Total distance: 6.443E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([55], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:09,897 root DEBUG Side: ON	 Angle(dx0, dx): 9.41 deg 	 Angle(n, nold): 9.19 deg 	 Distance in patch: 3.692E-07 	 Total distance: 6.443E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([55], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:09,906 root DEBUG Got stuck in too many past-layer relus.
10:09:10,61 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:09:10,61 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:09:10,62 root DEBUG 

=================== Experiment ID #30 	 Dual Point ID: 37 ===================
10:09:10,83 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.323E-07|<1.000E-06)
10:09:10,84 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:10,518 root DEBUG Side: ON	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.79 deg 	 Distance in patch: 8.925E-03 	 Total distance: 8.925E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([159], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:10,775 root DEBUG Side: ON	 Angle(dx0, dx): 0.89 deg 	 Angle(n, nold): 1.60 deg 	 Distance in patch: 2.112E-03 	 Total distance: 1.104E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([132], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:11,8 root DEBUG Side: ON	 Angle(dx0, dx): 21.60 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.702E-04 	 Total distance: 1.121E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([2, 7], dtype=int64), array([[0.],
       [1.]])]] 	 class: [4 7]
10:09:11,535 root DEBUG Side: OFF	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 1.79 deg 	 Distance in patch: 9.733E-02 	 Total distance: 9.733E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([233], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:11,774 root DEBUG Side: OFF	 Angle(dx0, dx): 2.84 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.421E-03 	 Total distance: 9.975E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([52], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:11,774 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:11,774 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 79.80 	 cIDON = [2 4], cIDOFF = [2 4]
10:09:11,774 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:11,774 root DEBUG dOFF/dON = 8.9
10:09:11,774 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 67.1276977661018, 'dON1': 0.011206590383545052, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.011206590383545052, 'nTON': 1, 'dON': 0.011206590383545052, 'dxOFFAngle': 78.61849904746278, 'dOFF1': 0.0997506965531555, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.0997506965531555, 'nTOFF': 1, 'dOFF': 0.0997506965531555, 'SUCCESS': True}
10:09:11,784 root DEBUG 

=================== Experiment ID #31 	 Dual Point ID: 38 ===================
10:09:11,823 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.228E-07|<1.000E-06)
10:09:11,823 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:12,347 root DEBUG Side: ON	 Angle(dx0, dx): 1.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.907E-02 	 Total distance: 3.907E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([42], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:12,754 root DEBUG Side: OFF	 Angle(dx0, dx): 1.78 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.830E-02 	 Total distance: 4.830E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([51], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:12,754 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:12,754 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 10.56 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:12,754 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:12,755 root DEBUG dOFF/dON = 1.2
10:09:12,755 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 76.45454546857361, 'dON1': 0.039072226002350725, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.039072226002350725, 'nTON': 1, 'dON': 0.039072226002350725, 'dxOFFAngle': 74.77513405591135, 'dOFF1': 0.04830034088462956, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.04830034088462956, 'nTOFF': 1, 'dOFF': 0.04830034088462956, 'SUCCESS': True}
10:09:12,764 root DEBUG 

=================== Experiment ID #32 	 Dual Point ID: 39 ===================
10:09:12,791 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.057E-08|<1.000E-06)
10:09:12,791 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:13,144 root DEBUG Side: ON	 Angle(dx0, dx): 1.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.376E-02 	 Total distance: 4.376E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([240], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:13,655 root DEBUG Side: OFF	 Angle(dx0, dx): 2.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.474E-02 	 Total distance: 1.474E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([113], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:13,655 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:13,655 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -49.62 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:13,655 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:13,655 root DEBUG dOFF/dON = 0.3
10:09:13,655 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 71.91480218479333, 'dON1': 0.043763864100555674, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.043763864100555674, 'nTON': 1, 'dON': 0.043763864100555674, 'dxOFFAngle': 72.62583863609663, 'dOFF1': 0.014738063858628888, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.014738063858628888, 'nTOFF': 1, 'dOFF': 0.014738063858628888, 'SUCCESS': False}
10:09:13,662 root DEBUG 

=================== Experiment ID #33 	 Dual Point ID: 40 ===================
10:09:13,693 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.664E-07|<1.000E-06)
10:09:13,693 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:14,126 root DEBUG Side: ON	 Angle(dx0, dx): 10.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.400E-01 	 Total distance: 1.400E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([36], dtype=int64), array([[False]])]] 	 class: [2 5]
10:09:14,682 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.131E-02 	 Total distance: 6.131E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([177], dtype=int64), array([[False]])]] 	 class: [2 5]
10:09:14,682 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:14,682 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -39.07 	 cIDON = [2 5], cIDOFF = [2 5]
10:09:14,682 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:14,682 root DEBUG dOFF/dON = 0.4
10:09:14,682 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.06869595272438, 'dON1': 0.13995257650121848, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.13995257650121848, 'nTON': 1, 'dON': 0.13995257650121848, 'dxOFFAngle': 84.23560470035142, 'dOFF1': 0.06130996673918495, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.06130996673918495, 'nTOFF': 1, 'dOFF': 0.06130996673918495, 'SUCCESS': False}
10:09:14,695 root DEBUG 

=================== Experiment ID #34 	 Dual Point ID: 41 ===================
10:09:14,717 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.634E-07|<1.000E-06)
10:09:14,718 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:15,264 root DEBUG Side: ON	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.529E-02 	 Total distance: 2.529E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([149], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:15,687 root DEBUG Side: OFF	 Angle(dx0, dx): 1.78 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.401E-02 	 Total distance: 4.401E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([226], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:15,927 root DEBUG Side: OFF	 Angle(dx0, dx): 1.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.118E-02 	 Total distance: 5.519E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([254], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:15,928 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:15,928 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 37.15 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:15,928 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:15,928 root DEBUG dOFF/dON = 2.2
10:09:15,928 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.86762519920225, 'dON1': 0.02528993314487089, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.02528993314487089, 'nTON': 1, 'dON': 0.02528993314487089, 'dxOFFAngle': 87.37396758034306, 'dOFF1': 0.055191878065689384, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.055191878065689384, 'nTOFF': 1, 'dOFF': 0.055191878065689384, 'SUCCESS': True}
10:09:15,939 root DEBUG 

=================== Experiment ID #35 	 Dual Point ID: 42 ===================
10:09:15,972 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.119E-07|<1.000E-06)
10:09:15,973 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:16,360 root DEBUG Side: ON	 Angle(dx0, dx): 4.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.146E-02 	 Total distance: 3.146E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([116], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:16,677 root DEBUG Side: OFF	 Angle(dx0, dx): 0.92 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.449E-02 	 Total distance: 1.449E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([36], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:17,26 root DEBUG Side: OFF	 Angle(dx0, dx): 8.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.092E-02 	 Total distance: 2.541E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([1, 8], dtype=int64), array([[1.],
       [0.]])]] 	 class: [1 9]
10:09:17,26 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:17,26 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -10.63 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:17,26 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:17,26 root DEBUG dOFF/dON = 0.8
10:09:17,27 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.3126361094344, 'dON1': 0.03145665087988877, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.03145665087988877, 'nTON': 1, 'dON': 0.03145665087988877, 'dxOFFAngle': 82.93308339408192, 'dOFF1': 0.025412272127030407, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.025412272127030407, 'nTOFF': 1, 'dOFF': 0.025412272127030407, 'SUCCESS': False}
10:09:17,37 root DEBUG 

=================== Experiment ID #36 	 Dual Point ID: 43 ===================
10:09:17,75 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.305E-08|<1.000E-06)
10:09:17,75 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:17,566 root DEBUG Side: ON	 Angle(dx0, dx): 2.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.101E-02 	 Total distance: 1.101E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([25], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:18,16 root DEBUG Side: OFF	 Angle(dx0, dx): 21.32 deg 	 Angle(n, nold): 18.68 deg 	 Distance in patch: 4.782E-02 	 Total distance: 4.782E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([110], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:18,235 root DEBUG Side: OFF	 Angle(dx0, dx): 21.32 deg 	 Angle(n, nold): 18.68 deg 	 Distance in patch: 8.922E-07 	 Total distance: 4.782E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([110], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:18,453 root DEBUG Side: OFF	 Angle(dx0, dx): 21.32 deg 	 Angle(n, nold): 18.68 deg 	 Distance in patch: 1.071E-07 	 Total distance: 4.782E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([110], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:18,661 root DEBUG Side: OFF	 Angle(dx0, dx): 21.32 deg 	 Angle(n, nold): 18.68 deg 	 Distance in patch: 1.115E-07 	 Total distance: 4.782E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([110], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:18,669 root DEBUG Got stuck in too many past-layer relus.
10:09:18,669 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:09:18,669 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:09:18,671 root DEBUG 

=================== Experiment ID #36 	 Dual Point ID: 44 ===================
10:09:18,704 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.440E-08|<1.000E-06)
10:09:18,704 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:19,183 root DEBUG Side: ON	 Angle(dx0, dx): 2.47 deg 	 Angle(n, nold): 1.46 deg 	 Distance in patch: 6.560E-02 	 Total distance: 6.560E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([140], dtype=int64), array([[False]])]] 	 class: [2 3]
10:09:19,494 root DEBUG Side: ON	 Angle(dx0, dx): 16.99 deg 	 Angle(n, nold): 16.96 deg 	 Distance in patch: 2.517E-02 	 Total distance: 9.077E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([101], dtype=int64), array([[False]])]] 	 class: [2 3]
10:09:19,738 root DEBUG Side: ON	 Angle(dx0, dx): 7.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.680E-02 	 Total distance: 1.176E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([114], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:09:20,189 root DEBUG Side: OFF	 Angle(dx0, dx): 2.23 deg 	 Angle(n, nold): 16.98 deg 	 Distance in patch: 2.980E-02 	 Total distance: 2.980E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([195], dtype=int64), array([[False]])]] 	 class: [2 3]
10:09:20,433 root DEBUG Side: OFF	 Angle(dx0, dx): 4.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.165E-02 	 Total distance: 5.145E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([80], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:09:20,658 root DEBUG Side: OFF	 Angle(dx0, dx): 1.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.795E-02 	 Total distance: 1.294E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[2, array([153], dtype=int64), array([[False]])]] 	 class: [2 3]
10:09:20,896 root DEBUG Side: OFF	 Angle(dx0, dx): 2.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.218E-02 	 Total distance: 2.016E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([20], dtype=int64), array([[False]])]] 	 class: [2 3]
10:09:20,897 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:20,897 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 26.32 	 cIDON = [2 3], cIDOFF = [2 3]
10:09:20,897 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:20,897 root DEBUG dOFF/dON = 1.7
10:09:20,897 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.37278701643717, 'dON1': 0.11757025255674136, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.11757025255674136, 'nTON': 1, 'dON': 0.11757025255674136, 'dxOFFAngle': 70.83950469336554, 'dOFF1': 0.20158547439988775, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.20158547439988775, 'nTOFF': 1, 'dOFF': 0.20158547439988775, 'SUCCESS': True}
10:09:20,906 root DEBUG 

=================== Experiment ID #37 	 Dual Point ID: 45 ===================
10:09:20,944 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.364E-07|<1.000E-06)
10:09:20,945 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:21,362 root DEBUG Side: ON	 Angle(dx0, dx): 4.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.555E-04 	 Total distance: 9.555E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([186], dtype=int64), array([[False]])]] 	 class: [4 6]
10:09:21,846 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.087E-02 	 Total distance: 1.087E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([163], dtype=int64), array([[False]])]] 	 class: [4 6]
10:09:21,846 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:21,847 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 83.84 	 cIDON = [4 6], cIDOFF = [4 6]
10:09:21,847 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:21,847 root DEBUG dOFF/dON = 11.4
10:09:21,847 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.24877127022262, 'dON1': 0.0009555495789854053, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.0009555495789854053, 'nTON': 1, 'dON': 0.0009555495789854053, 'dxOFFAngle': 83.13299938718025, 'dOFF1': 0.010868226042722076, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.010868226042722076, 'nTOFF': 1, 'dOFF': 0.010868226042722076, 'SUCCESS': True}
10:09:21,853 root DEBUG 

=================== Experiment ID #38 	 Dual Point ID: 46 ===================
10:09:21,888 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.920E-08|<1.000E-06)
10:09:21,888 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:22,291 root DEBUG Side: ON	 Angle(dx0, dx): 1.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.191E-02 	 Total distance: 4.191E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([18], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:09:22,582 root DEBUG Side: ON	 Angle(dx0, dx): 2.78 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.518E-02 	 Total distance: 9.709E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([164], dtype=int64), array([[False]])]] 	 class: [3 9]
10:09:22,986 root DEBUG Side: OFF	 Angle(dx0, dx): 3.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.697E-02 	 Total distance: 1.697E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([4], dtype=int64), array([[False]])]] 	 class: [3 9]
10:09:22,987 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:22,987 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -70.25 	 cIDON = [3 9], cIDOFF = [3 9]
10:09:22,987 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:22,987 root DEBUG dOFF/dON = 0.2
10:09:22,987 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.04307146699405, 'dON1': 0.0970928218586718, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.0970928218586718, 'nTON': 1, 'dON': 0.0970928218586718, 'dxOFFAngle': 86.8073874757365, 'dOFF1': 0.01696605520826955, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.01696605520826955, 'nTOFF': 1, 'dOFF': 0.01696605520826955, 'SUCCESS': False}
10:09:22,996 root DEBUG 

=================== Experiment ID #39 	 Dual Point ID: 47 ===================
10:09:23,26 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.108E-07|<1.000E-06)
10:09:23,27 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:23,409 root DEBUG Side: ON	 Angle(dx0, dx): 5.29 deg 	 Angle(n, nold): 5.21 deg 	 Distance in patch: 2.635E-03 	 Total distance: 2.635E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([235], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:09:23,612 root DEBUG Side: ON	 Angle(dx0, dx): 5.29 deg 	 Angle(n, nold): 5.21 deg 	 Distance in patch: 7.369E-07 	 Total distance: 2.636E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([235], dtype=int64), array([[False]])]] 	 class: [4 5]
10:09:23,803 root DEBUG Side: ON	 Angle(dx0, dx): 5.29 deg 	 Angle(n, nold): 5.21 deg 	 Distance in patch: 9.184E-08 	 Total distance: 2.636E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([235], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:09:24,46 root DEBUG Side: ON	 Angle(dx0, dx): 5.29 deg 	 Angle(n, nold): 5.21 deg 	 Distance in patch: 3.684E-07 	 Total distance: 2.637E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([235], dtype=int64), array([[False]])]] 	 class: [4 5]
10:09:24,56 root DEBUG Got stuck in too many past-layer relus.
10:09:24,221 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:09:24,221 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:09:24,223 root DEBUG 

=================== Experiment ID #39 	 Dual Point ID: 48 ===================
10:09:24,262 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.527E-09|<1.000E-06)
10:09:24,262 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:24,678 root DEBUG Side: ON	 Angle(dx0, dx): 0.71 deg 	 Angle(n, nold): 1.01 deg 	 Distance in patch: 2.438E-02 	 Total distance: 2.438E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([88], dtype=int64), array([[False]])]] 	 class: [5 6]
10:09:24,926 root DEBUG Side: ON	 Angle(dx0, dx): 4.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.463E-02 	 Total distance: 7.900E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([66], dtype=int64), array([[False]])]] 	 class: [5 6]
10:09:25,184 root DEBUG Side: ON	 Angle(dx0, dx): 6.94 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.136E-01 	 Total distance: 1.926E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([20], dtype=int64), array([[False]])]] 	 class: [5 6]
10:09:25,541 root DEBUG Side: OFF	 Angle(dx0, dx): 2.02 deg 	 Angle(n, nold): 1.01 deg 	 Distance in patch: 1.454E-02 	 Total distance: 1.454E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([2], dtype=int64), array([[False]])]] 	 class: [5 6]
10:09:25,541 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:25,542 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -85.96 	 cIDON = [5 6], cIDOFF = [5 6]
10:09:25,542 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:25,542 root DEBUG dOFF/dON = 0.1
10:09:25,542 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 73.03575475493803, 'dON1': 0.19260001614647787, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.19260001614647787, 'nTON': 1, 'dON': 0.19260001614647787, 'dxOFFAngle': 70.53859919472816, 'dOFF1': 0.014538221975289612, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.014538221975289612, 'nTOFF': 1, 'dOFF': 0.014538221975289612, 'SUCCESS': False}
10:09:25,552 root DEBUG 

=================== Experiment ID #40 	 Dual Point ID: 49 ===================
10:09:25,588 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.742E-07|<1.000E-06)
10:09:25,589 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:25,984 root DEBUG Side: ON	 Angle(dx0, dx): 0.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.213E-02 	 Total distance: 6.213E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([78], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:09:26,378 root DEBUG Side: OFF	 Angle(dx0, dx): 0.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.130E-02 	 Total distance: 5.130E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([247], dtype=int64), array([[False]])]] 	 class: [6 9]
10:09:26,378 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:26,378 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -9.55 	 cIDON = [6 9], cIDOFF = [6 9]
10:09:26,378 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:26,378 root DEBUG dOFF/dON = 0.8
10:09:26,378 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.17491117088198, 'dON1': 0.062134327016918685, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.062134327016918685, 'nTON': 1, 'dON': 0.062134327016918685, 'dxOFFAngle': 86.92044712349518, 'dOFF1': 0.05129682192306645, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.05129682192306645, 'nTOFF': 1, 'dOFF': 0.05129682192306645, 'SUCCESS': False}
10:09:26,387 root DEBUG 

=================== Experiment ID #41 	 Dual Point ID: 50 ===================
10:09:26,412 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.816E-08|<1.000E-06)
10:09:26,413 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:26,835 root DEBUG Side: ON	 Angle(dx0, dx): 8.50 deg 	 Angle(n, nold): 8.40 deg 	 Distance in patch: 2.265E-02 	 Total distance: 2.265E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([97], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:27,84 root DEBUG Side: ON	 Angle(dx0, dx): 4.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.968E-02 	 Total distance: 7.233E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([167], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:27,568 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 8.40 deg 	 Distance in patch: 7.985E-02 	 Total distance: 7.985E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([152], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:27,568 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:27,568 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 4.94 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:27,568 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:27,568 root DEBUG dOFF/dON = 1.1
10:09:27,568 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 79.31235756576989, 'dON1': 0.07233301695284276, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.07233301695284276, 'nTON': 1, 'dON': 0.07233301695284276, 'dxOFFAngle': 78.125995717313, 'dOFF1': 0.07985099051192532, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.07985099051192532, 'nTOFF': 1, 'dOFF': 0.07985099051192532, 'SUCCESS': True}
10:09:27,576 root DEBUG 

=================== Experiment ID #42 	 Dual Point ID: 51 ===================
10:09:27,602 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.967E-08|<1.000E-06)
10:09:27,602 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:28,41 root DEBUG Side: ON	 Angle(dx0, dx): 4.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.984E-04 	 Total distance: 9.984E-04 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([209], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:28,352 root DEBUG Side: ON	 Angle(dx0, dx): 16.32 deg 	 Angle(n, nold): 15.70 deg 	 Distance in patch: 2.523E-02 	 Total distance: 2.622E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([221], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:28,629 root DEBUG Side: ON	 Angle(dx0, dx): 8.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.690E-02 	 Total distance: 5.313E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([29], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:29,26 root DEBUG Side: OFF	 Angle(dx0, dx): 35.93 deg 	 Angle(n, nold): 15.70 deg 	 Distance in patch: 1.923E-02 	 Total distance: 1.923E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([6, 9], dtype=int64), array([[0.],
       [1.]])]] 	 class: [2 9]
10:09:29,26 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:29,26 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -46.84 	 cIDON = [2 6], cIDOFF = [2 6]
10:09:29,27 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:29,27 root DEBUG dOFF/dON = 0.4
10:09:29,27 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 59.38273685657619, 'dON1': 0.05312690145670964, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.05312690145670964, 'nTON': 1, 'dON': 0.05312690145670964, 'dxOFFAngle': 54.14480632287963, 'dOFF1': 0.0192323978363228, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.0192323978363228, 'nTOFF': 1, 'dOFF': 0.0192323978363228, 'SUCCESS': False}
10:09:29,35 root DEBUG 

=================== Experiment ID #43 	 Dual Point ID: 52 ===================
10:09:29,72 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.062E-07|<1.000E-06)
10:09:29,72 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:29,579 root DEBUG Side: ON	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.040E-02 	 Total distance: 3.040E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([43], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:29,986 root DEBUG Side: OFF	 Angle(dx0, dx): 7.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.427E-03 	 Total distance: 5.427E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([191], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:30,240 root DEBUG Side: OFF	 Angle(dx0, dx): 1.29 deg 	 Angle(n, nold): 1.23 deg 	 Distance in patch: 1.890E-02 	 Total distance: 2.433E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([253], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:30,501 root DEBUG Side: OFF	 Angle(dx0, dx): 1.89 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.221E-02 	 Total distance: 4.654E-02 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[2, array([228], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:30,773 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.41 deg 	 Distance in patch: 4.992E-02 	 Total distance: 9.646E-02 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([17], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:31,55 root DEBUG Side: OFF	 Angle(dx0, dx): 0.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.408E-02 	 Total distance: 1.505E-01 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[2, array([76], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:31,337 root DEBUG Side: OFF	 Angle(dx0, dx): 7.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.138E-02 	 Total distance: 1.919E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([5], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:31,337 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:31,337 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 72.65 	 cIDON = [2 6], cIDOFF = [2 6]
10:09:31,337 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:31,337 root DEBUG dOFF/dON = 6.3
10:09:31,337 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 64.16703804191948, 'dON1': 0.0303980265882126, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.0303980265882126, 'nTON': 1, 'dON': 0.0303980265882126, 'dxOFFAngle': 64.2292363273646, 'dOFF1': 0.19192313836486014, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.19192313836486014, 'nTOFF': 1, 'dOFF': 0.19192313836486014, 'SUCCESS': True}
10:09:31,344 root DEBUG 

=================== Experiment ID #44 	 Dual Point ID: 53 ===================
10:09:31,363 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.723E-07|<1.000E-06)
10:09:31,363 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:31,766 root DEBUG Side: ON	 Angle(dx0, dx): 2.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.998E-02 	 Total distance: 6.998E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([171], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:32,64 root DEBUG Side: ON	 Angle(dx0, dx): 4.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.647E-02 	 Total distance: 1.665E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([218], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:32,298 root DEBUG Side: ON	 Angle(dx0, dx): 5.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.304E-02 	 Total distance: 2.195E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([136], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:32,738 root DEBUG Side: OFF	 Angle(dx0, dx): 1.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.354E-01 	 Total distance: 1.354E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([61], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:32,738 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:32,738 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -23.69 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:32,738 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:32,739 root DEBUG dOFF/dON = 0.6
10:09:32,739 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 56.08713849597606, 'dON1': 0.21949214863205618, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.21949214863205618, 'nTON': 1, 'dON': 0.21949214863205618, 'dxOFFAngle': 55.89421439162008, 'dOFF1': 0.1354025747163983, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.1354025747163983, 'nTOFF': 1, 'dOFF': 0.1354025747163983, 'SUCCESS': False}
10:09:32,749 root DEBUG 

=================== Experiment ID #45 	 Dual Point ID: 54 ===================
10:09:32,777 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.086E-07|<1.000E-06)
10:09:32,777 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:33,217 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.02 deg 	 Distance in patch: 6.950E-03 	 Total distance: 6.950E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([76], dtype=int64), array([[False]])]] 	 class: [5 6]
10:09:33,445 root DEBUG Side: ON	 Angle(dx0, dx): 3.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.345E-02 	 Total distance: 3.040E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([17], dtype=int64), array([[False]])]] 	 class: [5 6]
10:09:33,804 root DEBUG Side: OFF	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.63 deg 	 Distance in patch: 1.508E-02 	 Total distance: 1.508E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([139], dtype=int64), array([[False]])]] 	 class: [5 6]
10:09:34,86 root DEBUG Side: OFF	 Angle(dx0, dx): 1.77 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.023E-02 	 Total distance: 2.531E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([80], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:09:34,86 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:34,86 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -9.13 	 cIDON = [5 6], cIDOFF = [5 6]
10:09:34,87 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:34,87 root DEBUG dOFF/dON = 0.8
10:09:34,87 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.30561160877721, 'dON1': 0.030401659609055397, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.030401659609055397, 'nTON': 1, 'dON': 0.030401659609055397, 'dxOFFAngle': 87.0684425508982, 'dOFF1': 0.02531270423366385, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.02531270423366385, 'nTOFF': 1, 'dOFF': 0.02531270423366385, 'SUCCESS': False}
10:09:34,94 root DEBUG 

=================== Experiment ID #46 	 Dual Point ID: 55 ===================
10:09:34,123 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.611E-07|<1.000E-06)
10:09:34,124 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:34,582 root DEBUG Side: ON	 Angle(dx0, dx): 1.94 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.213E-01 	 Total distance: 1.213E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([69], dtype=int64), array([[False]])]] 	 class: [4 7]
10:09:34,936 root DEBUG Side: OFF	 Angle(dx0, dx): 1.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.797E-02 	 Total distance: 2.797E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([229], dtype=int64), array([[False]])]] 	 class: [4 7]
10:09:35,178 root DEBUG Side: OFF	 Angle(dx0, dx): 0.84 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.303E-02 	 Total distance: 1.210E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([113], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:35,487 root DEBUG Side: OFF	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.08 deg 	 Distance in patch: 2.024E-01 	 Total distance: 3.234E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([249], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:35,696 root DEBUG Side: OFF	 Angle(dx0, dx): 2.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.128E-03 	 Total distance: 3.315E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([34], dtype=int64), array([[False]])]] 	 class: [4 7]
10:09:35,696 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:35,697 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 46.42 	 cIDON = [4 7], cIDOFF = [4 7]
10:09:35,697 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:35,697 root DEBUG dOFF/dON = 2.7
10:09:35,697 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.21102432480515, 'dON1': 0.12129613071316037, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.12129613071316037, 'nTON': 1, 'dON': 0.12129613071316037, 'dxOFFAngle': 84.25862043777356, 'dOFF1': 0.33150579276870235, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.33150579276870235, 'nTOFF': 1, 'dOFF': 0.33150579276870235, 'SUCCESS': True}
10:09:35,708 root DEBUG 

=================== Experiment ID #47 	 Dual Point ID: 56 ===================
10:09:35,744 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.889E-08|<1.000E-06)
10:09:35,744 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:36,188 root DEBUG Side: ON	 Angle(dx0, dx): 0.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.793E-03 	 Total distance: 2.793E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([135], dtype=int64), array([[False]])]] 	 class: [7 8]
10:09:36,613 root DEBUG Side: OFF	 Angle(dx0, dx): 5.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.407E-02 	 Total distance: 6.407E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([159], dtype=int64), array([[False]])]] 	 class: [7 8]
10:09:36,812 root DEBUG Side: OFF	 Angle(dx0, dx): 2.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.072E-02 	 Total distance: 1.348E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([240], dtype=int64), array([[ True]])]] 	 class: [7 8]
10:09:36,812 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:36,813 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 95.94 	 cIDON = [7 8], cIDOFF = [7 8]
10:09:36,813 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:36,813 root DEBUG dOFF/dON = 48.3
10:09:36,813 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 79.14372181171035, 'dON1': 0.002793279822967308, 'cIDON1': array([7, 8], dtype=int64), 'dON_patch_1': 0.002793279822967308, 'nTON': 1, 'dON': 0.002793279822967308, 'dxOFFAngle': 84.38687058673037, 'dOFF1': 0.13479529839833998, 'cIDOFF1': array([7, 8], dtype=int64), 'dOFF_patch_1': 0.13479529839833998, 'nTOFF': 1, 'dOFF': 0.13479529839833998, 'SUCCESS': True}
10:09:36,821 root DEBUG 

=================== Experiment ID #48 	 Dual Point ID: 57 ===================
10:09:36,860 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.330E-07|<1.000E-06)
10:09:36,860 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:37,311 root DEBUG Side: ON	 Angle(dx0, dx): 4.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.530E-02 	 Total distance: 1.530E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([212], dtype=int64), array([[False]])]] 	 class: [2 9]
10:09:37,779 root DEBUG Side: OFF	 Angle(dx0, dx): 1.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.513E-02 	 Total distance: 1.513E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([20], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:09:38,14 root DEBUG Side: OFF	 Angle(dx0, dx): 0.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.589E-02 	 Total distance: 3.101E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([11], dtype=int64), array([[False]])]] 	 class: [2 9]
10:09:38,15 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:38,15 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 33.93 	 cIDON = [2 9], cIDOFF = [2 9]
10:09:38,15 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:38,15 root DEBUG dOFF/dON = 2.0
10:09:38,15 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.85096868818748, 'dON1': 0.015300162451161965, 'cIDON1': array([2, 9], dtype=int64), 'dON_patch_1': 0.015300162451161965, 'nTON': 1, 'dON': 0.015300162451161965, 'dxOFFAngle': 86.40403538393822, 'dOFF1': 0.0310130209626054, 'cIDOFF1': array([2, 9], dtype=int64), 'dOFF_patch_1': 0.0310130209626054, 'nTOFF': 1, 'dOFF': 0.0310130209626054, 'SUCCESS': True}
10:09:38,21 root DEBUG 

=================== Experiment ID #49 	 Dual Point ID: 58 ===================
10:09:38,49 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.428E-07|<1.000E-06)
10:09:38,50 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:38,490 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.300E-02 	 Total distance: 3.300E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([98], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:38,864 root DEBUG Side: OFF	 Angle(dx0, dx): 1.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.070E-03 	 Total distance: 3.070E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([11], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:38,865 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:38,865 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -82.98 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:38,865 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:38,865 root DEBUG dOFF/dON = 0.1
10:09:38,865 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.24591965036679, 'dON1': 0.03300299921296618, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.03300299921296618, 'nTON': 1, 'dON': 0.03300299921296618, 'dxOFFAngle': 85.76438243334763, 'dOFF1': 0.0030704722689350737, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.0030704722689350737, 'nTOFF': 1, 'dOFF': 0.0030704722689350737, 'SUCCESS': False}
10:09:38,876 root DEBUG 

=================== Experiment ID #50 	 Dual Point ID: 59 ===================
10:09:38,901 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.385E-07|<1.000E-06)
10:09:38,901 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:39,328 root DEBUG Side: ON	 Angle(dx0, dx): 4.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.831E-02 	 Total distance: 1.831E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([233], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:39,573 root DEBUG Side: ON	 Angle(dx0, dx): 3.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.125E-02 	 Total distance: 8.956E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([18], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:40,6 root DEBUG Side: OFF	 Angle(dx0, dx): 0.91 deg 	 Angle(n, nold): 0.87 deg 	 Distance in patch: 4.898E-01 	 Total distance: 4.898E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([143], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:40,207 root DEBUG Side: OFF	 Angle(dx0, dx): 1.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.199E-02 	 Total distance: 5.318E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([182], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:40,207 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:40,207 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 71.17 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:40,207 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:40,207 root DEBUG dOFF/dON = 5.9
10:09:40,207 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.99362322740929, 'dON1': 0.08956104698999753, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.08956104698999753, 'nTON': 1, 'dON': 0.08956104698999753, 'dxOFFAngle': 86.11801559385056, 'dOFF1': 0.5318366754623157, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.5318366754623157, 'nTOFF': 1, 'dOFF': 0.5318366754623157, 'SUCCESS': True}
10:09:40,221 root DEBUG 

=================== Experiment ID #51 	 Dual Point ID: 60 ===================
10:09:40,257 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.978E-07|<1.000E-06)
10:09:40,258 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:40,687 root DEBUG Side: ON	 Angle(dx0, dx): 1.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.701E-02 	 Total distance: 4.701E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([230], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:40,982 root DEBUG Side: ON	 Angle(dx0, dx): 5.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.447E-02 	 Total distance: 8.147E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([6], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:41,351 root DEBUG Side: OFF	 Angle(dx0, dx): 1.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.457E-03 	 Total distance: 3.457E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([51], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:41,351 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:41,351 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -91.86 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:41,351 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:41,352 root DEBUG dOFF/dON = 0.0
10:09:41,352 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.13685115275294, 'dON1': 0.08147239810523574, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.08147239810523574, 'nTON': 1, 'dON': 0.08147239810523574, 'dxOFFAngle': 78.89535377672009, 'dOFF1': 0.0034567018176837167, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.0034567018176837167, 'nTOFF': 1, 'dOFF': 0.0034567018176837167, 'SUCCESS': False}
10:09:41,363 root DEBUG 

=================== Experiment ID #52 	 Dual Point ID: 61 ===================
10:09:41,381 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.543E-07|<1.000E-06)
10:09:41,381 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:41,840 root DEBUG Side: ON	 Angle(dx0, dx): 1.88 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.155E-02 	 Total distance: 4.155E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([2], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:42,237 root DEBUG Side: OFF	 Angle(dx0, dx): 2.65 deg 	 Angle(n, nold): 2.24 deg 	 Distance in patch: 1.910E-02 	 Total distance: 1.910E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([191], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:42,483 root DEBUG Side: OFF	 Angle(dx0, dx): 1.98 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.156E-02 	 Total distance: 6.065E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([14], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:42,483 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:42,483 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 18.68 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:42,483 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:42,483 root DEBUG dOFF/dON = 1.5
10:09:42,483 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.62183826382925, 'dON1': 0.04155432050883126, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.04155432050883126, 'nTON': 1, 'dON': 0.04155432050883126, 'dxOFFAngle': 82.25144854464321, 'dOFF1': 0.06065089885124439, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.06065089885124439, 'nTOFF': 1, 'dOFF': 0.06065089885124439, 'SUCCESS': True}
10:09:42,490 root DEBUG 

=================== Experiment ID #53 	 Dual Point ID: 62 ===================
10:09:42,527 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.499E-08|<1.000E-06)
10:09:42,527 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:42,986 root DEBUG Side: ON	 Angle(dx0, dx): 1.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.570E-03 	 Total distance: 8.570E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([223], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:43,350 root DEBUG Side: OFF	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.46 deg 	 Distance in patch: 2.461E-02 	 Total distance: 2.461E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([138], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:43,581 root DEBUG Side: OFF	 Angle(dx0, dx): 11.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.306E-03 	 Total distance: 2.992E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([146], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:43,581 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:43,581 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 55.47 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:43,581 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:43,581 root DEBUG dOFF/dON = 3.5
10:09:43,581 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 75.94312661049757, 'dON1': 0.008569927724684763, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.008569927724684763, 'nTON': 1, 'dON': 0.008569927724684763, 'dxOFFAngle': 73.95270891906836, 'dOFF1': 0.029919895683658767, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.029919895683658767, 'nTOFF': 1, 'dOFF': 0.029919895683658767, 'SUCCESS': True}
10:09:43,589 root DEBUG 

=================== Experiment ID #54 	 Dual Point ID: 63 ===================
10:09:43,624 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.046E-07|<1.000E-06)
10:09:43,624 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:44,40 root DEBUG Side: ON	 Angle(dx0, dx): 0.83 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.678E-02 	 Total distance: 2.678E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([39], dtype=int64), array([[False]])]] 	 class: [3 9]
10:09:44,466 root DEBUG Side: OFF	 Angle(dx0, dx): 3.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.313E-02 	 Total distance: 6.313E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([229], dtype=int64), array([[False]])]] 	 class: [3 9]
10:09:44,660 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.316E-02 	 Total distance: 9.629E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([203], dtype=int64), array([[False]])]] 	 class: [3 9]
10:09:44,877 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.830E-02 	 Total distance: 1.646E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([28], dtype=int64), array([[False]])]] 	 class: [3 9]
10:09:44,877 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:44,878 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 72.01 	 cIDON = [3 9], cIDOFF = [3 9]
10:09:44,878 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:44,878 root DEBUG dOFF/dON = 6.1
10:09:44,878 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 71.72607174922516, 'dON1': 0.026778475161392888, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.026778475161392888, 'nTON': 1, 'dON': 0.026778475161392888, 'dxOFFAngle': 78.56072745629994, 'dOFF1': 0.16459595719268147, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.16459595719268147, 'nTOFF': 1, 'dOFF': 0.16459595719268147, 'SUCCESS': True}
10:09:44,883 root DEBUG 

=================== Experiment ID #55 	 Dual Point ID: 64 ===================
10:09:44,919 root DEBUG CONTROL: 	 WARNING! 	 (target neuron output > tolerance: |1.167E-06|>1.000E-06)
10:09:44,919 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:44,919 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:44,920 root DEBUG 

=================== Experiment ID #55 	 Dual Point ID: 65 ===================
10:09:44,953 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.057E-07|<1.000E-06)
10:09:44,953 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:45,320 root DEBUG Side: ON	 Angle(dx0, dx): 1.10 deg 	 Angle(n, nold): 1.12 deg 	 Distance in patch: 1.215E-02 	 Total distance: 1.215E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([224], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:45,561 root DEBUG Side: ON	 Angle(dx0, dx): 2.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.182E-02 	 Total distance: 7.397E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([188], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:46,24 root DEBUG Side: OFF	 Angle(dx0, dx): 1.55 deg 	 Angle(n, nold): 1.12 deg 	 Distance in patch: 7.691E-03 	 Total distance: 7.691E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([12], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:46,279 root DEBUG Side: OFF	 Angle(dx0, dx): 5.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.721E-02 	 Total distance: 2.490E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([13], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:46,279 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:46,279 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -49.63 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:46,279 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:46,279 root DEBUG dOFF/dON = 0.3
10:09:46,279 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.22226027227191, 'dON1': 0.07396787982981823, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.07396787982981823, 'nTON': 1, 'dON': 0.07396787982981823, 'dxOFFAngle': 88.27088890637133, 'dOFF1': 0.02489842732663925, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.02489842732663925, 'nTOFF': 1, 'dOFF': 0.02489842732663925, 'SUCCESS': False}
10:09:46,289 root DEBUG 

=================== Experiment ID #56 	 Dual Point ID: 66 ===================
10:09:46,323 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.894E-07|<1.000E-06)
10:09:46,323 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:46,839 root DEBUG Side: ON	 Angle(dx0, dx): 2.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.215E-01 	 Total distance: 1.215E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([188], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:47,209 root DEBUG Side: OFF	 Angle(dx0, dx): 0.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.213E-02 	 Total distance: 1.213E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([234], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:47,482 root DEBUG Side: OFF	 Angle(dx0, dx): 1.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.293E-02 	 Total distance: 2.506E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([12], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:47,739 root DEBUG Side: OFF	 Angle(dx0, dx): 5.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.888E-02 	 Total distance: 7.394E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([13], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:47,739 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:47,740 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -24.31 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:47,740 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:47,740 root DEBUG dOFF/dON = 0.6
10:09:47,740 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.64122168931942, 'dON1': 0.12145231300752417, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.12145231300752417, 'nTON': 1, 'dON': 0.12145231300752417, 'dxOFFAngle': 88.22293131227985, 'dOFF1': 0.07394423721836017, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.07394423721836017, 'nTOFF': 1, 'dOFF': 0.07394423721836017, 'SUCCESS': False}
10:09:47,748 root DEBUG 

=================== Experiment ID #57 	 Dual Point ID: 67 ===================
10:09:47,772 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.338E-07|<1.000E-06)
10:09:47,772 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:48,271 root DEBUG Side: ON	 Angle(dx0, dx): 1.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.286E-02 	 Total distance: 2.286E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([220], dtype=int64), array([[False]])]] 	 class: [6 7]
10:09:48,615 root DEBUG Side: OFF	 Angle(dx0, dx): 1.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.637E-03 	 Total distance: 7.637E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([45], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:09:48,884 root DEBUG Side: OFF	 Angle(dx0, dx): 0.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.378E-01 	 Total distance: 3.455E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([54], dtype=int64), array([[False]])]] 	 class: [6 7]
10:09:48,884 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:48,885 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 87.59 	 cIDON = [6 7], cIDOFF = [6 7]
10:09:48,885 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:48,885 root DEBUG dOFF/dON = 15.1
10:09:48,885 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.12336874703645, 'dON1': 0.022861284189831882, 'cIDON1': array([6, 7], dtype=int64), 'dON_patch_1': 0.022861284189831882, 'nTON': 1, 'dON': 0.022861284189831882, 'dxOFFAngle': 85.54625256170236, 'dOFF1': 0.34547499974408674, 'cIDOFF1': array([6, 7], dtype=int64), 'dOFF_patch_1': 0.34547499974408674, 'nTOFF': 1, 'dOFF': 0.34547499974408674, 'SUCCESS': True}
10:09:48,892 root DEBUG 

=================== Experiment ID #58 	 Dual Point ID: 68 ===================
10:09:48,926 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.463E-07|<1.000E-06)
10:09:48,926 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:49,351 root DEBUG Side: ON	 Angle(dx0, dx): 3.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.659E-02 	 Total distance: 3.659E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([220], dtype=int64), array([[False]])]] 	 class: [6 7]
10:09:49,733 root DEBUG Side: OFF	 Angle(dx0, dx): 1.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.025E-02 	 Total distance: 1.025E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([45], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:09:49,984 root DEBUG Side: OFF	 Angle(dx0, dx): 1.77 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.771E-01 	 Total distance: 1.874E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([143], dtype=int64), array([[False]])]] 	 class: [6 7]
10:09:50,234 root DEBUG Side: OFF	 Angle(dx0, dx): 0.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.641E-02 	 Total distance: 2.338E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([54], dtype=int64), array([[False]])]] 	 class: [6 7]
10:09:50,234 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:50,234 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 72.94 	 cIDON = [6 7], cIDOFF = [6 7]
10:09:50,235 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:50,235 root DEBUG dOFF/dON = 6.4
10:09:50,235 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.47932017697079, 'dON1': 0.036586068606758775, 'cIDON1': array([6, 7], dtype=int64), 'dON_patch_1': 0.036586068606758775, 'nTON': 1, 'dON': 0.036586068606758775, 'dxOFFAngle': 83.1157263936965, 'dOFF1': 0.23378713517900002, 'cIDOFF1': array([6, 7], dtype=int64), 'dOFF_patch_1': 0.23378713517900002, 'nTOFF': 1, 'dOFF': 0.23378713517900002, 'SUCCESS': True}
10:09:50,248 root DEBUG 

=================== Experiment ID #59 	 Dual Point ID: 69 ===================
10:09:50,284 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.170E-07|<1.000E-06)
10:09:50,284 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:50,668 root DEBUG Side: ON	 Angle(dx0, dx): 0.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.570E-02 	 Total distance: 1.570E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([166], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:50,929 root DEBUG Side: ON	 Angle(dx0, dx): 0.71 deg 	 Angle(n, nold): 0.68 deg 	 Distance in patch: 4.730E-02 	 Total distance: 6.299E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([61], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:51,160 root DEBUG Side: ON	 Angle(dx0, dx): 5.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.792E-03 	 Total distance: 6.779E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([31], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:51,491 root DEBUG Side: OFF	 Angle(dx0, dx): 0.74 deg 	 Angle(n, nold): 0.68 deg 	 Distance in patch: 1.596E-03 	 Total distance: 1.596E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([135], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:51,491 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:51,491 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -95.40 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:51,491 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:51,491 root DEBUG dOFF/dON = 0.0
10:09:51,491 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.08666893278682, 'dON1': 0.06778575463655742, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.06778575463655742, 'nTON': 1, 'dON': 0.06778575463655742, 'dxOFFAngle': 81.90215128008236, 'dOFF1': 0.0015958996342811508, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.0015958996342811508, 'nTOFF': 1, 'dOFF': 0.0015958996342811508, 'SUCCESS': False}
10:09:51,498 root DEBUG 

=================== Experiment ID #60 	 Dual Point ID: 70 ===================
10:09:51,534 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.552E-08|<1.000E-06)
10:09:51,534 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:51,961 root DEBUG Side: ON	 Angle(dx0, dx): 1.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.290E-02 	 Total distance: 2.290E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([55], dtype=int64), array([[False]])]] 	 class: [7 8]
10:09:52,380 root DEBUG Side: OFF	 Angle(dx0, dx): 1.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.225E-02 	 Total distance: 3.225E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([137], dtype=int64), array([[False]])]] 	 class: [7 8]
10:09:52,381 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:52,381 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 16.96 	 cIDON = [7 8], cIDOFF = [7 8]
10:09:52,381 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:52,381 root DEBUG dOFF/dON = 1.4
10:09:52,381 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 74.2394982549715, 'dON1': 0.022900091706254566, 'cIDON1': array([7, 8], dtype=int64), 'dON_patch_1': 0.022900091706254566, 'nTON': 1, 'dON': 0.022900091706254566, 'dxOFFAngle': 79.01101946386143, 'dOFF1': 0.032251879378290764, 'cIDOFF1': array([7, 8], dtype=int64), 'dOFF_patch_1': 0.032251879378290764, 'nTOFF': 1, 'dOFF': 0.032251879378290764, 'SUCCESS': True}
10:09:52,398 root DEBUG 

=================== Experiment ID #61 	 Dual Point ID: 71 ===================
10:09:52,434 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.794E-07|<1.000E-06)
10:09:52,434 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:52,854 root DEBUG Side: ON	 Angle(dx0, dx): 8.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.278E-01 	 Total distance: 1.278E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([182], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:53,241 root DEBUG Side: OFF	 Angle(dx0, dx): 2.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.003E-02 	 Total distance: 2.003E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([109], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:53,241 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:53,241 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -72.90 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:53,241 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:53,241 root DEBUG dOFF/dON = 0.2
10:09:53,241 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 62.0710355699957, 'dON1': 0.12777670124499052, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.12777670124499052, 'nTON': 1, 'dON': 0.12777670124499052, 'dxOFFAngle': 66.94739300643197, 'dOFF1': 0.02003148421880131, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.02003148421880131, 'nTOFF': 1, 'dOFF': 0.02003148421880131, 'SUCCESS': False}
10:09:53,248 root DEBUG 

=================== Experiment ID #62 	 Dual Point ID: 72 ===================
10:09:53,276 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.606E-07|<1.000E-06)
10:09:53,277 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:53,796 root DEBUG Side: ON	 Angle(dx0, dx): 2.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.171E-02 	 Total distance: 2.171E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([171], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:54,42 root DEBUG Side: ON	 Angle(dx0, dx): 14.31 deg 	 Angle(n, nold): 14.11 deg 	 Distance in patch: 3.900E-02 	 Total distance: 6.071E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([101], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:54,253 root DEBUG Side: ON	 Angle(dx0, dx): 14.31 deg 	 Angle(n, nold): 14.11 deg 	 Distance in patch: 5.623E-05 	 Total distance: 6.076E-02 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([101], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:54,437 root DEBUG Side: ON	 Angle(dx0, dx): 14.31 deg 	 Angle(n, nold): 14.11 deg 	 Distance in patch: 7.832E-08 	 Total distance: 6.076E-02 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([101], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:54,634 root DEBUG Side: ON	 Angle(dx0, dx): 14.31 deg 	 Angle(n, nold): 14.11 deg 	 Distance in patch: 9.695E-06 	 Total distance: 6.077E-02 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([101], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:54,821 root DEBUG Side: ON	 Angle(dx0, dx): 14.31 deg 	 Angle(n, nold): 14.11 deg 	 Distance in patch: 7.832E-08 	 Total distance: 6.077E-02 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([101], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:55,50 root DEBUG Side: ON	 Angle(dx0, dx): 14.31 deg 	 Angle(n, nold): 14.11 deg 	 Distance in patch: 9.695E-06 	 Total distance: 6.078E-02 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([101], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:55,285 root DEBUG Side: ON	 Angle(dx0, dx): 14.31 deg 	 Angle(n, nold): 14.11 deg 	 Distance in patch: 7.832E-08 	 Total distance: 6.078E-02 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([101], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:55,498 root DEBUG Side: ON	 Angle(dx0, dx): 14.31 deg 	 Angle(n, nold): 14.11 deg 	 Distance in patch: 9.695E-06 	 Total distance: 6.079E-02 	 Future toggles: 0 	 Past toggles: 6 	 Toggled: [[1, array([101], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:55,512 root DEBUG Got stuck in too many past-layer relus.
10:09:55,643 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:09:55,644 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:09:55,646 root DEBUG 

=================== Experiment ID #62 	 Dual Point ID: 73 ===================
10:09:55,683 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.154E-07|<1.000E-06)
10:09:55,683 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:56,117 root DEBUG Side: ON	 Angle(dx0, dx): 2.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.217E-03 	 Total distance: 1.217E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([210], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:56,317 root DEBUG Side: ON	 Angle(dx0, dx): 8.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.909E-02 	 Total distance: 4.031E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([167], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:56,552 root DEBUG Side: ON	 Angle(dx0, dx): 6.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.207E-03 	 Total distance: 4.252E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([146], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:56,993 root DEBUG Side: OFF	 Angle(dx0, dx): 3.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.627E-03 	 Total distance: 3.627E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([55], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:56,994 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:56,994 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -84.28 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:56,994 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:56,994 root DEBUG dOFF/dON = 0.1
10:09:56,994 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.32518334000467, 'dON1': 0.04251842648886032, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.04251842648886032, 'nTON': 1, 'dON': 0.04251842648886032, 'dxOFFAngle': 85.28595197770676, 'dOFF1': 0.0036270037534191536, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.0036270037534191536, 'nTOFF': 1, 'dOFF': 0.0036270037534191536, 'SUCCESS': False}
10:09:57,10 root DEBUG 

=================== Experiment ID #63 	 Dual Point ID: 74 ===================
10:09:57,48 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.095E-08|<1.000E-06)
10:09:57,49 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:57,444 root DEBUG Side: ON	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.098E-02 	 Total distance: 9.098E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([93], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:09:57,767 root DEBUG Side: ON	 Angle(dx0, dx): 3.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.884E-03 	 Total distance: 9.986E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([122], dtype=int64), array([[False]])]] 	 class: [5 6]
10:09:57,987 root DEBUG Side: ON	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.507E-03 	 Total distance: 1.094E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[2, array([83], dtype=int64), array([[False]])]] 	 class: [5 6]
10:09:58,207 root DEBUG Side: ON	 Angle(dx0, dx): 4.06 deg 	 Angle(n, nold): 4.39 deg 	 Distance in patch: 1.572E-02 	 Total distance: 1.251E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([188], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:09:58,438 root DEBUG Side: ON	 Angle(dx0, dx): 4.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.069E-02 	 Total distance: 1.358E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([3], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:09:58,765 root DEBUG Side: OFF	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 4.39 deg 	 Distance in patch: 1.764E-02 	 Total distance: 1.764E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([236], dtype=int64), array([[False]])]] 	 class: [5 6]
10:09:59,20 root DEBUG Side: OFF	 Angle(dx0, dx): 2.60 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.803E-02 	 Total distance: 5.567E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([198], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:09:59,283 root DEBUG Side: OFF	 Angle(dx0, dx): 1.09 deg 	 Angle(n, nold): 0.84 deg 	 Distance in patch: 8.017E-02 	 Total distance: 1.358E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([131], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:09:59,517 root DEBUG Side: OFF	 Angle(dx0, dx): 3.34 deg 	 Angle(n, nold): 1.01 deg 	 Distance in patch: 2.359E-02 	 Total distance: 1.594E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([211], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:09:59,776 root DEBUG Side: OFF	 Angle(dx0, dx): 3.92 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.116E-02 	 Total distance: 2.206E-01 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[2, array([195], dtype=int64), array([[False]])]] 	 class: [5 6]
10:10:00,55 root DEBUG Side: OFF	 Angle(dx0, dx): 3.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.567E-02 	 Total distance: 2.363E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([114], dtype=int64), array([[False]])]] 	 class: [5 6]
10:10:00,55 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:00,55 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 27.01 	 cIDON = [5 6], cIDOFF = [5 6]
10:10:00,55 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:00,55 root DEBUG dOFF/dON = 1.7
10:10:00,55 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.83532950564798, 'dON1': 0.1357797962120713, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.1357797962120713, 'nTON': 1, 'dON': 0.1357797962120713, 'dxOFFAngle': 79.73031624995569, 'dOFF1': 0.2362621254400699, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.2362621254400699, 'nTOFF': 1, 'dOFF': 0.2362621254400699, 'SUCCESS': True}
10:10:00,65 root DEBUG 

=================== Experiment ID #64 	 Dual Point ID: 75 ===================
10:10:00,91 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.603E-07|<1.000E-06)
10:10:00,92 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:00,580 root DEBUG Side: ON	 Angle(dx0, dx): 0.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.744E-02 	 Total distance: 2.744E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([60], dtype=int64), array([[False]])]] 	 class: [6 9]
10:10:00,785 root DEBUG Side: ON	 Angle(dx0, dx): 0.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.034E-03 	 Total distance: 2.948E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([22], dtype=int64), array([[False]])]] 	 class: [6 9]
10:10:01,36 root DEBUG Side: ON	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.640E-01 	 Total distance: 1.935E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([62], dtype=int64), array([[False]])]] 	 class: [6 9]
10:10:01,445 root DEBUG Side: OFF	 Angle(dx0, dx): 2.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.769E-01 	 Total distance: 1.769E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([147], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:10:01,445 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:01,446 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -4.48 	 cIDON = [6 9], cIDOFF = [6 9]
10:10:01,446 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:01,446 root DEBUG dOFF/dON = 0.9
10:10:01,446 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.43651457765114, 'dON1': 0.19346218990832942, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.19346218990832942, 'nTON': 1, 'dON': 0.19346218990832942, 'dxOFFAngle': 88.64576656457035, 'dOFF1': 0.17688618726592562, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.17688618726592562, 'nTOFF': 1, 'dOFF': 0.17688618726592562, 'SUCCESS': False}
10:10:01,456 root DEBUG 

=================== Experiment ID #65 	 Dual Point ID: 76 ===================
10:10:01,502 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.997E-07|<1.000E-06)
10:10:01,502 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:02,27 root DEBUG Side: ON	 Angle(dx0, dx): 2.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.073E-02 	 Total distance: 4.073E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([164], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:02,321 root DEBUG Side: ON	 Angle(dx0, dx): 1.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.069E-02 	 Total distance: 1.214E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([223], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:02,747 root DEBUG Side: OFF	 Angle(dx0, dx): 3.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.815E-03 	 Total distance: 6.815E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([2], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:02,747 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:02,748 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -89.37 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:02,748 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:02,748 root DEBUG dOFF/dON = 0.1
10:10:02,748 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.12662585935122, 'dON1': 0.12141208562910938, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.12141208562910938, 'nTON': 1, 'dON': 0.12141208562910938, 'dxOFFAngle': 79.86602510849676, 'dOFF1': 0.006814662756677919, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.006814662756677919, 'nTOFF': 1, 'dOFF': 0.006814662756677919, 'SUCCESS': False}
10:10:02,757 root DEBUG 

=================== Experiment ID #66 	 Dual Point ID: 77 ===================
10:10:02,781 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.508E-07|<1.000E-06)
10:10:02,782 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:03,164 root DEBUG Side: ON	 Angle(dx0, dx): 0.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.151E-02 	 Total distance: 1.151E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([202], dtype=int64), array([[False]])]] 	 class: [6 9]
10:10:03,446 root DEBUG Side: ON	 Angle(dx0, dx): 1.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.959E-02 	 Total distance: 4.110E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([179], dtype=int64), array([[False]])]] 	 class: [6 9]
10:10:03,855 root DEBUG Side: OFF	 Angle(dx0, dx): 5.52 deg 	 Angle(n, nold): 5.38 deg 	 Distance in patch: 2.036E-03 	 Total distance: 2.036E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([86], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:10:04,108 root DEBUG Side: OFF	 Angle(dx0, dx): 1.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.510E-04 	 Total distance: 2.687E-03 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([67], dtype=int64), array([[False]])]] 	 class: [6 9]
10:10:04,368 root DEBUG Side: OFF	 Angle(dx0, dx): 0.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.874E-02 	 Total distance: 5.143E-02 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[2, array([142], dtype=int64), array([[False]])]] 	 class: [6 9]
10:10:04,657 root DEBUG Side: OFF	 Angle(dx0, dx): 3.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.294E-02 	 Total distance: 8.437E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([29], dtype=int64), array([[False]])]] 	 class: [6 9]
10:10:04,657 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:04,658 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 34.49 	 cIDON = [6 9], cIDOFF = [6 9]
10:10:04,658 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:04,658 root DEBUG dOFF/dON = 2.1
10:10:04,658 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.31761942589556, 'dON1': 0.04109719752558126, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.04109719752558126, 'nTON': 1, 'dON': 0.04109719752558126, 'dxOFFAngle': 76.05909222769068, 'dOFF1': 0.08436909343104526, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.08436909343104526, 'nTOFF': 1, 'dOFF': 0.08436909343104526, 'SUCCESS': True}
10:10:04,665 root DEBUG 

=================== Experiment ID #67 	 Dual Point ID: 78 ===================
10:10:04,695 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.345E-07|<1.000E-06)
10:10:04,695 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:05,120 root DEBUG Side: ON	 Angle(dx0, dx): 2.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.527E-02 	 Total distance: 4.527E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([140], dtype=int64), array([[False]])]] 	 class: [6 9]
10:10:05,455 root DEBUG Side: OFF	 Angle(dx0, dx): 3.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.449E-02 	 Total distance: 6.449E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([29], dtype=int64), array([[False]])]] 	 class: [6 9]
10:10:05,455 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:05,455 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 17.52 	 cIDON = [6 9], cIDOFF = [6 9]
10:10:05,455 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:05,455 root DEBUG dOFF/dON = 1.4
10:10:05,455 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 76.95619108950194, 'dON1': 0.04526647583236982, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.04526647583236982, 'nTON': 1, 'dON': 0.04526647583236982, 'dxOFFAngle': 66.51455608671247, 'dOFF1': 0.06449472490465487, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.06449472490465487, 'nTOFF': 1, 'dOFF': 0.06449472490465487, 'SUCCESS': True}
10:10:05,465 root DEBUG 

=================== Experiment ID #68 	 Dual Point ID: 79 ===================
10:10:05,494 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.771E-07|<1.000E-06)
10:10:05,494 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:05,941 root DEBUG Side: ON	 Angle(dx0, dx): 2.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.928E-02 	 Total distance: 1.928E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([166], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:06,239 root DEBUG Side: ON	 Angle(dx0, dx): 1.99 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.152E-02 	 Total distance: 3.080E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([213], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:06,659 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.494E-02 	 Total distance: 1.494E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([73], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:06,881 root DEBUG Side: OFF	 Angle(dx0, dx): 2.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.285E-02 	 Total distance: 5.779E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([41], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:07,186 root DEBUG Side: OFF	 Angle(dx0, dx): 1.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.199E-01 	 Total distance: 1.777E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([96], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:07,187 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:07,187 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 70.46 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:07,187 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:07,187 root DEBUG dOFF/dON = 5.8
10:10:07,187 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 61.24834395786178, 'dON1': 0.030798240979703212, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.030798240979703212, 'nTON': 1, 'dON': 0.030798240979703212, 'dxOFFAngle': 73.37139377201945, 'dOFF1': 0.17771630372443187, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.17771630372443187, 'nTOFF': 1, 'dOFF': 0.17771630372443187, 'SUCCESS': True}
10:10:07,195 root DEBUG 

=================== Experiment ID #69 	 Dual Point ID: 80 ===================
10:10:07,227 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.255E-08|<1.000E-06)
10:10:07,227 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:07,573 root DEBUG Side: ON	 Angle(dx0, dx): 1.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.488E-02 	 Total distance: 1.488E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([146], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:10:07,897 root DEBUG Side: ON	 Angle(dx0, dx): 2.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.579E-02 	 Total distance: 3.067E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([106], dtype=int64), array([[False]])]] 	 class: [2 3]
10:10:08,242 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.733E-02 	 Total distance: 3.733E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([124], dtype=int64), array([[False]])]] 	 class: [2 3]
10:10:08,447 root DEBUG Side: OFF	 Angle(dx0, dx): 1.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.463E-02 	 Total distance: 7.196E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([16], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:10:08,447 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:08,448 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 40.24 	 cIDON = [2 3], cIDOFF = [2 3]
10:10:08,448 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:08,448 root DEBUG dOFF/dON = 2.3
10:10:08,449 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.42145562987636, 'dON1': 0.030665037145905596, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.030665037145905596, 'nTON': 1, 'dON': 0.030665037145905596, 'dxOFFAngle': 77.22687269690105, 'dOFF1': 0.07195781161348277, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.07195781161348277, 'nTOFF': 1, 'dOFF': 0.07195781161348277, 'SUCCESS': True}
10:10:08,459 root DEBUG 

=================== Experiment ID #70 	 Dual Point ID: 81 ===================
10:10:08,487 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.120E-07|<1.000E-06)
10:10:08,487 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:08,873 root DEBUG Side: ON	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.968E-02 	 Total distance: 1.968E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([4], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:09,123 root DEBUG Side: ON	 Angle(dx0, dx): 3.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.137E-02 	 Total distance: 3.105E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([186], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:09,486 root DEBUG Side: OFF	 Angle(dx0, dx): 1.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.084E-01 	 Total distance: 1.084E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([11], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:09,486 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:09,486 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 55.46 	 cIDON = [2 6], cIDOFF = [2 6]
10:10:09,486 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:09,486 root DEBUG dOFF/dON = 3.5
10:10:09,486 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.73922882646536, 'dON1': 0.031054979914661614, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.031054979914661614, 'nTON': 1, 'dON': 0.031054979914661614, 'dxOFFAngle': 83.84964975277745, 'dOFF1': 0.10838919320736902, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.10838919320736902, 'nTOFF': 1, 'dOFF': 0.10838919320736902, 'SUCCESS': True}
10:10:09,497 root DEBUG 

=================== Experiment ID #71 	 Dual Point ID: 82 ===================
10:10:09,525 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.827E-07|<1.000E-06)
10:10:09,525 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:09,923 root DEBUG Side: ON	 Angle(dx0, dx): 3.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.132E-03 	 Total distance: 7.132E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([6], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:10,423 root DEBUG Side: OFF	 Angle(dx0, dx): 3.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.094E-02 	 Total distance: 6.094E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([5], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:10,424 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:10,424 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 79.05 	 cIDON = [2 6], cIDOFF = [2 6]
10:10:10,424 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:10,424 root DEBUG dOFF/dON = 8.5
10:10:10,424 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.59222871146731, 'dON1': 0.007131826713748748, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.007131826713748748, 'nTON': 1, 'dON': 0.007131826713748748, 'dxOFFAngle': 82.31001926826715, 'dOFF1': 0.06093965171881973, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.06093965171881973, 'nTOFF': 1, 'dOFF': 0.06093965171881973, 'SUCCESS': True}
10:10:10,435 root DEBUG 

=================== Experiment ID #72 	 Dual Point ID: 83 ===================
10:10:10,459 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.221E-07|<1.000E-06)
10:10:10,459 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:10,920 root DEBUG Side: ON	 Angle(dx0, dx): 6.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.094E-02 	 Total distance: 1.094E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([34], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:11,276 root DEBUG Side: OFF	 Angle(dx0, dx): 1.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.528E-02 	 Total distance: 4.528E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([105], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:11,276 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:11,277 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 61.08 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:11,277 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:11,277 root DEBUG dOFF/dON = 4.1
10:10:11,277 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.9085233601661, 'dON1': 0.01094034986383324, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.01094034986383324, 'nTON': 1, 'dON': 0.01094034986383324, 'dxOFFAngle': 88.9141355776127, 'dOFF1': 0.04527803858980028, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.04527803858980028, 'nTOFF': 1, 'dOFF': 0.04527803858980028, 'SUCCESS': True}
10:10:11,286 root DEBUG 

=================== Experiment ID #73 	 Dual Point ID: 84 ===================
10:10:11,310 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.031E-07|<1.000E-06)
10:10:11,310 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:11,764 root DEBUG Side: ON	 Angle(dx0, dx): 2.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.778E-02 	 Total distance: 9.778E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([68], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:10:12,192 root DEBUG Side: OFF	 Angle(dx0, dx): 3.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.710E-02 	 Total distance: 9.710E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([237], dtype=int64), array([[False]])]] 	 class: [2 5]
10:10:12,418 root DEBUG Side: OFF	 Angle(dx0, dx): 9.15 deg 	 Angle(n, nold): 8.31 deg 	 Distance in patch: 9.932E-02 	 Total distance: 1.964E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([125], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:10:12,672 root DEBUG Side: OFF	 Angle(dx0, dx): 4.50 deg 	 Angle(n, nold): 4.82 deg 	 Distance in patch: 1.114E-03 	 Total distance: 1.975E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([98], dtype=int64), array([[False]])]] 	 class: [2 5]
10:10:12,942 root DEBUG Side: OFF	 Angle(dx0, dx): 1.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.640E-02 	 Total distance: 2.539E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[2, array([75], dtype=int64), array([[False]])]] 	 class: [2 5]
10:10:13,239 root DEBUG Side: OFF	 Angle(dx0, dx): 2.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.909E-02 	 Total distance: 3.530E-01 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[2, array([121], dtype=int64), array([[False]])]] 	 class: [2 5]
10:10:13,466 root DEBUG Side: OFF	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.978E-02 	 Total distance: 4.328E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([147], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:10:13,466 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:13,466 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 63.14 	 cIDON = [2 5], cIDOFF = [2 5]
10:10:13,467 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:13,467 root DEBUG dOFF/dON = 4.4
10:10:13,467 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.37496792257346, 'dON1': 0.09777972292537561, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.09777972292537561, 'nTON': 1, 'dON': 0.09777972292537561, 'dxOFFAngle': 84.85422016586912, 'dOFF1': 0.4328042409623098, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.4328042409623098, 'nTOFF': 1, 'dOFF': 0.4328042409623098, 'SUCCESS': True}
10:10:13,479 root DEBUG 

=================== Experiment ID #74 	 Dual Point ID: 85 ===================
10:10:13,504 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.415E-08|<1.000E-06)
10:10:13,504 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:13,976 root DEBUG Side: ON	 Angle(dx0, dx): 0.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.495E-01 	 Total distance: 1.495E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([246], dtype=int64), array([[False]])]] 	 class: [6 7]
10:10:14,287 root DEBUG Side: ON	 Angle(dx0, dx): 1.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.684E-01 	 Total distance: 4.179E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([39], dtype=int64), array([[False]])]] 	 class: [6 7]
10:10:14,710 root DEBUG Side: OFF	 Angle(dx0, dx): 4.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.335E-02 	 Total distance: 7.335E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([36], dtype=int64), array([[False]])]] 	 class: [6 7]
10:10:14,710 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:14,710 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -70.14 	 cIDON = [6 7], cIDOFF = [6 7]
10:10:14,710 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:14,710 root DEBUG dOFF/dON = 0.2
10:10:14,710 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.45535023406869, 'dON1': 0.4178832149164328, 'cIDON1': array([6, 7], dtype=int64), 'dON_patch_1': 0.4178832149164328, 'nTON': 1, 'dON': 0.4178832149164328, 'dxOFFAngle': 79.02158482878241, 'dOFF1': 0.07334570837955504, 'cIDOFF1': array([6, 7], dtype=int64), 'dOFF_patch_1': 0.07334570837955504, 'nTOFF': 1, 'dOFF': 0.07334570837955504, 'SUCCESS': False}
10:10:14,717 root DEBUG 

=================== Experiment ID #75 	 Dual Point ID: 86 ===================
10:10:14,748 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.188E-07|<1.000E-06)
10:10:14,749 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:15,256 root DEBUG Side: ON	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.603E-02 	 Total distance: 3.603E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([37], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:10:15,477 root DEBUG Side: ON	 Angle(dx0, dx): 2.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.451E-02 	 Total distance: 6.054E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([121], dtype=int64), array([[False]])]] 	 class: [7 9]
10:10:15,820 root DEBUG Side: OFF	 Angle(dx0, dx): 4.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.671E-02 	 Total distance: 2.671E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([226], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:10:16,75 root DEBUG Side: OFF	 Angle(dx0, dx): 0.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.740E-02 	 Total distance: 1.141E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([8], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:10:16,296 root DEBUG Side: OFF	 Angle(dx0, dx): 10.13 deg 	 Angle(n, nold): 9.89 deg 	 Distance in patch: 1.477E-02 	 Total distance: 1.289E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([97], dtype=int64), array([[False]])]] 	 class: [7 9]
10:10:16,589 root DEBUG Side: OFF	 Angle(dx0, dx): 1.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.756E-02 	 Total distance: 1.564E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([173], dtype=int64), array([[False]])]] 	 class: [7 9]
10:10:16,589 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:16,589 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 44.20 	 cIDON = [7 9], cIDOFF = [7 9]
10:10:16,589 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:16,589 root DEBUG dOFF/dON = 2.6
10:10:16,589 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.64372316275217, 'dON1': 0.060535731512324, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.060535731512324, 'nTON': 1, 'dON': 0.060535731512324, 'dxOFFAngle': 83.59503895497252, 'dOFF1': 0.15644888117538513, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.15644888117538513, 'nTOFF': 1, 'dOFF': 0.15644888117538513, 'SUCCESS': True}
10:10:16,599 root DEBUG 

=================== Experiment ID #76 	 Dual Point ID: 87 ===================
10:10:16,632 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.624E-08|<1.000E-06)
10:10:16,633 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:17,48 root DEBUG Side: ON	 Angle(dx0, dx): 0.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.524E-01 	 Total distance: 1.524E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([235], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:17,307 root DEBUG Side: ON	 Angle(dx0, dx): 5.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.085E-01 	 Total distance: 2.609E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([24], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:17,470 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.279E-02 	 Total distance: 2.837E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[2, array([48], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:17,774 root DEBUG Side: ON	 Angle(dx0, dx): 11.44 deg 	 Angle(n, nold): 11.93 deg 	 Distance in patch: 8.752E-02 	 Total distance: 3.712E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([30], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:18,6 root DEBUG Side: ON	 Angle(dx0, dx): 11.44 deg 	 Angle(n, nold): 11.93 deg 	 Distance in patch: 6.200E-06 	 Total distance: 3.712E-01 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([30], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:18,194 root DEBUG Side: ON	 Angle(dx0, dx): 11.44 deg 	 Angle(n, nold): 11.93 deg 	 Distance in patch: 9.524E-08 	 Total distance: 3.712E-01 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([30], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:18,408 root DEBUG Side: ON	 Angle(dx0, dx): 11.44 deg 	 Angle(n, nold): 11.93 deg 	 Distance in patch: 7.750E-07 	 Total distance: 3.713E-01 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([30], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:18,573 root DEBUG Side: ON	 Angle(dx0, dx): 11.44 deg 	 Angle(n, nold): 11.93 deg 	 Distance in patch: 9.524E-08 	 Total distance: 3.713E-01 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([30], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:18,777 root DEBUG Side: ON	 Angle(dx0, dx): 11.44 deg 	 Angle(n, nold): 11.93 deg 	 Distance in patch: 1.550E-06 	 Total distance: 3.713E-01 	 Future toggles: 0 	 Past toggles: 6 	 Toggled: [[1, array([30], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:18,787 root DEBUG Got stuck in too many past-layer relus.
10:10:18,961 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:10:18,961 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:10:18,962 root DEBUG 

=================== Experiment ID #76 	 Dual Point ID: 88 ===================
10:10:18,988 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.701E-07|<1.000E-06)
10:10:18,989 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:19,376 root DEBUG Side: ON	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.904E-03 	 Total distance: 4.904E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([76], dtype=int64), array([[False]])]] 	 class: [7 9]
10:10:19,841 root DEBUG Side: OFF	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.008E-01 	 Total distance: 1.008E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([22], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:10:20,137 root DEBUG Side: OFF	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.500E-02 	 Total distance: 1.158E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([98], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:10:20,137 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:20,137 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 91.87 	 cIDON = [7 9], cIDOFF = [7 9]
10:10:20,137 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:20,137 root DEBUG dOFF/dON = 23.6
10:10:20,137 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 72.26206167607091, 'dON1': 0.004903642769564356, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.004903642769564356, 'nTON': 1, 'dON': 0.004903642769564356, 'dxOFFAngle': 72.6070197770044, 'dOFF1': 0.11578063743272383, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.11578063743272383, 'nTOFF': 1, 'dOFF': 0.11578063743272383, 'SUCCESS': True}
10:10:20,143 root DEBUG 

=================== Experiment ID #77 	 Dual Point ID: 89 ===================
10:10:20,162 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.566E-07|<1.000E-06)
10:10:20,162 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:20,658 root DEBUG Side: ON	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.707E-03 	 Total distance: 8.707E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([114], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:10:21,91 root DEBUG Side: OFF	 Angle(dx0, dx): 3.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.150E-03 	 Total distance: 7.150E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([226], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:10:21,297 root DEBUG Side: OFF	 Angle(dx0, dx): 3.86 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.863E-02 	 Total distance: 6.578E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([135], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:10:21,501 root DEBUG Side: OFF	 Angle(dx0, dx): 3.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.678E-02 	 Total distance: 1.226E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[2, array([24], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:10:21,702 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.030E-01 	 Total distance: 2.256E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([58], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:10:21,702 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:21,702 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 92.57 	 cIDON = [4 7], cIDOFF = [4 7]
10:10:21,702 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:21,702 root DEBUG dOFF/dON = 25.9
10:10:21,702 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.26694648853739, 'dON1': 0.008706512246389384, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.008706512246389384, 'nTON': 1, 'dON': 0.008706512246389384, 'dxOFFAngle': 87.85262311551477, 'dOFF1': 0.225602131090629, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.225602131090629, 'nTOFF': 1, 'dOFF': 0.225602131090629, 'SUCCESS': True}
10:10:21,709 root DEBUG 

=================== Experiment ID #78 	 Dual Point ID: 90 ===================
10:10:21,751 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.760E-07|<1.000E-06)
10:10:21,752 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:22,150 root DEBUG Side: ON	 Angle(dx0, dx): 3.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.674E-02 	 Total distance: 5.674E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([117], dtype=int64), array([[False]])]] 	 class: [3 9]
10:10:22,394 root DEBUG Side: ON	 Angle(dx0, dx): 0.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.546E-02 	 Total distance: 1.422E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([55], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:10:22,777 root DEBUG Side: OFF	 Angle(dx0, dx): 5.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.455E-01 	 Total distance: 1.455E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([194], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:10:22,778 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:22,778 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 1.13 	 cIDON = [3 9], cIDOFF = [3 9]
10:10:22,778 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:22,778 root DEBUG dOFF/dON = 1.0
10:10:22,778 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 74.81228736650999, 'dON1': 0.1422019905771438, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.1422019905771438, 'nTON': 1, 'dON': 0.1422019905771438, 'dxOFFAngle': 82.46658576221223, 'dOFF1': 0.1454623211786716, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.1454623211786716, 'nTOFF': 1, 'dOFF': 0.1454623211786716, 'SUCCESS': True}
10:10:22,788 root DEBUG 

=================== Experiment ID #79 	 Dual Point ID: 91 ===================
10:10:22,825 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.589E-07|<1.000E-06)
10:10:22,825 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:23,289 root DEBUG Side: ON	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.43 deg 	 Distance in patch: 1.513E-02 	 Total distance: 1.513E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([223], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:10:23,536 root DEBUG Side: ON	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.49 deg 	 Distance in patch: 3.052E-02 	 Total distance: 4.565E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([200], dtype=int64), array([[False]])]] 	 class: [4 8]
10:10:23,714 root DEBUG Side: ON	 Angle(dx0, dx): 0.87 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.334E-01 	 Total distance: 1.791E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[2, array([74], dtype=int64), array([[False]])]] 	 class: [4 8]
10:10:23,977 root DEBUG Side: ON	 Angle(dx0, dx): 6.33 deg 	 Angle(n, nold): 7.83 deg 	 Distance in patch: 8.267E-02 	 Total distance: 2.618E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([121], dtype=int64), array([[False]])]] 	 class: [4 8]
10:10:24,201 root DEBUG Side: ON	 Angle(dx0, dx): 6.33 deg 	 Angle(n, nold): 7.83 deg 	 Distance in patch: 6.707E-07 	 Total distance: 2.618E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([121], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:10:24,388 root DEBUG Side: ON	 Angle(dx0, dx): 6.33 deg 	 Angle(n, nold): 7.83 deg 	 Distance in patch: 8.383E-08 	 Total distance: 2.618E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([121], dtype=int64), array([[False]])]] 	 class: [4 8]
10:10:24,581 root DEBUG Side: ON	 Angle(dx0, dx): 6.33 deg 	 Angle(n, nold): 7.83 deg 	 Distance in patch: 8.384E-08 	 Total distance: 2.618E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([121], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:10:24,592 root DEBUG Got stuck in too many past-layer relus.
10:10:24,742 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:10:24,742 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:10:24,743 root DEBUG 

=================== Experiment ID #79 	 Dual Point ID: 92 ===================
10:10:24,776 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.742E-07|<1.000E-06)
10:10:24,776 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:25,163 root DEBUG Side: ON	 Angle(dx0, dx): 1.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.425E-02 	 Total distance: 2.425E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([52], dtype=int64), array([[False]])]] 	 class: [6 9]
10:10:25,390 root DEBUG Side: ON	 Angle(dx0, dx): 1.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.805E-03 	 Total distance: 2.805E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([181], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:10:25,771 root DEBUG Side: OFF	 Angle(dx0, dx): 3.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.463E-02 	 Total distance: 1.463E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([39], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:10:25,771 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:25,772 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -31.46 	 cIDON = [6 9], cIDOFF = [6 9]
10:10:25,772 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:25,772 root DEBUG dOFF/dON = 0.5
10:10:25,772 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.5968764865537, 'dON1': 0.028053823980561256, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.028053823980561256, 'nTON': 1, 'dON': 0.028053823980561256, 'dxOFFAngle': 83.74969904395532, 'dOFF1': 0.01462506501141371, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.01462506501141371, 'nTOFF': 1, 'dOFF': 0.01462506501141371, 'SUCCESS': False}
10:10:25,785 root DEBUG 

=================== Experiment ID #80 	 Dual Point ID: 93 ===================
10:10:25,816 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.325E-07|<1.000E-06)
10:10:25,816 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:26,295 root DEBUG Side: ON	 Angle(dx0, dx): 2.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.076E-01 	 Total distance: 1.076E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([126], dtype=int64), array([[False]])]] 	 class: [4 8]
10:10:26,715 root DEBUG Side: OFF	 Angle(dx0, dx): 0.58 deg 	 Angle(n, nold): 0.65 deg 	 Distance in patch: 3.022E-02 	 Total distance: 3.022E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([70], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:10:26,994 root DEBUG Side: OFF	 Angle(dx0, dx): 3.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.675E-02 	 Total distance: 1.070E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([153], dtype=int64), array([[False]])]] 	 class: [4 8]
10:10:27,255 root DEBUG Side: OFF	 Angle(dx0, dx): 4.78 deg 	 Angle(n, nold): 4.81 deg 	 Distance in patch: 2.555E-01 	 Total distance: 3.624E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([246], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:10:27,575 root DEBUG Side: OFF	 Angle(dx0, dx): 9.88 deg 	 Angle(n, nold): 9.82 deg 	 Distance in patch: 1.595E-01 	 Total distance: 5.219E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([106], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:10:27,825 root DEBUG Side: OFF	 Angle(dx0, dx): 6.64 deg 	 Angle(n, nold): 6.66 deg 	 Distance in patch: 8.750E-02 	 Total distance: 6.094E-01 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([44], dtype=int64), array([[False]])]] 	 class: [4 8]
10:10:28,112 root DEBUG Side: OFF	 Angle(dx0, dx): 18.70 deg 	 Angle(n, nold): 18.76 deg 	 Distance in patch: 4.332E-03 	 Total distance: 6.137E-01 	 Future toggles: 0 	 Past toggles: 6 	 Toggled: [[1, array([29], dtype=int64), array([[False]])]] 	 class: [4 8]
10:10:28,357 root DEBUG Side: OFF	 Angle(dx0, dx): 3.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.092E-02 	 Total distance: 6.246E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([110], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:10:28,357 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:28,358 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 70.62 	 cIDON = [4 8], cIDOFF = [4 8]
10:10:28,358 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:28,358 root DEBUG dOFF/dON = 5.8
10:10:28,358 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.51359074971687, 'dON1': 0.10755412613598338, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.10755412613598338, 'nTON': 1, 'dON': 0.10755412613598338, 'dxOFFAngle': 85.22157620068998, 'dOFF1': 0.6246384306319201, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.6246384306319201, 'nTOFF': 1, 'dOFF': 0.6246384306319201, 'SUCCESS': True}
10:10:28,370 root DEBUG 

=================== Experiment ID #81 	 Dual Point ID: 94 ===================
10:10:28,393 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.019E-07|<1.000E-06)
10:10:28,394 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:28,828 root DEBUG Side: ON	 Angle(dx0, dx): 1.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.743E-02 	 Total distance: 2.743E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([41], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:29,87 root DEBUG Side: ON	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.899E-03 	 Total distance: 3.233E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([90], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:29,331 root DEBUG Side: ON	 Angle(dx0, dx): 0.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.706E-02 	 Total distance: 5.939E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([161], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:29,693 root DEBUG Side: OFF	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.51 deg 	 Distance in patch: 3.664E-02 	 Total distance: 3.664E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([238], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:29,917 root DEBUG Side: OFF	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.51 deg 	 Distance in patch: 9.856E-06 	 Total distance: 3.665E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([238], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:30,96 root DEBUG Side: OFF	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.51 deg 	 Distance in patch: 1.120E-07 	 Total distance: 3.665E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([238], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:30,314 root DEBUG Side: OFF	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.51 deg 	 Distance in patch: 3.584E-06 	 Total distance: 3.665E-02 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([238], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:30,478 root DEBUG Side: OFF	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.51 deg 	 Distance in patch: 1.120E-07 	 Total distance: 3.665E-02 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([238], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:30,692 root DEBUG Side: OFF	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.51 deg 	 Distance in patch: 2.688E-06 	 Total distance: 3.665E-02 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([238], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:30,891 root DEBUG Side: OFF	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.51 deg 	 Distance in patch: 1.120E-07 	 Total distance: 3.665E-02 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([238], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:31,85 root DEBUG Side: OFF	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.51 deg 	 Distance in patch: 3.584E-06 	 Total distance: 3.666E-02 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([238], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:31,96 root DEBUG Got stuck in too many past-layer relus.
10:10:31,97 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:10:31,97 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:10:31,99 root DEBUG 

=================== Experiment ID #81 	 Dual Point ID: 95 ===================
10:10:31,122 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.143E-07|<1.000E-06)
10:10:31,122 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:31,518 root DEBUG Side: ON	 Angle(dx0, dx): 1.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.865E-02 	 Total distance: 6.865E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([34], dtype=int64), array([[False]])]] 	 class: [1 4]
10:10:31,773 root DEBUG Side: ON	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.317E-02 	 Total distance: 1.118E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([90], dtype=int64), array([[False]])]] 	 class: [1 4]
10:10:32,130 root DEBUG Side: OFF	 Angle(dx0, dx): 2.60 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.529E-03 	 Total distance: 4.529E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([88], dtype=int64), array([[ True]])]] 	 class: [0 4]
10:10:32,130 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:32,131 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -92.22 	 cIDON = [1 4], cIDOFF = [0 4]
10:10:32,131 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:32,131 root DEBUG dOFF/dON = 0.0
10:10:32,131 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.00623008937876, 'dON1': 0.11181792043231698, 'cIDON1': array([1, 4], dtype=int64), 'dON_patch_1': 0.11181792043231698, 'nTON': 1, 'dON': 0.11181792043231698, 'dxOFFAngle': 84.9686865543382, 'dOFF1': 0.004528709980701459, 'cIDOFF1': array([0, 4], dtype=int64), 'dOFF_patch_1': 0.004528709980701459, 'nTOFF': 1, 'dOFF': 0.004528709980701459, 'SUCCESS': False}
10:10:32,138 root DEBUG 

=================== Experiment ID #82 	 Dual Point ID: 96 ===================
10:10:32,156 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.219E-07|<1.000E-06)
10:10:32,156 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:32,537 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.613E-02 	 Total distance: 8.613E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([49], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:32,880 root DEBUG Side: OFF	 Angle(dx0, dx): 18.95 deg 	 Angle(n, nold): 19.09 deg 	 Distance in patch: 5.073E-04 	 Total distance: 5.073E-04 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([29], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:33,97 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.906E-02 	 Total distance: 2.957E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([117], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:33,274 root DEBUG Side: OFF	 Angle(dx0, dx): 0.97 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.048E-03 	 Total distance: 3.262E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([11], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:33,274 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:33,275 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -45.06 	 cIDON = [5 7], cIDOFF = [5 7]
10:10:33,275 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:33,275 root DEBUG dOFF/dON = 0.4
10:10:33,275 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.96009228487432, 'dON1': 0.08612636645870443, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.08612636645870443, 'nTON': 1, 'dON': 0.08612636645870443, 'dxOFFAngle': 84.31973561658396, 'dOFF1': 0.032618544488689775, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.032618544488689775, 'nTOFF': 1, 'dOFF': 0.032618544488689775, 'SUCCESS': False}
10:10:33,286 root DEBUG 

=================== Experiment ID #83 	 Dual Point ID: 97 ===================
10:10:33,319 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.758E-08|<1.000E-06)
10:10:33,320 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:33,712 root DEBUG Side: ON	 Angle(dx0, dx): 0.98 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.000E-03 	 Total distance: 2.000E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([161], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:10:34,132 root DEBUG Side: OFF	 Angle(dx0, dx): 0.85 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.178E-03 	 Total distance: 2.178E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([158], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:10:34,363 root DEBUG Side: OFF	 Angle(dx0, dx): 0.60 deg 	 Angle(n, nold): 0.60 deg 	 Distance in patch: 7.706E-03 	 Total distance: 9.884E-03 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([241], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:10:34,579 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.144E-03 	 Total distance: 1.303E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([61], dtype=int64), array([[False]])]] 	 class: [2 5]
10:10:34,579 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:34,579 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 73.38 	 cIDON = [2 5], cIDOFF = [2 5]
10:10:34,580 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:34,580 root DEBUG dOFF/dON = 6.5
10:10:34,580 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.01343408670938, 'dON1': 0.0020003919118298935, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.0020003919118298935, 'nTON': 1, 'dON': 0.0020003919118298935, 'dxOFFAngle': 89.78428534812413, 'dOFF1': 0.01302842404036052, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.01302842404036052, 'nTOFF': 1, 'dOFF': 0.01302842404036052, 'SUCCESS': True}
10:10:34,599 root DEBUG 

=================== Experiment ID #84 	 Dual Point ID: 98 ===================
10:10:34,622 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.164E-08|<1.000E-06)
10:10:34,622 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:35,18 root DEBUG Side: ON	 Angle(dx0, dx): 10.36 deg 	 Angle(n, nold): 10.98 deg 	 Distance in patch: 1.001E-01 	 Total distance: 1.001E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([43], dtype=int64), array([[False]])]] 	 class: [0 8]
10:10:35,286 root DEBUG Side: ON	 Angle(dx0, dx): 4.11 deg 	 Angle(n, nold): 4.42 deg 	 Distance in patch: 9.274E-02 	 Total distance: 1.928E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([25], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:10:35,509 root DEBUG Side: ON	 Angle(dx0, dx): 2.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.038E-01 	 Total distance: 3.966E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([100], dtype=int64), array([[False]])]] 	 class: [0 8]
10:10:35,795 root DEBUG Side: OFF	 Angle(dx0, dx): 16.05 deg 	 Angle(n, nold): 11.72 deg 	 Distance in patch: 4.081E-05 	 Total distance: 4.081E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:10:35,795 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:35,795 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.98 	 cIDON = [0 8], cIDOFF = [1 8]
10:10:35,795 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:35,795 root DEBUG dOFF/dON = 0.0
10:10:35,796 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 76.12157928710864, 'dON1': 0.3966042512574828, 'cIDON1': array([0, 8], dtype=int64), 'dON_patch_1': 0.3966042512574828, 'nTON': 1, 'dON': 0.3966042512574828, 'dxOFFAngle': 70.11592392327877, 'dOFF1': 4.0812441865884785e-05, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 4.0812441865884785e-05, 'nTOFF': 1, 'dOFF': 4.0812441865884785e-05, 'SUCCESS': False}
10:10:35,806 root DEBUG 

=================== Experiment ID #85 	 Dual Point ID: 99 ===================
10:10:35,832 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.483E-07|<1.000E-06)
10:10:35,832 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:36,229 root DEBUG Side: ON	 Angle(dx0, dx): 0.70 deg 	 Angle(n, nold): 0.98 deg 	 Distance in patch: 7.264E-02 	 Total distance: 7.264E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([2], dtype=int64), array([[False]])]] 	 class: [7 9]
10:10:36,431 root DEBUG Side: ON	 Angle(dx0, dx): 0.50 deg 	 Angle(n, nold): 0.63 deg 	 Distance in patch: 2.111E-01 	 Total distance: 2.837E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([254], dtype=int64), array([[False]])]] 	 class: [7 9]
10:10:36,657 root DEBUG Side: ON	 Angle(dx0, dx): 2.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.531E-01 	 Total distance: 4.368E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([206], dtype=int64), array([[False]])]] 	 class: [7 9]
10:10:36,991 root DEBUG Side: OFF	 Angle(dx0, dx): 2.31 deg 	 Angle(n, nold): 1.16 deg 	 Distance in patch: 9.996E-02 	 Total distance: 9.996E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([36], dtype=int64), array([[False]])]] 	 class: [7 9]
10:10:37,220 root DEBUG Side: OFF	 Angle(dx0, dx): 0.99 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.991E-02 	 Total distance: 1.999E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([234], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:10:37,220 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:37,220 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -37.22 	 cIDON = [7 9], cIDOFF = [7 9]
10:10:37,220 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:37,220 root DEBUG dOFF/dON = 0.5
10:10:37,220 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 73.4327792500747, 'dON1': 0.436839023823291, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.436839023823291, 'nTON': 1, 'dON': 0.436839023823291, 'dxOFFAngle': 77.81884393633473, 'dOFF1': 0.19986282549706608, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.19986282549706608, 'nTOFF': 1, 'dOFF': 0.19986282549706608, 'SUCCESS': False}
10:10:37,229 root DEBUG 

=================== Experiment ID #86 	 Dual Point ID: 100 ===================
10:10:37,258 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.618E-07|<1.000E-06)
10:10:37,258 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:37,662 root DEBUG Side: ON	 Angle(dx0, dx): 2.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.261E-01 	 Total distance: 1.261E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([154], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:37,991 root DEBUG Side: OFF	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.973E-03 	 Total distance: 1.973E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([240], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:37,991 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:37,991 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -96.92 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:37,992 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:37,992 root DEBUG dOFF/dON = 0.0
10:10:37,992 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.79195430421045, 'dON1': 0.12606797544469628, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.12606797544469628, 'nTON': 1, 'dON': 0.12606797544469628, 'dxOFFAngle': 84.12494419391241, 'dOFF1': 0.0019733787225557175, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.0019733787225557175, 'nTOFF': 1, 'dOFF': 0.0019733787225557175, 'SUCCESS': False}
10:10:38,2 root DEBUG 

=================== Experiment ID #87 	 Dual Point ID: 101 ===================
10:10:38,35 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.313E-08|<1.000E-06)
10:10:38,36 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:38,484 root DEBUG Side: ON	 Angle(dx0, dx): 1.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.050E-02 	 Total distance: 1.050E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([145], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:38,657 root DEBUG Side: ON	 Angle(dx0, dx): 14.50 deg 	 Angle(n, nold): 14.38 deg 	 Distance in patch: 4.878E-03 	 Total distance: 1.538E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([101], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:38,893 root DEBUG Side: ON	 Angle(dx0, dx): 1.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.367E-02 	 Total distance: 6.905E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([196], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:39,291 root DEBUG Side: OFF	 Angle(dx0, dx): 0.77 deg 	 Angle(n, nold): 14.38 deg 	 Distance in patch: 3.372E-02 	 Total distance: 3.372E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([155], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:39,563 root DEBUG Side: OFF	 Angle(dx0, dx): 7.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.716E-02 	 Total distance: 5.088E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([53], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:39,563 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:39,564 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -15.15 	 cIDON = [2 7], cIDOFF = [2 7]
10:10:39,564 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:39,564 root DEBUG dOFF/dON = 0.7
10:10:39,564 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.90926271756521, 'dON1': 0.0690456520031352, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.0690456520031352, 'nTON': 1, 'dON': 0.0690456520031352, 'dxOFFAngle': 75.58878190785953, 'dOFF1': 0.05087869210863896, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.05087869210863896, 'nTOFF': 1, 'dOFF': 0.05087869210863896, 'SUCCESS': False}
10:10:39,574 root DEBUG 

=================== Experiment ID #88 	 Dual Point ID: 102 ===================
10:10:39,606 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.818E-08|<1.000E-06)
10:10:39,607 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:39,989 root DEBUG Side: ON	 Angle(dx0, dx): 2.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.319E-02 	 Total distance: 1.319E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([145], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:40,235 root DEBUG Side: ON	 Angle(dx0, dx): 0.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.740E-03 	 Total distance: 2.093E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([66], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:40,457 root DEBUG Side: ON	 Angle(dx0, dx): 3.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.040E-03 	 Total distance: 2.497E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([3], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:40,927 root DEBUG Side: OFF	 Angle(dx0, dx): 9.78 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.802E-03 	 Total distance: 5.802E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([53], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:40,927 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:40,928 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -62.28 	 cIDON = [2 7], cIDOFF = [2 7]
10:10:40,928 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:40,928 root DEBUG dOFF/dON = 0.2
10:10:40,928 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.1845385234629, 'dON1': 0.024965580862413003, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.024965580862413003, 'nTON': 1, 'dON': 0.024965580862413003, 'dxOFFAngle': 84.17155074022556, 'dOFF1': 0.005802324432606013, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.005802324432606013, 'nTOFF': 1, 'dOFF': 0.005802324432606013, 'SUCCESS': False}
10:10:40,941 root DEBUG 

=================== Experiment ID #89 	 Dual Point ID: 103 ===================
10:10:40,968 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.983E-07|<1.000E-06)
10:10:40,969 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:41,442 root DEBUG Side: ON	 Angle(dx0, dx): 2.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.442E-03 	 Total distance: 6.442E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([52], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:10:41,759 root DEBUG Side: OFF	 Angle(dx0, dx): 6.98 deg 	 Angle(n, nold): 6.99 deg 	 Distance in patch: 1.850E-03 	 Total distance: 1.850E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([44], dtype=int64), array([[False]])]] 	 class: [2 4]
10:10:42,2 root DEBUG Side: OFF	 Angle(dx0, dx): 1.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.893E-03 	 Total distance: 1.074E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([162], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:10:42,2 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:42,2 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 25.03 	 cIDON = [2 4], cIDOFF = [2 4]
10:10:42,2 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:42,2 root DEBUG dOFF/dON = 1.7
10:10:42,2 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.13201536944227, 'dON1': 0.006441511721739962, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.006441511721739962, 'nTON': 1, 'dON': 0.006441511721739962, 'dxOFFAngle': 81.77502565471026, 'dOFF1': 0.010742921671186385, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.010742921671186385, 'nTOFF': 1, 'dOFF': 0.010742921671186385, 'SUCCESS': True}
10:10:42,8 root DEBUG 

=================== Experiment ID #90 	 Dual Point ID: 104 ===================
10:10:42,35 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.267E-08|<1.000E-06)
10:10:42,35 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:42,455 root DEBUG Side: ON	 Angle(dx0, dx): 9.98 deg 	 Angle(n, nold): 10.03 deg 	 Distance in patch: 2.754E-03 	 Total distance: 2.754E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([35], dtype=int64), array([[ True]])]] 	 class: [0 5]
10:10:42,664 root DEBUG Side: ON	 Angle(dx0, dx): 9.98 deg 	 Angle(n, nold): 10.03 deg 	 Distance in patch: 6.496E-06 	 Total distance: 2.761E-03 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([35], dtype=int64), array([[False]])]] 	 class: [0 5]
10:10:42,859 root DEBUG Side: ON	 Angle(dx0, dx): 9.98 deg 	 Angle(n, nold): 10.03 deg 	 Distance in patch: 8.908E-08 	 Total distance: 2.761E-03 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([35], dtype=int64), array([[ True]])]] 	 class: [0 5]
10:10:43,44 root DEBUG Side: ON	 Angle(dx0, dx): 9.98 deg 	 Angle(n, nold): 10.03 deg 	 Distance in patch: 1.443E-06 	 Total distance: 2.762E-03 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([35], dtype=int64), array([[False]])]] 	 class: [0 5]
10:10:43,231 root DEBUG Side: ON	 Angle(dx0, dx): 9.98 deg 	 Angle(n, nold): 10.03 deg 	 Distance in patch: 8.908E-08 	 Total distance: 2.762E-03 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([35], dtype=int64), array([[ True]])]] 	 class: [0 5]
10:10:43,402 root DEBUG Side: ON	 Angle(dx0, dx): 9.98 deg 	 Angle(n, nold): 10.03 deg 	 Distance in patch: 7.217E-07 	 Total distance: 2.763E-03 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([35], dtype=int64), array([[False]])]] 	 class: [0 5]
10:10:43,413 root DEBUG Got stuck in too many past-layer relus.
10:10:43,583 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:10:43,583 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:10:43,585 root DEBUG 

=================== Experiment ID #90 	 Dual Point ID: 105 ===================
10:10:43,616 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.678E-07|<1.000E-06)
10:10:43,616 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:44,96 root DEBUG Side: ON	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.266E-02 	 Total distance: 1.266E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([215], dtype=int64), array([[False]])]] 	 class: [0 9]
10:10:44,351 root DEBUG Side: ON	 Angle(dx0, dx): 0.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.645E-02 	 Total distance: 3.910E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([129], dtype=int64), array([[False]])]] 	 class: [0 9]
10:10:44,782 root DEBUG Side: OFF	 Angle(dx0, dx): 0.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.558E-02 	 Total distance: 8.558E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([54], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:10:45,11 root DEBUG Side: OFF	 Angle(dx0, dx): 0.95 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.232E-02 	 Total distance: 9.790E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([148], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:10:45,255 root DEBUG Side: OFF	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.146E-03 	 Total distance: 1.070E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([139], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:10:45,255 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:45,255 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 46.49 	 cIDON = [0 9], cIDOFF = [1 9]
10:10:45,255 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:45,255 root DEBUG dOFF/dON = 2.7
10:10:45,256 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.75912109528012, 'dON1': 0.039100696705628706, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.039100696705628706, 'nTON': 1, 'dON': 0.039100696705628706, 'dxOFFAngle': 89.40527292206991, 'dOFF1': 0.10704213993002225, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.10704213993002225, 'nTOFF': 1, 'dOFF': 0.10704213993002225, 'SUCCESS': True}
10:10:45,265 root DEBUG 

=================== Experiment ID #91 	 Dual Point ID: 106 ===================
10:10:45,302 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.924E-07|<1.000E-06)
10:10:45,303 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:45,787 root DEBUG Side: ON	 Angle(dx0, dx): 1.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.362E-02 	 Total distance: 5.362E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([252], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:46,246 root DEBUG Side: OFF	 Angle(dx0, dx): 0.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.023E-03 	 Total distance: 7.023E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([158], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:46,246 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:46,246 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -76.84 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:46,246 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:46,247 root DEBUG dOFF/dON = 0.1
10:10:46,247 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.27372916986529, 'dON1': 0.05361938826818557, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.05361938826818557, 'nTON': 1, 'dON': 0.05361938826818557, 'dxOFFAngle': 88.75275972937469, 'dOFF1': 0.007022534198712618, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.007022534198712618, 'nTOFF': 1, 'dOFF': 0.007022534198712618, 'SUCCESS': False}
10:10:46,261 root DEBUG 

=================== Experiment ID #92 	 Dual Point ID: 107 ===================
10:10:46,281 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.906E-07|<1.000E-06)
10:10:46,281 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:46,755 root DEBUG Side: ON	 Angle(dx0, dx): 2.97 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.173E-02 	 Total distance: 3.173E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([25], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:47,131 root DEBUG Side: OFF	 Angle(dx0, dx): 1.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.096E-01 	 Total distance: 1.096E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([189], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:47,131 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:47,132 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 55.11 	 cIDON = [3 6], cIDOFF = [3 6]
10:10:47,132 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:47,132 root DEBUG dOFF/dON = 3.5
10:10:47,132 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.72959013474654, 'dON1': 0.03173212748788112, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.03173212748788112, 'nTON': 1, 'dON': 0.03173212748788112, 'dxOFFAngle': 76.79813575774448, 'dOFF1': 0.1096450290728991, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.1096450290728991, 'nTOFF': 1, 'dOFF': 0.1096450290728991, 'SUCCESS': True}
10:10:47,146 root DEBUG 

=================== Experiment ID #93 	 Dual Point ID: 108 ===================
10:10:47,180 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.901E-07|<1.000E-06)
10:10:47,180 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:47,610 root DEBUG Side: ON	 Angle(dx0, dx): 0.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.569E-02 	 Total distance: 1.569E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([201], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:10:48,30 root DEBUG Side: OFF	 Angle(dx0, dx): 1.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.543E-02 	 Total distance: 5.543E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([78], dtype=int64), array([[False]])]] 	 class: [4 7]
10:10:48,31 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:48,31 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 55.87 	 cIDON = [4 7], cIDOFF = [4 7]
10:10:48,31 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:48,31 root DEBUG dOFF/dON = 3.5
10:10:48,31 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.90461393423172, 'dON1': 0.015693735154641987, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.015693735154641987, 'nTON': 1, 'dON': 0.015693735154641987, 'dxOFFAngle': 84.95422751817681, 'dOFF1': 0.055431383216664576, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.055431383216664576, 'nTOFF': 1, 'dOFF': 0.055431383216664576, 'SUCCESS': True}
10:10:48,41 root DEBUG 

=================== Experiment ID #94 	 Dual Point ID: 109 ===================
10:10:48,68 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.973E-08|<1.000E-06)
10:10:48,69 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:48,498 root DEBUG Side: ON	 Angle(dx0, dx): 36.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.266E-04 	 Total distance: 1.266E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:10:48,875 root DEBUG Side: OFF	 Angle(dx0, dx): 2.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.706E-02 	 Total distance: 4.706E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([34], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:10:48,875 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:48,876 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.46 	 cIDON = [1 8], cIDOFF = [0 8]
10:10:48,876 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:48,876 root DEBUG dOFF/dON = 371.8
10:10:48,876 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 53.27697225430208, 'dON1': 0.00012658843980013337, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 0.00012658843980013337, 'nTON': 1, 'dON': 0.00012658843980013337, 'dxOFFAngle': 86.3617048215899, 'dOFF1': 0.04706397945044987, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.04706397945044987, 'nTOFF': 1, 'dOFF': 0.04706397945044987, 'SUCCESS': True}
10:10:48,886 root DEBUG 

=================== Experiment ID #95 	 Dual Point ID: 110 ===================
10:10:48,921 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.972E-07|<1.000E-06)
10:10:48,922 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:49,398 root DEBUG Side: ON	 Angle(dx0, dx): 0.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.152E-01 	 Total distance: 1.152E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([244], dtype=int64), array([[False]])]] 	 class: [6 8]
10:10:49,834 root DEBUG Side: OFF	 Angle(dx0, dx): 1.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.141E-02 	 Total distance: 1.141E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([13], dtype=int64), array([[ True]])]] 	 class: [6 8]
10:10:50,137 root DEBUG Side: OFF	 Angle(dx0, dx): 0.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.005E-01 	 Total distance: 1.119E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([61], dtype=int64), array([[ True]])]] 	 class: [6 8]
10:10:50,137 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:50,137 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -1.45 	 cIDON = [6 8], cIDOFF = [6 8]
10:10:50,138 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:50,138 root DEBUG dOFF/dON = 1.0
10:10:50,138 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.2405953535549, 'dON1': 0.11516755813788689, 'cIDON1': array([6, 8], dtype=int64), 'dON_patch_1': 0.11516755813788689, 'nTON': 1, 'dON': 0.11516755813788689, 'dxOFFAngle': 87.42892125383759, 'dOFF1': 0.11186998361134645, 'cIDOFF1': array([6, 8], dtype=int64), 'dOFF_patch_1': 0.11186998361134645, 'nTOFF': 1, 'dOFF': 0.11186998361134645, 'SUCCESS': False}
10:10:50,145 root DEBUG 

=================== Experiment ID #96 	 Dual Point ID: 111 ===================
10:10:50,180 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.727E-08|<1.000E-06)
10:10:50,181 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:50,543 root DEBUG Side: ON	 Angle(dx0, dx): 1.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.334E-02 	 Total distance: 1.334E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([124], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:10:50,943 root DEBUG Side: OFF	 Angle(dx0, dx): 2.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.659E-02 	 Total distance: 1.659E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([125], dtype=int64), array([[False]])]] 	 class: [2 4]
10:10:50,943 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:50,943 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 10.86 	 cIDON = [2 4], cIDOFF = [2 4]
10:10:50,943 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:50,943 root DEBUG dOFF/dON = 1.2
10:10:50,943 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 79.6147232672741, 'dON1': 0.013335708603830192, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.013335708603830192, 'nTON': 1, 'dON': 0.013335708603830192, 'dxOFFAngle': 81.98803743970095, 'dOFF1': 0.016585519181210623, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.016585519181210623, 'nTOFF': 1, 'dOFF': 0.016585519181210623, 'SUCCESS': True}
10:10:50,949 root DEBUG 

=================== Experiment ID #97 	 Dual Point ID: 112 ===================
10:10:50,980 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.911E-07|<1.000E-06)
10:10:50,980 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:51,423 root DEBUG Side: ON	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.344E-03 	 Total distance: 1.344E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([229], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:51,861 root DEBUG Side: OFF	 Angle(dx0, dx): 2.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.782E-02 	 Total distance: 2.782E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([248], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:51,862 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:51,862 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 90.78 	 cIDON = [3 6], cIDOFF = [3 6]
10:10:51,862 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:51,862 root DEBUG dOFF/dON = 20.7
10:10:51,862 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 75.80697213747227, 'dON1': 0.0013436630376819326, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.0013436630376819326, 'nTON': 1, 'dON': 0.0013436630376819326, 'dxOFFAngle': 73.39105696882605, 'dOFF1': 0.02781697825500373, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.02781697825500373, 'nTOFF': 1, 'dOFF': 0.02781697825500373, 'SUCCESS': True}
10:10:51,875 root DEBUG 

=================== Experiment ID #98 	 Dual Point ID: 113 ===================
10:10:51,917 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.028E-07|<1.000E-06)
10:10:51,917 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:52,473 root DEBUG Side: ON	 Angle(dx0, dx): 1.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.722E-01 	 Total distance: 1.722E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([129], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:52,887 root DEBUG Side: OFF	 Angle(dx0, dx): 1.98 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.722E-02 	 Total distance: 2.722E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([128], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:53,294 root DEBUG Side: OFF	 Angle(dx0, dx): 0.98 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.840E-02 	 Total distance: 7.561E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([137], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:53,577 root DEBUG Side: OFF	 Angle(dx0, dx): 4.78 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.513E-02 	 Total distance: 1.307E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([179], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:53,577 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:53,577 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -13.68 	 cIDON = [3 6], cIDOFF = [3 6]
10:10:53,577 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:53,577 root DEBUG dOFF/dON = 0.8
10:10:53,577 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 64.6228170392057, 'dON1': 0.1721688603580581, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.1721688603580581, 'nTON': 1, 'dON': 0.1721688603580581, 'dxOFFAngle': 61.84827087728297, 'dOFF1': 0.1307382282189352, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.1307382282189352, 'nTOFF': 1, 'dOFF': 0.1307382282189352, 'SUCCESS': False}
10:10:53,588 root DEBUG 

=================== Experiment ID #99 	 Dual Point ID: 114 ===================
10:10:53,619 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.639E-07|<1.000E-06)
10:10:53,620 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:54,108 root DEBUG Side: ON	 Angle(dx0, dx): 1.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.756E-02 	 Total distance: 1.756E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([230], dtype=int64), array([[False]])]] 	 class: [4 6]
10:10:54,510 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.807E-02 	 Total distance: 2.807E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([215], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:10:54,510 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:54,511 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 23.03 	 cIDON = [4 6], cIDOFF = [4 6]
10:10:54,511 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:54,511 root DEBUG dOFF/dON = 1.6
10:10:54,511 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.4230840302092, 'dON1': 0.01756043922972332, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.01756043922972332, 'nTON': 1, 'dON': 0.01756043922972332, 'dxOFFAngle': 87.68032589507447, 'dOFF1': 0.028067930568781745, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.028067930568781745, 'nTOFF': 1, 'dOFF': 0.028067930568781745, 'SUCCESS': True}
10:10:54,524 root DEBUG 

=================== Experiment ID #100 	 Dual Point ID: 115 ===================
10:10:54,552 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.551E-07|<1.000E-06)
10:10:54,553 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:55,7 root DEBUG Side: ON	 Angle(dx0, dx): 9.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.513E-02 	 Total distance: 2.513E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([242], dtype=int64), array([[False]])]] 	 class: [7 9]
10:10:55,334 root DEBUG Side: ON	 Angle(dx0, dx): 2.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.532E-02 	 Total distance: 5.045E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([8], dtype=int64), array([[False]])]] 	 class: [7 9]
10:10:55,723 root DEBUG Side: OFF	 Angle(dx0, dx): 1.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.415E-02 	 Total distance: 5.415E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([245], dtype=int64), array([[False]])]] 	 class: [7 9]
10:10:55,723 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:55,724 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 3.54 	 cIDON = [7 9], cIDOFF = [7 9]
10:10:55,724 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:55,724 root DEBUG dOFF/dON = 1.1
10:10:55,724 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 54.601256628960556, 'dON1': 0.05044593816098674, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.05044593816098674, 'nTON': 1, 'dON': 0.05044593816098674, 'dxOFFAngle': 56.73822500728582, 'dOFF1': 0.05414547225863045, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.05414547225863045, 'nTOFF': 1, 'dOFF': 0.05414547225863045, 'SUCCESS': True}
10:10:55,729 root DEBUG 

=================== Experiment ID #101 	 Dual Point ID: 116 ===================
10:10:55,761 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.226E-07|<1.000E-06)
10:10:55,763 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:56,234 root DEBUG Side: ON	 Angle(dx0, dx): 13.83 deg 	 Angle(n, nold): 12.33 deg 	 Distance in patch: 3.139E-02 	 Total distance: 3.139E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([106], dtype=int64), array([[False]])]] 	 class: [2 9]
10:10:56,474 root DEBUG Side: ON	 Angle(dx0, dx): 0.78 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.103E-01 	 Total distance: 1.417E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([247], dtype=int64), array([[False]])]] 	 class: [2 9]
10:10:56,916 root DEBUG Side: OFF	 Angle(dx0, dx): 0.62 deg 	 Angle(n, nold): 12.33 deg 	 Distance in patch: 2.325E-03 	 Total distance: 2.325E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([57], dtype=int64), array([[False]])]] 	 class: [2 9]
10:10:57,192 root DEBUG Side: OFF	 Angle(dx0, dx): 1.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.029E-02 	 Total distance: 6.261E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([58], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:10:57,192 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:57,192 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -38.71 	 cIDON = [2 9], cIDOFF = [2 9]
10:10:57,192 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:57,192 root DEBUG dOFF/dON = 0.4
10:10:57,192 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.35956088232467, 'dON1': 0.14170319843606127, 'cIDON1': array([2, 9], dtype=int64), 'dON_patch_1': 0.14170319843606127, 'nTON': 1, 'dON': 0.14170319843606127, 'dxOFFAngle': 74.65034620100145, 'dOFF1': 0.06261262443450824, 'cIDOFF1': array([2, 9], dtype=int64), 'dOFF_patch_1': 0.06261262443450824, 'nTOFF': 1, 'dOFF': 0.06261262443450824, 'SUCCESS': False}
10:10:57,202 root DEBUG 

=================== Experiment ID #102 	 Dual Point ID: 117 ===================
10:10:57,225 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.328E-09|<1.000E-06)
10:10:57,225 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:57,700 root DEBUG Side: ON	 Angle(dx0, dx): 0.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.609E-02 	 Total distance: 5.609E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([168], dtype=int64), array([[False]])]] 	 class: [5 8]
10:10:58,21 root DEBUG Side: ON	 Angle(dx0, dx): 2.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.616E-02 	 Total distance: 1.022E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([181], dtype=int64), array([[False]])]] 	 class: [5 8]
10:10:58,233 root DEBUG Side: ON	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.657E-03 	 Total distance: 1.109E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[2, array([176], dtype=int64), array([[ True]])]] 	 class: [5 8]
10:10:58,471 root DEBUG Side: ON	 Angle(dx0, dx): 1.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.667E-02 	 Total distance: 1.276E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([12], dtype=int64), array([[ True]])]] 	 class: [5 8]
10:10:58,812 root DEBUG Side: OFF	 Angle(dx0, dx): 3.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.783E-02 	 Total distance: 5.783E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([43], dtype=int64), array([[ True]])]] 	 class: [5 8]
10:10:58,813 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:58,813 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -37.62 	 cIDON = [5 8], cIDOFF = [5 8]
10:10:58,813 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:58,813 root DEBUG dOFF/dON = 0.5
10:10:58,813 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.20884760528799, 'dON1': 0.12756967011883855, 'cIDON1': array([5, 8], dtype=int64), 'dON_patch_1': 0.12756967011883855, 'nTON': 1, 'dON': 0.12756967011883855, 'dxOFFAngle': 84.74992945118974, 'dOFF1': 0.05782504451579276, 'cIDOFF1': array([5, 8], dtype=int64), 'dOFF_patch_1': 0.05782504451579276, 'nTOFF': 1, 'dOFF': 0.05782504451579276, 'SUCCESS': False}
10:10:58,821 root DEBUG 

=================== Experiment ID #103 	 Dual Point ID: 118 ===================
10:10:58,861 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.094E-07|<1.000E-06)
10:10:58,861 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:59,250 root DEBUG Side: ON	 Angle(dx0, dx): 0.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.449E-02 	 Total distance: 1.449E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([145], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:59,596 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.218E-02 	 Total distance: 9.218E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([24], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:59,814 root DEBUG Side: OFF	 Angle(dx0, dx): 0.71 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.440E-02 	 Total distance: 1.466E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([244], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:59,814 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:59,814 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 82.01 	 cIDON = [2 6], cIDOFF = [2 6]
10:10:59,814 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:59,814 root DEBUG dOFF/dON = 10.1
10:10:59,814 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.27290403197941, 'dON1': 0.014491178503548871, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.014491178503548871, 'nTON': 1, 'dON': 0.014491178503548871, 'dxOFFAngle': 86.2386542463385, 'dOFF1': 0.14658321676985048, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.14658321676985048, 'nTOFF': 1, 'dOFF': 0.14658321676985048, 'SUCCESS': True}
10:10:59,827 root DEBUG 

=================== Experiment ID #104 	 Dual Point ID: 119 ===================
10:10:59,863 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.085E-07|<1.000E-06)
10:10:59,864 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:00,266 root DEBUG Side: ON	 Angle(dx0, dx): 0.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.485E-02 	 Total distance: 4.485E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([12], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:11:00,484 root DEBUG Side: ON	 Angle(dx0, dx): 3.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.056E-01 	 Total distance: 1.504E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([24], dtype=int64), array([[False]])]] 	 class: [7 9]
10:11:00,777 root DEBUG Side: ON	 Angle(dx0, dx): 11.24 deg 	 Angle(n, nold): 10.09 deg 	 Distance in patch: 4.058E-02 	 Total distance: 1.910E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([35], dtype=int64), array([[False]])]] 	 class: [7 9]
10:11:01,9 root DEBUG Side: ON	 Angle(dx0, dx): 5.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.474E-02 	 Total distance: 2.458E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([27], dtype=int64), array([[False]])]] 	 class: [7 9]
10:11:01,411 root DEBUG Side: OFF	 Angle(dx0, dx): 0.68 deg 	 Angle(n, nold): 10.09 deg 	 Distance in patch: 2.428E-02 	 Total distance: 2.428E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([122], dtype=int64), array([[False]])]] 	 class: [7 9]
10:11:01,411 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:01,411 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -82.01 	 cIDON = [7 9], cIDOFF = [7 9]
10:11:01,411 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:01,411 root DEBUG dOFF/dON = 0.1
10:11:01,411 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 77.10259308255988, 'dON1': 0.24575043074182343, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.24575043074182343, 'nTON': 1, 'dON': 0.24575043074182343, 'dxOFFAngle': 72.07302328655312, 'dOFF1': 0.024283230905950883, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.024283230905950883, 'nTOFF': 1, 'dOFF': 0.024283230905950883, 'SUCCESS': False}
10:11:01,418 root DEBUG 

=================== Experiment ID #105 	 Dual Point ID: 120 ===================
10:11:01,453 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.608E-07|<1.000E-06)
10:11:01,454 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:01,872 root DEBUG Side: ON	 Angle(dx0, dx): 28.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.038E-02 	 Total distance: 7.038E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([0], dtype=int64), array([[False]])]] 	 class: [0 1]
10:11:02,220 root DEBUG Side: OFF	 Angle(dx0, dx): 16.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.729E-02 	 Total distance: 4.729E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([41], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:11:02,220 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:02,221 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -19.63 	 cIDON = [0 1], cIDOFF = [0 1]
10:11:02,221 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:02,221 root DEBUG dOFF/dON = 0.7
10:11:02,221 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 59.64394251886013, 'dON1': 0.07037976638870864, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.07037976638870864, 'nTON': 1, 'dON': 0.07037976638870864, 'dxOFFAngle': 58.80630833870818, 'dOFF1': 0.047287319212210396, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.047287319212210396, 'nTOFF': 1, 'dOFF': 0.047287319212210396, 'SUCCESS': False}
10:11:02,231 root DEBUG 

=================== Experiment ID #106 	 Dual Point ID: 121 ===================
10:11:02,260 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.937E-07|<1.000E-06)
10:11:02,261 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:02,586 root DEBUG Side: ON	 Angle(dx0, dx): 6.90 deg 	 Angle(n, nold): 6.62 deg 	 Distance in patch: 1.341E-03 	 Total distance: 1.341E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([195], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:02,867 root DEBUG Side: ON	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.371E-02 	 Total distance: 5.505E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([246], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:03,52 root DEBUG Side: ON	 Angle(dx0, dx): 2.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.457E-02 	 Total distance: 6.963E-02 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[2, array([234], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:03,329 root DEBUG Side: ON	 Angle(dx0, dx): 3.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.713E-02 	 Total distance: 1.068E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([204], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:03,688 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 6.62 deg 	 Distance in patch: 1.277E-01 	 Total distance: 1.277E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([77], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:03,882 root DEBUG Side: OFF	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.501E-02 	 Total distance: 1.627E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([182], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:04,118 root DEBUG Side: OFF	 Angle(dx0, dx): 0.99 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.426E-02 	 Total distance: 2.470E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[2, array([106], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:04,357 root DEBUG Side: OFF	 Angle(dx0, dx): 2.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.088E-02 	 Total distance: 2.779E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([131], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:04,358 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:04,358 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 44.49 	 cIDON = [3 5], cIDOFF = [3 5]
10:11:04,358 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:04,358 root DEBUG dOFF/dON = 2.6
10:11:04,358 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.20635092196717, 'dON1': 0.10675797313227119, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.10675797313227119, 'nTON': 1, 'dON': 0.10675797313227119, 'dxOFFAngle': 76.92174932241211, 'dOFF1': 0.2778939780282353, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.2778939780282353, 'nTOFF': 1, 'dOFF': 0.2778939780282353, 'SUCCESS': True}
10:11:04,366 root DEBUG 

=================== Experiment ID #107 	 Dual Point ID: 122 ===================
10:11:04,389 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.395E-07|<1.000E-06)
10:11:04,389 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:04,878 root DEBUG Side: ON	 Angle(dx0, dx): 1.29 deg 	 Angle(n, nold): 1.18 deg 	 Distance in patch: 1.177E-01 	 Total distance: 1.177E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([211], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:05,139 root DEBUG Side: ON	 Angle(dx0, dx): 7.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.015E-01 	 Total distance: 2.192E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([33], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:05,576 root DEBUG Side: OFF	 Angle(dx0, dx): 2.20 deg 	 Angle(n, nold): 1.18 deg 	 Distance in patch: 5.102E-02 	 Total distance: 5.102E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([149], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:05,785 root DEBUG Side: OFF	 Angle(dx0, dx): 1.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.508E-02 	 Total distance: 6.610E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([200], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:05,786 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:05,786 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -53.66 	 cIDON = [3 5], cIDOFF = [3 5]
10:11:05,786 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:05,786 root DEBUG dOFF/dON = 0.3
10:11:05,786 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.21290518333304, 'dON1': 0.21919444181022518, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.21919444181022518, 'nTON': 1, 'dON': 0.21919444181022518, 'dxOFFAngle': 86.0633270935864, 'dOFF1': 0.06610297957534841, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.06610297957534841, 'nTOFF': 1, 'dOFF': 0.06610297957534841, 'SUCCESS': False}
10:11:05,796 root DEBUG 

=================== Experiment ID #108 	 Dual Point ID: 123 ===================
10:11:05,824 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.537E-07|<1.000E-06)
10:11:05,824 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:06,191 root DEBUG Side: ON	 Angle(dx0, dx): 3.44 deg 	 Angle(n, nold): 4.88 deg 	 Distance in patch: 1.801E-02 	 Total distance: 1.801E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([60], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:06,415 root DEBUG Side: ON	 Angle(dx0, dx): 3.44 deg 	 Angle(n, nold): 4.88 deg 	 Distance in patch: 3.576E-07 	 Total distance: 1.801E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([60], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:06,584 root DEBUG Side: ON	 Angle(dx0, dx): 3.44 deg 	 Angle(n, nold): 4.88 deg 	 Distance in patch: 8.943E-08 	 Total distance: 1.801E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([60], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:06,741 root DEBUG Side: ON	 Angle(dx0, dx): 3.44 deg 	 Angle(n, nold): 4.88 deg 	 Distance in patch: 8.940E-08 	 Total distance: 1.801E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([60], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:06,751 root DEBUG Got stuck in too many past-layer relus.
10:11:06,933 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:11:06,933 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:11:06,936 root DEBUG 

=================== Experiment ID #108 	 Dual Point ID: 124 ===================
10:11:06,972 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.758E-08|<1.000E-06)
10:11:06,973 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:07,380 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.738E-03 	 Total distance: 3.738E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([131], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:07,714 root DEBUG Side: OFF	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.122E-01 	 Total distance: 1.122E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([116], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:07,911 root DEBUG Side: OFF	 Angle(dx0, dx): 0.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.731E-03 	 Total distance: 1.140E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([249], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:07,911 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:07,912 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 93.65 	 cIDON = [8 9], cIDOFF = [8 9]
10:11:07,912 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:07,912 root DEBUG dOFF/dON = 30.5
10:11:07,912 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.74143296425339, 'dON1': 0.003738130694412177, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.003738130694412177, 'nTON': 1, 'dON': 0.003738130694412177, 'dxOFFAngle': 87.98959257940177, 'dOFF1': 0.11396871892568941, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.11396871892568941, 'nTOFF': 1, 'dOFF': 0.11396871892568941, 'SUCCESS': True}
10:11:07,921 root DEBUG 

=================== Experiment ID #109 	 Dual Point ID: 125 ===================
10:11:07,952 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.142E-07|<1.000E-06)
10:11:07,952 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:08,375 root DEBUG Side: ON	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.06 deg 	 Distance in patch: 1.433E-01 	 Total distance: 1.433E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([100], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:08,554 root DEBUG Side: ON	 Angle(dx0, dx): 11.20 deg 	 Angle(n, nold): 9.56 deg 	 Distance in patch: 3.214E-02 	 Total distance: 1.754E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([234], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:08,766 root DEBUG Side: ON	 Angle(dx0, dx): 4.77 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.285E-02 	 Total distance: 1.982E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[2, array([187], dtype=int64), array([[False]])]] 	 class: [3 5]
10:11:08,998 root DEBUG Side: ON	 Angle(dx0, dx): 2.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.216E-02 	 Total distance: 2.904E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[2, array([16], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:09,208 root DEBUG Side: ON	 Angle(dx0, dx): 1.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.941E-02 	 Total distance: 3.098E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([121], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:09,561 root DEBUG Side: OFF	 Angle(dx0, dx): 1.11 deg 	 Angle(n, nold): 9.56 deg 	 Distance in patch: 5.859E-04 	 Total distance: 5.859E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([4], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:11:09,562 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:09,562 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.62 	 cIDON = [3 5], cIDOFF = [3 5]
10:11:09,562 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:09,562 root DEBUG dOFF/dON = 0.0
10:11:09,562 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 74.80906062616596, 'dON1': 0.3098194754571675, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.3098194754571675, 'nTON': 1, 'dON': 0.3098194754571675, 'dxOFFAngle': 77.54103269259771, 'dOFF1': 0.0005859066670893517, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.0005859066670893517, 'nTOFF': 1, 'dOFF': 0.0005859066670893517, 'SUCCESS': False}
10:11:09,569 root DEBUG 

=================== Experiment ID #110 	 Dual Point ID: 126 ===================
10:11:09,603 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.337E-07|<1.000E-06)
10:11:09,604 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:09,931 root DEBUG Side: ON	 Angle(dx0, dx): 10.42 deg 	 Angle(n, nold): 11.05 deg 	 Distance in patch: 8.012E-02 	 Total distance: 8.012E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([35], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:11:10,61 root DEBUG Side: ON	 Angle(dx0, dx): 10.42 deg 	 Angle(n, nold): 11.05 deg 	 Distance in patch: 4.148E-06 	 Total distance: 8.012E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([35], dtype=int64), array([[False]])]] 	 class: [5 7]
10:11:10,231 root DEBUG Side: ON	 Angle(dx0, dx): 10.42 deg 	 Angle(n, nold): 11.05 deg 	 Distance in patch: 1.023E-07 	 Total distance: 8.012E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([35], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:11:10,401 root DEBUG Side: ON	 Angle(dx0, dx): 10.42 deg 	 Angle(n, nold): 11.05 deg 	 Distance in patch: 8.296E-07 	 Total distance: 8.012E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([35], dtype=int64), array([[False]])]] 	 class: [5 7]
10:11:10,546 root DEBUG Side: ON	 Angle(dx0, dx): 10.42 deg 	 Angle(n, nold): 11.05 deg 	 Distance in patch: 1.023E-07 	 Total distance: 8.012E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([35], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:11:10,735 root DEBUG Side: ON	 Angle(dx0, dx): 10.42 deg 	 Angle(n, nold): 11.05 deg 	 Distance in patch: 1.659E-06 	 Total distance: 8.013E-02 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([35], dtype=int64), array([[False]])]] 	 class: [5 7]
10:11:10,741 root DEBUG Got stuck in too many past-layer relus.
10:11:10,914 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:11:10,915 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:11:10,917 root DEBUG 

=================== Experiment ID #110 	 Dual Point ID: 127 ===================
10:11:10,941 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.254E-07|<1.000E-06)
10:11:10,942 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:11,327 root DEBUG Side: ON	 Angle(dx0, dx): 3.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.423E-01 	 Total distance: 1.423E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([242], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:11:11,672 root DEBUG Side: OFF	 Angle(dx0, dx): 31.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.367E-02 	 Total distance: 8.367E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([5, 9], dtype=int64), array([[1.],
       [0.]])]] 	 class: [5 7]
10:11:11,672 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:11,672 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -25.94 	 cIDON = [7 9], cIDOFF = [7 9]
10:11:11,672 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:11,672 root DEBUG dOFF/dON = 0.6
10:11:11,672 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 73.19519466709441, 'dON1': 0.14227710354836914, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.14227710354836914, 'nTON': 1, 'dON': 0.14227710354836914, 'dxOFFAngle': 74.02555991343132, 'dOFF1': 0.08367416767096272, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.08367416767096272, 'nTOFF': 1, 'dOFF': 0.08367416767096272, 'SUCCESS': False}
10:11:11,684 root DEBUG 

=================== Experiment ID #111 	 Dual Point ID: 128 ===================
10:11:11,705 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.403E-07|<1.000E-06)
10:11:11,706 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:12,131 root DEBUG Side: ON	 Angle(dx0, dx): 3.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.054E-02 	 Total distance: 2.054E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([108], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:12,365 root DEBUG Side: ON	 Angle(dx0, dx): 2.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.344E-03 	 Total distance: 2.888E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[2, array([21], dtype=int64), array([[False]])]] 	 class: [2 7]
10:11:12,640 root DEBUG Side: ON	 Angle(dx0, dx): 0.66 deg 	 Angle(n, nold): 0.47 deg 	 Distance in patch: 5.684E-02 	 Total distance: 8.573E-02 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([52], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:11:12,892 root DEBUG Side: ON	 Angle(dx0, dx): 7.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.378E-02 	 Total distance: 1.295E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([26], dtype=int64), array([[False]])]] 	 class: [2 7]
10:11:13,294 root DEBUG Side: OFF	 Angle(dx0, dx): 2.90 deg 	 Angle(n, nold): 0.47 deg 	 Distance in patch: 1.053E-01 	 Total distance: 1.053E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[2, array([161], dtype=int64), array([[False]])]] 	 class: [2 7]
10:11:13,490 root DEBUG Side: OFF	 Angle(dx0, dx): 8.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.784E-02 	 Total distance: 1.231E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([31], dtype=int64), array([[False]])]] 	 class: [2 7]
10:11:13,490 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:13,490 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -2.54 	 cIDON = [2 7], cIDOFF = [2 7]
10:11:13,490 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:13,490 root DEBUG dOFF/dON = 1.0
10:11:13,490 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 71.68263687599915, 'dON1': 0.1295101295324167, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.1295101295324167, 'nTON': 1, 'dON': 0.1295101295324167, 'dxOFFAngle': 66.84964407836559, 'dOFF1': 0.12309024207803376, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.12309024207803376, 'nTOFF': 1, 'dOFF': 0.12309024207803376, 'SUCCESS': False}
10:11:13,496 root DEBUG 

=================== Experiment ID #112 	 Dual Point ID: 129 ===================
10:11:13,516 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.468E-07|<1.000E-06)
10:11:13,516 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:13,974 root DEBUG Side: ON	 Angle(dx0, dx): 8.82 deg 	 Angle(n, nold): 8.29 deg 	 Distance in patch: 3.786E-02 	 Total distance: 3.786E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([50], dtype=int64), array([[False]])]] 	 class: [5 7]
10:11:14,208 root DEBUG Side: ON	 Angle(dx0, dx): 8.82 deg 	 Angle(n, nold): 8.29 deg 	 Distance in patch: 1.403E-05 	 Total distance: 3.787E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([50], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:11:14,363 root DEBUG Side: ON	 Angle(dx0, dx): 8.82 deg 	 Angle(n, nold): 8.29 deg 	 Distance in patch: 9.631E-08 	 Total distance: 3.787E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([50], dtype=int64), array([[False]])]] 	 class: [5 7]
10:11:14,525 root DEBUG Side: ON	 Angle(dx0, dx): 8.82 deg 	 Angle(n, nold): 8.29 deg 	 Distance in patch: 3.117E-06 	 Total distance: 3.787E-02 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([50], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:11:14,642 root DEBUG Side: ON	 Angle(dx0, dx): 8.82 deg 	 Angle(n, nold): 8.29 deg 	 Distance in patch: 9.631E-08 	 Total distance: 3.787E-02 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([50], dtype=int64), array([[False]])]] 	 class: [5 7]
10:11:14,820 root DEBUG Side: ON	 Angle(dx0, dx): 8.82 deg 	 Angle(n, nold): 8.29 deg 	 Distance in patch: 3.896E-06 	 Total distance: 3.788E-02 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([50], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:11:15,1 root DEBUG Side: ON	 Angle(dx0, dx): 8.82 deg 	 Angle(n, nold): 8.29 deg 	 Distance in patch: 9.631E-08 	 Total distance: 3.788E-02 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([50], dtype=int64), array([[False]])]] 	 class: [5 7]
10:11:15,185 root DEBUG Side: ON	 Angle(dx0, dx): 8.82 deg 	 Angle(n, nold): 8.29 deg 	 Distance in patch: 3.117E-06 	 Total distance: 3.788E-02 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([50], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:11:15,193 root DEBUG Got stuck in too many past-layer relus.
10:11:15,346 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:11:15,347 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:11:15,488 matplotlib.pyplot DEBUG Loaded backend tkagg version 8.6.
10:11:15,563 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:11:15,563 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:11:15,563 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:11:15,563 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:11:15,563 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 1189
10:11:15,570 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:11:15,570 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:11:15,570 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:11:15,570 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:11:15,570 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 2994
10:11:15,595 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:11:15,595 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:11:15,595 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:11:15,595 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:11:15,595 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 696
10:11:15,600 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:11:15,600 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:11:15,600 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:11:15,600 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:11:15,600 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 526
10:11:15,604 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:11:15,604 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:11:15,604 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:11:15,604 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:11:15,604 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 499
10:11:15,610 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:11:15,610 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:11:15,611 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:11:15,611 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:11:15,611 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 673
10:11:15,615 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:11:15,616 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:11:15,616 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:11:15,616 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:11:15,616 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 922
10:11:15,619 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:11:15,619 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:11:15,619 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:11:15,619 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:11:15,619 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 568
10:11:15,621 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:11:15,622 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:11:15,622 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:11:15,622 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:11:15,622 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 626
10:11:15,905 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
10:11:15,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:11:15,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:11:15,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:11:15,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:11:15,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:11:15,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:11:15,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:11:15,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:15,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:11:15,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:15,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:15,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:15,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:11:15,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:15,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:15,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:11:15,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:11:15,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:15,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:15,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:11:15,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:11:15,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:11:15,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:11:15,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:15,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:11:15,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:15,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:11:15,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:11:15,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:11:15,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:11:15,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:15,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:15,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:15,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:15,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:15,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,919 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,919 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,919 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:11:15,919 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,919 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,919 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,919 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,919 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,919 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,919 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,919 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:15,919 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,919 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,919 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,920 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,920 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,920 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:15,920 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,920 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,920 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:15,920 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:15,920 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,921 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,921 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:11:15,921 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:15,922 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,922 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:11:15,922 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,923 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:11:15,923 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,923 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,923 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:11:15,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:15,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:15,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:11:15,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:11:15,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:11:15,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:11:15,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:11:15,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:15,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:15,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:15,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:15,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,929 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,929 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,929 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,929 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,929 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,929 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,929 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:15,929 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,930 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,930 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,930 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,930 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:15,930 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,930 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,930 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,930 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,930 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,930 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,930 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:15,930 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:11:15,931 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,931 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,931 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,931 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,931 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,931 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,931 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,931 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,931 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,931 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,931 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,931 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,931 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,932 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,932 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,932 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,932 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,932 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,932 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,932 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,932 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:15,932 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,932 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,932 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,932 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,932 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:15,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:15,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:11:15,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,933 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,934 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,934 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:15,934 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,934 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,934 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,934 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,934 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:11:15,934 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,934 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,934 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,934 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,934 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:15,934 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,934 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,935 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,935 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,935 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,935 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,935 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,935 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,935 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,935 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:15,935 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,935 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,935 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,935 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,935 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,936 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:11:15,936 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,936 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,936 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,936 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,936 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:11:15,936 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,936 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:11:15,936 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:11:15,937 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,937 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,937 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,937 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,937 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,937 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,937 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,937 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,937 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:15,937 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,937 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,937 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,937 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,937 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,938 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,938 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,938 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:15,938 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:15,938 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:11:15,938 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,938 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,938 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,938 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,938 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,938 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:15,938 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,938 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:11:15,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:15,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:15,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,939 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,940 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,940 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,940 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,940 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:11:15,940 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,940 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,940 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,940 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,940 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,940 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,940 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:15,941 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,941 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,941 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:15,941 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,941 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,941 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,941 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:11:15,941 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,941 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,941 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:15,941 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:15,942 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,942 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:15,942 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:15,942 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,942 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,942 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,942 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:15,942 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
10:11:16,66 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
10:11:16,66 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,66 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,66 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:11:16,66 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:11:16,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:11:16,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,67 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:11:16,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:11:16,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,68 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:11:16,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:11:16,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:16,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:11:16,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:16,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,69 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:16,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:11:16,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:16,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:11:16,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,70 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:11:16,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:16,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,71 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,72 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:11:16,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:11:16,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:16,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:11:16,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,73 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:11:16,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:11:16,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:11:16,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:16,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:16,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:16,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:16,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,74 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:11:16,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:16,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,75 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:16,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:11:16,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:16,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:11:16,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:11:16,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,76 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:11:16,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:16,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:11:16,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:11:16,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:11:16,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:11:16,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:11:16,77 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:16,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:16,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:16,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:16,78 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:11:16,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,79 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:16,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:16,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:16,80 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:11:16,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:16,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:11:16,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:16,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,81 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:16,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:11:16,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:11:16,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:11:16,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:11:16,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:16,82 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:16,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:11:16,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:16,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:11:16,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,83 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:11:16,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:16,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:11:16,84 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:16,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:16,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,85 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,85 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
10:11:16,220 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0.
10:11:16,221 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,221 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,221 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:11:16,221 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:11:16,221 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,221 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,221 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,221 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,221 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,221 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,221 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,221 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,221 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:11:16,221 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,221 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,221 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,221 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,221 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,222 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,222 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,222 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,222 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,222 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,222 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,222 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,222 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,222 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,222 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,222 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,222 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,222 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,222 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,222 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,222 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,222 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,222 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:11:16,222 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,222 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,222 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,222 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,222 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,223 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,223 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,223 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,223 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:11:16,223 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,223 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,223 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,223 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,223 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,223 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,224 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:11:16,224 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,224 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,224 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:11:16,224 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,224 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,224 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:16,224 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,224 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:11:16,224 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,225 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:16,225 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,225 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,225 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,225 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,225 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,225 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,225 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,225 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,225 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,225 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,225 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,225 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,225 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,225 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,225 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,225 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:16,225 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,225 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,225 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:11:16,225 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,225 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,225 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,225 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,225 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,227 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,227 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,227 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,227 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:16,227 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,227 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,227 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,227 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:11:16,227 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,227 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,227 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,227 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,228 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,228 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,228 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,228 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,228 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,228 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,228 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,228 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:11:16,228 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,228 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,228 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,228 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,228 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,229 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,229 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,229 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,229 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,229 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,229 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,229 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,229 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,229 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,229 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,229 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:16,229 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,229 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,229 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,230 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,230 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,230 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,230 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,230 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,230 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,230 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,230 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,230 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,230 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,230 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,230 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,230 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,230 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,231 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,231 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:11:16,231 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:11:16,231 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,231 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:11:16,231 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,231 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,231 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,231 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,231 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,231 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,231 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,231 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,232 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,232 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,232 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,232 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,232 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:11:16,232 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,232 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,232 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,232 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,232 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,232 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,232 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,232 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,232 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:11:16,233 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:16,233 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,233 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,233 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,233 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,233 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,233 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,233 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,233 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,233 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,233 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,233 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,233 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:11:16,233 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,233 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:11:16,233 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:11:16,233 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,235 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,235 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:11:16,235 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,235 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,235 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,235 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,235 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:16,235 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,236 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:16,236 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,236 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,237 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,237 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,237 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,237 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,237 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,238 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:16,238 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,238 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:16,238 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,238 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,238 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,238 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,238 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,238 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,238 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,238 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,238 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,238 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,238 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,238 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,238 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,238 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,238 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,240 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,240 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:11:16,240 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,240 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,240 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,240 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,240 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,240 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,240 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,240 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:16,240 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,240 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,240 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,240 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,240 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,240 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,240 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:16,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:11:16,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:16,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:11:16,241 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:11:16,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:11:16,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:16,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,243 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:11:16,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:11:16,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:11:16,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:11:16,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,244 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:11:16,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:16,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,245 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:16,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:16,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,246 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,248 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,248 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,248 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,248 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,248 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:16,248 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,248 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,248 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,248 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,248 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:11:16,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,249 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:16,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,250 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:16,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:16,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:11:16,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,252 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:16,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:11:16,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,253 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:16,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,254 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,255 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:16,255 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,255 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,255 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,255 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,255 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,255 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:11:16,255 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,255 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,255 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,255 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,255 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:11:16,256 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,256 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:11:16,256 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:11:16,256 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,256 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,256 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,256 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,256 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,256 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,256 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,256 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:16,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:16,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:16,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:11:16,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:16,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:11:16,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,257 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,258 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:11:16,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:16,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:16,259 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:11:16,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:16,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:16,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:16,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:16,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,260 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,261 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:16,261 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
