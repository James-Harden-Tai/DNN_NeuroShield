10:08:00,164 root DEBUG Check that model weights are dtype tf.float64: 	 <dtype: 'float64'>
10:08:00,165 root INFO eps: 1e-06
10:08:00,165 root INFO tol: 1e-06
10:08:00,165 root DEBUG Load dual points from file: ../data/dual_points_cifar10_3x256_64_10_float64.
10:08:00,177 root DEBUG 

=================== Experiment ID #0 	 Dual Point ID: 1 ===================
10:08:00,187 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.719E-08|<1.000E-06)
10:08:00,187 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:00,533 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.248E-01 	 Total distance: 2.248E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([128], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:08:00,712 root DEBUG Side: ON	 Angle(dx0, dx): 1.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.210E-03 	 Total distance: 2.260E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([64], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:08:01,18 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.838E-03 	 Total distance: 3.838E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([101], dtype=int64), array([[False]])]] 	 class: [5 9]
10:08:01,19 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:01,19 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -96.66 	 cIDON = [5 9], cIDOFF = [5 9]
10:08:01,19 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:01,19 root DEBUG dOFF/dON = 0.0
10:08:01,19 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 75.36105429620338, 'dON1': 0.2259801303294034, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.2259801303294034, 'nTON': 1, 'dON': 0.2259801303294034, 'dxOFFAngle': 85.13450158962686, 'dOFF1': 0.0038381564963825754, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.0038381564963825754, 'nTOFF': 1, 'dOFF': 0.0038381564963825754, 'SUCCESS': False}
10:08:01,43 root DEBUG 

=================== Experiment ID #1 	 Dual Point ID: 2 ===================
10:08:01,53 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.224E-07|<1.000E-06)
10:08:01,53 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:01,430 root DEBUG Side: ON	 Angle(dx0, dx): 1.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.062E-02 	 Total distance: 7.062E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([128], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:08:01,743 root DEBUG Side: OFF	 Angle(dx0, dx): 1.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.857E-02 	 Total distance: 2.857E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([117], dtype=int64), array([[False]])]] 	 class: [5 9]
10:08:01,744 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:01,744 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -42.39 	 cIDON = [5 9], cIDOFF = [5 9]
10:08:01,744 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:01,744 root DEBUG dOFF/dON = 0.4
10:08:01,744 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 68.79592948282168, 'dON1': 0.07062064082372092, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.07062064082372092, 'nTON': 1, 'dON': 0.07062064082372092, 'dxOFFAngle': 77.72342245020442, 'dOFF1': 0.028572968493957716, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.028572968493957716, 'nTOFF': 1, 'dOFF': 0.028572968493957716, 'SUCCESS': False}
10:08:01,755 root DEBUG 

=================== Experiment ID #2 	 Dual Point ID: 3 ===================
10:08:01,769 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.526E-08|<1.000E-06)
10:08:01,770 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:02,157 root DEBUG Side: ON	 Angle(dx0, dx): 6.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.549E-02 	 Total distance: 4.549E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([149], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:08:02,511 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.898E-01 	 Total distance: 1.898E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([23], dtype=int64), array([[False]])]] 	 class: [4 8]
10:08:02,728 root DEBUG Side: OFF	 Angle(dx0, dx): 2.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.303E-01 	 Total distance: 4.200E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([37], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:08:02,728 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:02,729 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 80.46 	 cIDON = [4 8], cIDOFF = [4 8]
10:08:02,729 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:02,730 root DEBUG dOFF/dON = 9.2
10:08:02,730 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.04807290387123, 'dON1': 0.045491543273687374, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.045491543273687374, 'nTON': 1, 'dON': 0.045491543273687374, 'dxOFFAngle': 89.8843372825514, 'dOFF1': 0.42004187400665616, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.42004187400665616, 'nTOFF': 1, 'dOFF': 0.42004187400665616, 'SUCCESS': True}
10:08:02,741 root DEBUG 

=================== Experiment ID #3 	 Dual Point ID: 4 ===================
10:08:02,751 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.719E-09|<1.000E-06)
10:08:02,752 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:03,83 root DEBUG Side: ON	 Angle(dx0, dx): 2.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.579E-02 	 Total distance: 2.579E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([211], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:03,417 root DEBUG Side: OFF	 Angle(dx0, dx): 3.86 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.553E-02 	 Total distance: 4.553E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([96], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:03,417 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:03,418 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 27.68 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:03,418 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:03,418 root DEBUG dOFF/dON = 1.8
10:08:03,418 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 70.56982122458459, 'dON1': 0.02579020369244054, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.02579020369244054, 'nTON': 1, 'dON': 0.02579020369244054, 'dxOFFAngle': 77.87541499109523, 'dOFF1': 0.04553144853462454, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.04553144853462454, 'nTOFF': 1, 'dOFF': 0.04553144853462454, 'SUCCESS': True}
10:08:03,429 root DEBUG 

=================== Experiment ID #4 	 Dual Point ID: 5 ===================
10:08:03,438 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.940E-08|<1.000E-06)
10:08:03,438 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:03,777 root DEBUG Side: ON	 Angle(dx0, dx): 1.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.469E-02 	 Total distance: 1.469E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([215], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:04,113 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.473E-02 	 Total distance: 4.473E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([104], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:04,328 root DEBUG Side: OFF	 Angle(dx0, dx): 0.94 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.905E-03 	 Total distance: 5.164E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([207], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:04,328 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:04,329 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 55.70 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:04,329 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:04,329 root DEBUG dOFF/dON = 3.5
10:08:04,330 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.8077937721529, 'dON1': 0.014693401296922447, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.014693401296922447, 'nTON': 1, 'dON': 0.014693401296922447, 'dxOFFAngle': 88.93666094438487, 'dOFF1': 0.05163625798203952, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.05163625798203952, 'nTOFF': 1, 'dOFF': 0.05163625798203952, 'SUCCESS': True}
10:08:04,342 root DEBUG 

=================== Experiment ID #5 	 Dual Point ID: 6 ===================
10:08:04,353 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.272E-08|<1.000E-06)
10:08:04,353 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:04,639 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.535E-02 	 Total distance: 1.535E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([112], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:04,844 root DEBUG Side: ON	 Angle(dx0, dx): 0.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.363E-02 	 Total distance: 3.899E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([149], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:05,119 root DEBUG Side: OFF	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.846E-01 	 Total distance: 3.846E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([220], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:05,119 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:05,119 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 81.59 	 cIDON = [3 7], cIDOFF = [3 7]
10:08:05,120 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:05,120 root DEBUG dOFF/dON = 9.9
10:08:05,120 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.88825922304869, 'dON1': 0.03898508305213985, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.03898508305213985, 'nTON': 1, 'dON': 0.03898508305213985, 'dxOFFAngle': 89.13876785956703, 'dOFF1': 0.38458917067207754, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.38458917067207754, 'nTOFF': 1, 'dOFF': 0.38458917067207754, 'SUCCESS': True}
10:08:05,140 root DEBUG 

=================== Experiment ID #6 	 Dual Point ID: 7 ===================
10:08:05,148 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.218E-08|<1.000E-06)
10:08:05,149 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:05,435 root DEBUG Side: ON	 Angle(dx0, dx): 1.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.417E-03 	 Total distance: 8.417E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([97], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:08:05,798 root DEBUG Side: OFF	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.996E-02 	 Total distance: 1.996E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([182], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:08:05,799 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:05,799 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 40.68 	 cIDON = [2 4], cIDOFF = [2 4]
10:08:05,799 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:05,799 root DEBUG dOFF/dON = 2.4
10:08:05,799 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 75.93339840865926, 'dON1': 0.008416738741326722, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.008416738741326722, 'nTON': 1, 'dON': 0.008416738741326722, 'dxOFFAngle': 84.72889664609667, 'dOFF1': 0.019958901430035987, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.019958901430035987, 'nTOFF': 1, 'dOFF': 0.019958901430035987, 'SUCCESS': True}
10:08:05,809 root DEBUG 

=================== Experiment ID #7 	 Dual Point ID: 8 ===================
10:08:05,820 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.523E-08|<1.000E-06)
10:08:05,820 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:06,195 root DEBUG Side: ON	 Angle(dx0, dx): 1.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.469E-01 	 Total distance: 1.469E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([47], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:06,570 root DEBUG Side: OFF	 Angle(dx0, dx): 1.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.169E-01 	 Total distance: 1.169E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([32], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:06,570 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:06,571 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -11.35 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:06,571 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:06,572 root DEBUG dOFF/dON = 0.8
10:08:06,572 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.68020312924922, 'dON1': 0.14685682760607574, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.14685682760607574, 'nTON': 1, 'dON': 0.14685682760607574, 'dxOFFAngle': 83.67435233281441, 'dOFF1': 0.11691353266874388, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.11691353266874388, 'nTOFF': 1, 'dOFF': 0.11691353266874388, 'SUCCESS': False}
10:08:06,581 root DEBUG 

=================== Experiment ID #8 	 Dual Point ID: 9 ===================
10:08:06,593 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.371E-08|<1.000E-06)
10:08:06,593 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:06,953 root DEBUG Side: ON	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.595E-02 	 Total distance: 6.595E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([11], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:07,307 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.031E-03 	 Total distance: 9.031E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([233], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:07,581 root DEBUG Side: OFF	 Angle(dx0, dx): 4.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.074E-02 	 Total distance: 3.977E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([34], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:07,582 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:07,582 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -24.76 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:07,582 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:07,582 root DEBUG dOFF/dON = 0.6
10:08:07,582 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 77.93714380132107, 'dON1': 0.0659506530188457, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.0659506530188457, 'nTON': 1, 'dON': 0.0659506530188457, 'dxOFFAngle': 81.48354979156119, 'dOFF1': 0.03977227447221424, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.03977227447221424, 'nTOFF': 1, 'dOFF': 0.03977227447221424, 'SUCCESS': False}
10:08:07,589 root DEBUG 

=================== Experiment ID #9 	 Dual Point ID: 10 ===================
10:08:07,598 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.243E-08|<1.000E-06)
10:08:07,598 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:07,866 root DEBUG Side: ON	 Angle(dx0, dx): 1.87 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.282E-03 	 Total distance: 9.282E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([141], dtype=int64), array([[False]])]] 	 class: [3 9]
10:08:08,199 root DEBUG Side: OFF	 Angle(dx0, dx): 1.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.630E-02 	 Total distance: 4.630E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([143], dtype=int64), array([[False]])]] 	 class: [3 9]
10:08:08,200 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:08,200 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 66.60 	 cIDON = [3 9], cIDOFF = [3 9]
10:08:08,200 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:08,200 root DEBUG dOFF/dON = 5.0
10:08:08,200 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.59917513916328, 'dON1': 0.009281952355877969, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.009281952355877969, 'nTON': 1, 'dON': 0.009281952355877969, 'dxOFFAngle': 82.2826234291109, 'dOFF1': 0.04629954751433569, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.04629954751433569, 'nTOFF': 1, 'dOFF': 0.04629954751433569, 'SUCCESS': True}
10:08:08,212 root DEBUG 

=================== Experiment ID #10 	 Dual Point ID: 11 ===================
10:08:08,221 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.301E-09|<1.000E-06)
10:08:08,221 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:08,620 root DEBUG Side: ON	 Angle(dx0, dx): 0.94 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.917E-02 	 Total distance: 5.917E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([87], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:09,35 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.175E-02 	 Total distance: 9.175E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([204], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:09,35 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:09,35 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 21.59 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:09,35 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:09,35 root DEBUG dOFF/dON = 1.6
10:08:09,36 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.13627753194696, 'dON1': 0.05917473054044244, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.05917473054044244, 'nTON': 1, 'dON': 0.05917473054044244, 'dxOFFAngle': 86.77526473845921, 'dOFF1': 0.09175329887054434, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.09175329887054434, 'nTOFF': 1, 'dOFF': 0.09175329887054434, 'SUCCESS': True}
10:08:09,49 root DEBUG 

=================== Experiment ID #11 	 Dual Point ID: 12 ===================
10:08:09,63 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.671E-08|<1.000E-06)
10:08:09,63 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:09,434 root DEBUG Side: ON	 Angle(dx0, dx): 0.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.157E-02 	 Total distance: 4.157E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([49], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:09,816 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.835E-01 	 Total distance: 2.835E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([42], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:10,33 root DEBUG Side: OFF	 Angle(dx0, dx): 0.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.127E-02 	 Total distance: 3.448E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([211], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:10,302 root DEBUG Side: OFF	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.142E-01 	 Total distance: 4.590E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([69], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:10,302 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:10,303 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 83.39 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:10,303 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:10,303 root DEBUG dOFF/dON = 11.0
10:08:10,303 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 72.69641046622468, 'dON1': 0.04156967962304128, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.04156967962304128, 'nTON': 1, 'dON': 0.04156967962304128, 'dxOFFAngle': 78.2073633437282, 'dOFF1': 0.4589560421115609, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.4589560421115609, 'nTOFF': 1, 'dOFF': 0.4589560421115609, 'SUCCESS': True}
10:08:10,314 root DEBUG 

=================== Experiment ID #12 	 Dual Point ID: 13 ===================
10:08:10,325 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.223E-08|<1.000E-06)
10:08:10,325 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:10,622 root DEBUG Side: ON	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.650E-02 	 Total distance: 7.650E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([179], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:10,939 root DEBUG Side: OFF	 Angle(dx0, dx): 1.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.546E-02 	 Total distance: 6.546E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([63], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:10,939 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:10,939 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -7.77 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:10,939 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:10,939 root DEBUG dOFF/dON = 0.9
10:08:10,939 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.58258615193915, 'dON1': 0.07649579891635315, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.07649579891635315, 'nTON': 1, 'dON': 0.07649579891635315, 'dxOFFAngle': 84.67726129771614, 'dOFF1': 0.06546335475095924, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.06546335475095924, 'nTOFF': 1, 'dOFF': 0.06546335475095924, 'SUCCESS': False}
10:08:10,955 root DEBUG 

=================== Experiment ID #13 	 Dual Point ID: 14 ===================
10:08:10,967 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.667E-07|<1.000E-06)
10:08:10,967 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:11,324 root DEBUG Side: ON	 Angle(dx0, dx): 0.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.829E-01 	 Total distance: 1.829E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([164], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:08:11,663 root DEBUG Side: OFF	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.669E-01 	 Total distance: 2.669E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([194], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:08:11,663 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:11,663 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 18.67 	 cIDON = [3 9], cIDOFF = [3 9]
10:08:11,663 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:11,663 root DEBUG dOFF/dON = 1.5
10:08:11,663 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.40125440571452, 'dON1': 0.18287646738572097, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.18287646738572097, 'nTON': 1, 'dON': 0.18287646738572097, 'dxOFFAngle': 88.88919451912331, 'dOFF1': 0.2668559998500748, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.2668559998500748, 'nTOFF': 1, 'dOFF': 0.2668559998500748, 'SUCCESS': True}
10:08:11,669 root DEBUG 

=================== Experiment ID #14 	 Dual Point ID: 15 ===================
10:08:11,677 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.058E-07|<1.000E-06)
10:08:11,677 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:12,15 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.876E-03 	 Total distance: 2.876E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([150], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:12,243 root DEBUG Side: ON	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.023E-02 	 Total distance: 3.310E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([51], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:12,588 root DEBUG Side: OFF	 Angle(dx0, dx): 3.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.478E-03 	 Total distance: 4.478E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([7], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:12,588 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:12,588 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -76.17 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:12,589 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:12,589 root DEBUG dOFF/dON = 0.1
10:08:12,589 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.44475977997541, 'dON1': 0.03310205508357778, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.03310205508357778, 'nTON': 1, 'dON': 0.03310205508357778, 'dxOFFAngle': 85.82460918803379, 'dOFF1': 0.004478080439451823, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.004478080439451823, 'nTOFF': 1, 'dOFF': 0.004478080439451823, 'SUCCESS': False}
10:08:12,599 root DEBUG 

=================== Experiment ID #15 	 Dual Point ID: 16 ===================
10:08:12,613 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.942E-07|<1.000E-06)
10:08:12,613 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:12,954 root DEBUG Side: ON	 Angle(dx0, dx): 2.60 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.460E-01 	 Total distance: 1.460E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([145], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:13,240 root DEBUG Side: OFF	 Angle(dx0, dx): 3.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.037E-01 	 Total distance: 2.037E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([51], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:13,240 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:13,241 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 16.49 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:13,241 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:13,241 root DEBUG dOFF/dON = 1.4
10:08:13,241 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.07380423213311, 'dON1': 0.14604698754174017, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.14604698754174017, 'nTON': 1, 'dON': 0.14604698754174017, 'dxOFFAngle': 87.99125330117403, 'dOFF1': 0.20372866414013502, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.20372866414013502, 'nTOFF': 1, 'dOFF': 0.20372866414013502, 'SUCCESS': True}
10:08:13,253 root DEBUG 

=================== Experiment ID #16 	 Dual Point ID: 17 ===================
10:08:13,264 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.120E-07|<1.000E-06)
10:08:13,264 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:13,563 root DEBUG Side: ON	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.869E-01 	 Total distance: 2.869E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([248], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:08:13,811 root DEBUG Side: OFF	 Angle(dx0, dx): 1.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.101E-02 	 Total distance: 1.101E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([114], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:08:13,812 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:13,812 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -92.61 	 cIDON = [2 5], cIDOFF = [2 5]
10:08:13,812 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:13,812 root DEBUG dOFF/dON = 0.0
10:08:13,812 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 69.83629659443073, 'dON1': 0.2869092827224324, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.2869092827224324, 'nTON': 1, 'dON': 0.2869092827224324, 'dxOFFAngle': 76.1025034385811, 'dOFF1': 0.011014972700021785, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.011014972700021785, 'nTOFF': 1, 'dOFF': 0.011014972700021785, 'SUCCESS': False}
10:08:13,818 root DEBUG 

=================== Experiment ID #17 	 Dual Point ID: 18 ===================
10:08:13,826 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.367E-07|<1.000E-06)
10:08:13,827 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:14,169 root DEBUG Side: ON	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.391E-03 	 Total distance: 7.391E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([87], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:08:14,521 root DEBUG Side: OFF	 Angle(dx0, dx): 3.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.581E-02 	 Total distance: 6.581E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([220], dtype=int64), array([[False]])]] 	 class: [5 6]
10:08:14,521 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:14,522 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 79.80 	 cIDON = [5 6], cIDOFF = [5 6]
10:08:14,522 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:14,522 root DEBUG dOFF/dON = 8.9
10:08:14,522 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.59351976599696, 'dON1': 0.007391316427650974, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.007391316427650974, 'nTON': 1, 'dON': 0.007391316427650974, 'dxOFFAngle': 81.40121321014013, 'dOFF1': 0.06580562266994107, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.06580562266994107, 'nTOFF': 1, 'dOFF': 0.06580562266994107, 'SUCCESS': True}
10:08:14,538 root DEBUG 

=================== Experiment ID #18 	 Dual Point ID: 19 ===================
10:08:14,548 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.931E-07|<1.000E-06)
10:08:14,549 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:14,810 root DEBUG Side: ON	 Angle(dx0, dx): 2.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.498E-03 	 Total distance: 1.498E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([81], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:15,172 root DEBUG Side: OFF	 Angle(dx0, dx): 0.73 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.540E-02 	 Total distance: 4.540E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([147], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:15,172 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:15,173 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 93.61 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:15,173 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:15,173 root DEBUG dOFF/dON = 30.3
10:08:15,173 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.09994482378785, 'dON1': 0.0014982883298806167, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.0014982883298806167, 'nTON': 1, 'dON': 0.0014982883298806167, 'dxOFFAngle': 88.38268184323556, 'dOFF1': 0.04539705190548921, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.04539705190548921, 'nTOFF': 1, 'dOFF': 0.04539705190548921, 'SUCCESS': True}
10:08:15,187 root DEBUG 

=================== Experiment ID #19 	 Dual Point ID: 20 ===================
10:08:15,197 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.029E-08|<1.000E-06)
10:08:15,197 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:15,556 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.069E-02 	 Total distance: 8.069E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([64], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:08:15,869 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.868E-02 	 Total distance: 4.868E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([178], dtype=int64), array([[False]])]] 	 class: [6 7]
10:08:15,870 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:15,870 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -24.74 	 cIDON = [6 7], cIDOFF = [6 7]
10:08:15,870 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:15,870 root DEBUG dOFF/dON = 0.6
10:08:15,870 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.31105295961956, 'dON1': 0.0806891383404731, 'cIDON1': array([6, 7], dtype=int64), 'dON_patch_1': 0.0806891383404731, 'nTON': 1, 'dON': 0.0806891383404731, 'dxOFFAngle': 85.82460326918272, 'dOFF1': 0.048684435549197776, 'cIDOFF1': array([6, 7], dtype=int64), 'dOFF_patch_1': 0.048684435549197776, 'nTOFF': 1, 'dOFF': 0.048684435549197776, 'SUCCESS': False}
10:08:15,880 root DEBUG 

=================== Experiment ID #20 	 Dual Point ID: 21 ===================
10:08:15,891 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.168E-07|<1.000E-06)
10:08:15,891 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:16,219 root DEBUG Side: ON	 Angle(dx0, dx): 10.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.102E-02 	 Total distance: 2.102E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([6, 9], dtype=int64), array([[1.],
       [0.]])]] 	 class: [2 6]
10:08:16,535 root DEBUG Side: OFF	 Angle(dx0, dx): 0.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.820E-02 	 Total distance: 1.820E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([230], dtype=int64), array([[False]])]] 	 class: [2 9]
10:08:16,535 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:16,535 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -7.21 	 cIDON = [2 9], cIDOFF = [2 9]
10:08:16,535 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:16,535 root DEBUG dOFF/dON = 0.9
10:08:16,535 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.06269877122335, 'dON1': 0.021024890314285137, 'cIDON1': array([2, 9], dtype=int64), 'dON_patch_1': 0.021024890314285137, 'nTON': 1, 'dON': 0.021024890314285137, 'dxOFFAngle': 85.181011048428, 'dOFF1': 0.018197298076496057, 'cIDOFF1': array([2, 9], dtype=int64), 'dOFF_patch_1': 0.018197298076496057, 'nTOFF': 1, 'dOFF': 0.018197298076496057, 'SUCCESS': False}
10:08:16,547 root DEBUG 

=================== Experiment ID #21 	 Dual Point ID: 22 ===================
10:08:16,558 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.510E-08|<1.000E-06)
10:08:16,558 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:16,847 root DEBUG Side: ON	 Angle(dx0, dx): 1.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.899E-02 	 Total distance: 1.899E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([216], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:17,214 root DEBUG Side: OFF	 Angle(dx0, dx): 1.85 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.266E-02 	 Total distance: 9.266E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([188], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:17,531 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.001E-02 	 Total distance: 1.827E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([57], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:17,531 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:17,532 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 81.16 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:17,532 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:17,532 root DEBUG dOFF/dON = 9.6
10:08:17,532 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 79.656607556782, 'dON1': 0.018992475042886467, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.018992475042886467, 'nTON': 1, 'dON': 0.018992475042886467, 'dxOFFAngle': 84.06696751537984, 'dOFF1': 0.18267603876863203, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.18267603876863203, 'nTOFF': 1, 'dOFF': 0.18267603876863203, 'SUCCESS': True}
10:08:17,544 root DEBUG 

=================== Experiment ID #22 	 Dual Point ID: 23 ===================
10:08:17,554 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.405E-08|<1.000E-06)
10:08:17,554 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:17,919 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.582E-02 	 Total distance: 3.582E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([63], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:18,109 root DEBUG Side: ON	 Angle(dx0, dx): 1.85 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.315E-01 	 Total distance: 1.673E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([161], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:18,443 root DEBUG Side: OFF	 Angle(dx0, dx): 6.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.295E-01 	 Total distance: 2.295E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([56], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:18,444 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:18,444 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 15.68 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:18,444 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:18,444 root DEBUG dOFF/dON = 1.4
10:08:18,444 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.03097814242368, 'dON1': 0.1672734515268525, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.1672734515268525, 'nTON': 1, 'dON': 0.1672734515268525, 'dxOFFAngle': 83.18122971694334, 'dOFF1': 0.22949367913685387, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.22949367913685387, 'nTOFF': 1, 'dOFF': 0.22949367913685387, 'SUCCESS': True}
10:08:18,460 root DEBUG 

=================== Experiment ID #23 	 Dual Point ID: 24 ===================
10:08:18,472 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.333E-08|<1.000E-06)
10:08:18,472 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:18,735 root DEBUG Side: ON	 Angle(dx0, dx): 7.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.973E-07 	 Total distance: 6.973E-07 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 3]
10:08:18,893 root DEBUG Side: ON	 Angle(dx0, dx): 7.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.989E-07 	 Total distance: 1.396E-06 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 3]
10:08:19,40 root DEBUG Side: ON	 Angle(dx0, dx): 7.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.487E-07 	 Total distance: 1.745E-06 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 3]
10:08:19,50 root DEBUG Got stuck in too many past-layer relus.
10:08:19,151 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:08:19,151 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:08:19,152 root DEBUG 

=================== Experiment ID #23 	 Dual Point ID: 25 ===================
10:08:19,165 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.340E-08|<1.000E-06)
10:08:19,165 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:19,511 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.121E-02 	 Total distance: 5.121E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([13], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:19,744 root DEBUG Side: OFF	 Angle(dx0, dx): 0.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.901E-03 	 Total distance: 9.901E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([39], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:19,744 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:19,745 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -67.60 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:19,745 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:19,745 root DEBUG dOFF/dON = 0.2
10:08:19,745 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.49646816386142, 'dON1': 0.051206041644000506, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.051206041644000506, 'nTON': 1, 'dON': 0.051206041644000506, 'dxOFFAngle': 89.557105798672, 'dOFF1': 0.009900659924313814, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.009900659924313814, 'nTOFF': 1, 'dOFF': 0.009900659924313814, 'SUCCESS': False}
10:08:19,759 root DEBUG 

=================== Experiment ID #24 	 Dual Point ID: 26 ===================
10:08:19,782 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.122E-08|<1.000E-06)
10:08:19,783 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:20,107 root DEBUG Side: ON	 Angle(dx0, dx): 1.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.546E-02 	 Total distance: 2.546E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([132], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:20,339 root DEBUG Side: ON	 Angle(dx0, dx): 0.73 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.000E-02 	 Total distance: 3.547E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([56], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:20,735 root DEBUG Side: OFF	 Angle(dx0, dx): 1.87 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.189E-04 	 Total distance: 7.189E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([52], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:20,736 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:20,736 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -96.03 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:20,736 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:20,736 root DEBUG dOFF/dON = 0.0
10:08:20,736 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.79136293415398, 'dON1': 0.03546521571542605, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.03546521571542605, 'nTON': 1, 'dON': 0.03546521571542605, 'dxOFFAngle': 85.14456688706102, 'dOFF1': 0.0007189084240760923, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.0007189084240760923, 'nTOFF': 1, 'dOFF': 0.0007189084240760923, 'SUCCESS': False}
10:08:20,750 root DEBUG 

=================== Experiment ID #25 	 Dual Point ID: 27 ===================
10:08:20,765 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.534E-07|<1.000E-06)
10:08:20,765 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:21,189 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.890E-01 	 Total distance: 2.890E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([179], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:21,539 root DEBUG Side: OFF	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.619E-02 	 Total distance: 6.619E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([85], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:21,539 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:21,540 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -62.73 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:21,540 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:21,540 root DEBUG dOFF/dON = 0.2
10:08:21,540 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.3033155725434, 'dON1': 0.2890094276084098, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.2890094276084098, 'nTON': 1, 'dON': 0.2890094276084098, 'dxOFFAngle': 87.11876612124857, 'dOFF1': 0.06618859505417905, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.06618859505417905, 'nTOFF': 1, 'dOFF': 0.06618859505417905, 'SUCCESS': False}
10:08:21,551 root DEBUG 

=================== Experiment ID #26 	 Dual Point ID: 28 ===================
10:08:21,561 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.423E-08|<1.000E-06)
10:08:21,561 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:21,885 root DEBUG Side: ON	 Angle(dx0, dx): 1.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.753E-01 	 Total distance: 1.753E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([199], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:22,191 root DEBUG Side: ON	 Angle(dx0, dx): 0.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.868E-01 	 Total distance: 3.621E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([62], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:22,558 root DEBUG Side: OFF	 Angle(dx0, dx): 0.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.861E-02 	 Total distance: 2.861E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([3], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:22,558 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:22,558 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -85.35 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:22,559 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:22,559 root DEBUG dOFF/dON = 0.1
10:08:22,559 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.71584758175499, 'dON1': 0.3620927735282863, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.3620927735282863, 'nTON': 1, 'dON': 0.3620927735282863, 'dxOFFAngle': 89.71773347599421, 'dOFF1': 0.02861350267358306, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.02861350267358306, 'nTOFF': 1, 'dOFF': 0.02861350267358306, 'SUCCESS': False}
10:08:22,571 root DEBUG 

=================== Experiment ID #27 	 Dual Point ID: 29 ===================
10:08:22,585 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.647E-08|<1.000E-06)
10:08:22,585 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:22,977 root DEBUG Side: ON	 Angle(dx0, dx): 1.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.228E-01 	 Total distance: 1.228E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([232], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:23,336 root DEBUG Side: OFF	 Angle(dx0, dx): 0.79 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.305E-02 	 Total distance: 1.305E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([188], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:23,602 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.468E-02 	 Total distance: 1.077E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([215], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:23,603 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:23,603 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -6.54 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:23,604 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:23,604 root DEBUG dOFF/dON = 0.9
10:08:23,604 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.42429098420472, 'dON1': 0.12280508724853824, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.12280508724853824, 'nTON': 1, 'dON': 0.12280508724853824, 'dxOFFAngle': 81.41282479999478, 'dOFF1': 0.10772563155033581, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.10772563155033581, 'nTOFF': 1, 'dOFF': 0.10772563155033581, 'SUCCESS': False}
10:08:23,614 root DEBUG 

=================== Experiment ID #28 	 Dual Point ID: 30 ===================
10:08:23,623 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.990E-08|<1.000E-06)
10:08:23,624 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:23,992 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.063E-01 	 Total distance: 1.063E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([232], dtype=int64), array([[False]])]] 	 class: [2 9]
10:08:24,262 root DEBUG Side: OFF	 Angle(dx0, dx): 1.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.623E-02 	 Total distance: 2.623E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([233], dtype=int64), array([[False]])]] 	 class: [2 9]
10:08:24,262 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:24,262 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -60.43 	 cIDON = [2 9], cIDOFF = [2 9]
10:08:24,262 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:24,263 root DEBUG dOFF/dON = 0.2
10:08:24,263 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.94224172282507, 'dON1': 0.1063293654858416, 'cIDON1': array([2, 9], dtype=int64), 'dON_patch_1': 0.1063293654858416, 'nTON': 1, 'dON': 0.1063293654858416, 'dxOFFAngle': 89.41017340952799, 'dOFF1': 0.02622632355879306, 'cIDOFF1': array([2, 9], dtype=int64), 'dOFF_patch_1': 0.02622632355879306, 'nTOFF': 1, 'dOFF': 0.02622632355879306, 'SUCCESS': False}
10:08:24,269 root DEBUG 

=================== Experiment ID #29 	 Dual Point ID: 31 ===================
10:08:24,278 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.679E-08|<1.000E-06)
10:08:24,278 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:24,672 root DEBUG Side: ON	 Angle(dx0, dx): 4.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.227E-02 	 Total distance: 4.227E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([19], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:08:24,983 root DEBUG Side: OFF	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.472E-03 	 Total distance: 7.472E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([242], dtype=int64), array([[False]])]] 	 class: [5 6]
10:08:24,983 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:24,983 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -69.96 	 cIDON = [5 6], cIDOFF = [5 6]
10:08:24,983 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:24,983 root DEBUG dOFF/dON = 0.2
10:08:24,983 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.17378016698387, 'dON1': 0.04227099784261028, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.04227099784261028, 'nTON': 1, 'dON': 0.04227099784261028, 'dxOFFAngle': 86.91997455737462, 'dOFF1': 0.00747191746333326, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.00747191746333326, 'nTOFF': 1, 'dOFF': 0.00747191746333326, 'SUCCESS': False}
10:08:24,994 root DEBUG 

=================== Experiment ID #30 	 Dual Point ID: 32 ===================
10:08:25,3 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.063E-07|<1.000E-06)
10:08:25,3 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:25,354 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.107E-01 	 Total distance: 1.107E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([141], dtype=int64), array([[False]])]] 	 class: [2 3]
10:08:25,598 root DEBUG Side: ON	 Angle(dx0, dx): 2.77 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.756E-02 	 Total distance: 1.582E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([188], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:08:26,2 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.000E-03 	 Total distance: 7.000E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([109], dtype=int64), array([[False]])]] 	 class: [2 3]
10:08:26,278 root DEBUG Side: OFF	 Angle(dx0, dx): 5.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.728E-02 	 Total distance: 9.428E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([29], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:08:26,279 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:26,279 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -25.32 	 cIDON = [2 3], cIDOFF = [2 3]
10:08:26,279 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:26,279 root DEBUG dOFF/dON = 0.6
10:08:26,279 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.51931078671552, 'dON1': 0.15823515075321432, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.15823515075321432, 'nTON': 1, 'dON': 0.15823515075321432, 'dxOFFAngle': 80.87397789917743, 'dOFF1': 0.09428469375538825, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.09428469375538825, 'nTOFF': 1, 'dOFF': 0.09428469375538825, 'SUCCESS': False}
10:08:26,292 root DEBUG 

=================== Experiment ID #31 	 Dual Point ID: 33 ===================
10:08:26,303 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.918E-09|<1.000E-06)
10:08:26,304 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:26,681 root DEBUG Side: ON	 Angle(dx0, dx): 0.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.646E-02 	 Total distance: 9.646E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([145], dtype=int64), array([[False]])]] 	 class: [2 8]
10:08:26,928 root DEBUG Side: ON	 Angle(dx0, dx): 1.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.343E-01 	 Total distance: 2.308E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([116], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:08:27,248 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.311E-02 	 Total distance: 3.311E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([40], dtype=int64), array([[False]])]] 	 class: [2 8]
10:08:27,248 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:27,248 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -74.90 	 cIDON = [2 8], cIDOFF = [2 8]
10:08:27,248 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:27,249 root DEBUG dOFF/dON = 0.1
10:08:27,249 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.93589078752463, 'dON1': 0.2307886135679021, 'cIDON1': array([2, 8], dtype=int64), 'dON_patch_1': 0.2307886135679021, 'nTON': 1, 'dON': 0.2307886135679021, 'dxOFFAngle': 82.26611155794212, 'dOFF1': 0.03311374690240642, 'cIDOFF1': array([2, 8], dtype=int64), 'dOFF_patch_1': 0.03311374690240642, 'nTOFF': 1, 'dOFF': 0.03311374690240642, 'SUCCESS': False}
10:08:27,259 root DEBUG 

=================== Experiment ID #32 	 Dual Point ID: 34 ===================
10:08:27,269 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.033E-07|<1.000E-06)
10:08:27,269 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:27,617 root DEBUG Side: ON	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.644E-02 	 Total distance: 9.644E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([4], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:08:27,946 root DEBUG Side: OFF	 Angle(dx0, dx): 0.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.177E-01 	 Total distance: 2.177E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([132], dtype=int64), array([[False]])]] 	 class: [1 9]
10:08:28,139 root DEBUG Side: OFF	 Angle(dx0, dx): 0.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.060E-02 	 Total distance: 3.083E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([35], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:08:28,139 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:28,139 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 52.35 	 cIDON = [0 9], cIDOFF = [1 9]
10:08:28,139 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:28,139 root DEBUG dOFF/dON = 3.2
10:08:28,140 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 72.81272063734639, 'dON1': 0.09643638462089452, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.09643638462089452, 'nTON': 1, 'dON': 0.09643638462089452, 'dxOFFAngle': 83.72381108232018, 'dOFF1': 0.30830229414848775, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.30830229414848775, 'nTOFF': 1, 'dOFF': 0.30830229414848775, 'SUCCESS': True}
10:08:28,150 root DEBUG 

=================== Experiment ID #33 	 Dual Point ID: 35 ===================
10:08:28,158 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.432E-08|<1.000E-06)
10:08:28,158 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:28,426 root DEBUG Side: ON	 Angle(dx0, dx): 0.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.058E-02 	 Total distance: 3.058E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([228], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:08:28,782 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.491E-01 	 Total distance: 1.491E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([27], dtype=int64), array([[False]])]] 	 class: [5 9]
10:08:29,2 root DEBUG Side: OFF	 Angle(dx0, dx): 1.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.740E-01 	 Total distance: 3.230E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([48], dtype=int64), array([[False]])]] 	 class: [5 9]
10:08:29,2 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:29,2 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 82.70 	 cIDON = [5 9], cIDOFF = [5 9]
10:08:29,2 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:29,2 root DEBUG dOFF/dON = 10.6
10:08:29,2 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.28881346844202, 'dON1': 0.03058110582981389, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.03058110582981389, 'nTON': 1, 'dON': 0.03058110582981389, 'dxOFFAngle': 88.71919518061962, 'dOFF1': 0.32301927568072963, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.32301927568072963, 'nTOFF': 1, 'dOFF': 0.32301927568072963, 'SUCCESS': True}
10:08:29,9 root DEBUG 

=================== Experiment ID #34 	 Dual Point ID: 36 ===================
10:08:29,17 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.861E-07|<1.000E-06)
10:08:29,18 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:29,302 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.153E-01 	 Total distance: 1.153E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([23], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:29,483 root DEBUG Side: ON	 Angle(dx0, dx): 3.89 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.589E-03 	 Total distance: 1.229E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([166], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:29,835 root DEBUG Side: OFF	 Angle(dx0, dx): 4.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.993E-03 	 Total distance: 7.993E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([54], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:29,836 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:29,836 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -87.78 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:29,836 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:29,836 root DEBUG dOFF/dON = 0.1
10:08:29,837 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.87644448282215, 'dON1': 0.1228793393072441, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.1228793393072441, 'nTON': 1, 'dON': 0.1228793393072441, 'dxOFFAngle': 86.18163283803453, 'dOFF1': 0.007993190046556018, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.007993190046556018, 'nTOFF': 1, 'dOFF': 0.007993190046556018, 'SUCCESS': False}
10:08:29,847 root DEBUG 

=================== Experiment ID #35 	 Dual Point ID: 37 ===================
10:08:29,860 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.971E-08|<1.000E-06)
10:08:29,860 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:30,181 root DEBUG Side: ON	 Angle(dx0, dx): 0.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.774E-03 	 Total distance: 8.774E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([179], dtype=int64), array([[False]])]] 	 class: [4 8]
10:08:30,491 root DEBUG Side: OFF	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.066E-02 	 Total distance: 3.066E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([1], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:08:30,492 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:30,492 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 55.50 	 cIDON = [4 8], cIDOFF = [4 8]
10:08:30,492 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:30,492 root DEBUG dOFF/dON = 3.5
10:08:30,492 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.27166974640087, 'dON1': 0.008773837947192824, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.008773837947192824, 'nTON': 1, 'dON': 0.008773837947192824, 'dxOFFAngle': 89.20589129681889, 'dOFF1': 0.030660291017584454, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.030660291017584454, 'nTOFF': 1, 'dOFF': 0.030660291017584454, 'SUCCESS': True}
10:08:30,503 root DEBUG 

=================== Experiment ID #36 	 Dual Point ID: 38 ===================
10:08:30,512 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.532E-07|<1.000E-06)
10:08:30,512 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:30,832 root DEBUG Side: ON	 Angle(dx0, dx): 25.99 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.837E-02 	 Total distance: 2.837E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 4], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:08:31,166 root DEBUG Side: OFF	 Angle(dx0, dx): 0.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.270E-02 	 Total distance: 6.270E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([45], dtype=int64), array([[False]])]] 	 class: [4 8]
10:08:31,167 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:31,167 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 37.70 	 cIDON = [4 8], cIDOFF = [4 8]
10:08:31,167 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:31,167 root DEBUG dOFF/dON = 2.2
10:08:31,168 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.35662325493684, 'dON1': 0.02836644348507136, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.02836644348507136, 'nTON': 1, 'dON': 0.02836644348507136, 'dxOFFAngle': 85.57582146800029, 'dOFF1': 0.06270460760292847, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.06270460760292847, 'nTOFF': 1, 'dOFF': 0.06270460760292847, 'SUCCESS': True}
10:08:31,178 root DEBUG 

=================== Experiment ID #37 	 Dual Point ID: 39 ===================
10:08:31,188 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.453E-07|<1.000E-06)
10:08:31,189 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:31,460 root DEBUG Side: ON	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.618E-01 	 Total distance: 1.618E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([41], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:31,650 root DEBUG Side: ON	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.640E-02 	 Total distance: 1.782E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([119], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:31,913 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.695E-01 	 Total distance: 4.477E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([224], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:32,110 root DEBUG Side: ON	 Angle(dx0, dx): 1.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.074E-02 	 Total distance: 4.884E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([2], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:32,467 root DEBUG Side: OFF	 Angle(dx0, dx): 1.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.337E-01 	 Total distance: 2.337E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([79], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:32,467 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:32,467 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -35.27 	 cIDON = [3 7], cIDOFF = [3 7]
10:08:32,467 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:32,467 root DEBUG dOFF/dON = 0.5
10:08:32,467 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.44781997723112, 'dON1': 0.48844116023647016, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.48844116023647016, 'nTON': 1, 'dON': 0.48844116023647016, 'dxOFFAngle': 88.29818470851541, 'dOFF1': 0.23371789929782216, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.23371789929782216, 'nTOFF': 1, 'dOFF': 0.23371789929782216, 'SUCCESS': False}
10:08:32,474 root DEBUG 

=================== Experiment ID #38 	 Dual Point ID: 40 ===================
10:08:32,484 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.905E-08|<1.000E-06)
10:08:32,484 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:32,861 root DEBUG Side: ON	 Angle(dx0, dx): 3.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.765E-03 	 Total distance: 2.765E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([121], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:08:33,152 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.644E-02 	 Total distance: 4.644E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([153], dtype=int64), array([[False]])]] 	 class: [2 3]
10:08:33,152 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:33,153 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 88.76 	 cIDON = [2 3], cIDOFF = [2 3]
10:08:33,153 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:33,153 root DEBUG dOFF/dON = 16.8
10:08:33,153 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.72068078971913, 'dON1': 0.002764779998035756, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.002764779998035756, 'nTON': 1, 'dON': 0.002764779998035756, 'dxOFFAngle': 88.53497746129607, 'dOFF1': 0.04643864919080214, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.04643864919080214, 'nTOFF': 1, 'dOFF': 0.04643864919080214, 'SUCCESS': True}
10:08:33,159 root DEBUG 

=================== Experiment ID #39 	 Dual Point ID: 41 ===================
10:08:33,166 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.821E-08|<1.000E-06)
10:08:33,166 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:33,465 root DEBUG Side: ON	 Angle(dx0, dx): 0.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.274E-02 	 Total distance: 9.274E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([212], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:33,730 root DEBUG Side: OFF	 Angle(dx0, dx): 0.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.799E-02 	 Total distance: 1.799E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([19], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:33,730 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:33,730 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -67.51 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:33,731 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:33,731 root DEBUG dOFF/dON = 0.2
10:08:33,731 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.43391411820082, 'dON1': 0.09274162420257377, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.09274162420257377, 'nTON': 1, 'dON': 0.09274162420257377, 'dxOFFAngle': 88.05034686121701, 'dOFF1': 0.017989640788571317, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.017989640788571317, 'nTOFF': 1, 'dOFF': 0.017989640788571317, 'SUCCESS': False}
10:08:33,744 root DEBUG 

=================== Experiment ID #40 	 Dual Point ID: 42 ===================
10:08:33,755 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.266E-07|<1.000E-06)
10:08:33,755 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:34,68 root DEBUG Side: ON	 Angle(dx0, dx): 1.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.371E-02 	 Total distance: 4.371E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([59], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:34,379 root DEBUG Side: OFF	 Angle(dx0, dx): 2.97 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.952E-03 	 Total distance: 4.952E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([8], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:34,379 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:34,379 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -79.65 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:34,380 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:34,380 root DEBUG dOFF/dON = 0.1
10:08:34,380 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.97843773615715, 'dON1': 0.043714760840313706, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.043714760840313706, 'nTON': 1, 'dON': 0.043714760840313706, 'dxOFFAngle': 87.82631552410615, 'dOFF1': 0.004951676762265783, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.004951676762265783, 'nTOFF': 1, 'dOFF': 0.004951676762265783, 'SUCCESS': False}
10:08:34,387 root DEBUG 

=================== Experiment ID #41 	 Dual Point ID: 43 ===================
10:08:34,399 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.406E-08|<1.000E-06)
10:08:34,399 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:34,645 root DEBUG Side: ON	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.543E-02 	 Total distance: 1.543E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([211], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:34,822 root DEBUG Side: ON	 Angle(dx0, dx): 0.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.640E-03 	 Total distance: 1.707E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([25], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:35,115 root DEBUG Side: OFF	 Angle(dx0, dx): 1.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.319E-02 	 Total distance: 6.319E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([149], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:35,115 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:35,115 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 57.47 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:35,115 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:35,115 root DEBUG dOFF/dON = 3.7
10:08:35,115 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.82210121162089, 'dON1': 0.017065804234915667, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.017065804234915667, 'nTON': 1, 'dON': 0.017065804234915667, 'dxOFFAngle': 85.39456539735963, 'dOFF1': 0.06318991936761796, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.06318991936761796, 'nTOFF': 1, 'dOFF': 0.06318991936761796, 'SUCCESS': True}
10:08:35,128 root DEBUG 

=================== Experiment ID #42 	 Dual Point ID: 44 ===================
10:08:35,138 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.072E-07|<1.000E-06)
10:08:35,138 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:35,382 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.934E-02 	 Total distance: 1.934E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([32], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:08:35,656 root DEBUG Side: OFF	 Angle(dx0, dx): 1.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.269E-01 	 Total distance: 3.269E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([23], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:08:35,656 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:35,657 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 88.83 	 cIDON = [3 9], cIDOFF = [3 9]
10:08:35,657 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:35,657 root DEBUG dOFF/dON = 16.9
10:08:35,657 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.47855338852882, 'dON1': 0.019342362314214625, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.019342362314214625, 'nTON': 1, 'dON': 0.019342362314214625, 'dxOFFAngle': 88.1376710190939, 'dOFF1': 0.3269377921742757, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.3269377921742757, 'nTOFF': 1, 'dOFF': 0.3269377921742757, 'SUCCESS': True}
10:08:35,662 root DEBUG 

=================== Experiment ID #43 	 Dual Point ID: 45 ===================
10:08:35,670 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.257E-08|<1.000E-06)
10:08:35,670 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:36,37 root DEBUG Side: ON	 Angle(dx0, dx): 1.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.261E-03 	 Total distance: 3.261E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([3], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:36,326 root DEBUG Side: OFF	 Angle(dx0, dx): 1.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.499E-02 	 Total distance: 4.499E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([179], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:36,326 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:36,327 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 86.48 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:36,327 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:36,327 root DEBUG dOFF/dON = 13.8
10:08:36,327 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.1098184266101, 'dON1': 0.0032612036469408206, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.0032612036469408206, 'nTON': 1, 'dON': 0.0032612036469408206, 'dxOFFAngle': 87.59253707196086, 'dOFF1': 0.044989154608008015, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.044989154608008015, 'nTOFF': 1, 'dOFF': 0.044989154608008015, 'SUCCESS': True}
10:08:36,337 root DEBUG 

=================== Experiment ID #44 	 Dual Point ID: 46 ===================
10:08:36,347 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.096E-07|<1.000E-06)
10:08:36,348 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:36,587 root DEBUG Side: ON	 Angle(dx0, dx): 1.85 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.333E-02 	 Total distance: 8.333E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([134], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:08:36,846 root DEBUG Side: OFF	 Angle(dx0, dx): 1.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.954E-02 	 Total distance: 5.954E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([176], dtype=int64), array([[False]])]] 	 class: [4 6]
10:08:36,846 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:36,846 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -16.65 	 cIDON = [4 6], cIDOFF = [4 6]
10:08:36,846 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:36,846 root DEBUG dOFF/dON = 0.7
10:08:36,846 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.51816423700645, 'dON1': 0.08332767070025945, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.08332767070025945, 'nTON': 1, 'dON': 0.08332767070025945, 'dxOFFAngle': 84.84377859282577, 'dOFF1': 0.059537627847536634, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.059537627847536634, 'nTOFF': 1, 'dOFF': 0.059537627847536634, 'SUCCESS': False}
10:08:36,852 root DEBUG 

=================== Experiment ID #45 	 Dual Point ID: 47 ===================
10:08:36,860 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.808E-08|<1.000E-06)
10:08:36,860 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:37,98 root DEBUG Side: ON	 Angle(dx0, dx): 0.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.420E-01 	 Total distance: 1.420E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([166], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:08:37,422 root DEBUG Side: OFF	 Angle(dx0, dx): 1.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.079E-02 	 Total distance: 7.079E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([101], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:08:37,679 root DEBUG Side: OFF	 Angle(dx0, dx): 4.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.587E-03 	 Total distance: 7.838E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([35], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:08:37,680 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:37,680 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -28.86 	 cIDON = [2 8], cIDOFF = [2 8]
10:08:37,680 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:37,680 root DEBUG dOFF/dON = 0.6
10:08:37,680 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.47905603834133, 'dON1': 0.14197822100047625, 'cIDON1': array([2, 8], dtype=int64), 'dON_patch_1': 0.14197822100047625, 'nTON': 1, 'dON': 0.14197822100047625, 'dxOFFAngle': 88.86146897997746, 'dOFF1': 0.07837867848078181, 'cIDOFF1': array([2, 8], dtype=int64), 'dOFF_patch_1': 0.07837867848078181, 'nTOFF': 1, 'dOFF': 0.07837867848078181, 'SUCCESS': False}
10:08:37,692 root DEBUG 

=================== Experiment ID #46 	 Dual Point ID: 48 ===================
10:08:37,703 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.904E-08|<1.000E-06)
10:08:37,704 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:37,965 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.273E-03 	 Total distance: 1.273E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([56], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:38,212 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.893E-03 	 Total distance: 1.893E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([135], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:38,406 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.354E-03 	 Total distance: 3.247E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([56], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:38,407 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:38,407 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 43.66 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:38,407 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:38,407 root DEBUG dOFF/dON = 2.5
10:08:38,407 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.30313330401205, 'dON1': 0.0012734279221368124, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.0012734279221368124, 'nTON': 1, 'dON': 0.0012734279221368124, 'dxOFFAngle': 89.10567208596441, 'dOFF1': 0.003246969888988025, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.003246969888988025, 'nTOFF': 1, 'dOFF': 0.003246969888988025, 'SUCCESS': True}
10:08:38,418 root DEBUG 

=================== Experiment ID #47 	 Dual Point ID: 49 ===================
10:08:38,428 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.406E-07|<1.000E-06)
10:08:38,429 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:38,780 root DEBUG Side: ON	 Angle(dx0, dx): 1.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.266E-01 	 Total distance: 1.266E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([114], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:39,83 root DEBUG Side: OFF	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.546E-01 	 Total distance: 1.546E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([4], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:39,83 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:39,83 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 9.94 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:39,83 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:39,84 root DEBUG dOFF/dON = 1.2
10:08:39,84 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.58750081635704, 'dON1': 0.12660983818820323, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.12660983818820323, 'nTON': 1, 'dON': 0.12660983818820323, 'dxOFFAngle': 81.28993490629593, 'dOFF1': 0.15455833071888064, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.15455833071888064, 'nTOFF': 1, 'dOFF': 0.15455833071888064, 'SUCCESS': True}
10:08:39,94 root DEBUG 

=================== Experiment ID #48 	 Dual Point ID: 50 ===================
10:08:39,103 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.063E-08|<1.000E-06)
10:08:39,104 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:39,374 root DEBUG Side: ON	 Angle(dx0, dx): 2.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.391E-02 	 Total distance: 3.391E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([30], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:08:39,683 root DEBUG Side: OFF	 Angle(dx0, dx): 2.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.410E-01 	 Total distance: 2.410E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([1], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:08:39,683 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:39,683 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 75.33 	 cIDON = [1 8], cIDOFF = [0 8]
10:08:39,684 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:39,684 root DEBUG dOFF/dON = 7.1
10:08:39,684 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.01185154223131, 'dON1': 0.0339103881872884, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 0.0339103881872884, 'nTON': 1, 'dON': 0.0339103881872884, 'dxOFFAngle': 82.13694663644662, 'dOFF1': 0.24099981335658827, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.24099981335658827, 'nTOFF': 1, 'dOFF': 0.24099981335658827, 'SUCCESS': True}
10:08:39,693 root DEBUG 

=================== Experiment ID #49 	 Dual Point ID: 51 ===================
10:08:39,704 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.188E-08|<1.000E-06)
10:08:39,704 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:40,50 root DEBUG Side: ON	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.120E-02 	 Total distance: 1.120E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([23], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:08:40,323 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.819E-02 	 Total distance: 1.819E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([23], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:08:40,324 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:40,324 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 23.77 	 cIDON = [6 9], cIDOFF = [6 9]
10:08:40,324 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:40,324 root DEBUG dOFF/dON = 1.6
10:08:40,324 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.46988755303629, 'dON1': 0.01120231447953558, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.01120231447953558, 'nTON': 1, 'dON': 0.01120231447953558, 'dxOFFAngle': 81.37572127678582, 'dOFF1': 0.018189028028358256, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.018189028028358256, 'nTOFF': 1, 'dOFF': 0.018189028028358256, 'SUCCESS': True}
10:08:40,333 root DEBUG 

=================== Experiment ID #50 	 Dual Point ID: 52 ===================
10:08:40,341 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.522E-08|<1.000E-06)
10:08:40,341 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:40,626 root DEBUG Side: ON	 Angle(dx0, dx): 4.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.482E-01 	 Total distance: 2.482E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([197], dtype=int64), array([[False]])]] 	 class: [2 4]
10:08:40,953 root DEBUG Side: OFF	 Angle(dx0, dx): 0.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.103E-02 	 Total distance: 9.103E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([149], dtype=int64), array([[False]])]] 	 class: [2 4]
10:08:40,953 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:40,953 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -46.34 	 cIDON = [2 4], cIDOFF = [2 4]
10:08:40,953 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:40,953 root DEBUG dOFF/dON = 0.4
10:08:40,953 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 79.86008049144004, 'dON1': 0.24822860890846488, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.24822860890846488, 'nTON': 1, 'dON': 0.24822860890846488, 'dxOFFAngle': 78.20993845202145, 'dOFF1': 0.09102502507292629, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.09102502507292629, 'nTOFF': 1, 'dOFF': 0.09102502507292629, 'SUCCESS': False}
10:08:40,967 root DEBUG 

=================== Experiment ID #51 	 Dual Point ID: 53 ===================
10:08:40,977 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.744E-08|<1.000E-06)
10:08:40,977 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:41,289 root DEBUG Side: ON	 Angle(dx0, dx): 3.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.805E-04 	 Total distance: 2.805E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([149], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:41,607 root DEBUG Side: OFF	 Angle(dx0, dx): 1.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.985E-01 	 Total distance: 1.985E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([38], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:41,607 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:41,607 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.72 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:41,607 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:41,607 root DEBUG dOFF/dON = 707.7
10:08:41,607 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.47682808266205, 'dON1': 0.00028052574326529334, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.00028052574326529334, 'nTON': 1, 'dON': 0.00028052574326529334, 'dxOFFAngle': 89.79832905072494, 'dOFF1': 0.19853869217065168, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.19853869217065168, 'nTOFF': 1, 'dOFF': 0.19853869217065168, 'SUCCESS': True}
10:08:41,613 root DEBUG 

=================== Experiment ID #52 	 Dual Point ID: 54 ===================
10:08:41,623 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.267E-07|<1.000E-06)
10:08:41,623 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:41,894 root DEBUG Side: ON	 Angle(dx0, dx): 2.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.575E-02 	 Total distance: 4.575E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([28], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:42,315 root DEBUG Side: OFF	 Angle(dx0, dx): 15.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.891E-02 	 Total distance: 6.891E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([5, 7], dtype=int64), array([[0.],
       [1.]])]] 	 class: [3 7]
10:08:42,315 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:42,315 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 20.20 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:42,315 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:42,315 root DEBUG dOFF/dON = 1.5
10:08:42,315 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 75.7678960428267, 'dON1': 0.04574823338097947, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.04574823338097947, 'nTON': 1, 'dON': 0.04574823338097947, 'dxOFFAngle': 77.93757134671635, 'dOFF1': 0.06891369061116322, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.06891369061116322, 'nTOFF': 1, 'dOFF': 0.06891369061116322, 'SUCCESS': True}
10:08:42,324 root DEBUG 

=================== Experiment ID #53 	 Dual Point ID: 55 ===================
10:08:42,339 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.258E-08|<1.000E-06)
10:08:42,339 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:42,799 root DEBUG Side: ON	 Angle(dx0, dx): 2.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.918E-01 	 Total distance: 2.918E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([68], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:43,102 root DEBUG Side: OFF	 Angle(dx0, dx): 1.60 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.385E-01 	 Total distance: 2.385E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([112], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:43,102 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:43,102 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -10.04 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:43,102 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:43,103 root DEBUG dOFF/dON = 0.8
10:08:43,103 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.44201174322667, 'dON1': 0.29176364002392524, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.29176364002392524, 'nTON': 1, 'dON': 0.29176364002392524, 'dxOFFAngle': 86.55679562829677, 'dOFF1': 0.2385391887626222, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.2385391887626222, 'nTOFF': 1, 'dOFF': 0.2385391887626222, 'SUCCESS': False}
10:08:43,119 root DEBUG 

=================== Experiment ID #54 	 Dual Point ID: 56 ===================
10:08:43,132 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.488E-09|<1.000E-06)
10:08:43,132 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:43,446 root DEBUG Side: ON	 Angle(dx0, dx): 2.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.137E-02 	 Total distance: 3.137E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([49], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:08:43,690 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.922E-02 	 Total distance: 5.922E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([132], dtype=int64), array([[False]])]] 	 class: [2 5]
10:08:43,691 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:43,691 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 30.74 	 cIDON = [2 5], cIDOFF = [2 5]
10:08:43,691 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:43,691 root DEBUG dOFF/dON = 1.9
10:08:43,691 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.25128278484817, 'dON1': 0.03137185013844847, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.03137185013844847, 'nTON': 1, 'dON': 0.03137185013844847, 'dxOFFAngle': 85.81233829292783, 'dOFF1': 0.059219013206834425, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.059219013206834425, 'nTOFF': 1, 'dOFF': 0.059219013206834425, 'SUCCESS': True}
10:08:43,697 root DEBUG 

=================== Experiment ID #55 	 Dual Point ID: 57 ===================
10:08:43,706 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.188E-08|<1.000E-06)
10:08:43,707 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:43,954 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.754E-03 	 Total distance: 9.754E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([20], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:44,159 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.879E-02 	 Total distance: 2.879E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([143], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:44,321 root DEBUG Side: OFF	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.843E-01 	 Total distance: 2.131E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([163], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:44,321 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:44,321 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 91.25 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:44,321 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:44,321 root DEBUG dOFF/dON = 21.8
10:08:44,321 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.24920523508278, 'dON1': 0.009753721290176718, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.009753721290176718, 'nTON': 1, 'dON': 0.009753721290176718, 'dxOFFAngle': 86.53752408931105, 'dOFF1': 0.21309560936442926, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.21309560936442926, 'nTOFF': 1, 'dOFF': 0.21309560936442926, 'SUCCESS': True}
10:08:44,329 root DEBUG 

=================== Experiment ID #56 	 Dual Point ID: 58 ===================
10:08:44,339 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.326E-08|<1.000E-06)
10:08:44,339 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:44,657 root DEBUG Side: ON	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.277E-02 	 Total distance: 5.277E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([97], dtype=int64), array([[False]])]] 	 class: [0 4]
10:08:44,885 root DEBUG Side: ON	 Angle(dx0, dx): 8.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.500E-01 	 Total distance: 2.027E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([8], dtype=int64), array([[ True]])]] 	 class: [0 4]
10:08:45,187 root DEBUG Side: OFF	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.335E-02 	 Total distance: 3.335E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([138], dtype=int64), array([[ True]])]] 	 class: [0 4]
10:08:45,187 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:45,187 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -71.75 	 cIDON = [0 4], cIDOFF = [0 4]
10:08:45,187 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:45,187 root DEBUG dOFF/dON = 0.2
10:08:45,187 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.57653874509447, 'dON1': 0.20274470678647805, 'cIDON1': array([0, 4], dtype=int64), 'dON_patch_1': 0.20274470678647805, 'nTON': 1, 'dON': 0.20274470678647805, 'dxOFFAngle': 87.34918489050328, 'dOFF1': 0.033347375296217195, 'cIDOFF1': array([0, 4], dtype=int64), 'dOFF_patch_1': 0.033347375296217195, 'nTOFF': 1, 'dOFF': 0.033347375296217195, 'SUCCESS': False}
10:08:45,198 root DEBUG 

=================== Experiment ID #57 	 Dual Point ID: 59 ===================
10:08:45,209 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.109E-07|<1.000E-06)
10:08:45,210 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:45,506 root DEBUG Side: ON	 Angle(dx0, dx): 0.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.669E-02 	 Total distance: 4.669E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([49], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:08:45,835 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.620E-02 	 Total distance: 6.620E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([114], dtype=int64), array([[False]])]] 	 class: [4 8]
10:08:46,7 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.772E-01 	 Total distance: 2.434E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([24], dtype=int64), array([[False]])]] 	 class: [4 8]
10:08:46,7 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:46,8 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 67.81 	 cIDON = [4 8], cIDOFF = [4 8]
10:08:46,8 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:46,8 root DEBUG dOFF/dON = 5.2
10:08:46,8 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.5954752917473, 'dON1': 0.04668629667873334, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.04668629667873334, 'nTON': 1, 'dON': 0.04668629667873334, 'dxOFFAngle': 82.69263553381313, 'dOFF1': 0.24336481423189826, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.24336481423189826, 'nTOFF': 1, 'dOFF': 0.24336481423189826, 'SUCCESS': True}
10:08:46,18 root DEBUG 

=================== Experiment ID #58 	 Dual Point ID: 60 ===================
10:08:46,27 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.204E-07|<1.000E-06)
10:08:46,28 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:46,302 root DEBUG Side: ON	 Angle(dx0, dx): 3.93 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.290E-02 	 Total distance: 6.290E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([178], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:46,562 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.099E-01 	 Total distance: 1.099E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([226], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:46,808 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.577E-02 	 Total distance: 1.257E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([32], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:46,808 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:46,809 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 33.31 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:46,809 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:46,809 root DEBUG dOFF/dON = 2.0
10:08:46,809 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.5396544040654, 'dON1': 0.06289555244543114, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.06289555244543114, 'nTON': 1, 'dON': 0.06289555244543114, 'dxOFFAngle': 87.46440737042305, 'dOFF1': 0.1257181241683237, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.1257181241683237, 'nTOFF': 1, 'dOFF': 0.1257181241683237, 'SUCCESS': True}
10:08:46,815 root DEBUG 

=================== Experiment ID #59 	 Dual Point ID: 61 ===================
10:08:46,822 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.473E-08|<1.000E-06)
10:08:46,822 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:47,181 root DEBUG Side: ON	 Angle(dx0, dx): 2.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.145E-01 	 Total distance: 1.145E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([65], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:47,467 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.022E-01 	 Total distance: 1.022E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([82], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:47,674 root DEBUG Side: OFF	 Angle(dx0, dx): 1.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.388E-01 	 Total distance: 2.410E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([51], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:47,674 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:47,674 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 35.60 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:47,674 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:47,674 root DEBUG dOFF/dON = 2.1
10:08:47,674 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.60646874819156, 'dON1': 0.11446579276773897, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.11446579276773897, 'nTON': 1, 'dON': 0.11446579276773897, 'dxOFFAngle': 87.44465938595938, 'dOFF1': 0.24101604222806233, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.24101604222806233, 'nTOFF': 1, 'dOFF': 0.24101604222806233, 'SUCCESS': True}
10:08:47,687 root DEBUG 

=================== Experiment ID #60 	 Dual Point ID: 62 ===================
10:08:47,700 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.796E-08|<1.000E-06)
10:08:47,700 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:47,973 root DEBUG Side: ON	 Angle(dx0, dx): 2.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.398E-02 	 Total distance: 5.398E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([40], dtype=int64), array([[False]])]] 	 class: [4 8]
10:08:48,254 root DEBUG Side: OFF	 Angle(dx0, dx): 1.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.700E-02 	 Total distance: 1.700E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([25], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:08:48,255 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:48,255 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -52.10 	 cIDON = [4 8], cIDOFF = [4 8]
10:08:48,255 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:48,255 root DEBUG dOFF/dON = 0.3
10:08:48,255 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.9152118666606, 'dON1': 0.0539784451379059, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.0539784451379059, 'nTON': 1, 'dON': 0.0539784451379059, 'dxOFFAngle': 86.78284499306476, 'dOFF1': 0.01699736317079381, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.01699736317079381, 'nTOFF': 1, 'dOFF': 0.01699736317079381, 'SUCCESS': False}
10:08:48,262 root DEBUG 

=================== Experiment ID #61 	 Dual Point ID: 63 ===================
10:08:48,269 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.813E-08|<1.000E-06)
10:08:48,270 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:48,535 root DEBUG Side: ON	 Angle(dx0, dx): 1.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.047E-01 	 Total distance: 1.047E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([213], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:48,792 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.341E-02 	 Total distance: 3.341E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([137], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:48,979 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.144E-02 	 Total distance: 5.485E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([115], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:49,201 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.511E-02 	 Total distance: 6.996E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([235], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:49,201 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:49,202 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -19.89 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:49,202 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:49,202 root DEBUG dOFF/dON = 0.7
10:08:49,202 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 73.30090504561977, 'dON1': 0.10470013690949968, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.10470013690949968, 'nTON': 1, 'dON': 0.10470013690949968, 'dxOFFAngle': 89.16636253564513, 'dOFF1': 0.06996015202507883, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.06996015202507883, 'nTOFF': 1, 'dOFF': 0.06996015202507883, 'SUCCESS': False}
10:08:49,209 root DEBUG 

=================== Experiment ID #62 	 Dual Point ID: 64 ===================
10:08:49,219 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.025E-07|<1.000E-06)
10:08:49,219 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:49,598 root DEBUG Side: ON	 Angle(dx0, dx): 0.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.083E-01 	 Total distance: 1.083E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([26], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:08:50,2 root DEBUG Side: OFF	 Angle(dx0, dx): 1.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.455E-02 	 Total distance: 9.455E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([244], dtype=int64), array([[False]])]] 	 class: [6 9]
10:08:50,2 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:50,3 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -6.79 	 cIDON = [6 9], cIDOFF = [6 9]
10:08:50,3 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:50,3 root DEBUG dOFF/dON = 0.9
10:08:50,3 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 76.48797520812731, 'dON1': 0.10832128718729718, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.10832128718729718, 'nTON': 1, 'dON': 0.10832128718729718, 'dxOFFAngle': 81.09163201828235, 'dOFF1': 0.09454586750130611, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.09454586750130611, 'nTOFF': 1, 'dOFF': 0.09454586750130611, 'SUCCESS': False}
10:08:50,14 root DEBUG 

=================== Experiment ID #63 	 Dual Point ID: 65 ===================
10:08:50,24 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.732E-07|<1.000E-06)
10:08:50,24 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:50,272 root DEBUG Side: ON	 Angle(dx0, dx): 24.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.456E-06 	 Total distance: 1.456E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 2]
10:08:50,554 root DEBUG Side: OFF	 Angle(dx0, dx): 0.88 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.834E-01 	 Total distance: 1.834E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([205], dtype=int64), array([[False]])]] 	 class: [0 2]
10:08:50,554 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:50,555 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [1 2], cIDOFF = [0 2]
10:08:50,555 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:50,555 root DEBUG dOFF/dON = 125971.6
10:08:50,555 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 71.23867171547818, 'dON1': 1.4562567317280026e-06, 'cIDON1': array([1, 2], dtype=int64), 'dON_patch_1': 1.4562567317280026e-06, 'nTON': 1, 'dON': 1.4562567317280026e-06, 'dxOFFAngle': 80.22745856021868, 'dOFF1': 0.18344699534673228, 'cIDOFF1': array([0, 2], dtype=int64), 'dOFF_patch_1': 0.18344699534673228, 'nTOFF': 1, 'dOFF': 0.18344699534673228, 'SUCCESS': True}
10:08:50,568 root DEBUG 

=================== Experiment ID #64 	 Dual Point ID: 66 ===================
10:08:50,576 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.251E-08|<1.000E-06)
10:08:50,576 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:50,785 root DEBUG Side: ON	 Angle(dx0, dx): 2.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.392E-03 	 Total distance: 5.392E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([227], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:51,81 root DEBUG Side: OFF	 Angle(dx0, dx): 2.83 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.096E-02 	 Total distance: 2.096E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([64], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:51,81 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:51,81 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 59.07 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:51,81 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:51,81 root DEBUG dOFF/dON = 3.9
10:08:51,81 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.0663550442309, 'dON1': 0.005391556294016563, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.005391556294016563, 'nTON': 1, 'dON': 0.005391556294016563, 'dxOFFAngle': 83.62974665349537, 'dOFF1': 0.020956698858459077, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.020956698858459077, 'nTOFF': 1, 'dOFF': 0.020956698858459077, 'SUCCESS': True}
10:08:51,89 root DEBUG 

=================== Experiment ID #65 	 Dual Point ID: 67 ===================
10:08:51,99 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.131E-08|<1.000E-06)
10:08:51,99 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:51,407 root DEBUG Side: ON	 Angle(dx0, dx): 14.89 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.129E-02 	 Total distance: 1.129E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([4, 6], dtype=int64), array([[1.],
       [0.]])]] 	 class: [2 4]
10:08:51,754 root DEBUG Side: OFF	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.951E-02 	 Total distance: 2.951E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([11], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:08:51,754 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:51,755 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 44.66 	 cIDON = [2 6], cIDOFF = [2 6]
10:08:51,755 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:51,755 root DEBUG dOFF/dON = 2.6
10:08:51,755 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 77.10265785487252, 'dON1': 0.011291083064381098, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.011291083064381098, 'nTON': 1, 'dON': 0.011291083064381098, 'dxOFFAngle': 88.54734331982253, 'dOFF1': 0.029514087307808877, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.029514087307808877, 'nTOFF': 1, 'dOFF': 0.029514087307808877, 'SUCCESS': True}
10:08:51,763 root DEBUG 

=================== Experiment ID #66 	 Dual Point ID: 68 ===================
10:08:51,773 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.825E-08|<1.000E-06)
10:08:51,773 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:52,98 root DEBUG Side: ON	 Angle(dx0, dx): 2.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.588E-02 	 Total distance: 4.588E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([136], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:52,414 root DEBUG Side: OFF	 Angle(dx0, dx): 0.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.157E-02 	 Total distance: 7.157E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([247], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:52,415 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:52,415 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 21.88 	 cIDON = [3 7], cIDOFF = [3 7]
10:08:52,415 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:52,415 root DEBUG dOFF/dON = 1.6
10:08:52,415 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.82377263005183, 'dON1': 0.04587950144667149, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.04587950144667149, 'nTON': 1, 'dON': 0.04587950144667149, 'dxOFFAngle': 81.02240733235242, 'dOFF1': 0.0715748075000417, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.0715748075000417, 'nTOFF': 1, 'dOFF': 0.0715748075000417, 'SUCCESS': True}
10:08:52,427 root DEBUG 

=================== Experiment ID #67 	 Dual Point ID: 69 ===================
10:08:52,435 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.064E-07|<1.000E-06)
10:08:52,435 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:52,838 root DEBUG Side: ON	 Angle(dx0, dx): 3.99 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.663E-01 	 Total distance: 2.663E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([84], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:08:53,50 root DEBUG Side: OFF	 Angle(dx0, dx): 1.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.724E-07 	 Total distance: 1.724E-07 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 9]
10:08:53,220 root DEBUG Side: OFF	 Angle(dx0, dx): 1.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.724E-07 	 Total distance: 3.447E-07 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 9]
10:08:53,375 root DEBUG Side: OFF	 Angle(dx0, dx): 1.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.448E-07 	 Total distance: 6.895E-07 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 9]
10:08:53,386 root DEBUG Got stuck in too many past-layer relus.
10:08:53,386 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:08:53,386 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:08:53,388 root DEBUG 

=================== Experiment ID #67 	 Dual Point ID: 70 ===================
10:08:53,395 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.236E-07|<1.000E-06)
10:08:53,395 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:53,739 root DEBUG Side: ON	 Angle(dx0, dx): 0.73 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.469E-02 	 Total distance: 5.469E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([105], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:54,78 root DEBUG Side: OFF	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.939E-03 	 Total distance: 8.939E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([100], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:54,78 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:54,78 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -71.90 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:54,78 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:54,78 root DEBUG dOFF/dON = 0.2
10:08:54,78 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 70.07168994317522, 'dON1': 0.054692055713880174, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.054692055713880174, 'nTON': 1, 'dON': 0.054692055713880174, 'dxOFFAngle': 79.57815439507505, 'dOFF1': 0.008939218082372264, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.008939218082372264, 'nTOFF': 1, 'dOFF': 0.008939218082372264, 'SUCCESS': False}
10:08:54,86 root DEBUG 

=================== Experiment ID #68 	 Dual Point ID: 71 ===================
10:08:54,98 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.273E-09|<1.000E-06)
10:08:54,98 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:54,438 root DEBUG Side: ON	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.025E-03 	 Total distance: 6.025E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([31], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:08:54,774 root DEBUG Side: OFF	 Angle(dx0, dx): 0.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.150E-02 	 Total distance: 1.150E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([170], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:08:54,774 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:54,774 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 31.24 	 cIDON = [4 9], cIDOFF = [4 9]
10:08:54,775 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:54,775 root DEBUG dOFF/dON = 1.9
10:08:54,775 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.35928719958655, 'dON1': 0.00602470689697095, 'cIDON1': array([4, 9], dtype=int64), 'dON_patch_1': 0.00602470689697095, 'nTON': 1, 'dON': 0.00602470689697095, 'dxOFFAngle': 86.16090544218942, 'dOFF1': 0.011499471760187483, 'cIDOFF1': array([4, 9], dtype=int64), 'dOFF_patch_1': 0.011499471760187483, 'nTOFF': 1, 'dOFF': 0.011499471760187483, 'SUCCESS': True}
10:08:54,782 root DEBUG 

=================== Experiment ID #69 	 Dual Point ID: 72 ===================
10:08:54,792 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.542E-08|<1.000E-06)
10:08:54,792 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:55,143 root DEBUG Side: ON	 Angle(dx0, dx): 2.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.328E-02 	 Total distance: 6.328E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([65], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:08:55,401 root DEBUG Side: OFF	 Angle(dx0, dx): 2.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.304E-04 	 Total distance: 9.304E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([31], dtype=int64), array([[False]])]] 	 class: [4 6]
10:08:55,401 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:55,401 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -97.10 	 cIDON = [4 6], cIDOFF = [4 6]
10:08:55,401 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:55,401 root DEBUG dOFF/dON = 0.0
10:08:55,401 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.3557441537781, 'dON1': 0.06328129796599895, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.06328129796599895, 'nTON': 1, 'dON': 0.06328129796599895, 'dxOFFAngle': 84.34366596518996, 'dOFF1': 0.0009304488356263267, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.0009304488356263267, 'nTOFF': 1, 'dOFF': 0.0009304488356263267, 'SUCCESS': False}
10:08:55,411 root DEBUG 

=================== Experiment ID #70 	 Dual Point ID: 73 ===================
10:08:55,422 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.189E-08|<1.000E-06)
10:08:55,422 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:55,735 root DEBUG Side: ON	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.808E-02 	 Total distance: 2.808E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([4], dtype=int64), array([[ True]])]] 	 class: [1 3]
10:08:56,13 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.002E-02 	 Total distance: 1.002E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([27], dtype=int64), array([[False]])]] 	 class: [0 3]
10:08:56,250 root DEBUG Side: OFF	 Angle(dx0, dx): 1.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.635E-02 	 Total distance: 2.637E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([255], dtype=int64), array([[False]])]] 	 class: [0 3]
10:08:56,250 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:56,250 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -3.14 	 cIDON = [1 3], cIDOFF = [0 3]
10:08:56,251 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:56,251 root DEBUG dOFF/dON = 0.9
10:08:56,251 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.18484072005975, 'dON1': 0.02808340170177445, 'cIDON1': array([1, 3], dtype=int64), 'dON_patch_1': 0.02808340170177445, 'nTON': 1, 'dON': 0.02808340170177445, 'dxOFFAngle': 85.73118422011311, 'dOFF1': 0.026372778814585288, 'cIDOFF1': array([0, 3], dtype=int64), 'dOFF_patch_1': 0.026372778814585288, 'nTOFF': 1, 'dOFF': 0.026372778814585288, 'SUCCESS': False}
10:08:56,261 root DEBUG 

=================== Experiment ID #71 	 Dual Point ID: 74 ===================
10:08:56,272 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.130E-08|<1.000E-06)
10:08:56,273 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:56,639 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.817E-02 	 Total distance: 8.817E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([78], dtype=int64), array([[False]])]] 	 class: [4 9]
10:08:56,975 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.317E-01 	 Total distance: 1.317E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([149], dtype=int64), array([[False]])]] 	 class: [4 9]
10:08:56,975 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:56,975 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 19.79 	 cIDON = [4 9], cIDOFF = [4 9]
10:08:56,975 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:56,975 root DEBUG dOFF/dON = 1.5
10:08:56,975 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.34741966836808, 'dON1': 0.08816823894149581, 'cIDON1': array([4, 9], dtype=int64), 'dON_patch_1': 0.08816823894149581, 'nTON': 1, 'dON': 0.08816823894149581, 'dxOFFAngle': 85.99003159277092, 'dOFF1': 0.13167799310212674, 'cIDOFF1': array([4, 9], dtype=int64), 'dOFF_patch_1': 0.13167799310212674, 'nTOFF': 1, 'dOFF': 0.13167799310212674, 'SUCCESS': True}
10:08:56,981 root DEBUG 

=================== Experiment ID #72 	 Dual Point ID: 75 ===================
10:08:56,990 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.778E-08|<1.000E-06)
10:08:56,990 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:57,261 root DEBUG Side: ON	 Angle(dx0, dx): 0.98 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.369E-02 	 Total distance: 4.369E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([43], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:08:57,464 root DEBUG Side: ON	 Angle(dx0, dx): 2.96 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.285E-04 	 Total distance: 4.442E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([234], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:08:57,692 root DEBUG Side: ON	 Angle(dx0, dx): 1.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.663E-02 	 Total distance: 6.105E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([20], dtype=int64), array([[False]])]] 	 class: [0 8]
10:08:57,957 root DEBUG Side: OFF	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.926E-01 	 Total distance: 1.926E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([119], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:08:57,957 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:57,957 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 51.86 	 cIDON = [0 8], cIDOFF = [0 8]
10:08:57,957 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:57,957 root DEBUG dOFF/dON = 3.2
10:08:57,957 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.01837331875953, 'dON1': 0.06105091130692279, 'cIDON1': array([0, 8], dtype=int64), 'dON_patch_1': 0.06105091130692279, 'nTON': 1, 'dON': 0.06105091130692279, 'dxOFFAngle': 89.17129632912423, 'dOFF1': 0.1925773991412074, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.1925773991412074, 'nTOFF': 1, 'dOFF': 0.1925773991412074, 'SUCCESS': True}
10:08:57,963 root DEBUG 

=================== Experiment ID #73 	 Dual Point ID: 76 ===================
10:08:57,971 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.121E-07|<1.000E-06)
10:08:57,972 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:58,287 root DEBUG Side: ON	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.804E-02 	 Total distance: 8.804E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([7], dtype=int64), array([[False]])]] 	 class: [1 8]
10:08:58,630 root DEBUG Side: OFF	 Angle(dx0, dx): 1.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.082E-01 	 Total distance: 1.082E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([190], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:08:58,630 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:58,630 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 10.27 	 cIDON = [1 8], cIDOFF = [0 8]
10:08:58,630 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:58,630 root DEBUG dOFF/dON = 1.2
10:08:58,630 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 74.56616871787334, 'dON1': 0.08803943760634113, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 0.08803943760634113, 'nTON': 1, 'dON': 0.08803943760634113, 'dxOFFAngle': 85.78945684296278, 'dOFF1': 0.10818666228755593, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.10818666228755593, 'nTOFF': 1, 'dOFF': 0.10818666228755593, 'SUCCESS': True}
10:08:58,636 root DEBUG 

=================== Experiment ID #74 	 Dual Point ID: 77 ===================
10:08:58,643 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.233E-07|<1.000E-06)
10:08:58,643 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:58,942 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.073E-02 	 Total distance: 4.073E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([127], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:08:59,160 root DEBUG Side: ON	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.422E-02 	 Total distance: 1.349E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([185], dtype=int64), array([[False]])]] 	 class: [6 9]
10:08:59,362 root DEBUG Side: ON	 Angle(dx0, dx): 0.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.780E-02 	 Total distance: 1.628E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([44], dtype=int64), array([[False]])]] 	 class: [6 9]
10:08:59,649 root DEBUG Side: OFF	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.488E-02 	 Total distance: 4.488E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([166], dtype=int64), array([[False]])]] 	 class: [6 9]
10:08:59,649 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:59,650 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -56.77 	 cIDON = [6 9], cIDOFF = [6 9]
10:08:59,650 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:59,650 root DEBUG dOFF/dON = 0.3
10:08:59,650 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.71919279655837, 'dON1': 0.1627534314662024, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.1627534314662024, 'nTON': 1, 'dON': 0.1627534314662024, 'dxOFFAngle': 89.05733191511571, 'dOFF1': 0.044880370899958534, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.044880370899958534, 'nTOFF': 1, 'dOFF': 0.044880370899958534, 'SUCCESS': False}
10:08:59,656 root DEBUG 

=================== Experiment ID #75 	 Dual Point ID: 78 ===================
10:08:59,665 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.176E-07|<1.000E-06)
10:08:59,666 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:00,35 root DEBUG Side: ON	 Angle(dx0, dx): 0.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.969E-02 	 Total distance: 4.969E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([132], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:00,256 root DEBUG Side: OFF	 Angle(dx0, dx): 0.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.595E-02 	 Total distance: 2.595E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([119], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:00,256 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:00,256 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -31.38 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:00,256 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:00,256 root DEBUG dOFF/dON = 0.5
10:09:00,256 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.11657280306619, 'dON1': 0.04968562861461868, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.04968562861461868, 'nTON': 1, 'dON': 0.04968562861461868, 'dxOFFAngle': 88.75601332758343, 'dOFF1': 0.025951137496781806, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.025951137496781806, 'nTOFF': 1, 'dOFF': 0.025951137496781806, 'SUCCESS': False}
10:09:00,263 root DEBUG 

=================== Experiment ID #76 	 Dual Point ID: 79 ===================
10:09:00,272 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.390E-08|<1.000E-06)
10:09:00,273 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:00,558 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.037E-02 	 Total distance: 2.037E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([188], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:00,811 root DEBUG Side: OFF	 Angle(dx0, dx): 0.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.145E-02 	 Total distance: 3.145E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([206], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:00,812 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:00,812 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 21.38 	 cIDON = [2 6], cIDOFF = [2 6]
10:09:00,812 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:00,812 root DEBUG dOFF/dON = 1.5
10:09:00,812 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.8392309279857, 'dON1': 0.02037342197866438, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.02037342197866438, 'nTON': 1, 'dON': 0.02037342197866438, 'dxOFFAngle': 83.76812733206062, 'dOFF1': 0.0314533673621048, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.0314533673621048, 'nTOFF': 1, 'dOFF': 0.0314533673621048, 'SUCCESS': True}
10:09:00,831 root DEBUG 

=================== Experiment ID #77 	 Dual Point ID: 80 ===================
10:09:00,843 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.398E-07|<1.000E-06)
10:09:00,844 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:01,102 root DEBUG Side: ON	 Angle(dx0, dx): 2.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.765E-04 	 Total distance: 1.765E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([8], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:01,360 root DEBUG Side: OFF	 Angle(dx0, dx): 0.89 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.378E-02 	 Total distance: 5.378E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([197], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:01,361 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:01,361 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.35 	 cIDON = [5 7], cIDOFF = [5 7]
10:09:01,361 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:01,361 root DEBUG dOFF/dON = 304.7
10:09:01,361 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.85401202335018, 'dON1': 0.0001764887535680812, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.0001764887535680812, 'nTON': 1, 'dON': 0.0001764887535680812, 'dxOFFAngle': 81.58847587865918, 'dOFF1': 0.05377917471092627, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.05377917471092627, 'nTOFF': 1, 'dOFF': 0.05377917471092627, 'SUCCESS': True}
10:09:01,371 root DEBUG 

=================== Experiment ID #78 	 Dual Point ID: 81 ===================
10:09:01,381 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.403E-07|<1.000E-06)
10:09:01,382 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:01,686 root DEBUG Side: ON	 Angle(dx0, dx): 0.89 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.201E-02 	 Total distance: 2.201E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([69], dtype=int64), array([[False]])]] 	 class: [6 9]
10:09:02,44 root DEBUG Side: OFF	 Angle(dx0, dx): 0.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.186E-01 	 Total distance: 1.186E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([43], dtype=int64), array([[False]])]] 	 class: [6 9]
10:09:02,44 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:02,44 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 68.70 	 cIDON = [6 9], cIDOFF = [6 9]
10:09:02,44 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:02,45 root DEBUG dOFF/dON = 5.4
10:09:02,45 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.92136138249985, 'dON1': 0.022005384839197593, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.022005384839197593, 'nTON': 1, 'dON': 0.022005384839197593, 'dxOFFAngle': 86.46386750503449, 'dOFF1': 0.11859305358678016, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.11859305358678016, 'nTOFF': 1, 'dOFF': 0.11859305358678016, 'SUCCESS': True}
10:09:02,56 root DEBUG 

=================== Experiment ID #79 	 Dual Point ID: 82 ===================
10:09:02,67 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.201E-08|<1.000E-06)
10:09:02,68 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:02,328 root DEBUG Side: ON	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.505E-02 	 Total distance: 7.505E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([186], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:02,639 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.284E-02 	 Total distance: 5.284E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([35], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:02,639 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:02,639 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -17.37 	 cIDON = [5 7], cIDOFF = [5 7]
10:09:02,639 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:02,639 root DEBUG dOFF/dON = 0.7
10:09:02,639 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.12383514013348, 'dON1': 0.07505040174177005, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.07505040174177005, 'nTON': 1, 'dON': 0.07505040174177005, 'dxOFFAngle': 86.25743466336085, 'dOFF1': 0.05283556324816315, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.05283556324816315, 'nTOFF': 1, 'dOFF': 0.05283556324816315, 'SUCCESS': False}
10:09:02,646 root DEBUG 

=================== Experiment ID #80 	 Dual Point ID: 83 ===================
10:09:02,657 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.917E-07|<1.000E-06)
10:09:02,658 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:02,957 root DEBUG Side: ON	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.226E-02 	 Total distance: 2.226E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([161], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:03,203 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.261E-02 	 Total distance: 2.261E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([219], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:03,203 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:03,203 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 0.78 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:03,204 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:03,204 root DEBUG dOFF/dON = 1.0
10:09:03,204 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.35257721295804, 'dON1': 0.02226138334527996, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.02226138334527996, 'nTON': 1, 'dON': 0.02226138334527996, 'dxOFFAngle': 89.05185163352888, 'dOFF1': 0.022609846432898924, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.022609846432898924, 'nTOFF': 1, 'dOFF': 0.022609846432898924, 'SUCCESS': True}
10:09:03,214 root DEBUG 

=================== Experiment ID #81 	 Dual Point ID: 84 ===================
10:09:03,221 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.315E-07|<1.000E-06)
10:09:03,222 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:03,522 root DEBUG Side: ON	 Angle(dx0, dx): 0.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.767E-02 	 Total distance: 3.767E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([173], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:03,867 root DEBUG Side: OFF	 Angle(dx0, dx): 0.77 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.361E-02 	 Total distance: 7.361E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([108], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:03,867 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:03,867 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 32.30 	 cIDON = [7 9], cIDOFF = [7 9]
10:09:03,867 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:03,867 root DEBUG dOFF/dON = 2.0
10:09:03,867 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 72.36009352897334, 'dON1': 0.03766826106976641, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.03766826106976641, 'nTON': 1, 'dON': 0.03766826106976641, 'dxOFFAngle': 79.79410629052055, 'dOFF1': 0.07361041684276745, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.07361041684276745, 'nTOFF': 1, 'dOFF': 0.07361041684276745, 'SUCCESS': True}
10:09:03,879 root DEBUG 

=================== Experiment ID #82 	 Dual Point ID: 85 ===================
10:09:03,891 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.702E-08|<1.000E-06)
10:09:03,891 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:04,165 root DEBUG Side: ON	 Angle(dx0, dx): 0.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.682E-04 	 Total distance: 6.682E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([24], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:09:04,460 root DEBUG Side: OFF	 Angle(dx0, dx): 2.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.939E-02 	 Total distance: 3.939E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([225], dtype=int64), array([[False]])]] 	 class: [3 4]
10:09:04,460 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:04,460 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 96.66 	 cIDON = [3 4], cIDOFF = [3 4]
10:09:04,460 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:04,460 root DEBUG dOFF/dON = 59.0
10:09:04,460 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.5630548089918, 'dON1': 0.0006681729567472285, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.0006681729567472285, 'nTON': 1, 'dON': 0.0006681729567472285, 'dxOFFAngle': 78.17578682615877, 'dOFF1': 0.039394948734157366, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.039394948734157366, 'nTOFF': 1, 'dOFF': 0.039394948734157366, 'SUCCESS': True}
10:09:04,466 root DEBUG 

=================== Experiment ID #83 	 Dual Point ID: 86 ===================
10:09:04,474 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.023E-08|<1.000E-06)
10:09:04,474 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:04,796 root DEBUG Side: ON	 Angle(dx0, dx): 1.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.119E-02 	 Total distance: 1.119E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([145], dtype=int64), array([[False]])]] 	 class: [5 6]
10:09:05,57 root DEBUG Side: OFF	 Angle(dx0, dx): 1.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.386E-02 	 Total distance: 4.386E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([155], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:09:05,57 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:05,57 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 59.33 	 cIDON = [5 6], cIDOFF = [5 6]
10:09:05,57 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:05,57 root DEBUG dOFF/dON = 3.9
10:09:05,57 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.33890537701284, 'dON1': 0.011194864085433255, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.011194864085433255, 'nTON': 1, 'dON': 0.011194864085433255, 'dxOFFAngle': 84.29988251719539, 'dOFF1': 0.043857748327275625, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.043857748327275625, 'nTOFF': 1, 'dOFF': 0.043857748327275625, 'SUCCESS': True}
10:09:05,64 root DEBUG 

=================== Experiment ID #84 	 Dual Point ID: 87 ===================
10:09:05,75 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.434E-08|<1.000E-06)
10:09:05,75 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:05,342 root DEBUG Side: ON	 Angle(dx0, dx): 2.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.804E-03 	 Total distance: 3.804E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([12], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:05,653 root DEBUG Side: OFF	 Angle(dx0, dx): 2.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.785E-01 	 Total distance: 1.785E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([56], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:05,859 root DEBUG Side: OFF	 Angle(dx0, dx): 2.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.240E-01 	 Total distance: 3.026E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([47], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:06,33 root DEBUG Side: OFF	 Angle(dx0, dx): 2.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.794E-02 	 Total distance: 3.305E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([225], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:06,34 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:06,34 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 97.72 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:06,34 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:06,34 root DEBUG dOFF/dON = 86.9
10:09:06,34 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.48226295975904, 'dON1': 0.003804432016007651, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.003804432016007651, 'nTON': 1, 'dON': 0.003804432016007651, 'dxOFFAngle': 84.35448220759662, 'dOFF1': 0.3305110953532015, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.3305110953532015, 'nTOFF': 1, 'dOFF': 0.3305110953532015, 'SUCCESS': True}
10:09:06,47 root DEBUG 

=================== Experiment ID #85 	 Dual Point ID: 88 ===================
10:09:06,56 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.163E-08|<1.000E-06)
10:09:06,57 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:06,368 root DEBUG Side: ON	 Angle(dx0, dx): 2.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.395E-02 	 Total distance: 8.395E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([39], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:06,594 root DEBUG Side: OFF	 Angle(dx0, dx): 1.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.207E-02 	 Total distance: 6.207E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([84], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:06,594 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:06,594 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -14.99 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:06,594 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:06,595 root DEBUG dOFF/dON = 0.7
10:09:06,595 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.83390477163856, 'dON1': 0.08395418105485658, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.08395418105485658, 'nTON': 1, 'dON': 0.08395418105485658, 'dxOFFAngle': 88.01022535044099, 'dOFF1': 0.06207189513902931, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.06207189513902931, 'nTOFF': 1, 'dOFF': 0.06207189513902931, 'SUCCESS': False}
10:09:06,605 root DEBUG 

=================== Experiment ID #86 	 Dual Point ID: 89 ===================
10:09:06,613 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.416E-07|<1.000E-06)
10:09:06,613 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:06,909 root DEBUG Side: ON	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.544E-02 	 Total distance: 4.544E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([107], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:07,269 root DEBUG Side: OFF	 Angle(dx0, dx): 1.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.575E-02 	 Total distance: 3.575E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([242], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:07,270 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:07,270 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -11.94 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:07,270 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:07,270 root DEBUG dOFF/dON = 0.8
10:09:07,270 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 75.22928599185816, 'dON1': 0.04544178180359989, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.04544178180359989, 'nTON': 1, 'dON': 0.04544178180359989, 'dxOFFAngle': 81.66334277386001, 'dOFF1': 0.03574670920807909, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.03574670920807909, 'nTOFF': 1, 'dOFF': 0.03574670920807909, 'SUCCESS': False}
10:09:07,280 root DEBUG 

=================== Experiment ID #87 	 Dual Point ID: 90 ===================
10:09:07,290 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.696E-08|<1.000E-06)
10:09:07,290 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:07,549 root DEBUG Side: ON	 Angle(dx0, dx): 9.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.140E-01 	 Total distance: 1.140E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([74], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:09:07,880 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.321E-02 	 Total distance: 1.321E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([24], dtype=int64), array([[False]])]] 	 class: [0 9]
10:09:07,881 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:07,881 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -79.23 	 cIDON = [1 9], cIDOFF = [0 9]
10:09:07,881 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:07,881 root DEBUG dOFF/dON = 0.1
10:09:07,881 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 68.62637912641496, 'dON1': 0.11402055887472988, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.11402055887472988, 'nTON': 1, 'dON': 0.11402055887472988, 'dxOFFAngle': 85.74615537617001, 'dOFF1': 0.013210909869197922, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.013210909869197922, 'nTOFF': 1, 'dOFF': 0.013210909869197922, 'SUCCESS': False}
10:09:07,890 root DEBUG 

=================== Experiment ID #88 	 Dual Point ID: 91 ===================
10:09:07,900 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.267E-07|<1.000E-06)
10:09:07,900 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:08,230 root DEBUG Side: ON	 Angle(dx0, dx): 1.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.958E-03 	 Total distance: 9.958E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([130], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:08,429 root DEBUG Side: ON	 Angle(dx0, dx): 1.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.089E-02 	 Total distance: 7.085E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([2], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:08,721 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.356E-02 	 Total distance: 3.356E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([131], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:08,979 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.847E-02 	 Total distance: 8.203E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([172], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:08,979 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:08,980 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 7.31 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:08,980 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:08,980 root DEBUG dOFF/dON = 1.2
10:09:08,980 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.70267556185269, 'dON1': 0.07085219401462094, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.07085219401462094, 'nTON': 1, 'dON': 0.07085219401462094, 'dxOFFAngle': 86.51559709754595, 'dOFF1': 0.0820289187773244, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.0820289187773244, 'nTOFF': 1, 'dOFF': 0.0820289187773244, 'SUCCESS': True}
10:09:08,993 root DEBUG 

=================== Experiment ID #89 	 Dual Point ID: 92 ===================
10:09:09,2 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.096E-08|<1.000E-06)
10:09:09,2 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:09,275 root DEBUG Side: ON	 Angle(dx0, dx): 1.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.137E-03 	 Total distance: 2.137E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([173], dtype=int64), array([[False]])]] 	 class: [4 9]
10:09:09,518 root DEBUG Side: OFF	 Angle(dx0, dx): 3.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.821E-02 	 Total distance: 2.821E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([140], dtype=int64), array([[False]])]] 	 class: [4 9]
10:09:09,518 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:09,518 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 85.92 	 cIDON = [4 9], cIDOFF = [4 9]
10:09:09,518 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:09,518 root DEBUG dOFF/dON = 13.2
10:09:09,518 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.90620743597509, 'dON1': 0.0021365115336154776, 'cIDON1': array([4, 9], dtype=int64), 'dON_patch_1': 0.0021365115336154776, 'nTON': 1, 'dON': 0.0021365115336154776, 'dxOFFAngle': 83.33314766258145, 'dOFF1': 0.028211000006276483, 'cIDOFF1': array([4, 9], dtype=int64), 'dOFF_patch_1': 0.028211000006276483, 'nTOFF': 1, 'dOFF': 0.028211000006276483, 'SUCCESS': True}
10:09:09,531 root DEBUG 

=================== Experiment ID #90 	 Dual Point ID: 93 ===================
10:09:09,539 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.284E-08|<1.000E-06)
10:09:09,539 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:09,787 root DEBUG Side: ON	 Angle(dx0, dx): 1.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.379E-02 	 Total distance: 5.379E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([237], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:10,103 root DEBUG Side: OFF	 Angle(dx0, dx): 0.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.829E-01 	 Total distance: 4.829E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([245], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:10,103 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:10,103 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 79.96 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:10,103 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:10,103 root DEBUG dOFF/dON = 9.0
10:09:10,103 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.86081699111817, 'dON1': 0.053789706742760644, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.053789706742760644, 'nTON': 1, 'dON': 0.053789706742760644, 'dxOFFAngle': 87.19467476228263, 'dOFF1': 0.4829119178273782, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.4829119178273782, 'nTOFF': 1, 'dOFF': 0.4829119178273782, 'SUCCESS': True}
10:09:10,118 root DEBUG 

=================== Experiment ID #91 	 Dual Point ID: 94 ===================
10:09:10,127 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.441E-08|<1.000E-06)
10:09:10,127 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:10,455 root DEBUG Side: ON	 Angle(dx0, dx): 0.79 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.761E-03 	 Total distance: 5.761E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([159], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:10,718 root DEBUG Side: OFF	 Angle(dx0, dx): 1.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.647E-02 	 Total distance: 8.647E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([39], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:10,718 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:10,718 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 87.51 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:10,718 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:10,718 root DEBUG dOFF/dON = 15.0
10:09:10,718 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.97673160631156, 'dON1': 0.005760708454828562, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.005760708454828562, 'nTON': 1, 'dON': 0.005760708454828562, 'dxOFFAngle': 85.8416593886127, 'dOFF1': 0.08646904290736487, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.08646904290736487, 'nTOFF': 1, 'dOFF': 0.08646904290736487, 'SUCCESS': True}
10:09:10,729 root DEBUG 

=================== Experiment ID #92 	 Dual Point ID: 95 ===================
10:09:10,738 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.777E-07|<1.000E-06)
10:09:10,739 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:11,8 root DEBUG Side: ON	 Angle(dx0, dx): 0.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.038E-02 	 Total distance: 7.038E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([171], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:09:11,325 root DEBUG Side: OFF	 Angle(dx0, dx): 0.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.747E-02 	 Total distance: 8.747E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([85], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:11,325 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:11,325 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 10.83 	 cIDON = [7 9], cIDOFF = [7 9]
10:09:11,325 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:11,326 root DEBUG dOFF/dON = 1.2
10:09:11,326 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.93026824938994, 'dON1': 0.07037904599007144, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.07037904599007144, 'nTON': 1, 'dON': 0.07037904599007144, 'dxOFFAngle': 88.31815239080733, 'dOFF1': 0.0874704446011137, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.0874704446011137, 'nTOFF': 1, 'dOFF': 0.0874704446011137, 'SUCCESS': True}
10:09:11,337 root DEBUG 

=================== Experiment ID #93 	 Dual Point ID: 96 ===================
10:09:11,350 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.570E-09|<1.000E-06)
10:09:11,350 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:11,671 root DEBUG Side: ON	 Angle(dx0, dx): 1.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.506E-02 	 Total distance: 2.506E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([15], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:12,58 root DEBUG Side: OFF	 Angle(dx0, dx): 2.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.513E-02 	 Total distance: 6.513E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([3, 6], dtype=int64), array([[0.],
       [1.]])]] 	 class: [5 6]
10:09:12,58 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:12,59 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 44.43 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:12,59 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:12,59 root DEBUG dOFF/dON = 2.6
10:09:12,59 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 77.65091214188016, 'dON1': 0.025056952641705484, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.025056952641705484, 'nTON': 1, 'dON': 0.025056952641705484, 'dxOFFAngle': 82.82988639522152, 'dOFF1': 0.06512570934546141, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.06512570934546141, 'nTOFF': 1, 'dOFF': 0.06512570934546141, 'SUCCESS': True}
10:09:12,70 root DEBUG 

=================== Experiment ID #94 	 Dual Point ID: 97 ===================
10:09:12,78 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.022E-08|<1.000E-06)
10:09:12,78 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:12,342 root DEBUG Side: ON	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.689E-02 	 Total distance: 2.689E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([171], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:12,658 root DEBUG Side: OFF	 Angle(dx0, dx): 2.93 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.642E-02 	 Total distance: 4.642E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([23], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:12,658 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:12,658 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 26.65 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:12,659 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:12,659 root DEBUG dOFF/dON = 1.7
10:09:12,659 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.58045705543243, 'dON1': 0.026889534688248343, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.026889534688248343, 'nTON': 1, 'dON': 0.026889534688248343, 'dxOFFAngle': 89.06524440304806, 'dOFF1': 0.04642413185670083, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.04642413185670083, 'nTOFF': 1, 'dOFF': 0.04642413185670083, 'SUCCESS': True}
10:09:12,670 root DEBUG 

=================== Experiment ID #95 	 Dual Point ID: 98 ===================
10:09:12,681 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.673E-08|<1.000E-06)
10:09:12,682 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:13,4 root DEBUG Side: ON	 Angle(dx0, dx): 1.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.078E-02 	 Total distance: 2.078E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([52], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:13,342 root DEBUG Side: OFF	 Angle(dx0, dx): 1.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.790E-03 	 Total distance: 3.790E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([163], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:13,342 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:13,342 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -69.14 	 cIDON = [5 7], cIDOFF = [5 7]
10:09:13,342 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:13,342 root DEBUG dOFF/dON = 0.2
10:09:13,342 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.80424107984763, 'dON1': 0.020775470615138916, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.020775470615138916, 'nTON': 1, 'dON': 0.020775470615138916, 'dxOFFAngle': 85.26764946286238, 'dOFF1': 0.0037903654409825642, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.0037903654409825642, 'nTOFF': 1, 'dOFF': 0.0037903654409825642, 'SUCCESS': False}
10:09:13,353 root DEBUG 

=================== Experiment ID #96 	 Dual Point ID: 99 ===================
10:09:13,365 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.569E-09|<1.000E-06)
10:09:13,366 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:13,658 root DEBUG Side: ON	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.759E-02 	 Total distance: 2.759E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([113], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:13,955 root DEBUG Side: OFF	 Angle(dx0, dx): 0.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.757E-01 	 Total distance: 1.757E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([140], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:13,955 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:13,955 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 72.86 	 cIDON = [5 7], cIDOFF = [5 7]
10:09:13,955 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:13,955 root DEBUG dOFF/dON = 6.4
10:09:13,955 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.15952316514154, 'dON1': 0.02758738001532097, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.02758738001532097, 'nTON': 1, 'dON': 0.02758738001532097, 'dxOFFAngle': 89.23122243055376, 'dOFF1': 0.1757410778874982, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.1757410778874982, 'nTOFF': 1, 'dOFF': 0.1757410778874982, 'SUCCESS': True}
10:09:13,962 root DEBUG 

=================== Experiment ID #97 	 Dual Point ID: 100 ===================
10:09:13,970 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.321E-07|<1.000E-06)
10:09:13,970 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:14,284 root DEBUG Side: ON	 Angle(dx0, dx): 0.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.270E-01 	 Total distance: 1.270E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([216], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:09:14,613 root DEBUG Side: OFF	 Angle(dx0, dx): 0.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.135E-02 	 Total distance: 7.135E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([197], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:09:14,614 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:14,614 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -28.05 	 cIDON = [2 3], cIDOFF = [2 3]
10:09:14,614 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:14,614 root DEBUG dOFF/dON = 0.6
10:09:14,614 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.6376727882334, 'dON1': 0.12697910564201093, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.12697910564201093, 'nTON': 1, 'dON': 0.12697910564201093, 'dxOFFAngle': 85.02148847909437, 'dOFF1': 0.0713491039445956, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.0713491039445956, 'nTOFF': 1, 'dOFF': 0.0713491039445956, 'SUCCESS': False}
10:09:14,630 root DEBUG 

=================== Experiment ID #98 	 Dual Point ID: 101 ===================
10:09:14,644 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.418E-08|<1.000E-06)
10:09:14,644 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:14,990 root DEBUG Side: ON	 Angle(dx0, dx): 1.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.641E-02 	 Total distance: 4.641E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([225], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:15,289 root DEBUG Side: OFF	 Angle(dx0, dx): 3.85 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.224E-02 	 Total distance: 1.224E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([5], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:15,289 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:15,289 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -58.26 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:15,289 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:15,289 root DEBUG dOFF/dON = 0.3
10:09:15,289 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.93282693911458, 'dON1': 0.04640520662899086, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.04640520662899086, 'nTON': 1, 'dON': 0.04640520662899086, 'dxOFFAngle': 87.51730563020406, 'dOFF1': 0.01224078360200906, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.01224078360200906, 'nTOFF': 1, 'dOFF': 0.01224078360200906, 'SUCCESS': False}
10:09:15,299 root DEBUG 

=================== Experiment ID #99 	 Dual Point ID: 102 ===================
10:09:15,314 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.786E-08|<1.000E-06)
10:09:15,314 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:15,564 root DEBUG Side: ON	 Angle(dx0, dx): 2.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.558E-02 	 Total distance: 5.558E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([50], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:15,896 root DEBUG Side: OFF	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.943E-03 	 Total distance: 2.943E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([201], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:15,896 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:15,897 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -89.94 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:15,897 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:15,897 root DEBUG dOFF/dON = 0.1
10:09:15,897 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.2852144572195, 'dON1': 0.05557903877048176, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.05557903877048176, 'nTON': 1, 'dON': 0.05557903877048176, 'dxOFFAngle': 86.03303761383005, 'dOFF1': 0.002942687584088183, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.002942687584088183, 'nTOFF': 1, 'dOFF': 0.002942687584088183, 'SUCCESS': False}
10:09:15,904 root DEBUG 

=================== Experiment ID #100 	 Dual Point ID: 103 ===================
10:09:15,916 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.255E-08|<1.000E-06)
10:09:15,916 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:16,228 root DEBUG Side: ON	 Angle(dx0, dx): 4.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.005E-02 	 Total distance: 8.005E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([0], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:09:16,544 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.949E-02 	 Total distance: 6.949E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([39], dtype=int64), array([[False]])]] 	 class: [4 9]
10:09:16,544 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:16,544 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -7.06 	 cIDON = [4 9], cIDOFF = [4 9]
10:09:16,545 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:16,545 root DEBUG dOFF/dON = 0.9
10:09:16,545 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.78553501490231, 'dON1': 0.08004615442618986, 'cIDON1': array([4, 9], dtype=int64), 'dON_patch_1': 0.08004615442618986, 'nTON': 1, 'dON': 0.08004615442618986, 'dxOFFAngle': 89.58972152995464, 'dOFF1': 0.06949047941391844, 'cIDOFF1': array([4, 9], dtype=int64), 'dOFF_patch_1': 0.06949047941391844, 'nTOFF': 1, 'dOFF': 0.06949047941391844, 'SUCCESS': False}
10:09:16,555 root DEBUG 

=================== Experiment ID #101 	 Dual Point ID: 104 ===================
10:09:16,565 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.554E-08|<1.000E-06)
10:09:16,565 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:16,899 root DEBUG Side: ON	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.890E-03 	 Total distance: 7.890E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([181], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:17,211 root DEBUG Side: OFF	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.832E-02 	 Total distance: 1.832E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([181], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:17,211 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:17,211 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 39.80 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:17,211 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:17,212 root DEBUG dOFF/dON = 2.3
10:09:17,212 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.70625875033367, 'dON1': 0.007890038665357962, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.007890038665357962, 'nTON': 1, 'dON': 0.007890038665357962, 'dxOFFAngle': 82.90983561263101, 'dOFF1': 0.01832411242917804, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.01832411242917804, 'nTOFF': 1, 'dOFF': 0.01832411242917804, 'SUCCESS': True}
10:09:17,221 root DEBUG 

=================== Experiment ID #102 	 Dual Point ID: 105 ===================
10:09:17,228 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.227E-07|<1.000E-06)
10:09:17,228 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:17,570 root DEBUG Side: ON	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.218E-02 	 Total distance: 2.218E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([223], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:09:17,830 root DEBUG Side: OFF	 Angle(dx0, dx): 2.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.657E-05 	 Total distance: 1.657E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 9]
10:09:17,830 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:17,830 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.85 	 cIDON = [1 9], cIDOFF = [0 9]
10:09:17,830 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:17,830 root DEBUG dOFF/dON = 0.0
10:09:17,830 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.71134740162188, 'dON1': 0.02218008127972904, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.02218008127972904, 'nTON': 1, 'dON': 0.02218008127972904, 'dxOFFAngle': 86.68353277290454, 'dOFF1': 1.6574327749454683e-05, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 1.6574327749454683e-05, 'nTOFF': 1, 'dOFF': 1.6574327749454683e-05, 'SUCCESS': False}
10:09:17,842 root DEBUG 

=================== Experiment ID #103 	 Dual Point ID: 106 ===================
10:09:17,848 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.101E-07|<1.000E-06)
10:09:17,849 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:18,171 root DEBUG Side: ON	 Angle(dx0, dx): 2.98 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.155E-01 	 Total distance: 1.155E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([147], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:18,510 root DEBUG Side: OFF	 Angle(dx0, dx): 3.77 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.525E-01 	 Total distance: 1.525E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([68], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:18,510 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:18,511 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 13.80 	 cIDON = [5 7], cIDOFF = [5 7]
10:09:18,511 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:18,511 root DEBUG dOFF/dON = 1.3
10:09:18,511 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.17887925117664, 'dON1': 0.11551836875146651, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.11551836875146651, 'nTON': 1, 'dON': 0.11551836875146651, 'dxOFFAngle': 89.45090446302115, 'dOFF1': 0.15250639355554518, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.15250639355554518, 'nTOFF': 1, 'dOFF': 0.15250639355554518, 'SUCCESS': True}
10:09:18,522 root DEBUG 

=================== Experiment ID #104 	 Dual Point ID: 107 ===================
10:09:18,532 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.157E-07|<1.000E-06)
10:09:18,532 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:18,850 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.027E-01 	 Total distance: 1.027E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([145], dtype=int64), array([[False]])]] 	 class: [6 8]
10:09:19,184 root DEBUG Side: OFF	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.213E-01 	 Total distance: 1.213E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([33], dtype=int64), array([[ True]])]] 	 class: [6 8]
10:09:19,184 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:19,184 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 8.30 	 cIDON = [6 8], cIDOFF = [6 8]
10:09:19,184 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:19,185 root DEBUG dOFF/dON = 1.2
10:09:19,185 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.3615360462623, 'dON1': 0.10270059699366975, 'cIDON1': array([6, 8], dtype=int64), 'dON_patch_1': 0.10270059699366975, 'nTON': 1, 'dON': 0.10270059699366975, 'dxOFFAngle': 81.8693877093157, 'dOFF1': 0.12130049730260929, 'cIDOFF1': array([6, 8], dtype=int64), 'dOFF_patch_1': 0.12130049730260929, 'nTOFF': 1, 'dOFF': 0.12130049730260929, 'SUCCESS': True}
10:09:19,204 root DEBUG 

=================== Experiment ID #105 	 Dual Point ID: 108 ===================
10:09:19,215 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.019E-08|<1.000E-06)
10:09:19,215 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:19,532 root DEBUG Side: ON	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.197E-02 	 Total distance: 1.197E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([104], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:19,814 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.823E-03 	 Total distance: 8.823E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([150], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:19,815 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:19,815 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -15.15 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:19,815 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:19,815 root DEBUG dOFF/dON = 0.7
10:09:19,815 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.70643235130548, 'dON1': 0.011974251704898848, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.011974251704898848, 'nTON': 1, 'dON': 0.011974251704898848, 'dxOFFAngle': 81.09458789633402, 'dOFF1': 0.00882295348673257, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.00882295348673257, 'nTOFF': 1, 'dOFF': 0.00882295348673257, 'SUCCESS': False}
10:09:19,827 root DEBUG 

=================== Experiment ID #106 	 Dual Point ID: 109 ===================
10:09:19,838 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.669E-07|<1.000E-06)
10:09:19,838 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:20,185 root DEBUG Side: ON	 Angle(dx0, dx): 1.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.873E-02 	 Total distance: 3.873E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([56], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:09:20,413 root DEBUG Side: ON	 Angle(dx0, dx): 2.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.639E-02 	 Total distance: 1.351E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([206], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:09:20,748 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.770E-01 	 Total distance: 2.770E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([245], dtype=int64), array([[False]])]] 	 class: [5 6]
10:09:20,749 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:20,749 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 34.43 	 cIDON = [5 6], cIDOFF = [5 6]
10:09:20,749 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:20,749 root DEBUG dOFF/dON = 2.1
10:09:20,749 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 75.17174983684893, 'dON1': 0.13512450970667325, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.13512450970667325, 'nTON': 1, 'dON': 0.13512450970667325, 'dxOFFAngle': 82.94893592329895, 'dOFF1': 0.27702323506670146, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.27702323506670146, 'nTOFF': 1, 'dOFF': 0.27702323506670146, 'SUCCESS': True}
10:09:20,758 root DEBUG 

=================== Experiment ID #107 	 Dual Point ID: 110 ===================
10:09:20,767 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.267E-07|<1.000E-06)
10:09:20,767 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:21,106 root DEBUG Side: ON	 Angle(dx0, dx): 1.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.896E-02 	 Total distance: 8.896E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([61], dtype=int64), array([[False]])]] 	 class: [4 9]
10:09:21,378 root DEBUG Side: OFF	 Angle(dx0, dx): 0.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.620E-02 	 Total distance: 2.620E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([188], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:09:21,565 root DEBUG Side: OFF	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.564E-03 	 Total distance: 3.476E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([200], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:09:21,565 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:21,565 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -43.81 	 cIDON = [4 9], cIDOFF = [4 9]
10:09:21,565 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:21,566 root DEBUG dOFF/dON = 0.4
10:09:21,566 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.4221547790336, 'dON1': 0.08896095060207213, 'cIDON1': array([4, 9], dtype=int64), 'dON_patch_1': 0.08896095060207213, 'nTON': 1, 'dON': 0.08896095060207213, 'dxOFFAngle': 89.02503261647112, 'dOFF1': 0.03476294777213395, 'cIDOFF1': array([4, 9], dtype=int64), 'dOFF_patch_1': 0.03476294777213395, 'nTOFF': 1, 'dOFF': 0.03476294777213395, 'SUCCESS': False}
10:09:21,579 root DEBUG 

=================== Experiment ID #108 	 Dual Point ID: 111 ===================
10:09:21,587 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.631E-08|<1.000E-06)
10:09:21,588 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:21,904 root DEBUG Side: ON	 Angle(dx0, dx): 2.84 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.303E-02 	 Total distance: 3.303E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([47], dtype=int64), array([[False]])]] 	 class: [0 9]
10:09:22,136 root DEBUG Side: ON	 Angle(dx0, dx): 1.83 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.268E-02 	 Total distance: 5.571E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([179], dtype=int64), array([[False]])]] 	 class: [0 9]
10:09:22,415 root DEBUG Side: OFF	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.524E-01 	 Total distance: 2.524E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([243], dtype=int64), array([[False]])]] 	 class: [1 9]
10:09:22,415 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:22,415 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 63.84 	 cIDON = [0 9], cIDOFF = [1 9]
10:09:22,415 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:22,415 root DEBUG dOFF/dON = 4.5
10:09:22,415 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 79.41721030704483, 'dON1': 0.05571313614756733, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.05571313614756733, 'nTON': 1, 'dON': 0.05571313614756733, 'dxOFFAngle': 84.93967126712383, 'dOFF1': 0.25241307252371026, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.25241307252371026, 'nTOFF': 1, 'dOFF': 0.25241307252371026, 'SUCCESS': True}
10:09:22,427 root DEBUG 

=================== Experiment ID #109 	 Dual Point ID: 112 ===================
10:09:22,442 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.288E-09|<1.000E-06)
10:09:22,443 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:22,716 root DEBUG Side: ON	 Angle(dx0, dx): 0.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.197E-02 	 Total distance: 4.197E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([46], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:09:22,988 root DEBUG Side: OFF	 Angle(dx0, dx): 1.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.302E-02 	 Total distance: 2.302E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([102], dtype=int64), array([[False]])]] 	 class: [2 8]
10:09:22,988 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:22,988 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -29.16 	 cIDON = [2 8], cIDOFF = [2 8]
10:09:22,988 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:22,988 root DEBUG dOFF/dON = 0.5
10:09:22,988 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.775189776959, 'dON1': 0.04197412080908048, 'cIDON1': array([2, 8], dtype=int64), 'dON_patch_1': 0.04197412080908048, 'nTON': 1, 'dON': 0.04197412080908048, 'dxOFFAngle': 88.68743190881533, 'dOFF1': 0.02302231914222116, 'cIDOFF1': array([2, 8], dtype=int64), 'dOFF_patch_1': 0.02302231914222116, 'nTOFF': 1, 'dOFF': 0.02302231914222116, 'SUCCESS': False}
10:09:22,997 root DEBUG 

=================== Experiment ID #110 	 Dual Point ID: 113 ===================
10:09:23,4 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.685E-08|<1.000E-06)
10:09:23,4 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:23,351 root DEBUG Side: ON	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.168E-02 	 Total distance: 9.168E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([51], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:23,640 root DEBUG Side: OFF	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.833E-02 	 Total distance: 4.833E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([50], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:23,811 root DEBUG Side: OFF	 Angle(dx0, dx): 1.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.206E-02 	 Total distance: 9.039E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([17], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:23,811 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:23,812 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -0.71 	 cIDON = [2 6], cIDOFF = [2 6]
10:09:23,812 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:23,812 root DEBUG dOFF/dON = 1.0
10:09:23,812 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.57183630530893, 'dON1': 0.0916795180503756, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.0916795180503756, 'nTON': 1, 'dON': 0.0916795180503756, 'dxOFFAngle': 88.22469079189264, 'dOFF1': 0.09038892161912607, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.09038892161912607, 'nTOFF': 1, 'dOFF': 0.09038892161912607, 'SUCCESS': False}
10:09:23,824 root DEBUG 

=================== Experiment ID #111 	 Dual Point ID: 114 ===================
10:09:23,832 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.332E-08|<1.000E-06)
10:09:23,832 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:24,173 root DEBUG Side: ON	 Angle(dx0, dx): 2.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.717E-02 	 Total distance: 7.717E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([247], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:24,513 root DEBUG Side: OFF	 Angle(dx0, dx): 0.79 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.830E-01 	 Total distance: 1.830E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([139], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:24,514 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:24,514 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 40.67 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:24,514 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:24,514 root DEBUG dOFF/dON = 2.4
10:09:24,514 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.21059507777449, 'dON1': 0.07717301047247567, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.07717301047247567, 'nTON': 1, 'dON': 0.07717301047247567, 'dxOFFAngle': 87.39127005402551, 'dOFF1': 0.1829678530574932, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.1829678530574932, 'nTOFF': 1, 'dOFF': 0.1829678530574932, 'SUCCESS': True}
10:09:24,525 root DEBUG 

=================== Experiment ID #112 	 Dual Point ID: 115 ===================
10:09:24,536 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.330E-08|<1.000E-06)
10:09:24,536 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:24,857 root DEBUG Side: ON	 Angle(dx0, dx): 1.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.265E-02 	 Total distance: 4.265E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([21], dtype=int64), array([[ True]])]] 	 class: [1 2]
10:09:25,141 root DEBUG Side: OFF	 Angle(dx0, dx): 0.83 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.001E-03 	 Total distance: 6.001E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([184], dtype=int64), array([[ True]])]] 	 class: [0 2]
10:09:25,141 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:25,141 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -75.33 	 cIDON = [1 2], cIDOFF = [0 2]
10:09:25,141 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:25,141 root DEBUG dOFF/dON = 0.1
10:09:25,141 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.39704058332, 'dON1': 0.042653289268453805, 'cIDON1': array([1, 2], dtype=int64), 'dON_patch_1': 0.042653289268453805, 'nTON': 1, 'dON': 0.042653289268453805, 'dxOFFAngle': 86.89274550124532, 'dOFF1': 0.006001439174625388, 'cIDOFF1': array([0, 2], dtype=int64), 'dOFF_patch_1': 0.006001439174625388, 'nTOFF': 1, 'dOFF': 0.006001439174625388, 'SUCCESS': False}
10:09:25,148 root DEBUG 

=================== Experiment ID #113 	 Dual Point ID: 116 ===================
10:09:25,156 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.052E-09|<1.000E-06)
10:09:25,156 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:25,402 root DEBUG Side: ON	 Angle(dx0, dx): 2.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.811E-03 	 Total distance: 1.811E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([148], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:25,668 root DEBUG Side: OFF	 Angle(dx0, dx): 0.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.446E-02 	 Total distance: 4.446E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([178], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:25,943 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.269E-01 	 Total distance: 1.713E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([111], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:25,944 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:25,944 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 97.91 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:25,944 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:25,945 root DEBUG dOFF/dON = 94.6
10:09:25,945 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.62791224640513, 'dON1': 0.0018106252956938981, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.0018106252956938981, 'nTON': 1, 'dON': 0.0018106252956938981, 'dxOFFAngle': 86.589903963943, 'dOFF1': 0.171336970561151, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.171336970561151, 'nTOFF': 1, 'dOFF': 0.171336970561151, 'SUCCESS': True}
10:09:25,957 root DEBUG 

=================== Experiment ID #114 	 Dual Point ID: 117 ===================
10:09:25,965 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.472E-07|<1.000E-06)
10:09:25,965 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:26,254 root DEBUG Side: ON	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.689E-01 	 Total distance: 1.689E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([250], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:26,487 root DEBUG Side: OFF	 Angle(dx0, dx): 0.98 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.596E-02 	 Total distance: 2.596E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([188], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:26,677 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.017E-01 	 Total distance: 3.277E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([115], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:26,903 root DEBUG Side: OFF	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.996E-01 	 Total distance: 6.273E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([6], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:26,903 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:26,904 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 57.58 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:26,904 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:26,904 root DEBUG dOFF/dON = 3.7
10:09:26,904 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.80390627837657, 'dON1': 0.1688568709124362, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.1688568709124362, 'nTON': 1, 'dON': 0.1688568709124362, 'dxOFFAngle': 88.26764521395786, 'dOFF1': 0.627286076108251, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.627286076108251, 'nTOFF': 1, 'dOFF': 0.627286076108251, 'SUCCESS': True}
10:09:26,915 root DEBUG 

=================== Experiment ID #115 	 Dual Point ID: 118 ===================
10:09:26,927 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.081E-08|<1.000E-06)
10:09:26,928 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:27,217 root DEBUG Side: ON	 Angle(dx0, dx): 1.84 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.438E-02 	 Total distance: 1.438E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([80], dtype=int64), array([[False]])]] 	 class: [4 7]
10:09:27,524 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.760E-03 	 Total distance: 6.760E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([219], dtype=int64), array([[False]])]] 	 class: [4 7]
10:09:27,755 root DEBUG Side: OFF	 Angle(dx0, dx): 1.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.854E-03 	 Total distance: 9.614E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([80], dtype=int64), array([[False]])]] 	 class: [4 7]
10:09:27,755 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:27,756 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -19.88 	 cIDON = [4 7], cIDOFF = [4 7]
10:09:27,756 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:27,756 root DEBUG dOFF/dON = 0.7
10:09:27,756 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.42821721313095, 'dON1': 0.014384811422209832, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.014384811422209832, 'nTON': 1, 'dON': 0.014384811422209832, 'dxOFFAngle': 83.47346584169901, 'dOFF1': 0.009614025786300787, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.009614025786300787, 'nTOFF': 1, 'dOFF': 0.009614025786300787, 'SUCCESS': False}
10:09:27,766 root DEBUG 

=================== Experiment ID #116 	 Dual Point ID: 119 ===================
10:09:27,773 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.387E-08|<1.000E-06)
10:09:27,773 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:28,63 root DEBUG Side: ON	 Angle(dx0, dx): 1.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.915E-02 	 Total distance: 8.915E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([188], dtype=int64), array([[False]])]] 	 class: [1 7]
10:09:28,303 root DEBUG Side: ON	 Angle(dx0, dx): 1.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.979E-04 	 Total distance: 8.935E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([237], dtype=int64), array([[ True]])]] 	 class: [1 7]
10:09:28,582 root DEBUG Side: OFF	 Angle(dx0, dx): 0.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.716E-03 	 Total distance: 8.716E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([74], dtype=int64), array([[ True]])]] 	 class: [0 7]
10:09:28,788 root DEBUG Side: OFF	 Angle(dx0, dx): 2.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.828E-02 	 Total distance: 8.699E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([132], dtype=int64), array([[False]])]] 	 class: [0 7]
10:09:29,57 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.682E-02 	 Total distance: 1.838E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([185], dtype=int64), array([[ True]])]] 	 class: [0 7]
10:09:29,260 root DEBUG Side: OFF	 Angle(dx0, dx): 1.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.735E-01 	 Total distance: 6.573E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([103], dtype=int64), array([[ True]])]] 	 class: [0 7]
10:09:29,260 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:29,260 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 76.07 	 cIDON = [1 7], cIDOFF = [0 7]
10:09:29,260 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:29,260 root DEBUG dOFF/dON = 7.4
10:09:29,260 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.9734931606868, 'dON1': 0.0893500367646433, 'cIDON1': array([1, 7], dtype=int64), 'dON_patch_1': 0.0893500367646433, 'nTON': 1, 'dON': 0.0893500367646433, 'dxOFFAngle': 88.91283198127634, 'dOFF1': 0.657346112623488, 'cIDOFF1': array([0, 7], dtype=int64), 'dOFF_patch_1': 0.657346112623488, 'nTOFF': 1, 'dOFF': 0.657346112623488, 'SUCCESS': True}
10:09:29,266 root DEBUG 

=================== Experiment ID #117 	 Dual Point ID: 120 ===================
10:09:29,275 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.250E-07|<1.000E-06)
10:09:29,276 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:29,566 root DEBUG Side: ON	 Angle(dx0, dx): 2.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.886E-02 	 Total distance: 2.886E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([208], dtype=int64), array([[False]])]] 	 class: [2 9]
10:09:29,819 root DEBUG Side: OFF	 Angle(dx0, dx): 5.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.049E-02 	 Total distance: 4.049E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([29], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:09:29,819 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:29,820 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 16.76 	 cIDON = [2 9], cIDOFF = [2 9]
10:09:29,820 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:29,820 root DEBUG dOFF/dON = 1.4
10:09:29,820 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 76.24509765735098, 'dON1': 0.028860310423064497, 'cIDON1': array([2, 9], dtype=int64), 'dON_patch_1': 0.028860310423064497, 'nTON': 1, 'dON': 0.028860310423064497, 'dxOFFAngle': 82.07505299748993, 'dOFF1': 0.04048589199657808, 'cIDOFF1': array([2, 9], dtype=int64), 'dOFF_patch_1': 0.04048589199657808, 'nTOFF': 1, 'dOFF': 0.04048589199657808, 'SUCCESS': True}
10:09:29,829 root DEBUG 

=================== Experiment ID #118 	 Dual Point ID: 121 ===================
10:09:29,834 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.419E-08|<1.000E-06)
10:09:29,834 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:30,110 root DEBUG Side: ON	 Angle(dx0, dx): 1.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.038E-02 	 Total distance: 1.038E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([40], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:30,392 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.137E-02 	 Total distance: 1.137E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([156], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:30,392 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:30,392 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 4.54 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:30,392 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:30,392 root DEBUG dOFF/dON = 1.1
10:09:30,392 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.56241144453914, 'dON1': 0.010384421033059183, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.010384421033059183, 'nTON': 1, 'dON': 0.010384421033059183, 'dxOFFAngle': 89.9307850822734, 'dOFF1': 0.011371638241451898, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.011371638241451898, 'nTOFF': 1, 'dOFF': 0.011371638241451898, 'SUCCESS': True}
10:09:30,401 root DEBUG 

=================== Experiment ID #119 	 Dual Point ID: 122 ===================
10:09:30,408 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.666E-08|<1.000E-06)
10:09:30,409 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:30,688 root DEBUG Side: ON	 Angle(dx0, dx): 1.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.319E-02 	 Total distance: 4.319E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([166], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:31,12 root DEBUG Side: OFF	 Angle(dx0, dx): 0.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.636E-01 	 Total distance: 2.636E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([215], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:31,12 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:31,13 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 71.84 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:31,13 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:31,13 root DEBUG dOFF/dON = 6.1
10:09:31,13 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 76.54265659008401, 'dON1': 0.043190713729715655, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.043190713729715655, 'nTON': 1, 'dON': 0.043190713729715655, 'dxOFFAngle': 84.50922181097336, 'dOFF1': 0.26357316209333725, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.26357316209333725, 'nTOFF': 1, 'dOFF': 0.26357316209333725, 'SUCCESS': True}
10:09:31,22 root DEBUG 

=================== Experiment ID #120 	 Dual Point ID: 123 ===================
10:09:31,32 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.274E-07|<1.000E-06)
10:09:31,32 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:31,336 root DEBUG Side: ON	 Angle(dx0, dx): 3.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.586E-02 	 Total distance: 3.586E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([206], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:31,639 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.361E-02 	 Total distance: 1.361E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([148], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:31,639 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:31,639 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -44.97 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:31,640 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:31,640 root DEBUG dOFF/dON = 0.4
10:09:31,640 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.8307414272463, 'dON1': 0.03585616221905067, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.03585616221905067, 'nTON': 1, 'dON': 0.03585616221905067, 'dxOFFAngle': 86.59160261063744, 'dOFF1': 0.013610877886262873, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.013610877886262873, 'nTOFF': 1, 'dOFF': 0.013610877886262873, 'SUCCESS': False}
10:09:31,649 root DEBUG 

=================== Experiment ID #121 	 Dual Point ID: 124 ===================
10:09:31,659 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.253E-07|<1.000E-06)
10:09:31,659 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:31,990 root DEBUG Side: ON	 Angle(dx0, dx): 5.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.374E-02 	 Total distance: 2.374E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([61], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:32,323 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.044E-02 	 Total distance: 1.044E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([122], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:32,513 root DEBUG Side: OFF	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.806E-01 	 Total distance: 1.910E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([226], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:32,514 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:32,514 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 77.89 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:32,514 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:32,514 root DEBUG dOFF/dON = 8.0
10:09:32,514 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.35389616724767, 'dON1': 0.023742745803496553, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.023742745803496553, 'nTON': 1, 'dON': 0.023742745803496553, 'dxOFFAngle': 85.26265185701037, 'dOFF1': 0.19104124233460462, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.19104124233460462, 'nTOFF': 1, 'dOFF': 0.19104124233460462, 'SUCCESS': True}
10:09:32,528 root DEBUG 

=================== Experiment ID #122 	 Dual Point ID: 125 ===================
10:09:32,538 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.305E-08|<1.000E-06)
10:09:32,538 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:32,803 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.923E-02 	 Total distance: 1.923E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([118], dtype=int64), array([[False]])]] 	 class: [2 3]
10:09:33,152 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.847E-01 	 Total distance: 1.847E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([51], dtype=int64), array([[False]])]] 	 class: [2 3]
10:09:33,152 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:33,153 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 81.14 	 cIDON = [2 3], cIDOFF = [2 3]
10:09:33,153 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:33,153 root DEBUG dOFF/dON = 9.6
10:09:33,153 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.10385493392762, 'dON1': 0.019230882269558554, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.019230882269558554, 'nTON': 1, 'dON': 0.019230882269558554, 'dxOFFAngle': 86.81659960216487, 'dOFF1': 0.18471240578156378, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.18471240578156378, 'nTOFF': 1, 'dOFF': 0.18471240578156378, 'SUCCESS': True}
10:09:33,166 root DEBUG 

=================== Experiment ID #123 	 Dual Point ID: 126 ===================
10:09:33,176 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.774E-08|<1.000E-06)
10:09:33,177 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:33,498 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.777E-01 	 Total distance: 1.777E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([157], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:33,661 root DEBUG Side: ON	 Angle(dx0, dx): 0.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.393E-02 	 Total distance: 2.016E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([177], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:33,924 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.751E-02 	 Total distance: 2.751E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([216], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:34,96 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.045E-02 	 Total distance: 3.795E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([161], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:34,318 root DEBUG Side: OFF	 Angle(dx0, dx): 1.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.460E-02 	 Total distance: 9.256E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([175], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:34,318 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:34,318 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -37.08 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:34,318 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:34,318 root DEBUG dOFF/dON = 0.5
10:09:34,318 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.15950653754588, 'dON1': 0.20163344541497297, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.20163344541497297, 'nTON': 1, 'dON': 0.20163344541497297, 'dxOFFAngle': 88.36418204874964, 'dOFF1': 0.09255730335965917, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.09255730335965917, 'nTOFF': 1, 'dOFF': 0.09255730335965917, 'SUCCESS': False}
10:09:34,328 root DEBUG 

=================== Experiment ID #124 	 Dual Point ID: 127 ===================
10:09:34,336 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.041E-07|<1.000E-06)
10:09:34,336 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:34,625 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.644E-02 	 Total distance: 3.644E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([58], dtype=int64), array([[False]])]] 	 class: [3 4]
10:09:34,931 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.445E-02 	 Total distance: 1.445E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([84], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:09:35,100 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.536E-02 	 Total distance: 6.982E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([89], dtype=int64), array([[False]])]] 	 class: [3 4]
10:09:35,246 root DEBUG Side: OFF	 Angle(dx0, dx): 1.93 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.978E-03 	 Total distance: 7.279E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([15], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:09:35,247 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:35,247 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 33.28 	 cIDON = [3 4], cIDOFF = [3 4]
10:09:35,247 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:35,247 root DEBUG dOFF/dON = 2.0
10:09:35,247 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.12665609561543, 'dON1': 0.03644322695821299, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.03644322695821299, 'nTON': 1, 'dON': 0.03644322695821299, 'dxOFFAngle': 85.35335304564477, 'dOFF1': 0.0727933108977119, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.0727933108977119, 'nTOFF': 1, 'dOFF': 0.0727933108977119, 'SUCCESS': True}
10:09:35,257 root DEBUG 

=================== Experiment ID #125 	 Dual Point ID: 128 ===================
10:09:35,267 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.407E-08|<1.000E-06)
10:09:35,267 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:35,567 root DEBUG Side: ON	 Angle(dx0, dx): 1.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.365E-02 	 Total distance: 8.365E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([100], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:35,830 root DEBUG Side: OFF	 Angle(dx0, dx): 1.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.943E-01 	 Total distance: 2.943E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([11], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:35,830 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:35,830 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 55.74 	 cIDON = [5 7], cIDOFF = [5 7]
10:09:35,831 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:35,831 root DEBUG dOFF/dON = 3.5
10:09:35,831 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.0428169374539, 'dON1': 0.0836513387470291, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.0836513387470291, 'nTON': 1, 'dON': 0.0836513387470291, 'dxOFFAngle': 80.46802344223708, 'dOFF1': 0.29431865643828664, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.29431865643828664, 'nTOFF': 1, 'dOFF': 0.29431865643828664, 'SUCCESS': True}
10:09:35,837 root DEBUG 

=================== Experiment ID #126 	 Dual Point ID: 129 ===================
10:09:35,845 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.076E-07|<1.000E-06)
10:09:35,845 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:36,157 root DEBUG Side: ON	 Angle(dx0, dx): 1.88 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.456E-02 	 Total distance: 1.456E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([186], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:36,400 root DEBUG Side: OFF	 Angle(dx0, dx): 2.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.534E-02 	 Total distance: 1.534E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([254], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:36,400 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:36,400 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 2.59 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:36,401 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:36,401 root DEBUG dOFF/dON = 1.1
10:09:36,401 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.84707024524786, 'dON1': 0.014564688897588761, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.014564688897588761, 'nTON': 1, 'dON': 0.014564688897588761, 'dxOFFAngle': 89.12434047799539, 'dOFF1': 0.01533977201472172, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.01533977201472172, 'nTOFF': 1, 'dOFF': 0.01533977201472172, 'SUCCESS': True}
10:09:36,415 root DEBUG 

=================== Experiment ID #127 	 Dual Point ID: 130 ===================
10:09:36,424 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.228E-08|<1.000E-06)
10:09:36,424 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:36,683 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.245E-03 	 Total distance: 6.245E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([186], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:09:36,925 root DEBUG Side: OFF	 Angle(dx0, dx): 1.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.183E-02 	 Total distance: 9.183E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([62], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:09:36,925 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:36,926 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 87.27 	 cIDON = [3 9], cIDOFF = [3 9]
10:09:36,926 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:36,926 root DEBUG dOFF/dON = 14.7
10:09:36,926 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.87800248169822, 'dON1': 0.006244566942168182, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.006244566942168182, 'nTON': 1, 'dON': 0.006244566942168182, 'dxOFFAngle': 86.55603802538342, 'dOFF1': 0.0918317726324404, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.0918317726324404, 'nTOFF': 1, 'dOFF': 0.0918317726324404, 'SUCCESS': True}
10:09:36,939 root DEBUG 

=================== Experiment ID #128 	 Dual Point ID: 131 ===================
10:09:36,949 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.831E-08|<1.000E-06)
10:09:36,949 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:37,274 root DEBUG Side: ON	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.988E-02 	 Total distance: 5.988E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([90], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:37,488 root DEBUG Side: OFF	 Angle(dx0, dx): 1.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.493E-03 	 Total distance: 9.493E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([62], dtype=int64), array([[False]])]] 	 class: [4 7]
10:09:37,488 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:37,488 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -72.63 	 cIDON = [4 7], cIDOFF = [4 7]
10:09:37,488 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:37,488 root DEBUG dOFF/dON = 0.2
10:09:37,488 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.12241122954372, 'dON1': 0.05988239210729557, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.05988239210729557, 'nTON': 1, 'dON': 0.05988239210729557, 'dxOFFAngle': 80.16080776349105, 'dOFF1': 0.009492572434925196, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.009492572434925196, 'nTOFF': 1, 'dOFF': 0.009492572434925196, 'SUCCESS': False}
10:09:37,500 root DEBUG 

=================== Experiment ID #129 	 Dual Point ID: 132 ===================
10:09:37,513 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.257E-07|<1.000E-06)
10:09:37,514 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:37,778 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.303E-02 	 Total distance: 3.303E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([211], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:09:38,73 root DEBUG Side: OFF	 Angle(dx0, dx): 1.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.749E-02 	 Total distance: 1.749E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([246], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:09:38,218 root DEBUG Side: OFF	 Angle(dx0, dx): 4.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.400E-03 	 Total distance: 2.189E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([10], dtype=int64), array([[False]])]] 	 class: [0 9]
10:09:38,218 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:38,218 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -20.30 	 cIDON = [1 9], cIDOFF = [0 9]
10:09:38,218 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:38,218 root DEBUG dOFF/dON = 0.7
10:09:38,218 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.17071158580424, 'dON1': 0.03303344600370283, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.03303344600370283, 'nTON': 1, 'dON': 0.03303344600370283, 'dxOFFAngle': 84.4630705070417, 'dOFF1': 0.021885251394983974, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.021885251394983974, 'nTOFF': 1, 'dOFF': 0.021885251394983974, 'SUCCESS': False}
10:09:38,228 root DEBUG 

=================== Experiment ID #130 	 Dual Point ID: 133 ===================
10:09:38,239 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.157E-07|<1.000E-06)
10:09:38,239 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:38,473 root DEBUG Side: ON	 Angle(dx0, dx): 2.84 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.432E-02 	 Total distance: 4.432E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([38], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:38,776 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.370E-03 	 Total distance: 9.370E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([139], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:38,776 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:38,776 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -65.10 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:38,776 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:38,776 root DEBUG dOFF/dON = 0.2
10:09:38,776 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.83405875438517, 'dON1': 0.044324219953751756, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.044324219953751756, 'nTON': 1, 'dON': 0.044324219953751756, 'dxOFFAngle': 89.04920593719821, 'dOFF1': 0.009370095709153974, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.009370095709153974, 'nTOFF': 1, 'dOFF': 0.009370095709153974, 'SUCCESS': False}
10:09:38,786 root DEBUG 

=================== Experiment ID #131 	 Dual Point ID: 134 ===================
10:09:38,793 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.196E-07|<1.000E-06)
10:09:38,794 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:39,132 root DEBUG Side: ON	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.520E-02 	 Total distance: 6.520E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([213], dtype=int64), array([[False]])]] 	 class: [4 9]
10:09:39,301 root DEBUG Side: ON	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.303E-02 	 Total distance: 8.824E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([199], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:09:39,543 root DEBUG Side: ON	 Angle(dx0, dx): 1.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.320E-02 	 Total distance: 1.514E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([37], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:09:39,874 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.277E-01 	 Total distance: 3.277E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([123], dtype=int64), array([[False]])]] 	 class: [4 9]
10:09:40,40 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.513E-02 	 Total distance: 3.729E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([143], dtype=int64), array([[False]])]] 	 class: [4 9]
10:09:40,314 root DEBUG Side: OFF	 Angle(dx0, dx): 0.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.033E-01 	 Total distance: 6.762E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([115], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:09:40,533 root DEBUG Side: OFF	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.247E-02 	 Total distance: 6.987E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([60], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:09:40,533 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:40,534 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 64.37 	 cIDON = [4 9], cIDOFF = [4 9]
10:09:40,534 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:40,534 root DEBUG dOFF/dON = 4.6
10:09:40,534 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.85547784525676, 'dON1': 0.15143305177463198, 'cIDON1': array([4, 9], dtype=int64), 'dON_patch_1': 0.15143305177463198, 'nTON': 1, 'dON': 0.15143305177463198, 'dxOFFAngle': 81.21592102653969, 'dOFF1': 0.6986530404273154, 'cIDOFF1': array([4, 9], dtype=int64), 'dOFF_patch_1': 0.6986530404273154, 'nTOFF': 1, 'dOFF': 0.6986530404273154, 'SUCCESS': True}
10:09:40,544 root DEBUG 

=================== Experiment ID #132 	 Dual Point ID: 135 ===================
10:09:40,553 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.006E-07|<1.000E-06)
10:09:40,553 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:40,801 root DEBUG Side: ON	 Angle(dx0, dx): 0.71 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.071E-02 	 Total distance: 2.071E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([135], dtype=int64), array([[False]])]] 	 class: [7 8]
10:09:41,128 root DEBUG Side: OFF	 Angle(dx0, dx): 1.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.819E-02 	 Total distance: 7.819E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([19], dtype=int64), array([[ True]])]] 	 class: [7 8]
10:09:41,128 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:41,128 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 58.11 	 cIDON = [7 8], cIDOFF = [7 8]
10:09:41,128 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:41,128 root DEBUG dOFF/dON = 3.8
10:09:41,128 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.7926154778328, 'dON1': 0.02071490762216557, 'cIDON1': array([7, 8], dtype=int64), 'dON_patch_1': 0.02071490762216557, 'nTON': 1, 'dON': 0.02071490762216557, 'dxOFFAngle': 75.84339209330619, 'dOFF1': 0.07819381927095834, 'cIDOFF1': array([7, 8], dtype=int64), 'dOFF_patch_1': 0.07819381927095834, 'nTOFF': 1, 'dOFF': 0.07819381927095834, 'SUCCESS': True}
10:09:41,138 root DEBUG 

=================== Experiment ID #133 	 Dual Point ID: 136 ===================
10:09:41,147 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.462E-08|<1.000E-06)
10:09:41,147 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:41,385 root DEBUG Side: ON	 Angle(dx0, dx): 0.84 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.071E-02 	 Total distance: 1.071E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([54], dtype=int64), array([[False]])]] 	 class: [4 7]
10:09:41,673 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.465E-01 	 Total distance: 2.465E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([44], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:41,890 root DEBUG Side: OFF	 Angle(dx0, dx): 2.95 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.079E-02 	 Total distance: 3.173E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([221], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:41,890 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:41,891 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 93.47 	 cIDON = [4 7], cIDOFF = [4 7]
10:09:41,891 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:41,891 root DEBUG dOFF/dON = 29.6
10:09:41,891 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.66945698659451, 'dON1': 0.010712348585062675, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.010712348585062675, 'nTON': 1, 'dON': 0.010712348585062675, 'dxOFFAngle': 87.45171817298721, 'dOFF1': 0.31727544322093, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.31727544322093, 'nTOFF': 1, 'dOFF': 0.31727544322093, 'SUCCESS': True}
10:09:41,900 root DEBUG 

=================== Experiment ID #134 	 Dual Point ID: 137 ===================
10:09:41,909 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.312E-08|<1.000E-06)
10:09:41,910 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:42,217 root DEBUG Side: ON	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.056E-02 	 Total distance: 2.056E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([186], dtype=int64), array([[ True]])]] 	 class: [0 3]
10:09:42,477 root DEBUG Side: OFF	 Angle(dx0, dx): 1.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.339E-03 	 Total distance: 9.339E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([194], dtype=int64), array([[ True]])]] 	 class: [1 3]
10:09:42,477 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:42,477 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -37.53 	 cIDON = [0 3], cIDOFF = [1 3]
10:09:42,477 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:42,477 root DEBUG dOFF/dON = 0.5
10:09:42,477 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.71417292466845, 'dON1': 0.020558850049183806, 'cIDON1': array([0, 3], dtype=int64), 'dON_patch_1': 0.020558850049183806, 'nTON': 1, 'dON': 0.020558850049183806, 'dxOFFAngle': 88.88700215383095, 'dOFF1': 0.009338853274789538, 'cIDOFF1': array([1, 3], dtype=int64), 'dOFF_patch_1': 0.009338853274789538, 'nTOFF': 1, 'dOFF': 0.009338853274789538, 'SUCCESS': False}
10:09:42,487 root DEBUG 

=================== Experiment ID #135 	 Dual Point ID: 138 ===================
10:09:42,494 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.563E-08|<1.000E-06)
10:09:42,495 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:42,783 root DEBUG Side: ON	 Angle(dx0, dx): 2.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.966E-02 	 Total distance: 5.966E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([21], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:09:43,57 root DEBUG Side: OFF	 Angle(dx0, dx): 1.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.879E-03 	 Total distance: 1.879E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([29], dtype=int64), array([[False]])]] 	 class: [3 8]
10:09:43,193 root DEBUG Side: OFF	 Angle(dx0, dx): 1.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.415E-06 	 Total distance: 1.880E-03 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([29], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:09:43,328 root DEBUG Side: OFF	 Angle(dx0, dx): 1.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.769E-07 	 Total distance: 1.880E-03 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([29], dtype=int64), array([[False]])]] 	 class: [3 8]
10:09:43,461 root DEBUG Side: OFF	 Angle(dx0, dx): 1.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.538E-07 	 Total distance: 1.880E-03 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([29], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:09:43,614 root DEBUG Side: OFF	 Angle(dx0, dx): 1.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.769E-07 	 Total distance: 1.881E-03 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([29], dtype=int64), array([[False]])]] 	 class: [3 8]
10:09:43,629 root DEBUG Got stuck in too many past-layer relus.
10:09:43,629 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:09:43,629 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:09:43,631 root DEBUG 

=================== Experiment ID #135 	 Dual Point ID: 139 ===================
10:09:43,642 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.683E-08|<1.000E-06)
10:09:43,642 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:43,946 root DEBUG Side: ON	 Angle(dx0, dx): 4.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.609E-03 	 Total distance: 3.609E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([20], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:44,297 root DEBUG Side: OFF	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.367E-02 	 Total distance: 9.367E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([129], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:44,297 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:44,297 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 92.58 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:44,298 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:44,298 root DEBUG dOFF/dON = 26.0
10:09:44,298 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 74.77959828927507, 'dON1': 0.0036089544865723967, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.0036089544865723967, 'nTON': 1, 'dON': 0.0036089544865723967, 'dxOFFAngle': 77.15459137401604, 'dOFF1': 0.09367381122453652, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.09367381122453652, 'nTOFF': 1, 'dOFF': 0.09367381122453652, 'SUCCESS': True}
10:09:44,307 root DEBUG 

=================== Experiment ID #136 	 Dual Point ID: 140 ===================
10:09:44,317 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.286E-07|<1.000E-06)
10:09:44,317 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:44,563 root DEBUG Side: ON	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.964E-02 	 Total distance: 3.964E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([29], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:44,858 root DEBUG Side: OFF	 Angle(dx0, dx): 1.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.730E-01 	 Total distance: 2.730E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([69], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:44,859 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:44,859 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 74.65 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:44,859 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:44,859 root DEBUG dOFF/dON = 6.9
10:09:44,859 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 73.35927894447039, 'dON1': 0.03963644813652876, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.03963644813652876, 'nTON': 1, 'dON': 0.03963644813652876, 'dxOFFAngle': 79.13853808854014, 'dOFF1': 0.27304021043144716, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.27304021043144716, 'nTOFF': 1, 'dOFF': 0.27304021043144716, 'SUCCESS': True}
10:09:44,871 root DEBUG 

=================== Experiment ID #137 	 Dual Point ID: 141 ===================
10:09:44,878 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.115E-10|<1.000E-06)
10:09:44,878 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:45,83 root DEBUG Side: ON	 Angle(dx0, dx): 14.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.451E-07 	 Total distance: 3.451E-07 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 2]
10:09:45,228 root DEBUG Side: ON	 Angle(dx0, dx): 0.99 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.978E-03 	 Total distance: 1.978E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([56], dtype=int64), array([[False]])]] 	 class: [0 2]
10:09:45,494 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.064E-02 	 Total distance: 7.064E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([107], dtype=int64), array([[False]])]] 	 class: [1 2]
10:09:45,673 root DEBUG Side: OFF	 Angle(dx0, dx): 1.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.168E-02 	 Total distance: 1.123E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([62], dtype=int64), array([[False]])]] 	 class: [1 2]
10:09:45,673 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:45,674 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 96.54 	 cIDON = [0 2], cIDOFF = [1 2]
10:09:45,674 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:45,674 root DEBUG dOFF/dON = 56.8
10:09:45,674 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.14485844243504, 'dON1': 0.0019783133939757676, 'cIDON1': array([0, 2], dtype=int64), 'dON_patch_1': 0.0019783133939757676, 'nTON': 1, 'dON': 0.0019783133939757676, 'dxOFFAngle': 84.62067227682101, 'dOFF1': 0.11232427181966473, 'cIDOFF1': array([1, 2], dtype=int64), 'dOFF_patch_1': 0.11232427181966473, 'nTOFF': 1, 'dOFF': 0.11232427181966473, 'SUCCESS': True}
10:09:45,685 root DEBUG 

=================== Experiment ID #138 	 Dual Point ID: 142 ===================
10:09:45,694 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.337E-07|<1.000E-06)
10:09:45,694 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:46,30 root DEBUG Side: ON	 Angle(dx0, dx): 1.92 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.907E-02 	 Total distance: 2.907E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([44], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:46,240 root DEBUG Side: ON	 Angle(dx0, dx): 2.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.045E-01 	 Total distance: 1.336E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([95], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:46,489 root DEBUG Side: OFF	 Angle(dx0, dx): 1.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.285E-02 	 Total distance: 7.285E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([81], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:46,489 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:46,489 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -29.43 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:46,489 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:46,489 root DEBUG dOFF/dON = 0.5
10:09:46,489 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.6658291831575, 'dON1': 0.13361311930281822, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.13361311930281822, 'nTON': 1, 'dON': 0.13361311930281822, 'dxOFFAngle': 84.77587890952022, 'dOFF1': 0.07285104629802787, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.07285104629802787, 'nTOFF': 1, 'dOFF': 0.07285104629802787, 'SUCCESS': False}
10:09:46,499 root DEBUG 

=================== Experiment ID #139 	 Dual Point ID: 143 ===================
10:09:46,510 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.485E-08|<1.000E-06)
10:09:46,510 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:46,799 root DEBUG Side: ON	 Angle(dx0, dx): 0.77 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.452E-01 	 Total distance: 1.452E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([18], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:47,113 root DEBUG Side: OFF	 Angle(dx0, dx): 0.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.398E-01 	 Total distance: 3.398E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([2], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:47,114 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:47,114 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 40.11 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:47,114 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:47,114 root DEBUG dOFF/dON = 2.3
10:09:47,114 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.47386369372374, 'dON1': 0.1452278336589229, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.1452278336589229, 'nTON': 1, 'dON': 0.1452278336589229, 'dxOFFAngle': 82.12242324417927, 'dOFF1': 0.3397732573101522, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.3397732573101522, 'nTOFF': 1, 'dOFF': 0.3397732573101522, 'SUCCESS': True}
10:09:47,124 root DEBUG 

=================== Experiment ID #140 	 Dual Point ID: 144 ===================
10:09:47,134 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.444E-08|<1.000E-06)
10:09:47,134 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:47,473 root DEBUG Side: ON	 Angle(dx0, dx): 0.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.204E-03 	 Total distance: 3.204E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([172], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:47,738 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.416E-01 	 Total distance: 1.416E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([219], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:47,738 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:47,738 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 95.57 	 cIDON = [2 4], cIDOFF = [2 4]
10:09:47,738 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:47,738 root DEBUG dOFF/dON = 44.2
10:09:47,738 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.93922287530603, 'dON1': 0.003204378701993531, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.003204378701993531, 'nTON': 1, 'dON': 0.003204378701993531, 'dxOFFAngle': 89.26466397608917, 'dOFF1': 0.1415523926298496, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.1415523926298496, 'nTOFF': 1, 'dOFF': 0.1415523926298496, 'SUCCESS': True}
10:09:47,748 root DEBUG 

=================== Experiment ID #141 	 Dual Point ID: 145 ===================
10:09:47,757 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.142E-07|<1.000E-06)
10:09:47,757 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:48,18 root DEBUG Side: ON	 Angle(dx0, dx): 10.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.932E-07 	 Total distance: 6.932E-07 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:09:48,169 root DEBUG Side: ON	 Angle(dx0, dx): 10.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.925E-06 	 Total distance: 5.619E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 8]
10:09:48,451 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.916E-02 	 Total distance: 9.916E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([113], dtype=int64), array([[False]])]] 	 class: [0 8]
10:09:48,452 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:48,452 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.99 	 cIDON = [0 8], cIDOFF = [0 8]
10:09:48,452 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:48,452 root DEBUG dOFF/dON = 17648.6
10:09:48,452 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.99075972361959, 'dON1': 5.618664980964313e-06, 'cIDON1': array([0, 8], dtype=int64), 'dON_patch_1': 5.618664980964313e-06, 'nTON': 1, 'dON': 5.618664980964313e-06, 'dxOFFAngle': 85.47231419110172, 'dOFF1': 0.09916141694708358, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.09916141694708358, 'nTOFF': 1, 'dOFF': 0.09916141694708358, 'SUCCESS': True}
10:09:48,461 root DEBUG 

=================== Experiment ID #142 	 Dual Point ID: 146 ===================
10:09:48,467 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.383E-07|<1.000E-06)
10:09:48,467 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:48,757 root DEBUG Side: ON	 Angle(dx0, dx): 0.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.373E-02 	 Total distance: 1.373E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([72], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:48,965 root DEBUG Side: ON	 Angle(dx0, dx): 0.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.163E-02 	 Total distance: 1.054E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([162], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:49,129 root DEBUG Side: ON	 Angle(dx0, dx): 1.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.910E-04 	 Total distance: 1.061E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([224], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:49,401 root DEBUG Side: OFF	 Angle(dx0, dx): 2.83 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.338E-02 	 Total distance: 4.338E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([68], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:49,401 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:49,401 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -41.94 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:49,401 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:49,402 root DEBUG dOFF/dON = 0.4
10:09:49,402 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.44189595270753, 'dON1': 0.1060516070396312, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.1060516070396312, 'nTON': 1, 'dON': 0.1060516070396312, 'dxOFFAngle': 89.17811757797027, 'dOFF1': 0.04337922674679097, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.04337922674679097, 'nTOFF': 1, 'dOFF': 0.04337922674679097, 'SUCCESS': False}
10:09:49,415 root DEBUG 

=================== Experiment ID #143 	 Dual Point ID: 147 ===================
10:09:49,422 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.003E-07|<1.000E-06)
10:09:49,422 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:49,705 root DEBUG Side: ON	 Angle(dx0, dx): 6.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.428E-02 	 Total distance: 1.428E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([4, 9], dtype=int64), array([[0.],
       [1.]])]] 	 class: [3 9]
10:09:50,20 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.075E-01 	 Total distance: 1.075E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([14], dtype=int64), array([[False]])]] 	 class: [3 4]
10:09:50,207 root DEBUG Side: OFF	 Angle(dx0, dx): 2.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.065E-04 	 Total distance: 1.080E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([218], dtype=int64), array([[False]])]] 	 class: [3 4]
10:09:50,208 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:50,208 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 76.63 	 cIDON = [3 4], cIDOFF = [3 4]
10:09:50,208 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:50,208 root DEBUG dOFF/dON = 7.6
10:09:50,208 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.10929666530922, 'dON1': 0.014280975932381135, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.014280975932381135, 'nTON': 1, 'dON': 0.014280975932381135, 'dxOFFAngle': 78.54736460841234, 'dOFF1': 0.10796146370926314, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.10796146370926314, 'nTOFF': 1, 'dOFF': 0.10796146370926314, 'SUCCESS': True}
10:09:50,217 root DEBUG 

=================== Experiment ID #144 	 Dual Point ID: 148 ===================
10:09:50,226 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.295E-07|<1.000E-06)
10:09:50,226 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:50,509 root DEBUG Side: ON	 Angle(dx0, dx): 3.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.026E-02 	 Total distance: 3.026E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([197], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:50,841 root DEBUG Side: OFF	 Angle(dx0, dx): 1.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.011E-01 	 Total distance: 2.011E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([60], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:51,56 root DEBUG Side: OFF	 Angle(dx0, dx): 0.83 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.586E-02 	 Total distance: 2.670E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([133], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:51,57 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:51,57 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 79.64 	 cIDON = [2 4], cIDOFF = [2 4]
10:09:51,57 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:51,57 root DEBUG dOFF/dON = 8.8
10:09:51,57 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.13630735144878, 'dON1': 0.030255674468372493, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.030255674468372493, 'nTON': 1, 'dON': 0.030255674468372493, 'dxOFFAngle': 80.6065823414739, 'dOFF1': 0.2669641301469424, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.2669641301469424, 'nTOFF': 1, 'dOFF': 0.2669641301469424, 'SUCCESS': True}
10:09:51,66 root DEBUG 

=================== Experiment ID #145 	 Dual Point ID: 149 ===================
10:09:51,76 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.135E-08|<1.000E-06)
10:09:51,77 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:51,374 root DEBUG Side: ON	 Angle(dx0, dx): 2.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.711E-02 	 Total distance: 2.711E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([28], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:51,643 root DEBUG Side: OFF	 Angle(dx0, dx): 3.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.138E-01 	 Total distance: 1.138E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([49], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:51,643 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:51,643 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 61.52 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:51,643 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:51,643 root DEBUG dOFF/dON = 4.2
10:09:51,643 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 75.26861320072182, 'dON1': 0.027109868311731518, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.027109868311731518, 'nTON': 1, 'dON': 0.027109868311731518, 'dxOFFAngle': 80.50453483120664, 'dOFF1': 0.11380500393957856, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.11380500393957856, 'nTOFF': 1, 'dOFF': 0.11380500393957856, 'SUCCESS': True}
10:09:51,649 root DEBUG 

=================== Experiment ID #146 	 Dual Point ID: 150 ===================
10:09:51,662 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.177E-07|<1.000E-06)
10:09:51,663 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:51,966 root DEBUG Side: ON	 Angle(dx0, dx): 2.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.272E-01 	 Total distance: 1.272E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([8], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:09:52,275 root DEBUG Side: OFF	 Angle(dx0, dx): 0.88 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.401E-01 	 Total distance: 1.401E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([118], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:09:52,276 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:52,276 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 4.84 	 cIDON = [6 7], cIDOFF = [6 7]
10:09:52,276 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:52,276 root DEBUG dOFF/dON = 1.1
10:09:52,276 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.06030546578121, 'dON1': 0.1271827724997715, 'cIDON1': array([6, 7], dtype=int64), 'dON_patch_1': 0.1271827724997715, 'nTON': 1, 'dON': 0.1271827724997715, 'dxOFFAngle': 85.16161507360376, 'dOFF1': 0.14012894509890242, 'cIDOFF1': array([6, 7], dtype=int64), 'dOFF_patch_1': 0.14012894509890242, 'nTOFF': 1, 'dOFF': 0.14012894509890242, 'SUCCESS': True}
10:09:52,284 root DEBUG 

=================== Experiment ID #147 	 Dual Point ID: 151 ===================
10:09:52,293 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.041E-07|<1.000E-06)
10:09:52,294 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:52,577 root DEBUG Side: ON	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.542E-02 	 Total distance: 3.542E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([26], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:52,829 root DEBUG Side: OFF	 Angle(dx0, dx): 1.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.128E-01 	 Total distance: 3.128E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([247], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:52,829 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:52,830 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 79.66 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:52,830 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:52,830 root DEBUG dOFF/dON = 8.8
10:09:52,830 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.51758640429094, 'dON1': 0.03541876676580197, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.03541876676580197, 'nTON': 1, 'dON': 0.03541876676580197, 'dxOFFAngle': 87.83542245903732, 'dOFF1': 0.31281134429228846, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.31281134429228846, 'nTOFF': 1, 'dOFF': 0.31281134429228846, 'SUCCESS': True}
10:09:52,840 root DEBUG 

=================== Experiment ID #148 	 Dual Point ID: 152 ===================
10:09:52,848 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.758E-08|<1.000E-06)
10:09:52,849 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:53,186 root DEBUG Side: ON	 Angle(dx0, dx): 0.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.284E-02 	 Total distance: 5.284E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([170], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:53,408 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.878E-02 	 Total distance: 1.016E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([179], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:53,654 root DEBUG Side: ON	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.390E-02 	 Total distance: 1.455E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([53], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:53,897 root DEBUG Side: OFF	 Angle(dx0, dx): 4.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.097E-03 	 Total distance: 8.097E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([205], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:53,897 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:53,898 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -89.46 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:53,898 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:53,898 root DEBUG dOFF/dON = 0.1
10:09:53,898 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.49155038928228, 'dON1': 0.14552198022471932, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.14552198022471932, 'nTON': 1, 'dON': 0.14552198022471932, 'dxOFFAngle': 87.44739839473493, 'dOFF1': 0.008096548524035716, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.008096548524035716, 'nTOFF': 1, 'dOFF': 0.008096548524035716, 'SUCCESS': False}
10:09:53,911 root DEBUG 

=================== Experiment ID #149 	 Dual Point ID: 153 ===================
10:09:53,926 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.022E-07|<1.000E-06)
10:09:53,926 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:54,204 root DEBUG Side: ON	 Angle(dx0, dx): 1.99 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.030E-02 	 Total distance: 3.030E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([5], dtype=int64), array([[False]])]] 	 class: [3 8]
10:09:54,469 root DEBUG Side: OFF	 Angle(dx0, dx): 1.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.501E-02 	 Total distance: 2.501E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([5], dtype=int64), array([[False]])]] 	 class: [3 8]
10:09:54,469 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:54,469 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -9.57 	 cIDON = [3 8], cIDOFF = [3 8]
10:09:54,469 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:54,469 root DEBUG dOFF/dON = 0.8
10:09:54,469 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 73.13602429053189, 'dON1': 0.030303079956557274, 'cIDON1': array([3, 8], dtype=int64), 'dON_patch_1': 0.030303079956557274, 'nTON': 1, 'dON': 0.030303079956557274, 'dxOFFAngle': 81.51147522055142, 'dOFF1': 0.025009015793834195, 'cIDOFF1': array([3, 8], dtype=int64), 'dOFF_patch_1': 0.025009015793834195, 'nTOFF': 1, 'dOFF': 0.025009015793834195, 'SUCCESS': False}
10:09:54,478 root DEBUG 

=================== Experiment ID #150 	 Dual Point ID: 154 ===================
10:09:54,492 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.221E-08|<1.000E-06)
10:09:54,493 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:54,724 root DEBUG Side: ON	 Angle(dx0, dx): 0.83 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.647E-02 	 Total distance: 4.647E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([113], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:54,959 root DEBUG Side: OFF	 Angle(dx0, dx): 0.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.384E-03 	 Total distance: 4.384E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([56], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:54,959 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:54,959 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -82.76 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:54,959 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:54,959 root DEBUG dOFF/dON = 0.1
10:09:54,959 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 73.6744156039531, 'dON1': 0.04646797886473195, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.04646797886473195, 'nTON': 1, 'dON': 0.04646797886473195, 'dxOFFAngle': 79.07387658474927, 'dOFF1': 0.004383641332625999, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.004383641332625999, 'nTOFF': 1, 'dOFF': 0.004383641332625999, 'SUCCESS': False}
10:09:54,966 root DEBUG 

=================== Experiment ID #151 	 Dual Point ID: 155 ===================
10:09:54,974 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.390E-10|<1.000E-06)
10:09:54,974 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:55,272 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.841E-02 	 Total distance: 1.841E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([57], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:09:55,530 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.536E-02 	 Total distance: 3.536E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([104], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:09:55,530 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:55,531 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 31.53 	 cIDON = [7 9], cIDOFF = [7 9]
10:09:55,531 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:55,531 root DEBUG dOFF/dON = 1.9
10:09:55,531 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.93630076340827, 'dON1': 0.018407587717555216, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.018407587717555216, 'nTON': 1, 'dON': 0.018407587717555216, 'dxOFFAngle': 87.06762250720206, 'dOFF1': 0.03536219798759908, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.03536219798759908, 'nTOFF': 1, 'dOFF': 0.03536219798759908, 'SUCCESS': True}
10:09:55,541 root DEBUG 

=================== Experiment ID #152 	 Dual Point ID: 156 ===================
10:09:55,549 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.913E-07|<1.000E-06)
10:09:55,549 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:55,864 root DEBUG Side: ON	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.158E-02 	 Total distance: 1.158E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([62], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:56,192 root DEBUG Side: OFF	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.867E-01 	 Total distance: 1.867E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([178], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:56,343 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.239E-03 	 Total distance: 1.880E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([47], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:56,343 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:56,344 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 88.39 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:56,344 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:56,344 root DEBUG dOFF/dON = 16.2
10:09:56,344 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.72248046768928, 'dON1': 0.011582095652037048, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.011582095652037048, 'nTON': 1, 'dON': 0.011582095652037048, 'dxOFFAngle': 88.50246376577829, 'dOFF1': 0.18797835141715832, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.18797835141715832, 'nTOFF': 1, 'dOFF': 0.18797835141715832, 'SUCCESS': True}
10:09:56,357 root DEBUG 

=================== Experiment ID #153 	 Dual Point ID: 157 ===================
10:09:56,369 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.768E-07|<1.000E-06)
10:09:56,369 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:56,636 root DEBUG Side: ON	 Angle(dx0, dx): 0.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.359E-02 	 Total distance: 2.359E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([204], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:56,855 root DEBUG Side: OFF	 Angle(dx0, dx): 1.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.448E-02 	 Total distance: 2.448E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([84], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:56,856 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:56,856 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 1.85 	 cIDON = [5 7], cIDOFF = [5 7]
10:09:56,856 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:56,856 root DEBUG dOFF/dON = 1.0
10:09:56,856 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.19806097730451, 'dON1': 0.023585955410140174, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.023585955410140174, 'nTON': 1, 'dON': 0.023585955410140174, 'dxOFFAngle': 88.95406523609984, 'dOFF1': 0.024476454626553932, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.024476454626553932, 'nTOFF': 1, 'dOFF': 0.024476454626553932, 'SUCCESS': True}
10:09:56,862 root DEBUG 

=================== Experiment ID #154 	 Dual Point ID: 158 ===================
10:09:56,871 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.604E-09|<1.000E-06)
10:09:56,871 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:57,194 root DEBUG Side: ON	 Angle(dx0, dx): 5.71 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.385E-01 	 Total distance: 1.385E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([69], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:57,458 root DEBUG Side: OFF	 Angle(dx0, dx): 3.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.818E-02 	 Total distance: 1.818E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([147], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:57,459 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:57,459 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -76.80 	 cIDON = [2 4], cIDOFF = [2 4]
10:09:57,459 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:57,459 root DEBUG dOFF/dON = 0.1
10:09:57,459 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 66.62044544193672, 'dON1': 0.13851956959428677, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.13851956959428677, 'nTON': 1, 'dON': 0.13851956959428677, 'dxOFFAngle': 74.50767686099694, 'dOFF1': 0.018177052693852277, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.018177052693852277, 'nTOFF': 1, 'dOFF': 0.018177052693852277, 'SUCCESS': False}
10:09:57,468 root DEBUG 

=================== Experiment ID #155 	 Dual Point ID: 159 ===================
10:09:57,477 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.135E-07|<1.000E-06)
10:09:57,477 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:57,734 root DEBUG Side: ON	 Angle(dx0, dx): 0.88 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.718E-02 	 Total distance: 7.718E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([17], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:58,6 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.505E-01 	 Total distance: 1.505E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([196], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:58,208 root DEBUG Side: OFF	 Angle(dx0, dx): 0.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.925E-03 	 Total distance: 1.574E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([9], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:58,208 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:58,209 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 34.20 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:58,209 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:58,209 root DEBUG dOFF/dON = 2.0
10:09:58,209 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.6542235903336, 'dON1': 0.07718001128179497, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.07718001128179497, 'nTON': 1, 'dON': 0.07718001128179497, 'dxOFFAngle': 83.38490946484043, 'dOFF1': 0.15741594399491762, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.15741594399491762, 'nTOFF': 1, 'dOFF': 0.15741594399491762, 'SUCCESS': True}
10:09:58,216 root DEBUG 

=================== Experiment ID #156 	 Dual Point ID: 160 ===================
10:09:58,225 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.268E-07|<1.000E-06)
10:09:58,226 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:58,546 root DEBUG Side: ON	 Angle(dx0, dx): 6.93 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.106E-02 	 Total distance: 7.106E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([43], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:09:58,799 root DEBUG Side: OFF	 Angle(dx0, dx): 3.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.846E-02 	 Total distance: 8.846E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([180], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:09:58,975 root DEBUG Side: OFF	 Angle(dx0, dx): 4.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.027E-02 	 Total distance: 1.087E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([42], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:09:58,975 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:58,975 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 20.95 	 cIDON = [4 6], cIDOFF = [4 6]
10:09:58,975 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:58,975 root DEBUG dOFF/dON = 1.5
10:09:58,975 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 77.90586943885464, 'dON1': 0.07106109367486027, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.07106109367486027, 'nTON': 1, 'dON': 0.07106109367486027, 'dxOFFAngle': 78.58300667139821, 'dOFF1': 0.1087279151766294, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.1087279151766294, 'nTOFF': 1, 'dOFF': 0.1087279151766294, 'SUCCESS': True}
10:09:58,984 root DEBUG 

=================== Experiment ID #157 	 Dual Point ID: 161 ===================
10:09:58,993 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.573E-08|<1.000E-06)
10:09:58,993 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:59,295 root DEBUG Side: ON	 Angle(dx0, dx): 2.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.424E-02 	 Total distance: 9.424E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([16], dtype=int64), array([[False]])]] 	 class: [4 8]
10:09:59,568 root DEBUG Side: OFF	 Angle(dx0, dx): 0.79 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.489E-02 	 Total distance: 5.489E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([201], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:09:59,568 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:59,568 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -26.39 	 cIDON = [4 8], cIDOFF = [4 8]
10:09:59,569 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:59,569 root DEBUG dOFF/dON = 0.6
10:09:59,569 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 79.26303619848758, 'dON1': 0.0942410520692354, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.0942410520692354, 'nTON': 1, 'dON': 0.0942410520692354, 'dxOFFAngle': 80.49351680775018, 'dOFF1': 0.05488515519097359, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.05488515519097359, 'nTOFF': 1, 'dOFF': 0.05488515519097359, 'SUCCESS': False}
10:09:59,583 root DEBUG 

=================== Experiment ID #158 	 Dual Point ID: 162 ===================
10:09:59,591 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.464E-08|<1.000E-06)
10:09:59,591 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:59,879 root DEBUG Side: ON	 Angle(dx0, dx): 2.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.206E-01 	 Total distance: 1.206E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([227], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:00,173 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.759E-02 	 Total distance: 9.759E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([143], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:00,363 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.363E-01 	 Total distance: 3.339E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([89], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:00,364 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:00,364 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 46.93 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:00,364 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:00,364 root DEBUG dOFF/dON = 2.8
10:10:00,364 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.35871265124995, 'dON1': 0.12058757085353225, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.12058757085353225, 'nTON': 1, 'dON': 0.12058757085353225, 'dxOFFAngle': 82.85567232929188, 'dOFF1': 0.33385794178676953, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.33385794178676953, 'nTOFF': 1, 'dOFF': 0.33385794178676953, 'SUCCESS': True}
10:10:00,376 root DEBUG 

=================== Experiment ID #159 	 Dual Point ID: 163 ===================
10:10:00,388 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.179E-08|<1.000E-06)
10:10:00,389 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:00,634 root DEBUG Side: ON	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.039E-02 	 Total distance: 1.039E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([34], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:10:00,953 root DEBUG Side: OFF	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.337E-02 	 Total distance: 6.337E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([81], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:10:00,953 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:00,953 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 71.83 	 cIDON = [2 4], cIDOFF = [2 4]
10:10:00,953 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:00,954 root DEBUG dOFF/dON = 6.1
10:10:00,954 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 76.25525269836385, 'dON1': 0.01038954507151332, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.01038954507151332, 'nTON': 1, 'dON': 0.01038954507151332, 'dxOFFAngle': 81.0327842778717, 'dOFF1': 0.06337439083383888, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.06337439083383888, 'nTOFF': 1, 'dOFF': 0.06337439083383888, 'SUCCESS': True}
10:10:00,965 root DEBUG 

=================== Experiment ID #160 	 Dual Point ID: 164 ===================
10:10:00,972 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.494E-07|<1.000E-06)
10:10:00,972 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:01,258 root DEBUG Side: ON	 Angle(dx0, dx): 0.92 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.437E-02 	 Total distance: 9.437E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([217], dtype=int64), array([[False]])]] 	 class: [1 9]
10:10:01,435 root DEBUG Side: ON	 Angle(dx0, dx): 0.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.282E-02 	 Total distance: 1.572E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([210], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:10:01,714 root DEBUG Side: OFF	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.930E-01 	 Total distance: 1.930E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([155], dtype=int64), array([[False]])]] 	 class: [0 9]
10:10:01,714 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:01,715 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 10.23 	 cIDON = [1 9], cIDOFF = [0 9]
10:10:01,715 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:01,715 root DEBUG dOFF/dON = 1.2
10:10:01,715 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 79.58043820990706, 'dON1': 0.1571954632089999, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.1571954632089999, 'nTON': 1, 'dON': 0.1571954632089999, 'dxOFFAngle': 89.02113346676128, 'dOFF1': 0.19303770025421066, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.19303770025421066, 'nTOFF': 1, 'dOFF': 0.19303770025421066, 'SUCCESS': True}
10:10:01,729 root DEBUG 

=================== Experiment ID #161 	 Dual Point ID: 165 ===================
10:10:01,739 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.083E-09|<1.000E-06)
10:10:01,740 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:02,61 root DEBUG Side: ON	 Angle(dx0, dx): 4.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.281E-02 	 Total distance: 6.281E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([178], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:02,341 root DEBUG Side: OFF	 Angle(dx0, dx): 0.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.012E-02 	 Total distance: 2.012E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([62], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:02,342 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:02,342 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -51.48 	 cIDON = [3 6], cIDOFF = [3 6]
10:10:02,342 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:02,342 root DEBUG dOFF/dON = 0.3
10:10:02,342 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.2790534227908, 'dON1': 0.06280505749804655, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.06280505749804655, 'nTON': 1, 'dON': 0.06280505749804655, 'dxOFFAngle': 88.97233390263608, 'dOFF1': 0.02011696999095608, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.02011696999095608, 'nTOFF': 1, 'dOFF': 0.02011696999095608, 'SUCCESS': False}
10:10:02,356 root DEBUG 

=================== Experiment ID #162 	 Dual Point ID: 166 ===================
10:10:02,368 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.973E-09|<1.000E-06)
10:10:02,368 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:02,694 root DEBUG Side: ON	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.302E-02 	 Total distance: 2.302E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([19], dtype=int64), array([[False]])]] 	 class: [4 6]
10:10:02,995 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.095E-03 	 Total distance: 2.095E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([21], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:10:02,995 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:02,996 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -83.32 	 cIDON = [4 6], cIDOFF = [4 6]
10:10:02,996 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:02,996 root DEBUG dOFF/dON = 0.1
10:10:02,996 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.18265106499732, 'dON1': 0.02302038469276418, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.02302038469276418, 'nTON': 1, 'dON': 0.02302038469276418, 'dxOFFAngle': 86.05844563334878, 'dOFF1': 0.0020946483475128915, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.0020946483475128915, 'nTOFF': 1, 'dOFF': 0.0020946483475128915, 'SUCCESS': False}
10:10:03,5 root DEBUG 

=================== Experiment ID #163 	 Dual Point ID: 167 ===================
10:10:03,14 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.484E-07|<1.000E-06)
10:10:03,14 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:03,257 root DEBUG Side: ON	 Angle(dx0, dx): 1.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.791E-04 	 Total distance: 6.791E-04 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([199], dtype=int64), array([[ True]])]] 	 class: [5 8]
10:10:03,447 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.985E-02 	 Total distance: 3.053E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([41], dtype=int64), array([[False]])]] 	 class: [5 8]
10:10:03,704 root DEBUG Side: OFF	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.603E-01 	 Total distance: 2.603E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([13], dtype=int64), array([[False]])]] 	 class: [5 8]
10:10:03,704 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:03,704 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 79.00 	 cIDON = [5 8], cIDOFF = [5 8]
10:10:03,704 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:03,705 root DEBUG dOFF/dON = 8.5
10:10:03,705 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.89250361122353, 'dON1': 0.030533612831256215, 'cIDON1': array([5, 8], dtype=int64), 'dON_patch_1': 0.030533612831256215, 'nTON': 1, 'dON': 0.030533612831256215, 'dxOFFAngle': 86.21604927956486, 'dOFF1': 0.2602664816713788, 'cIDOFF1': array([5, 8], dtype=int64), 'dOFF_patch_1': 0.2602664816713788, 'nTOFF': 1, 'dOFF': 0.2602664816713788, 'SUCCESS': True}
10:10:03,712 root DEBUG 

=================== Experiment ID #164 	 Dual Point ID: 168 ===================
10:10:03,724 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.320E-07|<1.000E-06)
10:10:03,725 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:04,22 root DEBUG Side: ON	 Angle(dx0, dx): 0.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.131E-01 	 Total distance: 1.131E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([192], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:04,338 root DEBUG Side: OFF	 Angle(dx0, dx): 1.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.787E-02 	 Total distance: 4.787E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([41], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:04,338 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:04,338 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -40.51 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:04,339 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:04,339 root DEBUG dOFF/dON = 0.4
10:10:04,339 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 74.46607743217159, 'dON1': 0.1130657793731732, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.1130657793731732, 'nTON': 1, 'dON': 0.1130657793731732, 'dxOFFAngle': 76.11841172929657, 'dOFF1': 0.04787125467797682, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.04787125467797682, 'nTOFF': 1, 'dOFF': 0.04787125467797682, 'SUCCESS': False}
10:10:04,345 root DEBUG 

=================== Experiment ID #165 	 Dual Point ID: 169 ===================
10:10:04,351 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.125E-09|<1.000E-06)
10:10:04,351 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:04,656 root DEBUG Side: ON	 Angle(dx0, dx): 0.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.896E-02 	 Total distance: 2.896E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([20], dtype=int64), array([[False]])]] 	 class: [6 7]
10:10:04,913 root DEBUG Side: OFF	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.140E-03 	 Total distance: 9.140E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([195], dtype=int64), array([[False]])]] 	 class: [6 7]
10:10:05,159 root DEBUG Side: OFF	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.833E-03 	 Total distance: 1.197E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([132], dtype=int64), array([[False]])]] 	 class: [6 7]
10:10:05,159 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:05,160 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -41.51 	 cIDON = [6 7], cIDOFF = [6 7]
10:10:05,160 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:05,160 root DEBUG dOFF/dON = 0.4
10:10:05,160 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.95649819827022, 'dON1': 0.028964088957963686, 'cIDON1': array([6, 7], dtype=int64), 'dON_patch_1': 0.028964088957963686, 'nTON': 1, 'dON': 0.028964088957963686, 'dxOFFAngle': 88.20833484392483, 'dOFF1': 0.011973014899987262, 'cIDOFF1': array([6, 7], dtype=int64), 'dOFF_patch_1': 0.011973014899987262, 'nTOFF': 1, 'dOFF': 0.011973014899987262, 'SUCCESS': False}
10:10:05,167 root DEBUG 

=================== Experiment ID #166 	 Dual Point ID: 170 ===================
10:10:05,179 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.003E-07|<1.000E-06)
10:10:05,180 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:05,479 root DEBUG Side: ON	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.378E-02 	 Total distance: 1.378E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([246], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:05,784 root DEBUG Side: OFF	 Angle(dx0, dx): 0.73 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.428E-01 	 Total distance: 1.428E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([112], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:05,785 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:05,785 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 82.40 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:05,785 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:05,785 root DEBUG dOFF/dON = 10.4
10:10:05,785 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.46916450438232, 'dON1': 0.013784075460916949, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.013784075460916949, 'nTON': 1, 'dON': 0.013784075460916949, 'dxOFFAngle': 88.86139372933668, 'dOFF1': 0.14283199208680003, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.14283199208680003, 'nTOFF': 1, 'dOFF': 0.14283199208680003, 'SUCCESS': True}
10:10:05,795 root DEBUG 

=================== Experiment ID #167 	 Dual Point ID: 171 ===================
10:10:05,806 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.135E-09|<1.000E-06)
10:10:05,806 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:06,26 root DEBUG Side: ON	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.408E-02 	 Total distance: 1.408E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([83], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:10:06,162 root DEBUG Side: ON	 Angle(dx0, dx): 9.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.689E-02 	 Total distance: 1.010E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([50], dtype=int64), array([[False]])]] 	 class: [7 9]
10:10:06,391 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.675E-02 	 Total distance: 2.675E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([151], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:10:06,645 root DEBUG Side: OFF	 Angle(dx0, dx): 1.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.622E-02 	 Total distance: 1.130E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([231], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:10:06,645 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:06,645 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 5.61 	 cIDON = [7 9], cIDOFF = [7 9]
10:10:06,645 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:06,645 root DEBUG dOFF/dON = 1.1
10:10:06,645 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 70.03729167406064, 'dON1': 0.10097234337560436, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.10097234337560436, 'nTON': 1, 'dON': 0.10097234337560436, 'dxOFFAngle': 81.80117136770252, 'dOFF1': 0.11296549999913594, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.11296549999913594, 'nTOFF': 1, 'dOFF': 0.11296549999913594, 'SUCCESS': True}
10:10:06,654 root DEBUG 

=================== Experiment ID #168 	 Dual Point ID: 172 ===================
10:10:06,665 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.912E-08|<1.000E-06)
10:10:06,665 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:06,962 root DEBUG Side: ON	 Angle(dx0, dx): 0.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.192E-01 	 Total distance: 1.192E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([213], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:10:07,207 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.513E-01 	 Total distance: 2.705E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([246], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:10:07,436 root DEBUG Side: OFF	 Angle(dx0, dx): 1.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.655E-03 	 Total distance: 7.655E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([194], dtype=int64), array([[False]])]] 	 class: [1 9]
10:10:07,437 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:07,437 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -94.50 	 cIDON = [0 9], cIDOFF = [1 9]
10:10:07,437 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:07,437 root DEBUG dOFF/dON = 0.0
10:10:07,437 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 71.93395984192125, 'dON1': 0.27051779504760876, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.27051779504760876, 'nTON': 1, 'dON': 0.27051779504760876, 'dxOFFAngle': 87.17105777059918, 'dOFF1': 0.007654532904831424, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.007654532904831424, 'nTOFF': 1, 'dOFF': 0.007654532904831424, 'SUCCESS': False}
10:10:07,447 root DEBUG 

=================== Experiment ID #169 	 Dual Point ID: 173 ===================
10:10:07,456 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.074E-08|<1.000E-06)
10:10:07,456 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:07,751 root DEBUG Side: ON	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.585E-03 	 Total distance: 4.585E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([20], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:08,63 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.381E-02 	 Total distance: 3.381E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([188], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:08,63 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:08,64 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 76.11 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:08,64 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:08,64 root DEBUG dOFF/dON = 7.4
10:10:08,64 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.74738758047506, 'dON1': 0.004585419064119844, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.004585419064119844, 'nTON': 1, 'dON': 0.004585419064119844, 'dxOFFAngle': 86.44230442753715, 'dOFF1': 0.03380705492844965, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.03380705492844965, 'nTOFF': 1, 'dOFF': 0.03380705492844965, 'SUCCESS': True}
10:10:08,74 root DEBUG 

=================== Experiment ID #170 	 Dual Point ID: 174 ===================
10:10:08,80 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.331E-08|<1.000E-06)
10:10:08,81 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:08,417 root DEBUG Side: ON	 Angle(dx0, dx): 1.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.447E-01 	 Total distance: 2.447E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([157], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:08,757 root DEBUG Side: OFF	 Angle(dx0, dx): 0.88 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.725E-01 	 Total distance: 1.725E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([74], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:08,983 root DEBUG Side: OFF	 Angle(dx0, dx): 0.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.034E-01 	 Total distance: 2.759E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([238], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:08,983 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:08,983 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 6.01 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:08,983 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:08,983 root DEBUG dOFF/dON = 1.1
10:10:08,983 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.3530426481094, 'dON1': 0.2446515479384583, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.2446515479384583, 'nTON': 1, 'dON': 0.2446515479384583, 'dxOFFAngle': 84.9041494173244, 'dOFF1': 0.2759355109540023, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.2759355109540023, 'nTOFF': 1, 'dOFF': 0.2759355109540023, 'SUCCESS': True}
10:10:08,994 root DEBUG 

=================== Experiment ID #171 	 Dual Point ID: 175 ===================
10:10:09,4 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.135E-09|<1.000E-06)
10:10:09,5 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:09,325 root DEBUG Side: ON	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.302E-02 	 Total distance: 7.302E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([42], dtype=int64), array([[False]])]] 	 class: [5 9]
10:10:09,567 root DEBUG Side: OFF	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.175E-01 	 Total distance: 1.175E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([197], dtype=int64), array([[False]])]] 	 class: [5 9]
10:10:09,567 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:09,568 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 23.33 	 cIDON = [5 9], cIDOFF = [5 9]
10:10:09,568 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:09,568 root DEBUG dOFF/dON = 1.6
10:10:09,568 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.4557406581958, 'dON1': 0.0730234294480945, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.0730234294480945, 'nTON': 1, 'dON': 0.0730234294480945, 'dxOFFAngle': 89.44035664535556, 'dOFF1': 0.11745246425239518, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.11745246425239518, 'nTOFF': 1, 'dOFF': 0.11745246425239518, 'SUCCESS': True}
10:10:09,577 root DEBUG 

=================== Experiment ID #172 	 Dual Point ID: 176 ===================
10:10:09,585 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.882E-08|<1.000E-06)
10:10:09,586 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:09,879 root DEBUG Side: ON	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.734E-02 	 Total distance: 3.734E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([44], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:10,162 root DEBUG Side: OFF	 Angle(dx0, dx): 1.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.507E-02 	 Total distance: 4.507E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([63], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:10,162 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:10,163 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 9.39 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:10,163 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:10,163 root DEBUG dOFF/dON = 1.2
10:10:10,163 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.15417686408024, 'dON1': 0.03733813457871948, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.03733813457871948, 'nTON': 1, 'dON': 0.03733813457871948, 'dxOFFAngle': 86.4626493925436, 'dOFF1': 0.04507462045491994, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.04507462045491994, 'nTOFF': 1, 'dOFF': 0.04507462045491994, 'SUCCESS': True}
10:10:10,173 root DEBUG 

=================== Experiment ID #173 	 Dual Point ID: 177 ===================
10:10:10,182 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.783E-08|<1.000E-06)
10:10:10,183 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:10,503 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.947E-02 	 Total distance: 6.947E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([28], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:10,738 root DEBUG Side: ON	 Angle(dx0, dx): 1.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.370E-02 	 Total distance: 1.132E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([199], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:10,903 root DEBUG Side: ON	 Angle(dx0, dx): 0.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.525E-02 	 Total distance: 1.284E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([26], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:11,151 root DEBUG Side: OFF	 Angle(dx0, dx): 0.83 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.338E-01 	 Total distance: 1.338E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([63], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:11,151 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:11,151 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 2.06 	 cIDON = [5 7], cIDOFF = [5 7]
10:10:11,151 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:11,151 root DEBUG dOFF/dON = 1.0
10:10:11,151 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.69968671012667, 'dON1': 0.12841307070237643, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.12841307070237643, 'nTON': 1, 'dON': 0.12841307070237643, 'dxOFFAngle': 88.82731869273744, 'dOFF1': 0.13382359028024102, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.13382359028024102, 'nTOFF': 1, 'dOFF': 0.13382359028024102, 'SUCCESS': True}
10:10:11,362 matplotlib.pyplot DEBUG Loaded backend tkagg version 8.6.
10:10:11,435 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:11,436 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:11,436 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:11,436 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:11,436 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 1189
10:10:11,443 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:11,443 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:11,443 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:11,443 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:11,443 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 2994
10:10:11,473 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:11,473 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:11,473 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:11,473 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:11,473 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 696
10:10:11,477 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:11,477 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:11,477 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:11,478 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:11,478 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 526
10:10:11,482 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:11,483 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:11,483 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:11,483 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:11,483 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 499
10:10:11,489 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:11,490 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:11,490 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:11,490 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:11,490 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 673
10:10:11,495 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:11,496 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:11,496 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:11,496 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:11,496 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 922
10:10:11,501 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:11,501 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:11,501 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:11,501 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:11,501 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 568
10:10:11,505 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:11,506 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:11,506 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:11,506 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:11,506 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 626
10:10:11,514 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
10:10:11,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:10:11,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:10:11,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:10:11,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:10:11,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,516 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:10:11,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:11,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:10:11,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:10:11,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,517 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:10:11,518 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,519 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:11,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:11,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:10:11,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,520 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,521 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:11,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:10:11,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:10:11,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:11,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:11,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:11,522 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:11,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:10:11,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,523 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:11,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:11,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:10:11,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:11,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:11,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:11,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,524 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,525 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:11,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:11,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,526 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:10:11,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,527 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:11,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,528 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,529 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,530 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,530 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:11,530 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:10:11,530 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,530 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,530 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,530 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,530 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,530 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,530 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,530 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,531 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,531 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,531 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,531 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:10:11,531 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,531 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,531 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,531 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,531 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:11,531 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,531 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,531 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,532 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,532 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,532 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,532 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,532 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,532 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,532 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,532 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,532 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,532 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,532 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,532 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,532 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:10:11,533 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,533 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,533 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,533 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,533 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:10:11,533 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,533 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:10:11,533 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:10:11,533 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,533 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,533 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,533 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,533 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,534 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,534 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,534 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,534 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,534 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,534 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,534 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,534 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,534 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,534 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,534 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,534 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,534 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:11,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:11,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:10:11,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,535 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,536 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,536 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,536 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,536 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,536 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,536 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,536 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,536 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,536 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,536 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,536 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,536 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:11,536 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,537 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,537 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,537 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,537 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,537 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,537 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,537 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,537 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,537 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:11,537 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,537 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,537 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,537 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:10:11,538 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,538 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,538 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:11,538 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,538 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,538 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,538 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:11,538 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,538 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,538 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,538 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,538 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
10:10:11,654 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
10:10:11,654 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,654 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,655 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:10:11,655 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:10:11,655 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,655 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,655 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,655 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,655 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,655 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,655 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,655 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,655 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:10:11,655 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,655 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,655 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,656 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,656 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,656 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,656 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,656 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,656 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,656 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,656 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,656 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,656 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,656 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,656 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,656 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,656 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,656 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,656 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:10:11,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:10:11,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:11,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:10:11,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,659 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,659 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,659 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,659 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:10:11,659 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,659 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,659 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,659 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,659 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,659 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,659 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,659 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,659 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,659 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,659 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,659 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,660 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,660 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,660 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,660 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,660 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,660 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:11,660 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,660 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,660 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:10:11,660 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,660 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,660 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,660 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,660 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,660 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,660 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,660 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:11,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:10:11,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,662 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,662 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,662 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:11,662 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,662 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,662 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,662 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,662 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,662 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,662 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,662 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,662 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,662 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,662 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,663 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,663 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,663 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,663 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,663 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,663 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,663 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,663 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,663 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,663 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,663 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,663 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,663 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,663 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,663 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,663 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,663 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:11,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:11,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:10:11,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:11,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:10:11,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:11,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:11,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:10:11,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:10:11,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:11,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:11,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:11,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:11,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:10:11,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:11,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:11,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:10:11,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:11,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:11,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:11,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:10:11,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:11,673 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,673 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,673 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,673 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,673 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,673 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,673 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,673 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:11,673 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,673 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,674 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:10:11,674 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,674 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:10:11,674 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,674 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:10:11,674 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,674 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:11,674 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,674 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,674 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,674 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,674 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:11,674 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,674 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,674 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,675 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,675 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,675 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:11,675 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,675 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,675 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,675 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,675 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,675 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,675 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,675 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,675 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,675 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,675 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,676 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,676 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,676 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,676 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,676 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,676 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,676 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,676 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,676 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,676 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,676 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,676 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,676 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,676 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,677 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,677 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:10:11,677 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,677 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,677 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,677 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,677 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,677 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,677 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,677 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,677 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,677 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,677 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,678 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,678 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,678 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,678 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,678 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,678 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,678 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,679 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,679 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,679 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:11,679 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,679 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,679 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,679 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,679 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,679 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,679 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,679 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,680 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,680 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,680 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,680 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,680 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,680 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:11,680 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:10:11,680 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,680 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,680 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,680 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,680 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,681 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,681 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,681 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,681 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,681 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,681 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,681 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:10:11,681 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,681 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,681 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,682 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,682 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:11,682 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,682 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,682 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,682 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,682 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,682 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:10:11,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:10:11,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:10:11,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:10:11,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,686 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,686 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,686 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,686 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,686 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,687 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,687 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,687 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:11,687 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,687 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,687 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,687 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,687 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,687 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:11,687 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,687 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,687 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,688 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:10:11,688 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,688 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,688 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,688 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,688 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,688 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,688 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,688 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,688 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,688 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,689 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,689 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,689 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,690 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,690 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,690 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:11,691 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,691 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,691 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,691 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,691 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,691 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,691 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,691 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,691 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,692 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:11,692 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,692 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,692 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,692 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:10:11,692 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,692 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,692 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:11,692 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,693 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,693 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,693 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:11,693 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,693 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,693 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,693 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,693 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
10:10:11,893 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0.
10:10:11,893 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,893 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,893 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:10:11,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:10:11,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,895 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:10:11,895 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,895 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,895 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,895 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,895 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,895 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,895 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,895 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,895 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,895 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:10:11,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:10:11,898 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,898 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,898 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,898 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,898 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,898 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,898 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:11,898 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,898 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,898 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:10:11,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:10:11,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,900 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,900 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,900 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,900 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,900 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,900 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,900 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,900 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,900 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,901 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,901 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,901 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,901 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:11,901 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,901 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,901 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:10:11,901 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,901 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,901 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,902 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,902 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,902 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,902 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,902 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,902 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:11,902 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,902 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,902 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,902 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:10:11,902 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,903 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,903 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,903 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,903 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,903 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,903 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,903 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,903 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,903 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,903 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,904 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:11,904 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,904 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,904 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,904 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,904 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,904 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,904 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,904 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,904 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,905 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,905 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,905 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,905 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,905 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,905 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,905 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,905 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,905 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:11,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:11,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:10:11,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:11,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:10:11,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:11,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:11,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:10:11,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:10:11,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:11,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:11,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:11,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:11,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:10:11,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:11,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:11,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:10:11,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:11,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:11,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:11,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:10:11,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:11,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:11,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:10:11,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:10:11,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:10:11,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:11,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:11,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:11,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,918 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,919 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,919 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,919 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,919 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,919 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,919 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,919 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:10:11,919 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,919 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,919 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,919 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,919 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,920 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,920 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,920 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,920 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,920 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,920 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,920 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,920 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,920 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,920 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,920 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,920 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,920 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,920 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,920 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,920 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:11,920 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,920 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,921 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,921 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,921 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,921 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,921 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,921 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,921 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,921 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,921 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,921 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,921 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,921 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:11,921 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:10:11,921 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,921 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,921 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,921 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,921 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,922 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,922 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,922 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,922 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,922 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,922 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,922 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:10:11,922 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,922 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,922 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,922 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,922 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:11,922 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,922 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,922 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,922 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,922 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,923 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,923 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,923 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,923 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,923 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,923 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,923 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,923 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,923 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,923 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,923 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:10:11,923 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,923 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,923 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,923 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,923 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:10:11,923 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,923 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:10:11,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:10:11,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,924 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:11,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:11,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:11,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:11,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:10:11,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,925 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:11,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,926 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:11,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:11,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:10:11,927 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:11,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:11,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:11,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:11,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,928 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:11,928 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
