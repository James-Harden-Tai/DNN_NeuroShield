10:08:00,468 root DEBUG Check that model weights are dtype tf.float64: 	 <dtype: 'float64'>
10:08:00,469 root INFO eps: 1e-06
10:08:00,469 root INFO tol: 1e-06
10:08:00,469 root DEBUG Load dual points from file: ../data/dual_points_cifar10_3x256_64_10_float64.
10:08:00,478 root DEBUG 

=================== Experiment ID #0 	 Dual Point ID: 1 ===================
10:08:00,487 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.258E-07|<1.000E-06)
10:08:00,487 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:00,780 root DEBUG Side: ON	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.996E-01 	 Total distance: 2.996E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([157], dtype=int64), array([[False]])]] 	 class: [0 6]
10:08:01,121 root DEBUG Side: OFF	 Angle(dx0, dx): 0.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.319E-01 	 Total distance: 1.319E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([84], dtype=int64), array([[False]])]] 	 class: [1 6]
10:08:01,121 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:01,121 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -38.85 	 cIDON = [0 6], cIDOFF = [1 6]
10:08:01,121 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:01,122 root DEBUG dOFF/dON = 0.4
10:08:01,122 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.01174397974155, 'dON1': 0.29956668917084067, 'cIDON1': array([0, 6], dtype=int64), 'dON_patch_1': 0.29956668917084067, 'nTON': 1, 'dON': 0.29956668917084067, 'dxOFFAngle': 88.6305091350609, 'dOFF1': 0.1319297613376276, 'cIDOFF1': array([1, 6], dtype=int64), 'dOFF_patch_1': 0.1319297613376276, 'nTOFF': 1, 'dOFF': 0.1319297613376276, 'SUCCESS': False}
10:08:01,137 root DEBUG 

=================== Experiment ID #1 	 Dual Point ID: 2 ===================
10:08:01,150 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.245E-08|<1.000E-06)
10:08:01,150 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:01,552 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.250E-02 	 Total distance: 9.250E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([55], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:01,878 root DEBUG Side: OFF	 Angle(dx0, dx): 7.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.680E-02 	 Total distance: 7.680E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([7, 8], dtype=int64), array([[0.],
       [1.]])]] 	 class: [8 9]
10:08:01,878 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:01,878 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -9.27 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:01,878 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:01,878 root DEBUG dOFF/dON = 0.8
10:08:01,878 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.545674578483, 'dON1': 0.09249576677749628, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.09249576677749628, 'nTON': 1, 'dON': 0.09249576677749628, 'dxOFFAngle': 80.80417261618388, 'dOFF1': 0.07679500053912539, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.07679500053912539, 'nTOFF': 1, 'dOFF': 0.07679500053912539, 'SUCCESS': False}
10:08:01,902 root DEBUG 

=================== Experiment ID #2 	 Dual Point ID: 3 ===================
10:08:01,914 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.415E-08|<1.000E-06)
10:08:01,914 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:02,279 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.000E-01 	 Total distance: 2.000E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([200], dtype=int64), array([[False]])]] 	 class: [0 6]
10:08:02,546 root DEBUG Side: ON	 Angle(dx0, dx): 1.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.317E-01 	 Total distance: 3.317E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([43], dtype=int64), array([[False]])]] 	 class: [0 6]
10:08:02,815 root DEBUG Side: OFF	 Angle(dx0, dx): 0.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.387E-03 	 Total distance: 8.387E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([30], dtype=int64), array([[ True]])]] 	 class: [1 6]
10:08:02,815 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:02,815 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -95.07 	 cIDON = [0 6], cIDOFF = [1 6]
10:08:02,815 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:02,815 root DEBUG dOFF/dON = 0.0
10:08:02,815 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.26015356519746, 'dON1': 0.33173132900462443, 'cIDON1': array([0, 6], dtype=int64), 'dON_patch_1': 0.33173132900462443, 'nTON': 1, 'dON': 0.33173132900462443, 'dxOFFAngle': 87.89528362702931, 'dOFF1': 0.008386867715316685, 'cIDOFF1': array([1, 6], dtype=int64), 'dOFF_patch_1': 0.008386867715316685, 'nTOFF': 1, 'dOFF': 0.008386867715316685, 'SUCCESS': False}
10:08:02,830 root DEBUG 

=================== Experiment ID #3 	 Dual Point ID: 4 ===================
10:08:02,842 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.612E-08|<1.000E-06)
10:08:02,842 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:03,102 root DEBUG Side: ON	 Angle(dx0, dx): 0.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.380E-01 	 Total distance: 1.380E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([210], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:08:03,424 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.123E-02 	 Total distance: 5.123E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([137], dtype=int64), array([[False]])]] 	 class: [0 8]
10:08:03,661 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.329E-02 	 Total distance: 6.452E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([63], dtype=int64), array([[False]])]] 	 class: [0 8]
10:08:03,662 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:03,662 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -36.28 	 cIDON = [1 8], cIDOFF = [0 8]
10:08:03,662 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:03,662 root DEBUG dOFF/dON = 0.5
10:08:03,662 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.2219237574289, 'dON1': 0.13799683431033233, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 0.13799683431033233, 'nTON': 1, 'dON': 0.13799683431033233, 'dxOFFAngle': 87.56299594136021, 'dOFF1': 0.06451664575821374, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.06451664575821374, 'nTOFF': 1, 'dOFF': 0.06451664575821374, 'SUCCESS': False}
10:08:03,669 root DEBUG 

=================== Experiment ID #4 	 Dual Point ID: 5 ===================
10:08:03,677 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.710E-08|<1.000E-06)
10:08:03,677 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:03,950 root DEBUG Side: ON	 Angle(dx0, dx): 1.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.602E-02 	 Total distance: 1.602E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([72], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:04,212 root DEBUG Side: OFF	 Angle(dx0, dx): 1.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.925E-01 	 Total distance: 4.925E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([87], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:04,212 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:04,213 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 93.70 	 cIDON = [3 7], cIDOFF = [3 7]
10:08:04,213 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:04,213 root DEBUG dOFF/dON = 30.8
10:08:04,213 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.70959677289089, 'dON1': 0.016016634480492165, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.016016634480492165, 'nTON': 1, 'dON': 0.016016634480492165, 'dxOFFAngle': 86.38096621473903, 'dOFF1': 0.4925209578072544, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.4925209578072544, 'nTOFF': 1, 'dOFF': 0.4925209578072544, 'SUCCESS': True}
10:08:04,222 root DEBUG 

=================== Experiment ID #5 	 Dual Point ID: 6 ===================
10:08:04,237 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.176E-08|<1.000E-06)
10:08:04,237 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:04,464 root DEBUG Side: ON	 Angle(dx0, dx): 5.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.479E-07 	 Total distance: 4.479E-07 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:08:04,650 root DEBUG Side: ON	 Angle(dx0, dx): 0.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.808E-02 	 Total distance: 3.808E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([110], dtype=int64), array([[False]])]] 	 class: [0 8]
10:08:05,7 root DEBUG Side: OFF	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.068E-02 	 Total distance: 2.068E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([255], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:08:05,7 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:05,8 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -29.62 	 cIDON = [0 8], cIDOFF = [1 8]
10:08:05,8 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:05,8 root DEBUG dOFF/dON = 0.5
10:08:05,8 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.94763921533657, 'dON1': 0.038076348873152026, 'cIDON1': array([0, 8], dtype=int64), 'dON_patch_1': 0.038076348873152026, 'nTON': 1, 'dON': 0.038076348873152026, 'dxOFFAngle': 89.98688659000638, 'dOFF1': 0.02067621916764477, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 0.02067621916764477, 'nTOFF': 1, 'dOFF': 0.02067621916764477, 'SUCCESS': False}
10:08:05,14 root DEBUG 

=================== Experiment ID #6 	 Dual Point ID: 7 ===================
10:08:05,22 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.103E-08|<1.000E-06)
10:08:05,22 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:05,336 root DEBUG Side: ON	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.486E-02 	 Total distance: 4.486E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([199], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:08:05,765 root DEBUG Side: OFF	 Angle(dx0, dx): 0.84 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.591E-01 	 Total distance: 4.591E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([25], dtype=int64), array([[False]])]] 	 class: [4 7]
10:08:05,765 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:05,765 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 82.20 	 cIDON = [4 7], cIDOFF = [4 7]
10:08:05,766 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:05,766 root DEBUG dOFF/dON = 10.2
10:08:05,766 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.6091534980379, 'dON1': 0.04486283182547145, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.04486283182547145, 'nTON': 1, 'dON': 0.04486283182547145, 'dxOFFAngle': 86.12054680415504, 'dOFF1': 0.4590891861245985, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.4590891861245985, 'nTOFF': 1, 'dOFF': 0.4590891861245985, 'SUCCESS': True}
10:08:05,775 root DEBUG 

=================== Experiment ID #7 	 Dual Point ID: 8 ===================
10:08:05,782 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.021E-08|<1.000E-06)
10:08:05,782 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:06,152 root DEBUG Side: ON	 Angle(dx0, dx): 0.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.527E-02 	 Total distance: 8.527E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([175], dtype=int64), array([[False]])]] 	 class: [3 8]
10:08:06,555 root DEBUG Side: OFF	 Angle(dx0, dx): 0.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.325E-01 	 Total distance: 3.325E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([70], dtype=int64), array([[False]])]] 	 class: [3 8]
10:08:06,556 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:06,556 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 59.18 	 cIDON = [3 8], cIDOFF = [3 8]
10:08:06,556 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:06,556 root DEBUG dOFF/dON = 3.9
10:08:06,556 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.90715305805834, 'dON1': 0.08526969396744587, 'cIDON1': array([3, 8], dtype=int64), 'dON_patch_1': 0.08526969396744587, 'nTON': 1, 'dON': 0.08526969396744587, 'dxOFFAngle': 89.98332750688742, 'dOFF1': 0.33246511729328726, 'cIDOFF1': array([3, 8], dtype=int64), 'dOFF_patch_1': 0.33246511729328726, 'nTOFF': 1, 'dOFF': 0.33246511729328726, 'SUCCESS': True}
10:08:06,564 root DEBUG 

=================== Experiment ID #8 	 Dual Point ID: 9 ===================
10:08:06,577 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.486E-08|<1.000E-06)
10:08:06,577 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:06,945 root DEBUG Side: ON	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.953E-01 	 Total distance: 1.953E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([93], dtype=int64), array([[False]])]] 	 class: [4 5]
10:08:07,286 root DEBUG Side: OFF	 Angle(dx0, dx): 0.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.824E-02 	 Total distance: 2.824E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([189], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:08:07,286 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:07,288 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -74.73 	 cIDON = [4 5], cIDOFF = [4 5]
10:08:07,288 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:07,288 root DEBUG dOFF/dON = 0.1
10:08:07,288 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.94749785292446, 'dON1': 0.19525367307031413, 'cIDON1': array([4, 5], dtype=int64), 'dON_patch_1': 0.19525367307031413, 'nTON': 1, 'dON': 0.19525367307031413, 'dxOFFAngle': 85.14767316195937, 'dOFF1': 0.02823504072465752, 'cIDOFF1': array([4, 5], dtype=int64), 'dOFF_patch_1': 0.02823504072465752, 'nTOFF': 1, 'dOFF': 0.02823504072465752, 'SUCCESS': False}
10:08:07,298 root DEBUG 

=================== Experiment ID #9 	 Dual Point ID: 10 ===================
10:08:07,310 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.832E-08|<1.000E-06)
10:08:07,310 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:07,649 root DEBUG Side: ON	 Angle(dx0, dx): 1.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.133E-01 	 Total distance: 1.133E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([219], dtype=int64), array([[False]])]] 	 class: [2 3]
10:08:07,966 root DEBUG Side: OFF	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.579E-01 	 Total distance: 1.579E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([156], dtype=int64), array([[False]])]] 	 class: [2 3]
10:08:07,966 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:07,966 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 16.45 	 cIDON = [2 3], cIDOFF = [2 3]
10:08:07,966 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:07,966 root DEBUG dOFF/dON = 1.4
10:08:07,966 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.25585121653101, 'dON1': 0.11328504692616971, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.11328504692616971, 'nTON': 1, 'dON': 0.11328504692616971, 'dxOFFAngle': 82.92342064699928, 'dOFF1': 0.15790352153279882, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.15790352153279882, 'nTOFF': 1, 'dOFF': 0.15790352153279882, 'SUCCESS': True}
10:08:07,973 root DEBUG 

=================== Experiment ID #10 	 Dual Point ID: 11 ===================
10:08:07,982 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.903E-07|<1.000E-06)
10:08:07,982 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:08,319 root DEBUG Side: ON	 Angle(dx0, dx): 0.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.978E-01 	 Total distance: 1.978E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([95], dtype=int64), array([[False]])]] 	 class: [0 9]
10:08:08,542 root DEBUG Side: OFF	 Angle(dx0, dx): 7.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.795E-06 	 Total distance: 1.795E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 9]
10:08:08,542 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:08,542 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -100.00 	 cIDON = [0 9], cIDOFF = [0 9]
10:08:08,542 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:08,542 root DEBUG dOFF/dON = 0.0
10:08:08,542 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.90384779071755, 'dON1': 0.19775920567109795, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.19775920567109795, 'nTON': 1, 'dON': 0.19775920567109795, 'dxOFFAngle': 86.23990832373445, 'dOFF1': 1.795487415157121e-06, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 1.795487415157121e-06, 'nTOFF': 1, 'dOFF': 1.795487415157121e-06, 'SUCCESS': False}
10:08:08,552 root DEBUG 

=================== Experiment ID #11 	 Dual Point ID: 12 ===================
10:08:08,561 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.242E-07|<1.000E-06)
10:08:08,561 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:08,962 root DEBUG Side: ON	 Angle(dx0, dx): 1.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.262E-01 	 Total distance: 2.262E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([255], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:09,299 root DEBUG Side: OFF	 Angle(dx0, dx): 3.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.383E-01 	 Total distance: 3.383E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([26], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:09,468 root DEBUG Side: OFF	 Angle(dx0, dx): 2.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.260E-03 	 Total distance: 3.396E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([101], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:09,469 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:09,469 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 20.04 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:09,469 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:09,469 root DEBUG dOFF/dON = 1.5
10:08:09,469 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.51192081887773, 'dON1': 0.2261969879924514, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.2261969879924514, 'nTON': 1, 'dON': 0.2261969879924514, 'dxOFFAngle': 81.38295834846053, 'dOFF1': 0.3396074196051892, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.3396074196051892, 'nTOFF': 1, 'dOFF': 0.3396074196051892, 'SUCCESS': True}
10:08:09,482 root DEBUG 

=================== Experiment ID #12 	 Dual Point ID: 13 ===================
10:08:09,493 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.657E-08|<1.000E-06)
10:08:09,493 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:09,870 root DEBUG Side: ON	 Angle(dx0, dx): 1.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.324E-02 	 Total distance: 8.324E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([14], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:08:10,195 root DEBUG Side: OFF	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.972E-02 	 Total distance: 1.972E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([220], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:08:10,195 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:10,195 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -61.70 	 cIDON = [3 4], cIDOFF = [3 4]
10:08:10,195 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:10,195 root DEBUG dOFF/dON = 0.2
10:08:10,195 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.38911777248073, 'dON1': 0.0832371522200728, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.0832371522200728, 'nTON': 1, 'dON': 0.0832371522200728, 'dxOFFAngle': 85.07625309038225, 'dOFF1': 0.01971700362563105, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.01971700362563105, 'nTOFF': 1, 'dOFF': 0.01971700362563105, 'SUCCESS': False}
10:08:10,205 root DEBUG 

=================== Experiment ID #13 	 Dual Point ID: 14 ===================
10:08:10,214 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.161E-08|<1.000E-06)
10:08:10,214 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:10,555 root DEBUG Side: ON	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.429E-03 	 Total distance: 2.429E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([237], dtype=int64), array([[False]])]] 	 class: [2 4]
10:08:10,870 root DEBUG Side: OFF	 Angle(dx0, dx): 0.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.587E-01 	 Total distance: 5.587E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([113], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:08:10,870 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:10,870 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.13 	 cIDON = [2 4], cIDOFF = [2 4]
10:08:10,870 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:10,870 root DEBUG dOFF/dON = 230.0
10:08:10,870 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.08504261673971, 'dON1': 0.0024288370511856053, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.0024288370511856053, 'nTON': 1, 'dON': 0.0024288370511856053, 'dxOFFAngle': 86.33864234949418, 'dOFF1': 0.5587479965442934, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.5587479965442934, 'nTOFF': 1, 'dOFF': 0.5587479965442934, 'SUCCESS': True}
10:08:10,877 root DEBUG 

=================== Experiment ID #14 	 Dual Point ID: 15 ===================
10:08:10,885 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.503E-08|<1.000E-06)
10:08:10,885 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:11,157 root DEBUG Side: ON	 Angle(dx0, dx): 1.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.858E-06 	 Total distance: 9.858E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:08:11,471 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.786E-02 	 Total distance: 3.786E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([246], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:08:11,706 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.233E-01 	 Total distance: 1.612E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([229], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:08:11,989 root DEBUG Side: OFF	 Angle(dx0, dx): 1.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.349E-01 	 Total distance: 2.961E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([49], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:08:11,989 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:11,989 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.99 	 cIDON = [1 8], cIDOFF = [1 8]
10:08:11,990 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:11,990 root DEBUG dOFF/dON = 30035.0
10:08:11,990 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.30023761052273, 'dON1': 9.858261153109926e-06, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 9.858261153109926e-06, 'nTON': 1, 'dON': 9.858261153109926e-06, 'dxOFFAngle': 88.22951160978064, 'dOFF1': 0.2960931414654987, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 0.2960931414654987, 'nTOFF': 1, 'dOFF': 0.2960931414654987, 'SUCCESS': True}
10:08:12,2 root DEBUG 

=================== Experiment ID #15 	 Dual Point ID: 16 ===================
10:08:12,15 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.490E-08|<1.000E-06)
10:08:12,15 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:12,404 root DEBUG Side: ON	 Angle(dx0, dx): 0.84 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.708E-01 	 Total distance: 4.708E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([193], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:12,732 root DEBUG Side: OFF	 Angle(dx0, dx): 0.95 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.602E-02 	 Total distance: 4.602E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([119], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:12,732 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:12,732 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -82.19 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:12,732 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:12,732 root DEBUG dOFF/dON = 0.1
10:08:12,732 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.26135391642276, 'dON1': 0.47075476671126726, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.47075476671126726, 'nTON': 1, 'dON': 0.47075476671126726, 'dxOFFAngle': 88.81467075880178, 'dOFF1': 0.04601602333552561, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.04601602333552561, 'nTOFF': 1, 'dOFF': 0.04601602333552561, 'SUCCESS': False}
10:08:12,738 root DEBUG 

=================== Experiment ID #16 	 Dual Point ID: 17 ===================
10:08:12,752 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.297E-07|<1.000E-06)
10:08:12,752 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:13,43 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.728E-02 	 Total distance: 2.728E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([234], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:13,357 root DEBUG Side: OFF	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.037E-01 	 Total distance: 1.037E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([97], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:13,524 root DEBUG Side: OFF	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.476E-01 	 Total distance: 3.513E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([50], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:13,764 root DEBUG Side: OFF	 Angle(dx0, dx): 0.93 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.815E-02 	 Total distance: 4.494E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([180], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:13,990 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.137E-01 	 Total distance: 6.631E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([4], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:13,990 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:13,990 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 92.10 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:13,991 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:13,991 root DEBUG dOFF/dON = 24.3
10:08:13,991 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.5814317801744, 'dON1': 0.027282229690332862, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.027282229690332862, 'nTON': 1, 'dON': 0.027282229690332862, 'dxOFFAngle': 88.6468977503299, 'dOFF1': 0.6631024321486167, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.6631024321486167, 'nTOFF': 1, 'dOFF': 0.6631024321486167, 'SUCCESS': True}
10:08:13,999 root DEBUG 

=================== Experiment ID #17 	 Dual Point ID: 18 ===================
10:08:14,7 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.444E-07|<1.000E-06)
10:08:14,8 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:14,335 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.068E-02 	 Total distance: 1.068E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([173], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:14,602 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.848E-02 	 Total distance: 9.848E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([46], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:14,805 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.874E-02 	 Total distance: 1.672E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([78], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:15,11 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.234E-02 	 Total distance: 1.796E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([52], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:15,11 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:15,12 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 88.77 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:15,12 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:15,12 root DEBUG dOFF/dON = 16.8
10:08:15,12 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.6232032228612, 'dON1': 0.010678298025203788, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.010678298025203788, 'nTON': 1, 'dON': 0.010678298025203788, 'dxOFFAngle': 87.86749097298127, 'dOFF1': 0.17955756823410857, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.17955756823410857, 'nTOFF': 1, 'dOFF': 0.17955756823410857, 'SUCCESS': True}
10:08:15,27 root DEBUG 

=================== Experiment ID #18 	 Dual Point ID: 19 ===================
10:08:15,41 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.559E-08|<1.000E-06)
10:08:15,41 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:15,368 root DEBUG Side: ON	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.725E-02 	 Total distance: 6.725E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([226], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:15,635 root DEBUG Side: ON	 Angle(dx0, dx): 0.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.232E-01 	 Total distance: 1.905E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([31], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:15,900 root DEBUG Side: OFF	 Angle(dx0, dx): 0.85 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.870E-02 	 Total distance: 3.870E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([132], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:15,900 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:15,900 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -66.23 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:15,900 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:15,900 root DEBUG dOFF/dON = 0.2
10:08:15,901 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.31734157273543, 'dON1': 0.1904808157403888, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.1904808157403888, 'nTON': 1, 'dON': 0.1904808157403888, 'dxOFFAngle': 86.65781022297637, 'dOFF1': 0.03870216389221258, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.03870216389221258, 'nTOFF': 1, 'dOFF': 0.03870216389221258, 'SUCCESS': False}
10:08:15,913 root DEBUG 

=================== Experiment ID #19 	 Dual Point ID: 20 ===================
10:08:15,925 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.501E-08|<1.000E-06)
10:08:15,925 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:16,249 root DEBUG Side: ON	 Angle(dx0, dx): 1.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.284E-02 	 Total distance: 8.284E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([110], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:16,471 root DEBUG Side: ON	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.138E-01 	 Total distance: 2.966E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([195], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:16,776 root DEBUG Side: OFF	 Angle(dx0, dx): 0.85 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.295E-02 	 Total distance: 2.295E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([132], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:16,776 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:16,777 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -85.64 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:16,777 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:16,777 root DEBUG dOFF/dON = 0.1
10:08:16,777 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.12848560275276, 'dON1': 0.2966425295943519, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.2966425295943519, 'nTON': 1, 'dON': 0.2966425295943519, 'dxOFFAngle': 86.46810085148626, 'dOFF1': 0.022948584198990502, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.022948584198990502, 'nTOFF': 1, 'dOFF': 0.022948584198990502, 'SUCCESS': False}
10:08:16,788 root DEBUG 

=================== Experiment ID #20 	 Dual Point ID: 21 ===================
10:08:16,797 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.507E-09|<1.000E-06)
10:08:16,797 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:17,184 root DEBUG Side: ON	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.141E-01 	 Total distance: 1.141E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([15], dtype=int64), array([[False]])]] 	 class: [6 9]
10:08:17,606 root DEBUG Side: OFF	 Angle(dx0, dx): 0.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.439E-01 	 Total distance: 1.439E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([15], dtype=int64), array([[False]])]] 	 class: [6 9]
10:08:17,606 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:17,606 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 11.55 	 cIDON = [6 9], cIDOFF = [6 9]
10:08:17,606 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:17,606 root DEBUG dOFF/dON = 1.3
10:08:17,606 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.94669793398025, 'dON1': 0.11411654409810063, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.11411654409810063, 'nTON': 1, 'dON': 0.11411654409810063, 'dxOFFAngle': 88.86481669066502, 'dOFF1': 0.14392240218410884, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.14392240218410884, 'nTOFF': 1, 'dOFF': 0.14392240218410884, 'SUCCESS': True}
10:08:17,615 root DEBUG 

=================== Experiment ID #21 	 Dual Point ID: 22 ===================
10:08:17,623 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.362E-08|<1.000E-06)
10:08:17,623 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:17,996 root DEBUG Side: ON	 Angle(dx0, dx): 1.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.826E-02 	 Total distance: 3.826E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([56], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:08:18,158 root DEBUG Side: ON	 Angle(dx0, dx): 1.78 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.823E-01 	 Total distance: 4.205E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([45], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:08:18,591 root DEBUG Side: OFF	 Angle(dx0, dx): 1.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.880E-02 	 Total distance: 9.880E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([206], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:08:18,592 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:18,592 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -61.95 	 cIDON = [2 8], cIDOFF = [2 8]
10:08:18,592 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:18,593 root DEBUG dOFF/dON = 0.2
10:08:18,593 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.67345101929614, 'dON1': 0.42053733955461775, 'cIDON1': array([2, 8], dtype=int64), 'dON_patch_1': 0.42053733955461775, 'nTON': 1, 'dON': 0.42053733955461775, 'dxOFFAngle': 84.9854401152206, 'dOFF1': 0.0988000376074924, 'cIDOFF1': array([2, 8], dtype=int64), 'dOFF_patch_1': 0.0988000376074924, 'nTOFF': 1, 'dOFF': 0.0988000376074924, 'SUCCESS': False}
10:08:18,606 root DEBUG 

=================== Experiment ID #22 	 Dual Point ID: 23 ===================
10:08:18,619 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.905E-09|<1.000E-06)
10:08:18,619 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:18,952 root DEBUG Side: ON	 Angle(dx0, dx): 3.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.571E-02 	 Total distance: 2.571E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([8], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:08:19,299 root DEBUG Side: OFF	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.064E-02 	 Total distance: 3.064E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([191], dtype=int64), array([[False]])]] 	 class: [2 6]
10:08:19,492 root DEBUG Side: OFF	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.989E-01 	 Total distance: 2.295E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([23], dtype=int64), array([[False]])]] 	 class: [2 6]
10:08:19,492 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:19,492 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 79.85 	 cIDON = [2 6], cIDOFF = [2 6]
10:08:19,492 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:19,492 root DEBUG dOFF/dON = 8.9
10:08:19,492 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.5006412587977, 'dON1': 0.025710183790989785, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.025710183790989785, 'nTON': 1, 'dON': 0.025710183790989785, 'dxOFFAngle': 84.39902030020968, 'dOFF1': 0.2295358677530872, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.2295358677530872, 'nTOFF': 1, 'dOFF': 0.2295358677530872, 'SUCCESS': True}
10:08:19,500 root DEBUG 

=================== Experiment ID #23 	 Dual Point ID: 24 ===================
10:08:19,510 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.878E-10|<1.000E-06)
10:08:19,510 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:19,844 root DEBUG Side: ON	 Angle(dx0, dx): 1.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.153E-01 	 Total distance: 1.153E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([211], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:08:20,199 root DEBUG Side: OFF	 Angle(dx0, dx): 1.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.068E-02 	 Total distance: 2.068E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([81], dtype=int64), array([[False]])]] 	 class: [2 4]
10:08:20,199 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:20,200 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -69.59 	 cIDON = [2 4], cIDOFF = [2 4]
10:08:20,200 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:20,200 root DEBUG dOFF/dON = 0.2
10:08:20,200 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.65393322261276, 'dON1': 0.115319884755094, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.115319884755094, 'nTON': 1, 'dON': 0.115319884755094, 'dxOFFAngle': 81.48231545227488, 'dOFF1': 0.020680366243133633, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.020680366243133633, 'nTOFF': 1, 'dOFF': 0.020680366243133633, 'SUCCESS': False}
10:08:20,214 root DEBUG 

=================== Experiment ID #24 	 Dual Point ID: 25 ===================
10:08:20,222 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.963E-09|<1.000E-06)
10:08:20,222 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:20,669 root DEBUG Side: ON	 Angle(dx0, dx): 1.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.021E-01 	 Total distance: 1.021E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([28], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:08:21,82 root DEBUG Side: OFF	 Angle(dx0, dx): 1.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.460E-02 	 Total distance: 8.460E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([33], dtype=int64), array([[False]])]] 	 class: [6 9]
10:08:21,82 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:21,82 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -9.37 	 cIDON = [6 9], cIDOFF = [6 9]
10:08:21,82 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:21,82 root DEBUG dOFF/dON = 0.8
10:08:21,82 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.93122016439112, 'dON1': 0.10210227323724701, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.10210227323724701, 'nTON': 1, 'dON': 0.10210227323724701, 'dxOFFAngle': 86.99662676644479, 'dOFF1': 0.08460374614357392, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.08460374614357392, 'nTOFF': 1, 'dOFF': 0.08460374614357392, 'SUCCESS': False}
10:08:21,89 root DEBUG 

=================== Experiment ID #25 	 Dual Point ID: 26 ===================
10:08:21,97 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.651E-08|<1.000E-06)
10:08:21,99 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:21,473 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.807E-01 	 Total distance: 2.807E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([85], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:08:21,807 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.476E-01 	 Total distance: 5.476E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([24], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:08:21,807 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:21,808 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 32.23 	 cIDON = [3 9], cIDOFF = [3 9]
10:08:21,808 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:21,808 root DEBUG dOFF/dON = 2.0
10:08:21,808 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.05090686223554, 'dON1': 0.2806827238719183, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.2806827238719183, 'nTON': 1, 'dON': 0.2806827238719183, 'dxOFFAngle': 89.98090786816226, 'dOFF1': 0.5475968840507742, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.5475968840507742, 'nTOFF': 1, 'dOFF': 0.5475968840507742, 'SUCCESS': True}
10:08:21,814 root DEBUG 

=================== Experiment ID #26 	 Dual Point ID: 27 ===================
10:08:21,824 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.266E-08|<1.000E-06)
10:08:21,825 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:22,133 root DEBUG Side: ON	 Angle(dx0, dx): 0.88 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.981E-02 	 Total distance: 8.981E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([156], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:08:22,522 root DEBUG Side: OFF	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.487E-02 	 Total distance: 8.487E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([50], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:08:22,522 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:22,522 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -2.83 	 cIDON = [3 9], cIDOFF = [3 9]
10:08:22,522 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:22,522 root DEBUG dOFF/dON = 0.9
10:08:22,522 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 79.06857188528579, 'dON1': 0.08980877121391413, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.08980877121391413, 'nTON': 1, 'dON': 0.08980877121391413, 'dxOFFAngle': 79.12584761973017, 'dOFF1': 0.08486565080668072, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.08486565080668072, 'nTOFF': 1, 'dOFF': 0.08486565080668072, 'SUCCESS': False}
10:08:22,534 root DEBUG 

=================== Experiment ID #27 	 Dual Point ID: 28 ===================
10:08:22,543 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.660E-09|<1.000E-06)
10:08:22,544 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:22,960 root DEBUG Side: ON	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.744E-02 	 Total distance: 2.744E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([168], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:23,278 root DEBUG Side: OFF	 Angle(dx0, dx): 0.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.581E-02 	 Total distance: 1.581E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([37], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:23,278 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:23,279 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -26.90 	 cIDON = [3 7], cIDOFF = [3 7]
10:08:23,279 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:23,279 root DEBUG dOFF/dON = 0.6
10:08:23,279 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.47612479713007, 'dON1': 0.02743894861899914, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.02743894861899914, 'nTON': 1, 'dON': 0.02743894861899914, 'dxOFFAngle': 89.77220548796748, 'dOFF1': 0.0158076096119316, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.0158076096119316, 'nTOFF': 1, 'dOFF': 0.0158076096119316, 'SUCCESS': False}
10:08:23,286 root DEBUG 

=================== Experiment ID #28 	 Dual Point ID: 29 ===================
10:08:23,295 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.553E-09|<1.000E-06)
10:08:23,295 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:23,586 root DEBUG Side: ON	 Angle(dx0, dx): 0.95 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.346E-02 	 Total distance: 6.346E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([242], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:23,875 root DEBUG Side: ON	 Angle(dx0, dx): 1.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.861E-02 	 Total distance: 9.207E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([245], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:24,265 root DEBUG Side: OFF	 Angle(dx0, dx): 1.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.950E-02 	 Total distance: 6.950E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([37], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:24,265 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:24,266 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -13.97 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:24,266 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:24,266 root DEBUG dOFF/dON = 0.8
10:08:24,266 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.21628468763122, 'dON1': 0.09207459424701303, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.09207459424701303, 'nTON': 1, 'dON': 0.09207459424701303, 'dxOFFAngle': 84.45089719742784, 'dOFF1': 0.0694966413179256, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.0694966413179256, 'nTOFF': 1, 'dOFF': 0.0694966413179256, 'SUCCESS': False}
10:08:24,277 root DEBUG 

=================== Experiment ID #29 	 Dual Point ID: 30 ===================
10:08:24,289 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.181E-07|<1.000E-06)
10:08:24,289 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:24,676 root DEBUG Side: ON	 Angle(dx0, dx): 1.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.148E-02 	 Total distance: 6.148E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([236], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:25,52 root DEBUG Side: OFF	 Angle(dx0, dx): 0.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.374E-01 	 Total distance: 8.374E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([58], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:25,52 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:25,53 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 86.32 	 cIDON = [3 7], cIDOFF = [3 7]
10:08:25,53 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:25,53 root DEBUG dOFF/dON = 13.6
10:08:25,53 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.12486229389883, 'dON1': 0.061476840695883654, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.061476840695883654, 'nTON': 1, 'dON': 0.061476840695883654, 'dxOFFAngle': 88.00765909618082, 'dOFF1': 0.8374241340354331, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.8374241340354331, 'nTOFF': 1, 'dOFF': 0.8374241340354331, 'SUCCESS': True}
10:08:25,66 root DEBUG 

=================== Experiment ID #30 	 Dual Point ID: 31 ===================
10:08:25,76 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.690E-08|<1.000E-06)
10:08:25,76 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:25,391 root DEBUG Side: ON	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.901E-01 	 Total distance: 4.901E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([39], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:08:25,638 root DEBUG Side: ON	 Angle(dx0, dx): 0.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.144E-01 	 Total distance: 8.045E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([85], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:08:26,22 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.188E-01 	 Total distance: 4.188E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([162], dtype=int64), array([[False]])]] 	 class: [2 3]
10:08:26,22 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:26,22 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -31.53 	 cIDON = [2 3], cIDOFF = [2 3]
10:08:26,23 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:26,23 root DEBUG dOFF/dON = 0.5
10:08:26,23 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.65245466274865, 'dON1': 0.8045018676714926, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.8045018676714926, 'nTON': 1, 'dON': 0.8045018676714926, 'dxOFFAngle': 89.95360082107801, 'dOFF1': 0.41882771224281284, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.41882771224281284, 'nTOFF': 1, 'dOFF': 0.41882771224281284, 'SUCCESS': False}
10:08:26,35 root DEBUG 

=================== Experiment ID #31 	 Dual Point ID: 32 ===================
10:08:26,46 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.844E-08|<1.000E-06)
10:08:26,46 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:26,376 root DEBUG Side: ON	 Angle(dx0, dx): 1.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.136E-01 	 Total distance: 1.136E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([128], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:26,694 root DEBUG Side: OFF	 Angle(dx0, dx): 2.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.950E-03 	 Total distance: 4.950E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([26], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:26,695 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:26,695 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -91.65 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:26,695 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:26,695 root DEBUG dOFF/dON = 0.0
10:08:26,695 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.4851108505588, 'dON1': 0.11355582304546431, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.11355582304546431, 'nTON': 1, 'dON': 0.11355582304546431, 'dxOFFAngle': 89.56276756246321, 'dOFF1': 0.004950396908509346, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.004950396908509346, 'nTOFF': 1, 'dOFF': 0.004950396908509346, 'SUCCESS': False}
10:08:26,704 root DEBUG 

=================== Experiment ID #32 	 Dual Point ID: 33 ===================
10:08:26,715 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.368E-08|<1.000E-06)
10:08:26,715 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:27,68 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.030E-02 	 Total distance: 1.030E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([250], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:08:27,339 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.182E-02 	 Total distance: 2.182E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([40], dtype=int64), array([[False]])]] 	 class: [0 9]
10:08:27,339 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:27,339 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 35.88 	 cIDON = [1 9], cIDOFF = [0 9]
10:08:27,339 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:27,339 root DEBUG dOFF/dON = 2.1
10:08:27,339 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.61710010176435, 'dON1': 0.010297579850379383, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.010297579850379383, 'nTON': 1, 'dON': 0.010297579850379383, 'dxOFFAngle': 88.54951100175587, 'dOFF1': 0.021824475284897005, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.021824475284897005, 'nTOFF': 1, 'dOFF': 0.021824475284897005, 'SUCCESS': True}
10:08:27,350 root DEBUG 

=================== Experiment ID #33 	 Dual Point ID: 34 ===================
10:08:27,359 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.609E-08|<1.000E-06)
10:08:27,359 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:27,685 root DEBUG Side: ON	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.337E-02 	 Total distance: 2.337E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([209], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:27,961 root DEBUG Side: OFF	 Angle(dx0, dx): 2.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.733E-01 	 Total distance: 2.733E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([178], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:27,961 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:27,962 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 84.25 	 cIDON = [3 7], cIDOFF = [3 7]
10:08:27,962 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:27,962 root DEBUG dOFF/dON = 11.7
10:08:27,962 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.67596121239531, 'dON1': 0.02337161981611125, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.02337161981611125, 'nTON': 1, 'dON': 0.02337161981611125, 'dxOFFAngle': 85.47470780515215, 'dOFF1': 0.27333097828559455, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.27333097828559455, 'nTOFF': 1, 'dOFF': 0.27333097828559455, 'SUCCESS': True}
10:08:27,973 root DEBUG 

=================== Experiment ID #34 	 Dual Point ID: 35 ===================
10:08:27,983 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.870E-09|<1.000E-06)
10:08:27,984 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:28,296 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.533E-01 	 Total distance: 1.533E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([241], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:08:28,547 root DEBUG Side: ON	 Angle(dx0, dx): 2.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.033E-01 	 Total distance: 3.566E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([9], dtype=int64), array([[False]])]] 	 class: [5 9]
10:08:28,837 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.218E-02 	 Total distance: 5.218E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([78], dtype=int64), array([[False]])]] 	 class: [5 9]
10:08:29,6 root DEBUG Side: OFF	 Angle(dx0, dx): 1.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.279E-02 	 Total distance: 9.497E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([3], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:08:29,7 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:29,7 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -57.94 	 cIDON = [5 9], cIDOFF = [5 9]
10:08:29,7 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:29,7 root DEBUG dOFF/dON = 0.3
10:08:29,7 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.4408438684187, 'dON1': 0.3565647247725702, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.3565647247725702, 'nTON': 1, 'dON': 0.3565647247725702, 'dxOFFAngle': 88.70255101871079, 'dOFF1': 0.09496777705474667, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.09496777705474667, 'nTOFF': 1, 'dOFF': 0.09496777705474667, 'SUCCESS': False}
10:08:29,18 root DEBUG 

=================== Experiment ID #35 	 Dual Point ID: 36 ===================
10:08:29,29 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.253E-07|<1.000E-06)
10:08:29,29 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:29,383 root DEBUG Side: ON	 Angle(dx0, dx): 0.98 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.960E-02 	 Total distance: 4.960E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([30], dtype=int64), array([[ True]])]] 	 class: [0 2]
10:08:29,639 root DEBUG Side: OFF	 Angle(dx0, dx): 1.71 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.961E-07 	 Total distance: 8.961E-07 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 2]
10:08:29,803 root DEBUG Side: OFF	 Angle(dx0, dx): 1.71 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.793E-06 	 Total distance: 2.689E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 2]
10:08:29,803 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:29,803 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.99 	 cIDON = [0 2], cIDOFF = [1 2]
10:08:29,803 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:29,803 root DEBUG dOFF/dON = 0.0
10:08:29,803 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.64447536553544, 'dON1': 0.049604198717722855, 'cIDON1': array([0, 2], dtype=int64), 'dON_patch_1': 0.049604198717722855, 'nTON': 1, 'dON': 0.049604198717722855, 'dxOFFAngle': 88.51728577848888, 'dOFF1': 2.688762484145059e-06, 'cIDOFF1': array([1, 2], dtype=int64), 'dOFF_patch_1': 2.688762484145059e-06, 'nTOFF': 1, 'dOFF': 2.688762484145059e-06, 'SUCCESS': False}
10:08:29,814 root DEBUG 

=================== Experiment ID #36 	 Dual Point ID: 37 ===================
10:08:29,821 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.184E-07|<1.000E-06)
10:08:29,821 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:30,71 root DEBUG Side: ON	 Angle(dx0, dx): 7.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.006E-07 	 Total distance: 9.006E-07 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:08:30,217 root DEBUG Side: ON	 Angle(dx0, dx): 7.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.515E-07 	 Total distance: 1.352E-06 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 8]
10:08:30,340 root DEBUG Side: ON	 Angle(dx0, dx): 7.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.503E-07 	 Total distance: 1.802E-06 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:08:30,347 root DEBUG Got stuck in too many past-layer relus.
10:08:30,444 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:08:30,445 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:08:30,447 root DEBUG 

=================== Experiment ID #36 	 Dual Point ID: 38 ===================
10:08:30,458 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.338E-08|<1.000E-06)
10:08:30,458 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:30,786 root DEBUG Side: ON	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.146E-01 	 Total distance: 1.146E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([93], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:08:31,113 root DEBUG Side: OFF	 Angle(dx0, dx): 1.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.586E-02 	 Total distance: 8.586E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([21], dtype=int64), array([[False]])]] 	 class: [2 3]
10:08:31,113 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:31,114 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -14.35 	 cIDON = [2 3], cIDOFF = [2 3]
10:08:31,114 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:31,114 root DEBUG dOFF/dON = 0.7
10:08:31,114 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.42471589925908, 'dON1': 0.11463791713523278, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.11463791713523278, 'nTON': 1, 'dON': 0.11463791713523278, 'dxOFFAngle': 85.71498884798251, 'dOFF1': 0.08586344029499185, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.08586344029499185, 'nTOFF': 1, 'dOFF': 0.08586344029499185, 'SUCCESS': False}
10:08:31,124 root DEBUG 

=================== Experiment ID #37 	 Dual Point ID: 39 ===================
10:08:31,131 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.767E-08|<1.000E-06)
10:08:31,131 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:31,442 root DEBUG Side: ON	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.832E-02 	 Total distance: 9.832E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([58], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:08:31,745 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.583E-01 	 Total distance: 1.583E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([6], dtype=int64), array([[False]])]] 	 class: [2 8]
10:08:31,995 root DEBUG Side: OFF	 Angle(dx0, dx): 1.77 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.241E-01 	 Total distance: 2.824E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([7, 8], dtype=int64), array([[1.],
       [0.]])]] 	 class: [2 7]
10:08:31,996 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:31,996 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 48.35 	 cIDON = [2 8], cIDOFF = [2 8]
10:08:31,996 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:31,996 root DEBUG dOFF/dON = 2.9
10:08:31,996 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.15059564712986, 'dON1': 0.09831589961430356, 'cIDON1': array([2, 8], dtype=int64), 'dON_patch_1': 0.09831589961430356, 'nTON': 1, 'dON': 0.09831589961430356, 'dxOFFAngle': 87.42135602855046, 'dOFF1': 0.28237217142390686, 'cIDOFF1': array([2, 8], dtype=int64), 'dOFF_patch_1': 0.28237217142390686, 'nTOFF': 1, 'dOFF': 0.28237217142390686, 'SUCCESS': True}
10:08:32,2 root DEBUG 

=================== Experiment ID #38 	 Dual Point ID: 40 ===================
10:08:32,11 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.136E-08|<1.000E-06)
10:08:32,12 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:32,338 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.018E-01 	 Total distance: 3.018E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([6], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:32,583 root DEBUG Side: ON	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.885E-02 	 Total distance: 3.207E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([106], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:32,860 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.459E-02 	 Total distance: 4.153E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([38], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:33,182 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.533E-01 	 Total distance: 2.533E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([45], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:33,182 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:33,182 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -24.23 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:33,182 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:33,182 root DEBUG dOFF/dON = 0.6
10:08:33,182 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.86264414035665, 'dON1': 0.4152614054872182, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.4152614054872182, 'nTON': 1, 'dON': 0.4152614054872182, 'dxOFFAngle': 89.32570767438345, 'dOFF1': 0.25326247261499624, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.25326247261499624, 'nTOFF': 1, 'dOFF': 0.25326247261499624, 'SUCCESS': False}
10:08:33,191 root DEBUG 

=================== Experiment ID #39 	 Dual Point ID: 41 ===================
10:08:33,202 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.620E-08|<1.000E-06)
10:08:33,203 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:33,470 root DEBUG Side: ON	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.370E-02 	 Total distance: 7.370E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([149], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:33,727 root DEBUG Side: OFF	 Angle(dx0, dx): 0.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.087E-02 	 Total distance: 7.087E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([146], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:33,728 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:33,728 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -1.95 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:33,728 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:33,728 root DEBUG dOFF/dON = 1.0
10:08:33,728 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.77047205411755, 'dON1': 0.07369729826534041, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.07369729826534041, 'nTON': 1, 'dON': 0.07369729826534041, 'dxOFFAngle': 83.89571594811751, 'dOFF1': 0.07087262885330536, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.07087262885330536, 'nTOFF': 1, 'dOFF': 0.07087262885330536, 'SUCCESS': False}
10:08:33,737 root DEBUG 

=================== Experiment ID #40 	 Dual Point ID: 42 ===================
10:08:33,747 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.965E-08|<1.000E-06)
10:08:33,747 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:34,58 root DEBUG Side: ON	 Angle(dx0, dx): 1.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.731E-02 	 Total distance: 1.731E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([65], dtype=int64), array([[False]])]] 	 class: [3 8]
10:08:34,349 root DEBUG Side: OFF	 Angle(dx0, dx): 5.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.449E-03 	 Total distance: 5.449E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([3, 6], dtype=int64), array([[0.],
       [1.]])]] 	 class: [6 8]
10:08:34,350 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:34,350 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -52.11 	 cIDON = [3 8], cIDOFF = [3 8]
10:08:34,350 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:34,350 root DEBUG dOFF/dON = 0.3
10:08:34,350 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.06641098603266, 'dON1': 0.017305564239831598, 'cIDON1': array([3, 8], dtype=int64), 'dON_patch_1': 0.017305564239831598, 'nTON': 1, 'dON': 0.017305564239831598, 'dxOFFAngle': 88.27466351411003, 'dOFF1': 0.005449002518942542, 'cIDOFF1': array([3, 8], dtype=int64), 'dOFF_patch_1': 0.005449002518942542, 'nTOFF': 1, 'dOFF': 0.005449002518942542, 'SUCCESS': False}
10:08:34,361 root DEBUG 

=================== Experiment ID #41 	 Dual Point ID: 43 ===================
10:08:34,372 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.247E-08|<1.000E-06)
10:08:34,373 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:34,704 root DEBUG Side: ON	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.780E-02 	 Total distance: 3.780E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([8], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:34,996 root DEBUG Side: OFF	 Angle(dx0, dx): 6.78 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.117E-02 	 Total distance: 9.117E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 5], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 3]
10:08:34,997 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:34,997 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 41.39 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:34,997 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:34,997 root DEBUG dOFF/dON = 2.4
10:08:34,997 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.82167557273232, 'dON1': 0.03779778897715437, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.03779778897715437, 'nTON': 1, 'dON': 0.03779778897715437, 'dxOFFAngle': 88.06342534209824, 'dOFF1': 0.09117309457521666, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.09117309457521666, 'nTOFF': 1, 'dOFF': 0.09117309457521666, 'SUCCESS': True}
10:08:35,3 root DEBUG 

=================== Experiment ID #42 	 Dual Point ID: 44 ===================
10:08:35,9 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.222E-08|<1.000E-06)
10:08:35,10 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:35,300 root DEBUG Side: ON	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.611E-02 	 Total distance: 3.611E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([194], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:35,554 root DEBUG Side: OFF	 Angle(dx0, dx): 1.87 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.382E-02 	 Total distance: 1.382E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([186], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:35,763 root DEBUG Side: OFF	 Angle(dx0, dx): 0.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.377E-02 	 Total distance: 9.759E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([12], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:35,763 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:35,763 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 45.98 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:35,763 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:35,763 root DEBUG dOFF/dON = 2.7
10:08:35,763 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.7634036479923, 'dON1': 0.03611426238747482, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.03611426238747482, 'nTON': 1, 'dON': 0.03611426238747482, 'dxOFFAngle': 83.97050609380734, 'dOFF1': 0.09759187089382665, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.09759187089382665, 'nTOFF': 1, 'dOFF': 0.09759187089382665, 'SUCCESS': True}
10:08:35,773 root DEBUG 

=================== Experiment ID #43 	 Dual Point ID: 45 ===================
10:08:35,782 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.248E-08|<1.000E-06)
10:08:35,782 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:36,127 root DEBUG Side: ON	 Angle(dx0, dx): 0.84 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.030E-02 	 Total distance: 9.030E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([30], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:36,454 root DEBUG Side: OFF	 Angle(dx0, dx): 1.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.850E-03 	 Total distance: 1.850E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([27], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:36,681 root DEBUG Side: OFF	 Angle(dx0, dx): 0.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.456E-02 	 Total distance: 2.642E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([157], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:36,681 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:36,682 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -54.74 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:36,682 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:36,682 root DEBUG dOFF/dON = 0.3
10:08:36,682 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.70333469303222, 'dON1': 0.09030256407692307, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.09030256407692307, 'nTON': 1, 'dON': 0.09030256407692307, 'dxOFFAngle': 88.97000413043624, 'dOFF1': 0.026415108645474496, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.026415108645474496, 'nTOFF': 1, 'dOFF': 0.026415108645474496, 'SUCCESS': False}
10:08:36,692 root DEBUG 

=================== Experiment ID #44 	 Dual Point ID: 46 ===================
10:08:36,708 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.136E-08|<1.000E-06)
10:08:36,709 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:37,39 root DEBUG Side: ON	 Angle(dx0, dx): 0.89 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.088E-01 	 Total distance: 1.088E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([46], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:08:37,333 root DEBUG Side: OFF	 Angle(dx0, dx): 4.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.297E-02 	 Total distance: 4.297E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([58], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:08:37,334 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:37,334 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -43.37 	 cIDON = [4 5], cIDOFF = [4 5]
10:08:37,334 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:37,334 root DEBUG dOFF/dON = 0.4
10:08:37,334 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 77.93510455464255, 'dON1': 0.10878037872937658, 'cIDON1': array([4, 5], dtype=int64), 'dON_patch_1': 0.10878037872937658, 'nTON': 1, 'dON': 0.10878037872937658, 'dxOFFAngle': 78.79678679511106, 'dOFF1': 0.042971245507238305, 'cIDOFF1': array([4, 5], dtype=int64), 'dOFF_patch_1': 0.042971245507238305, 'nTOFF': 1, 'dOFF': 0.042971245507238305, 'SUCCESS': False}
10:08:37,342 root DEBUG 

=================== Experiment ID #45 	 Dual Point ID: 47 ===================
10:08:37,352 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.664E-08|<1.000E-06)
10:08:37,353 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:37,771 root DEBUG Side: ON	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.330E-02 	 Total distance: 1.330E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([195], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:37,997 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.264E-01 	 Total distance: 1.397E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([84], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:38,259 root DEBUG Side: OFF	 Angle(dx0, dx): 1.85 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.729E-01 	 Total distance: 6.729E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([161], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:38,259 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:38,259 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 65.62 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:38,260 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:38,260 root DEBUG dOFF/dON = 4.8
10:08:38,260 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.4005103029072, 'dON1': 0.1397111506285087, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.1397111506285087, 'nTON': 1, 'dON': 0.1397111506285087, 'dxOFFAngle': 86.58569391886621, 'dOFF1': 0.6729247584067333, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.6729247584067333, 'nTOFF': 1, 'dOFF': 0.6729247584067333, 'SUCCESS': True}
10:08:38,268 root DEBUG 

=================== Experiment ID #46 	 Dual Point ID: 48 ===================
10:08:38,280 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.444E-07|<1.000E-06)
10:08:38,280 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:38,564 root DEBUG Side: ON	 Angle(dx0, dx): 1.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.632E-02 	 Total distance: 8.632E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([203], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:38,825 root DEBUG Side: OFF	 Angle(dx0, dx): 0.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.436E+00 	 Total distance: 1.436E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([0], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:38,825 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:38,825 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 88.66 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:38,826 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:38,826 root DEBUG dOFF/dON = 16.6
10:08:38,826 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.22179096854083, 'dON1': 0.08632115388672178, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.08632115388672178, 'nTON': 1, 'dON': 0.08632115388672178, 'dxOFFAngle': 79.28538686950208, 'dOFF1': 1.435817299424343, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 1.435817299424343, 'nTOFF': 1, 'dOFF': 1.435817299424343, 'SUCCESS': True}
10:08:38,836 root DEBUG 

=================== Experiment ID #47 	 Dual Point ID: 49 ===================
10:08:38,844 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.734E-08|<1.000E-06)
10:08:38,845 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:39,229 root DEBUG Side: ON	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.660E-01 	 Total distance: 1.660E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([21], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:39,437 root DEBUG Side: OFF	 Angle(dx0, dx): 0.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.291E-02 	 Total distance: 2.291E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([232], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:39,437 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:39,437 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -75.74 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:39,438 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:39,438 root DEBUG dOFF/dON = 0.1
10:08:39,438 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.38675943894711, 'dON1': 0.16596983367893803, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.16596983367893803, 'nTON': 1, 'dON': 0.16596983367893803, 'dxOFFAngle': 85.24305829181203, 'dOFF1': 0.02290686070238663, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.02290686070238663, 'nTOFF': 1, 'dOFF': 0.02290686070238663, 'SUCCESS': False}
10:08:39,444 root DEBUG 

=================== Experiment ID #48 	 Dual Point ID: 50 ===================
10:08:39,452 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.315E-08|<1.000E-06)
10:08:39,453 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:39,706 root DEBUG Side: ON	 Angle(dx0, dx): 1.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.497E-02 	 Total distance: 5.497E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([154], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:08:40,48 root DEBUG Side: OFF	 Angle(dx0, dx): 0.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.333E-01 	 Total distance: 1.333E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([20], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:08:40,48 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:40,48 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 41.61 	 cIDON = [2 5], cIDOFF = [2 5]
10:08:40,48 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:40,48 root DEBUG dOFF/dON = 2.4
10:08:40,49 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.60038096438728, 'dON1': 0.05497054766109174, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.05497054766109174, 'nTON': 1, 'dON': 0.05497054766109174, 'dxOFFAngle': 86.3007200338733, 'dOFF1': 0.13333174992207683, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.13333174992207683, 'nTOFF': 1, 'dOFF': 0.13333174992207683, 'SUCCESS': True}
10:08:40,56 root DEBUG 

=================== Experiment ID #49 	 Dual Point ID: 51 ===================
10:08:40,70 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.340E-09|<1.000E-06)
10:08:40,70 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:40,421 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.208E-02 	 Total distance: 5.208E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([72], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:40,626 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.813E-03 	 Total distance: 5.390E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([14], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:40,794 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.254E-01 	 Total distance: 1.793E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([245], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:41,126 root DEBUG Side: OFF	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.150E-01 	 Total distance: 1.150E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([36], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:41,126 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:41,127 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -21.85 	 cIDON = [3 7], cIDOFF = [3 7]
10:08:41,127 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:41,127 root DEBUG dOFF/dON = 0.6
10:08:41,127 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.97943396732464, 'dON1': 0.17926397566497937, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.17926397566497937, 'nTON': 1, 'dON': 0.17926397566497937, 'dxOFFAngle': 88.16626938703779, 'dOFF1': 0.11497085218552328, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.11497085218552328, 'nTOFF': 1, 'dOFF': 0.11497085218552328, 'SUCCESS': False}
10:08:41,143 root DEBUG 

=================== Experiment ID #50 	 Dual Point ID: 52 ===================
10:08:41,150 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.634E-08|<1.000E-06)
10:08:41,150 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:41,449 root DEBUG Side: ON	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.315E-01 	 Total distance: 1.315E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([112], dtype=int64), array([[False]])]] 	 class: [5 9]
10:08:41,651 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.737E-01 	 Total distance: 4.052E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([54], dtype=int64), array([[False]])]] 	 class: [5 9]
10:08:41,908 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.240E-01 	 Total distance: 5.292E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([36], dtype=int64), array([[False]])]] 	 class: [5 9]
10:08:42,269 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.425E-02 	 Total distance: 2.425E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([69], dtype=int64), array([[False]])]] 	 class: [5 9]
10:08:42,457 root DEBUG Side: OFF	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.190E-02 	 Total distance: 9.615E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([30], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:08:42,457 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:42,457 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -69.25 	 cIDON = [5 9], cIDOFF = [5 9]
10:08:42,458 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:42,458 root DEBUG dOFF/dON = 0.2
10:08:42,458 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.76641699984083, 'dON1': 0.5292112291881921, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.5292112291881921, 'nTON': 1, 'dON': 0.5292112291881921, 'dxOFFAngle': 88.64179424291362, 'dOFF1': 0.09615010706583546, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.09615010706583546, 'nTOFF': 1, 'dOFF': 0.09615010706583546, 'SUCCESS': False}
10:08:42,466 root DEBUG 

=================== Experiment ID #51 	 Dual Point ID: 53 ===================
10:08:42,479 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.337E-09|<1.000E-06)
10:08:42,480 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:42,863 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.494E-01 	 Total distance: 1.494E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([81], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:08:43,116 root DEBUG Side: ON	 Angle(dx0, dx): 6.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.310E-01 	 Total distance: 3.804E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([3, 5], dtype=int64), array([[1.],
       [0.]])]] 	 class: [3 6]
10:08:43,414 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.663E-03 	 Total distance: 9.663E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([215], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:08:43,414 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:43,414 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -95.05 	 cIDON = [5 6], cIDOFF = [5 6]
10:08:43,414 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:43,414 root DEBUG dOFF/dON = 0.0
10:08:43,414 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.4726981543203, 'dON1': 0.3804382062066261, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.3804382062066261, 'nTON': 1, 'dON': 0.3804382062066261, 'dxOFFAngle': 86.08000549067987, 'dOFF1': 0.009663327804805893, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.009663327804805893, 'nTOFF': 1, 'dOFF': 0.009663327804805893, 'SUCCESS': False}
10:08:43,420 root DEBUG 

=================== Experiment ID #52 	 Dual Point ID: 54 ===================
10:08:43,426 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.057E-08|<1.000E-06)
10:08:43,427 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:43,655 root DEBUG Side: ON	 Angle(dx0, dx): 11.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.723E-06 	 Total distance: 2.723E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:08:43,862 root DEBUG Side: OFF	 Angle(dx0, dx): 0.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.868E-02 	 Total distance: 2.868E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([189], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:08:43,862 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:43,862 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.98 	 cIDON = [1 8], cIDOFF = [0 8]
10:08:43,862 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:43,862 root DEBUG dOFF/dON = 10531.7
10:08:43,862 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.67487681273543, 'dON1': 2.7234243447344147e-06, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 2.7234243447344147e-06, 'nTON': 1, 'dON': 2.7234243447344147e-06, 'dxOFFAngle': 84.7504595499601, 'dOFF1': 0.02868234822029949, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.02868234822029949, 'nTOFF': 1, 'dOFF': 0.02868234822029949, 'SUCCESS': True}
10:08:43,873 root DEBUG 

=================== Experiment ID #53 	 Dual Point ID: 55 ===================
10:08:43,884 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.281E-09|<1.000E-06)
10:08:43,884 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:44,145 root DEBUG Side: ON	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.503E-03 	 Total distance: 2.503E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([77], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:44,386 root DEBUG Side: OFF	 Angle(dx0, dx): 1.92 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.352E-02 	 Total distance: 6.352E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([17], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:44,386 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:44,386 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 92.42 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:44,386 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:44,386 root DEBUG dOFF/dON = 25.4
10:08:44,386 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.15064719190487, 'dON1': 0.0025033895905178325, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.0025033895905178325, 'nTON': 1, 'dON': 0.0025033895905178325, 'dxOFFAngle': 82.95820372840336, 'dOFF1': 0.06352186045507682, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.06352186045507682, 'nTOFF': 1, 'dOFF': 0.06352186045507682, 'SUCCESS': True}
10:08:44,397 root DEBUG 

=================== Experiment ID #54 	 Dual Point ID: 56 ===================
10:08:44,407 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.559E-08|<1.000E-06)
10:08:44,407 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:44,701 root DEBUG Side: ON	 Angle(dx0, dx): 0.93 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.607E-02 	 Total distance: 1.607E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([84], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:44,931 root DEBUG Side: ON	 Angle(dx0, dx): 0.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.167E-01 	 Total distance: 1.328E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([140], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:45,186 root DEBUG Side: OFF	 Angle(dx0, dx): 0.96 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.407E-02 	 Total distance: 1.407E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([203], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:45,187 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:45,187 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -80.84 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:45,187 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:45,188 root DEBUG dOFF/dON = 0.1
10:08:45,188 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.20481619906703, 'dON1': 0.13280001926060805, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.13280001926060805, 'nTON': 1, 'dON': 0.13280001926060805, 'dxOFFAngle': 87.19811391156038, 'dOFF1': 0.014069410086530329, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.014069410086530329, 'nTOFF': 1, 'dOFF': 0.014069410086530329, 'SUCCESS': False}
10:08:45,197 root DEBUG 

=================== Experiment ID #55 	 Dual Point ID: 57 ===================
10:08:45,209 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.215E-08|<1.000E-06)
10:08:45,210 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:45,505 root DEBUG Side: ON	 Angle(dx0, dx): 1.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.111E-03 	 Total distance: 3.111E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([13], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:08:45,808 root DEBUG Side: OFF	 Angle(dx0, dx): 0.99 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.139E-02 	 Total distance: 8.139E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([45], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:08:45,808 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:45,808 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 92.64 	 cIDON = [4 5], cIDOFF = [4 5]
10:08:45,808 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:45,808 root DEBUG dOFF/dON = 26.2
10:08:45,808 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.18894133757968, 'dON1': 0.0031114640814819973, 'cIDON1': array([4, 5], dtype=int64), 'dON_patch_1': 0.0031114640814819973, 'nTON': 1, 'dON': 0.0031114640814819973, 'dxOFFAngle': 88.98166077308143, 'dOFF1': 0.08139461698859131, 'cIDOFF1': array([4, 5], dtype=int64), 'dOFF_patch_1': 0.08139461698859131, 'nTOFF': 1, 'dOFF': 0.08139461698859131, 'SUCCESS': True}
10:08:45,814 root DEBUG 

=================== Experiment ID #56 	 Dual Point ID: 58 ===================
10:08:45,823 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.310E-08|<1.000E-06)
10:08:45,823 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:46,108 root DEBUG Side: ON	 Angle(dx0, dx): 1.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.866E-02 	 Total distance: 4.866E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([50], dtype=int64), array([[False]])]] 	 class: [4 6]
10:08:46,323 root DEBUG Side: OFF	 Angle(dx0, dx): 1.96 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.154E-02 	 Total distance: 1.154E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([245], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:08:46,323 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:46,324 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -61.65 	 cIDON = [4 6], cIDOFF = [4 6]
10:08:46,324 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:46,324 root DEBUG dOFF/dON = 0.2
10:08:46,324 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.7037343281822, 'dON1': 0.04865631267295298, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.04865631267295298, 'nTON': 1, 'dON': 0.04865631267295298, 'dxOFFAngle': 81.78459905855354, 'dOFF1': 0.011541828494205368, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.011541828494205368, 'nTOFF': 1, 'dOFF': 0.011541828494205368, 'SUCCESS': False}
10:08:46,343 root DEBUG 

=================== Experiment ID #57 	 Dual Point ID: 59 ===================
10:08:46,352 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.640E-08|<1.000E-06)
10:08:46,352 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:46,663 root DEBUG Side: ON	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.719E-01 	 Total distance: 2.719E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([198], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:46,834 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.559E-02 	 Total distance: 2.975E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([144], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:47,49 root DEBUG Side: ON	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.359E-01 	 Total distance: 6.334E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([165], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:47,367 root DEBUG Side: OFF	 Angle(dx0, dx): 0.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.118E-01 	 Total distance: 1.118E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([67], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:47,367 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:47,367 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -69.99 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:47,368 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:47,368 root DEBUG dOFF/dON = 0.2
10:08:47,368 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.44554467676163, 'dON1': 0.6333710811516553, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.6333710811516553, 'nTON': 1, 'dON': 0.6333710811516553, 'dxOFFAngle': 83.72288296941066, 'dOFF1': 0.11179743159006546, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.11179743159006546, 'nTOFF': 1, 'dOFF': 0.11179743159006546, 'SUCCESS': False}
10:08:47,380 root DEBUG 

=================== Experiment ID #58 	 Dual Point ID: 60 ===================
10:08:47,392 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.249E-09|<1.000E-06)
10:08:47,393 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:47,639 root DEBUG Side: ON	 Angle(dx0, dx): 3.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.688E-02 	 Total distance: 5.688E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([63], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:47,871 root DEBUG Side: OFF	 Angle(dx0, dx): 5.77 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.080E-01 	 Total distance: 1.080E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([4, 5], dtype=int64), array([[1.],
       [0.]])]] 	 class: [3 4]
10:08:47,871 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:47,872 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 30.99 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:47,872 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:47,872 root DEBUG dOFF/dON = 1.9
10:08:47,872 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.81316933323369, 'dON1': 0.056875446252254824, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.056875446252254824, 'nTON': 1, 'dON': 0.056875446252254824, 'dxOFFAngle': 85.50003068884989, 'dOFF1': 0.10796543000321487, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.10796543000321487, 'nTOFF': 1, 'dOFF': 0.10796543000321487, 'SUCCESS': True}
10:08:47,880 root DEBUG 

=================== Experiment ID #59 	 Dual Point ID: 61 ===================
10:08:47,887 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.208E-08|<1.000E-06)
10:08:47,887 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:48,154 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.357E-01 	 Total distance: 1.357E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([9], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:48,414 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.412E-02 	 Total distance: 7.412E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([9], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:48,415 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:48,415 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -29.33 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:48,415 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:48,415 root DEBUG dOFF/dON = 0.5
10:08:48,416 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.12997542238847, 'dON1': 0.13565113996967107, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.13565113996967107, 'nTON': 1, 'dON': 0.13565113996967107, 'dxOFFAngle': 81.13422968876628, 'dOFF1': 0.07412084132880742, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.07412084132880742, 'nTOFF': 1, 'dOFF': 0.07412084132880742, 'SUCCESS': False}
10:08:48,430 root DEBUG 

=================== Experiment ID #60 	 Dual Point ID: 62 ===================
10:08:48,439 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.021E-08|<1.000E-06)
10:08:48,439 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:48,760 root DEBUG Side: ON	 Angle(dx0, dx): 0.84 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.472E-02 	 Total distance: 3.472E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([74], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:49,43 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.236E-02 	 Total distance: 9.236E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([227], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:49,208 root DEBUG Side: OFF	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.719E-02 	 Total distance: 1.796E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([233], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:49,209 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:49,209 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 67.59 	 cIDON = [3 7], cIDOFF = [3 7]
10:08:49,209 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:49,209 root DEBUG dOFF/dON = 5.2
10:08:49,209 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.54973965584698, 'dON1': 0.03472092313960742, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.03472092313960742, 'nTON': 1, 'dON': 0.03472092313960742, 'dxOFFAngle': 89.47360660102203, 'dOFF1': 0.1795566479049301, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.1795566479049301, 'nTOFF': 1, 'dOFF': 0.1795566479049301, 'SUCCESS': True}
10:08:49,221 root DEBUG 

=================== Experiment ID #61 	 Dual Point ID: 63 ===================
10:08:49,229 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.731E-09|<1.000E-06)
10:08:49,230 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:49,537 root DEBUG Side: ON	 Angle(dx0, dx): 0.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.374E-02 	 Total distance: 6.374E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([66], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:08:49,761 root DEBUG Side: ON	 Angle(dx0, dx): 2.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.832E-04 	 Total distance: 6.422E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([37], dtype=int64), array([[False]])]] 	 class: [2 4]
10:08:50,85 root DEBUG Side: OFF	 Angle(dx0, dx): 0.99 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.322E-03 	 Total distance: 9.322E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([187], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:08:50,85 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:50,86 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -74.65 	 cIDON = [2 4], cIDOFF = [2 4]
10:08:50,86 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:50,86 root DEBUG dOFF/dON = 0.1
10:08:50,86 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.03387511746375, 'dON1': 0.06422395006300415, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.06422395006300415, 'nTON': 1, 'dON': 0.06422395006300415, 'dxOFFAngle': 82.4705176103118, 'dOFF1': 0.009321563044416104, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.009321563044416104, 'nTOFF': 1, 'dOFF': 0.009321563044416104, 'SUCCESS': False}
10:08:50,97 root DEBUG 

=================== Experiment ID #62 	 Dual Point ID: 64 ===================
10:08:50,109 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.152E-09|<1.000E-06)
10:08:50,109 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:50,448 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.212E-02 	 Total distance: 3.212E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([23], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:08:50,680 root DEBUG Side: ON	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.055E-01 	 Total distance: 1.376E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([64], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:08:51,11 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.179E-02 	 Total distance: 7.179E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([152], dtype=int64), array([[False]])]] 	 class: [2 6]
10:08:51,219 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.366E-03 	 Total distance: 7.416E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([78], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:08:51,220 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:51,220 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -29.95 	 cIDON = [2 6], cIDOFF = [2 6]
10:08:51,220 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:51,220 root DEBUG dOFF/dON = 0.5
10:08:51,220 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.37116846794723, 'dON1': 0.13756698693408034, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.13756698693408034, 'nTON': 1, 'dON': 0.13756698693408034, 'dxOFFAngle': 89.11595076067252, 'dOFF1': 0.074156065068368, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.074156065068368, 'nTOFF': 1, 'dOFF': 0.074156065068368, 'SUCCESS': False}
10:08:51,229 root DEBUG 

=================== Experiment ID #63 	 Dual Point ID: 65 ===================
10:08:51,240 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.732E-08|<1.000E-06)
10:08:51,240 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:51,509 root DEBUG Side: ON	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.182E-01 	 Total distance: 1.182E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([43], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:51,888 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.901E-02 	 Total distance: 1.901E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([244], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:52,117 root DEBUG Side: OFF	 Angle(dx0, dx): 1.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.677E-02 	 Total distance: 1.058E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([38], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:52,117 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:52,118 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -5.56 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:52,118 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:52,118 root DEBUG dOFF/dON = 0.9
10:08:52,118 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.79092877055528, 'dON1': 0.11824796611167368, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.11824796611167368, 'nTON': 1, 'dON': 0.11824796611167368, 'dxOFFAngle': 85.77152123803869, 'dOFF1': 0.10578317161450657, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.10578317161450657, 'nTOFF': 1, 'dOFF': 0.10578317161450657, 'SUCCESS': False}
10:08:52,126 root DEBUG 

=================== Experiment ID #64 	 Dual Point ID: 66 ===================
10:08:52,139 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.657E-09|<1.000E-06)
10:08:52,139 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:52,500 root DEBUG Side: ON	 Angle(dx0, dx): 1.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.406E-01 	 Total distance: 1.406E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([25], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:52,787 root DEBUG Side: OFF	 Angle(dx0, dx): 1.86 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.423E-02 	 Total distance: 3.423E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([58], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:52,787 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:52,787 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -60.85 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:52,788 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:52,788 root DEBUG dOFF/dON = 0.2
10:08:52,788 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.77637780706577, 'dON1': 0.14060370634698716, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.14060370634698716, 'nTON': 1, 'dON': 0.14060370634698716, 'dxOFFAngle': 84.8759384648261, 'dOFF1': 0.03422687845920549, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.03422687845920549, 'nTOFF': 1, 'dOFF': 0.03422687845920549, 'SUCCESS': False}
10:08:52,801 root DEBUG 

=================== Experiment ID #65 	 Dual Point ID: 67 ===================
10:08:52,812 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.962E-08|<1.000E-06)
10:08:52,813 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:53,67 root DEBUG Side: ON	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.689E-02 	 Total distance: 1.689E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([108], dtype=int64), array([[False]])]] 	 class: [5 6]
10:08:53,314 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.297E-01 	 Total distance: 1.297E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([97], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:08:53,315 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:53,315 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 76.96 	 cIDON = [5 6], cIDOFF = [5 6]
10:08:53,315 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:53,315 root DEBUG dOFF/dON = 7.7
10:08:53,315 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.2740297005604, 'dON1': 0.016890084591711173, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.016890084591711173, 'nTON': 1, 'dON': 0.016890084591711173, 'dxOFFAngle': 89.68779271717979, 'dOFF1': 0.12972345193717363, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.12972345193717363, 'nTOFF': 1, 'dOFF': 0.12972345193717363, 'SUCCESS': True}
10:08:53,327 root DEBUG 

=================== Experiment ID #66 	 Dual Point ID: 68 ===================
10:08:53,336 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.108E-07|<1.000E-06)
10:08:53,336 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:53,644 root DEBUG Side: ON	 Angle(dx0, dx): 0.78 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.741E-03 	 Total distance: 7.741E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([169], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:08:53,928 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.759E-03 	 Total distance: 4.759E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([224], dtype=int64), array([[False]])]] 	 class: [0 8]
10:08:54,190 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.713E-01 	 Total distance: 1.761E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([139], dtype=int64), array([[False]])]] 	 class: [0 8]
10:08:54,423 root DEBUG Side: OFF	 Angle(dx0, dx): 0.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.758E-01 	 Total distance: 5.518E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([96], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:08:54,423 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:54,424 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 97.23 	 cIDON = [1 8], cIDOFF = [0 8]
10:08:54,424 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:54,424 root DEBUG dOFF/dON = 71.3
10:08:54,424 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.74565244676508, 'dON1': 0.007740646171691602, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 0.007740646171691602, 'nTON': 1, 'dON': 0.007740646171691602, 'dxOFFAngle': 89.71484992390818, 'dOFF1': 0.5518469560952632, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.5518469560952632, 'nTOFF': 1, 'dOFF': 0.5518469560952632, 'SUCCESS': True}
10:08:54,430 root DEBUG 

=================== Experiment ID #67 	 Dual Point ID: 69 ===================
10:08:54,442 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.183E-07|<1.000E-06)
10:08:54,443 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:54,831 root DEBUG Side: ON	 Angle(dx0, dx): 6.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.141E-02 	 Total distance: 9.141E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([55], dtype=int64), array([[False]])]] 	 class: [3 4]
10:08:55,164 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.286E-01 	 Total distance: 1.286E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([92], dtype=int64), array([[False]])]] 	 class: [3 4]
10:08:55,426 root DEBUG Side: OFF	 Angle(dx0, dx): 3.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.792E-03 	 Total distance: 1.354E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([48], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:08:55,426 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:55,426 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 19.38 	 cIDON = [3 4], cIDOFF = [3 4]
10:08:55,426 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:55,427 root DEBUG dOFF/dON = 1.5
10:08:55,427 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.56061451939455, 'dON1': 0.09140941878266669, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.09140941878266669, 'nTON': 1, 'dON': 0.09140941878266669, 'dxOFFAngle': 84.08323957361426, 'dOFF1': 0.135366982364497, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.135366982364497, 'nTOFF': 1, 'dOFF': 0.135366982364497, 'SUCCESS': True}
10:08:55,438 root DEBUG 

=================== Experiment ID #68 	 Dual Point ID: 70 ===================
10:08:55,449 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.470E-09|<1.000E-06)
10:08:55,449 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:55,741 root DEBUG Side: ON	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.108E-01 	 Total distance: 1.108E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([232], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:56,53 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.969E-02 	 Total distance: 8.969E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([78], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:56,53 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:56,54 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -10.54 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:56,54 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:56,54 root DEBUG dOFF/dON = 0.8
10:08:56,54 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.43544157236556, 'dON1': 0.11082653102099921, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.11082653102099921, 'nTON': 1, 'dON': 0.11082653102099921, 'dxOFFAngle': 87.38110816212692, 'dOFF1': 0.08968643919464783, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.08968643919464783, 'nTOFF': 1, 'dOFF': 0.08968643919464783, 'SUCCESS': False}
10:08:56,65 root DEBUG 

=================== Experiment ID #69 	 Dual Point ID: 71 ===================
10:08:56,77 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.541E-09|<1.000E-06)
10:08:56,78 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:56,410 root DEBUG Side: ON	 Angle(dx0, dx): 1.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.717E-02 	 Total distance: 3.717E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([207], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:56,697 root DEBUG Side: OFF	 Angle(dx0, dx): 3.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.482E-02 	 Total distance: 1.482E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([234], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:56,697 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:56,698 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -42.98 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:56,698 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:56,698 root DEBUG dOFF/dON = 0.4
10:08:56,698 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.96901007590691, 'dON1': 0.037172946456285695, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.037172946456285695, 'nTON': 1, 'dON': 0.037172946456285695, 'dxOFFAngle': 82.98092705673288, 'dOFF1': 0.014824803258505014, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.014824803258505014, 'nTOFF': 1, 'dOFF': 0.014824803258505014, 'SUCCESS': False}
10:08:56,705 root DEBUG 

=================== Experiment ID #70 	 Dual Point ID: 72 ===================
10:08:56,719 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.269E-09|<1.000E-06)
10:08:56,719 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:57,27 root DEBUG Side: ON	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.225E-02 	 Total distance: 2.225E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([242], dtype=int64), array([[False]])]] 	 class: [1 3]
10:08:57,204 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.490E-02 	 Total distance: 4.715E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([133], dtype=int64), array([[ True]])]] 	 class: [1 3]
10:08:57,504 root DEBUG Side: OFF	 Angle(dx0, dx): 2.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.009E-01 	 Total distance: 2.009E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([17], dtype=int64), array([[ True]])]] 	 class: [0 3]
10:08:57,504 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:57,505 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 61.98 	 cIDON = [1 3], cIDOFF = [0 3]
10:08:57,505 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:57,505 root DEBUG dOFF/dON = 4.3
10:08:57,505 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.97818711263791, 'dON1': 0.04714573332372851, 'cIDON1': array([1, 3], dtype=int64), 'dON_patch_1': 0.04714573332372851, 'nTON': 1, 'dON': 0.04714573332372851, 'dxOFFAngle': 84.11617539442616, 'dOFF1': 0.20085720216323458, 'cIDOFF1': array([0, 3], dtype=int64), 'dOFF_patch_1': 0.20085720216323458, 'nTOFF': 1, 'dOFF': 0.20085720216323458, 'SUCCESS': True}
10:08:57,512 root DEBUG 

=================== Experiment ID #71 	 Dual Point ID: 73 ===================
10:08:57,526 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.095E-07|<1.000E-06)
10:08:57,526 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:57,885 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.763E-01 	 Total distance: 2.763E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([122], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:58,222 root DEBUG Side: OFF	 Angle(dx0, dx): 1.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.576E-01 	 Total distance: 1.576E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([22], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:58,222 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:58,222 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -27.34 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:58,222 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:58,223 root DEBUG dOFF/dON = 0.6
10:08:58,223 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.63823486909004, 'dON1': 0.2762547492695896, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.2762547492695896, 'nTON': 1, 'dON': 0.2762547492695896, 'dxOFFAngle': 84.7337583351705, 'dOFF1': 0.157632101370489, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.157632101370489, 'nTOFF': 1, 'dOFF': 0.157632101370489, 'SUCCESS': False}
10:08:58,232 root DEBUG 

=================== Experiment ID #72 	 Dual Point ID: 74 ===================
10:08:58,241 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.113E-08|<1.000E-06)
10:08:58,241 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:58,455 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.117E-02 	 Total distance: 6.117E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([65], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:08:58,621 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.018E-01 	 Total distance: 2.629E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([48], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:08:58,810 root DEBUG Side: ON	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.704E-01 	 Total distance: 6.333E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([8], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:08:59,104 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.213E-01 	 Total distance: 1.213E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([173], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:08:59,256 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.522E-01 	 Total distance: 3.736E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([48], dtype=int64), array([[False]])]] 	 class: [4 9]
10:08:59,256 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:59,257 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -25.80 	 cIDON = [4 9], cIDOFF = [4 9]
10:08:59,257 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:59,257 root DEBUG dOFF/dON = 0.6
10:08:59,257 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.44329964458213, 'dON1': 0.6333331717701556, 'cIDON1': array([4, 9], dtype=int64), 'dON_patch_1': 0.6333331717701556, 'nTON': 1, 'dON': 0.6333331717701556, 'dxOFFAngle': 88.4753819718026, 'dOFF1': 0.37359403153336274, 'cIDOFF1': array([4, 9], dtype=int64), 'dOFF_patch_1': 0.37359403153336274, 'nTOFF': 1, 'dOFF': 0.37359403153336274, 'SUCCESS': False}
10:08:59,263 root DEBUG 

=================== Experiment ID #73 	 Dual Point ID: 75 ===================
10:08:59,273 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.764E-08|<1.000E-06)
10:08:59,273 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:59,527 root DEBUG Side: ON	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.120E-02 	 Total distance: 3.120E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([49], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:08:59,839 root DEBUG Side: OFF	 Angle(dx0, dx): 4.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.427E-02 	 Total distance: 4.427E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([241], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:08:59,839 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:59,839 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 17.33 	 cIDON = [4 7], cIDOFF = [4 7]
10:08:59,840 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:59,840 root DEBUG dOFF/dON = 1.4
10:08:59,840 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.7902921431649, 'dON1': 0.031195042847241422, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.031195042847241422, 'nTON': 1, 'dON': 0.031195042847241422, 'dxOFFAngle': 88.73196229632048, 'dOFF1': 0.04427108200492311, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.04427108200492311, 'nTOFF': 1, 'dOFF': 0.04427108200492311, 'SUCCESS': True}
10:08:59,850 root DEBUG 

=================== Experiment ID #74 	 Dual Point ID: 76 ===================
10:08:59,858 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.218E-08|<1.000E-06)
10:08:59,858 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:00,182 root DEBUG Side: ON	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.185E-02 	 Total distance: 2.185E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([93], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:09:00,476 root DEBUG Side: OFF	 Angle(dx0, dx): 1.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.238E-02 	 Total distance: 7.238E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([209], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:09:00,476 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:00,476 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 53.62 	 cIDON = [2 3], cIDOFF = [2 3]
10:09:00,477 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:00,477 root DEBUG dOFF/dON = 3.3
10:09:00,477 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.06754340494375, 'dON1': 0.021853705909138977, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.021853705909138977, 'nTON': 1, 'dON': 0.021853705909138977, 'dxOFFAngle': 85.89664560775074, 'dOFF1': 0.07238345285429981, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.07238345285429981, 'nTOFF': 1, 'dOFF': 0.07238345285429981, 'SUCCESS': True}
10:09:00,488 root DEBUG 

=================== Experiment ID #75 	 Dual Point ID: 77 ===================
10:09:00,496 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.081E-08|<1.000E-06)
10:09:00,496 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:00,771 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.302E-01 	 Total distance: 1.302E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([39], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:01,93 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.332E-02 	 Total distance: 5.332E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([168], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:01,301 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.924E-03 	 Total distance: 5.825E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([209], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:01,301 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:01,301 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -38.19 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:01,301 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:01,301 root DEBUG dOFF/dON = 0.4
10:09:01,301 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.32851395663957, 'dON1': 0.1302273208996626, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.1302273208996626, 'nTON': 1, 'dON': 0.1302273208996626, 'dxOFFAngle': 83.4270424840883, 'dOFF1': 0.058248750492535056, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.058248750492535056, 'nTOFF': 1, 'dOFF': 0.058248750492535056, 'SUCCESS': False}
10:09:01,308 root DEBUG 

=================== Experiment ID #76 	 Dual Point ID: 78 ===================
10:09:01,316 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.483E-10|<1.000E-06)
10:09:01,316 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:01,612 root DEBUG Side: ON	 Angle(dx0, dx): 1.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.325E-01 	 Total distance: 2.325E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([2], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:01,912 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.698E-02 	 Total distance: 4.698E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([31], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:02,154 root DEBUG Side: OFF	 Angle(dx0, dx): 0.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.162E-01 	 Total distance: 2.632E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([236], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:02,154 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:02,155 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 6.19 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:02,155 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:02,155 root DEBUG dOFF/dON = 1.1
10:09:02,155 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.06437582646701, 'dON1': 0.23250101607555584, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.23250101607555584, 'nTON': 1, 'dON': 0.23250101607555584, 'dxOFFAngle': 83.71696528769414, 'dOFF1': 0.26318076185437217, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.26318076185437217, 'nTOFF': 1, 'dOFF': 0.26318076185437217, 'SUCCESS': True}
10:09:02,165 root DEBUG 

=================== Experiment ID #77 	 Dual Point ID: 79 ===================
10:09:02,171 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.670E-09|<1.000E-06)
10:09:02,171 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:02,590 root DEBUG Side: ON	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.659E-01 	 Total distance: 3.659E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([127], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:09:02,883 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.860E-01 	 Total distance: 1.860E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([40], dtype=int64), array([[False]])]] 	 class: [2 3]
10:09:03,56 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.550E-03 	 Total distance: 1.955E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([120], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:09:03,57 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:03,57 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -30.35 	 cIDON = [2 3], cIDOFF = [2 3]
10:09:03,57 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:03,57 root DEBUG dOFF/dON = 0.5
10:09:03,57 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.79171640826925, 'dON1': 0.3659441062991943, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.3659441062991943, 'nTON': 1, 'dON': 0.3659441062991943, 'dxOFFAngle': 89.67174310235968, 'dOFF1': 0.19554624386104172, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.19554624386104172, 'nTOFF': 1, 'dOFF': 0.19554624386104172, 'SUCCESS': False}
10:09:03,71 root DEBUG 

=================== Experiment ID #78 	 Dual Point ID: 80 ===================
10:09:03,84 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.266E-08|<1.000E-06)
10:09:03,84 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:03,371 root DEBUG Side: ON	 Angle(dx0, dx): 2.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.318E-02 	 Total distance: 5.318E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([119], dtype=int64), array([[False]])]] 	 class: [4 9]
10:09:03,636 root DEBUG Side: OFF	 Angle(dx0, dx): 0.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.833E-02 	 Total distance: 1.833E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([41], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:09:03,902 root DEBUG Side: OFF	 Angle(dx0, dx): 0.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.103E-02 	 Total distance: 1.094E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([208], dtype=int64), array([[False]])]] 	 class: [4 9]
10:09:03,902 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:03,902 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 34.56 	 cIDON = [4 9], cIDOFF = [4 9]
10:09:03,902 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:03,902 root DEBUG dOFF/dON = 2.1
10:09:03,902 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.1116592777387, 'dON1': 0.05318273548832996, 'cIDON1': array([4, 9], dtype=int64), 'dON_patch_1': 0.05318273548832996, 'nTON': 1, 'dON': 0.05318273548832996, 'dxOFFAngle': 87.88435607482593, 'dOFF1': 0.10936133241728994, 'cIDOFF1': array([4, 9], dtype=int64), 'dOFF_patch_1': 0.10936133241728994, 'nTOFF': 1, 'dOFF': 0.10936133241728994, 'SUCCESS': True}
10:09:03,915 root DEBUG 

=================== Experiment ID #79 	 Dual Point ID: 81 ===================
10:09:03,927 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.717E-09|<1.000E-06)
10:09:03,927 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:04,225 root DEBUG Side: ON	 Angle(dx0, dx): 0.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.197E-02 	 Total distance: 6.197E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([119], dtype=int64), array([[False]])]] 	 class: [0 3]
10:09:04,480 root DEBUG Side: ON	 Angle(dx0, dx): 1.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.730E-02 	 Total distance: 1.593E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([153], dtype=int64), array([[ True]])]] 	 class: [0 3]
10:09:04,752 root DEBUG Side: OFF	 Angle(dx0, dx): 1.84 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.891E-02 	 Total distance: 3.891E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([227], dtype=int64), array([[ True]])]] 	 class: [0 3]
10:09:04,752 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:04,752 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -60.73 	 cIDON = [0 3], cIDOFF = [0 3]
10:09:04,752 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:04,752 root DEBUG dOFF/dON = 0.2
10:09:04,752 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.38117581055593, 'dON1': 0.1592685983681026, 'cIDON1': array([0, 3], dtype=int64), 'dON_patch_1': 0.1592685983681026, 'nTON': 1, 'dON': 0.1592685983681026, 'dxOFFAngle': 88.92470268507648, 'dOFF1': 0.03890745371656416, 'cIDOFF1': array([0, 3], dtype=int64), 'dOFF_patch_1': 0.03890745371656416, 'nTOFF': 1, 'dOFF': 0.03890745371656416, 'SUCCESS': False}
10:09:04,759 root DEBUG 

=================== Experiment ID #80 	 Dual Point ID: 82 ===================
10:09:04,766 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.999E-08|<1.000E-06)
10:09:04,767 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:05,130 root DEBUG Side: ON	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.930E-01 	 Total distance: 4.930E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([0], dtype=int64), array([[False]])]] 	 class: [4 6]
10:09:05,454 root DEBUG Side: OFF	 Angle(dx0, dx): 2.89 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.428E-02 	 Total distance: 9.428E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([31], dtype=int64), array([[False]])]] 	 class: [4 6]
10:09:05,454 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:05,455 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -67.89 	 cIDON = [4 6], cIDOFF = [4 6]
10:09:05,455 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:05,455 root DEBUG dOFF/dON = 0.2
10:09:05,455 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.62403961807158, 'dON1': 0.4929882226393736, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.4929882226393736, 'nTON': 1, 'dON': 0.4929882226393736, 'dxOFFAngle': 86.45911771044719, 'dOFF1': 0.0942768817542896, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.0942768817542896, 'nTOFF': 1, 'dOFF': 0.0942768817542896, 'SUCCESS': False}
10:09:05,466 root DEBUG 

=================== Experiment ID #81 	 Dual Point ID: 83 ===================
10:09:05,474 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.958E-07|<1.000E-06)
10:09:05,474 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:05,767 root DEBUG Side: ON	 Angle(dx0, dx): 0.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.206E-02 	 Total distance: 3.206E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([255], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:05,988 root DEBUG Side: OFF	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.526E-01 	 Total distance: 2.526E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([197], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:06,209 root DEBUG Side: OFF	 Angle(dx0, dx): 0.93 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.088E-02 	 Total distance: 2.835E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([38], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:06,209 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:06,209 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 79.67 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:06,209 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:06,209 root DEBUG dOFF/dON = 8.8
10:09:06,209 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.87742407178433, 'dON1': 0.032064818944936395, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.032064818944936395, 'nTON': 1, 'dON': 0.032064818944936395, 'dxOFFAngle': 84.6301907250402, 'dOFF1': 0.2834508405693408, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.2834508405693408, 'nTOFF': 1, 'dOFF': 0.2834508405693408, 'SUCCESS': True}
10:09:06,216 root DEBUG 

=================== Experiment ID #82 	 Dual Point ID: 84 ===================
10:09:06,226 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.796E-08|<1.000E-06)
10:09:06,226 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:06,481 root DEBUG Side: ON	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.045E-01 	 Total distance: 2.045E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([50], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:06,631 root DEBUG Side: ON	 Angle(dx0, dx): 1.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.449E-02 	 Total distance: 2.390E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([112], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:06,909 root DEBUG Side: OFF	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.395E-02 	 Total distance: 3.395E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([46], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:06,909 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:06,910 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -75.12 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:06,910 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:06,910 root DEBUG dOFF/dON = 0.1
10:09:06,910 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.13081944475742, 'dON1': 0.23895445169513274, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.23895445169513274, 'nTON': 1, 'dON': 0.23895445169513274, 'dxOFFAngle': 89.4729992699433, 'dOFF1': 0.03394641027069934, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.03394641027069934, 'nTOFF': 1, 'dOFF': 0.03394641027069934, 'SUCCESS': False}
10:09:06,916 root DEBUG 

=================== Experiment ID #83 	 Dual Point ID: 85 ===================
10:09:06,922 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.522E-08|<1.000E-06)
10:09:06,922 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:07,182 root DEBUG Side: ON	 Angle(dx0, dx): 2.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.402E-02 	 Total distance: 5.402E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([4], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:09:07,529 root DEBUG Side: OFF	 Angle(dx0, dx): 0.86 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.318E-02 	 Total distance: 9.318E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([115], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:09:07,529 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:07,529 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 26.61 	 cIDON = [4 5], cIDOFF = [4 5]
10:09:07,530 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:07,530 root DEBUG dOFF/dON = 1.7
10:09:07,530 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.31154894037395, 'dON1': 0.05401847467843329, 'cIDON1': array([4, 5], dtype=int64), 'dON_patch_1': 0.05401847467843329, 'nTON': 1, 'dON': 0.05401847467843329, 'dxOFFAngle': 87.88869383759149, 'dOFF1': 0.09318193703540407, 'cIDOFF1': array([4, 5], dtype=int64), 'dOFF_patch_1': 0.09318193703540407, 'nTOFF': 1, 'dOFF': 0.09318193703540407, 'SUCCESS': True}
10:09:07,543 root DEBUG 

=================== Experiment ID #84 	 Dual Point ID: 86 ===================
10:09:07,553 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.585E-08|<1.000E-06)
10:09:07,554 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:07,898 root DEBUG Side: ON	 Angle(dx0, dx): 0.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.952E-02 	 Total distance: 8.952E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([3], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:09:08,191 root DEBUG Side: OFF	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.908E-01 	 Total distance: 1.908E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([115], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:09:08,192 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:08,192 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 36.13 	 cIDON = [4 5], cIDOFF = [4 5]
10:09:08,192 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:08,192 root DEBUG dOFF/dON = 2.1
10:09:08,192 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.6548068738842, 'dON1': 0.08952134943090183, 'cIDON1': array([4, 5], dtype=int64), 'dON_patch_1': 0.08952134943090183, 'nTON': 1, 'dON': 0.08952134943090183, 'dxOFFAngle': 85.95634253573674, 'dOFF1': 0.19079722784710326, 'cIDOFF1': array([4, 5], dtype=int64), 'dOFF_patch_1': 0.19079722784710326, 'nTOFF': 1, 'dOFF': 0.19079722784710326, 'SUCCESS': True}
10:09:08,199 root DEBUG 

=================== Experiment ID #85 	 Dual Point ID: 87 ===================
10:09:08,209 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.781E-08|<1.000E-06)
10:09:08,209 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:08,508 root DEBUG Side: ON	 Angle(dx0, dx): 0.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.653E-01 	 Total distance: 3.653E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([237], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:08,779 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.016E-01 	 Total distance: 6.016E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([157], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:08,779 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:08,779 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 24.43 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:08,779 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:08,779 root DEBUG dOFF/dON = 1.6
10:09:08,779 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.87617351748858, 'dON1': 0.36533768714345544, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.36533768714345544, 'nTON': 1, 'dON': 0.36533768714345544, 'dxOFFAngle': 86.26350345307509, 'dOFF1': 0.6015752943048913, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.6015752943048913, 'nTOFF': 1, 'dOFF': 0.6015752943048913, 'SUCCESS': True}
10:09:08,786 root DEBUG 

=================== Experiment ID #86 	 Dual Point ID: 88 ===================
10:09:08,798 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.659E-07|<1.000E-06)
10:09:08,798 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:09,72 root DEBUG Side: ON	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.362E-02 	 Total distance: 3.362E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([25], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:09:09,289 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.722E-02 	 Total distance: 6.722E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([88], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:09:09,461 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.087E-02 	 Total distance: 7.810E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([153], dtype=int64), array([[False]])]] 	 class: [3 9]
10:09:09,461 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:09,461 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 39.82 	 cIDON = [3 9], cIDOFF = [3 9]
10:09:09,461 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:09,461 root DEBUG dOFF/dON = 2.3
10:09:09,461 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.56052946888437, 'dON1': 0.033616304652307444, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.033616304652307444, 'nTON': 1, 'dON': 0.033616304652307444, 'dxOFFAngle': 88.17577895212929, 'dOFF1': 0.0780951946395051, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.0780951946395051, 'nTOFF': 1, 'dOFF': 0.0780951946395051, 'SUCCESS': True}
10:09:09,472 root DEBUG 

=================== Experiment ID #87 	 Dual Point ID: 89 ===================
10:09:09,481 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.438E-08|<1.000E-06)
10:09:09,481 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:09,690 root DEBUG Side: ON	 Angle(dx0, dx): 2.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.601E-02 	 Total distance: 6.601E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([157], dtype=int64), array([[ True]])]] 	 class: [6 8]
10:09:09,923 root DEBUG Side: OFF	 Angle(dx0, dx): 0.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.295E-01 	 Total distance: 1.295E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([246], dtype=int64), array([[ True]])]] 	 class: [6 8]
10:09:10,126 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.310E-02 	 Total distance: 1.526E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([74], dtype=int64), array([[ True]])]] 	 class: [6 8]
10:09:10,357 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.417E-01 	 Total distance: 2.943E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([23], dtype=int64), array([[False]])]] 	 class: [6 8]
10:09:10,549 root DEBUG Side: OFF	 Angle(dx0, dx): 0.97 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.075E-01 	 Total distance: 5.018E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([206], dtype=int64), array([[ True]])]] 	 class: [6 8]
10:09:10,549 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:10,549 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 76.75 	 cIDON = [6 8], cIDOFF = [6 8]
10:09:10,549 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:10,549 root DEBUG dOFF/dON = 7.6
10:09:10,549 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.58090233671014, 'dON1': 0.06601386008332766, 'cIDON1': array([6, 8], dtype=int64), 'dON_patch_1': 0.06601386008332766, 'nTON': 1, 'dON': 0.06601386008332766, 'dxOFFAngle': 80.88291272159567, 'dOFF1': 0.5017504812902014, 'cIDOFF1': array([6, 8], dtype=int64), 'dOFF_patch_1': 0.5017504812902014, 'nTOFF': 1, 'dOFF': 0.5017504812902014, 'SUCCESS': True}
10:09:10,556 root DEBUG 

=================== Experiment ID #88 	 Dual Point ID: 90 ===================
10:09:10,563 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.408E-07|<1.000E-06)
10:09:10,563 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:10,768 root DEBUG Side: ON	 Angle(dx0, dx): 3.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.224E-02 	 Total distance: 3.224E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([25], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:09:10,993 root DEBUG Side: OFF	 Angle(dx0, dx): 0.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.826E-01 	 Total distance: 3.826E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([23], dtype=int64), array([[False]])]] 	 class: [5 9]
10:09:10,993 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:10,993 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 84.46 	 cIDON = [5 9], cIDOFF = [5 9]
10:09:10,993 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:10,993 root DEBUG dOFF/dON = 11.9
10:09:10,993 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.90105221070768, 'dON1': 0.03224178358584776, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.03224178358584776, 'nTON': 1, 'dON': 0.03224178358584776, 'dxOFFAngle': 84.14383793789358, 'dOFF1': 0.3826495614311227, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.3826495614311227, 'nTOFF': 1, 'dOFF': 0.3826495614311227, 'SUCCESS': True}
10:09:10,999 root DEBUG 

=================== Experiment ID #89 	 Dual Point ID: 91 ===================
10:09:11,8 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.193E-08|<1.000E-06)
10:09:11,8 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:11,349 root DEBUG Side: ON	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.345E-01 	 Total distance: 2.345E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([250], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:11,577 root DEBUG Side: ON	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.394E-01 	 Total distance: 3.740E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([254], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:11,955 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.701E-02 	 Total distance: 2.701E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([202], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:11,955 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:11,956 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -86.53 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:11,956 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:11,956 root DEBUG dOFF/dON = 0.1
10:09:11,956 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.84238345858867, 'dON1': 0.37395717897244424, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.37395717897244424, 'nTON': 1, 'dON': 0.37395717897244424, 'dxOFFAngle': 82.01414118039675, 'dOFF1': 0.02701267289006724, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.02701267289006724, 'nTOFF': 1, 'dOFF': 0.02701267289006724, 'SUCCESS': False}
10:09:11,972 root DEBUG 

=================== Experiment ID #90 	 Dual Point ID: 92 ===================
10:09:11,981 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.080E-08|<1.000E-06)
10:09:11,981 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:12,288 root DEBUG Side: ON	 Angle(dx0, dx): 1.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.640E-03 	 Total distance: 2.640E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([59], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:12,621 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.555E-02 	 Total distance: 3.555E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([192], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:12,621 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:12,622 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 86.17 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:12,622 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:12,622 root DEBUG dOFF/dON = 13.5
10:09:12,622 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.53880689959621, 'dON1': 0.0026399182699010284, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.0026399182699010284, 'nTON': 1, 'dON': 0.0026399182699010284, 'dxOFFAngle': 88.44789305365003, 'dOFF1': 0.035548977773279984, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.035548977773279984, 'nTOFF': 1, 'dOFF': 0.035548977773279984, 'SUCCESS': True}
10:09:12,629 root DEBUG 

=================== Experiment ID #91 	 Dual Point ID: 93 ===================
10:09:12,642 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.679E-08|<1.000E-06)
10:09:12,642 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:12,950 root DEBUG Side: ON	 Angle(dx0, dx): 0.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.098E-02 	 Total distance: 4.098E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([96], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:13,204 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.665E-01 	 Total distance: 7.665E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([134], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:13,204 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:13,205 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 89.85 	 cIDON = [5 7], cIDOFF = [5 7]
10:09:13,205 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:13,205 root DEBUG dOFF/dON = 18.7
10:09:13,205 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.78336852414621, 'dON1': 0.04097618077868401, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.04097618077868401, 'nTON': 1, 'dON': 0.04097618077868401, 'dxOFFAngle': 85.0604021425019, 'dOFF1': 0.7664737667495788, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.7664737667495788, 'nTOFF': 1, 'dOFF': 0.7664737667495788, 'SUCCESS': True}
10:09:13,219 root DEBUG 

=================== Experiment ID #92 	 Dual Point ID: 94 ===================
10:09:13,229 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.608E-08|<1.000E-06)
10:09:13,229 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:13,593 root DEBUG Side: ON	 Angle(dx0, dx): 1.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.029E-02 	 Total distance: 3.029E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([152], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:09:13,863 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.051E-02 	 Total distance: 8.051E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([220], dtype=int64), array([[False]])]] 	 class: [4 9]
10:09:14,38 root DEBUG Side: OFF	 Angle(dx0, dx): 1.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.656E-02 	 Total distance: 9.707E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([211], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:09:14,301 root DEBUG Side: OFF	 Angle(dx0, dx): 1.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.797E-02 	 Total distance: 1.650E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([31], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:09:14,302 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:14,302 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 68.98 	 cIDON = [4 9], cIDOFF = [4 9]
10:09:14,302 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:14,303 root DEBUG dOFF/dON = 5.4
10:09:14,303 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.79540371816249, 'dON1': 0.030292229517018904, 'cIDON1': array([4, 9], dtype=int64), 'dON_patch_1': 0.030292229517018904, 'nTON': 1, 'dON': 0.030292229517018904, 'dxOFFAngle': 85.53403500126046, 'dOFF1': 0.16503991551029212, 'cIDOFF1': array([4, 9], dtype=int64), 'dOFF_patch_1': 0.16503991551029212, 'nTOFF': 1, 'dOFF': 0.16503991551029212, 'SUCCESS': True}
10:09:14,311 root DEBUG 

=================== Experiment ID #93 	 Dual Point ID: 95 ===================
10:09:14,319 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.601E-08|<1.000E-06)
10:09:14,319 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:14,705 root DEBUG Side: ON	 Angle(dx0, dx): 1.96 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.250E-02 	 Total distance: 3.250E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([58], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:15,36 root DEBUG Side: OFF	 Angle(dx0, dx): 1.99 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.365E-01 	 Total distance: 2.365E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([240], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:15,37 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:15,37 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 75.84 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:15,37 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:15,37 root DEBUG dOFF/dON = 7.3
10:09:15,37 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.66932851249733, 'dON1': 0.03250028393207921, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.03250028393207921, 'nTON': 1, 'dON': 0.03250028393207921, 'dxOFFAngle': 87.92591916024124, 'dOFF1': 0.23648694873563414, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.23648694873563414, 'nTOFF': 1, 'dOFF': 0.23648694873563414, 'SUCCESS': True}
10:09:15,52 root DEBUG 

=================== Experiment ID #94 	 Dual Point ID: 96 ===================
10:09:15,68 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.842E-09|<1.000E-06)
10:09:15,69 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:15,330 root DEBUG Side: ON	 Angle(dx0, dx): 1.95 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.386E-02 	 Total distance: 4.386E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([209], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:15,671 root DEBUG Side: OFF	 Angle(dx0, dx): 3.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.160E-02 	 Total distance: 5.160E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([202], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:15,671 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:15,671 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 8.11 	 cIDON = [2 4], cIDOFF = [2 4]
10:09:15,672 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:15,672 root DEBUG dOFF/dON = 1.2
10:09:15,672 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.69508860517115, 'dON1': 0.04386199157250968, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.04386199157250968, 'nTON': 1, 'dON': 0.04386199157250968, 'dxOFFAngle': 86.01598558750456, 'dOFF1': 0.051601592202220554, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.051601592202220554, 'nTOFF': 1, 'dOFF': 0.051601592202220554, 'SUCCESS': True}
10:09:15,682 root DEBUG 

=================== Experiment ID #95 	 Dual Point ID: 97 ===================
10:09:15,696 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.968E-09|<1.000E-06)
10:09:15,696 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:16,4 root DEBUG Side: ON	 Angle(dx0, dx): 1.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.628E-01 	 Total distance: 1.628E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([7], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:16,236 root DEBUG Side: OFF	 Angle(dx0, dx): 2.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.108E-02 	 Total distance: 1.108E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([103], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:16,236 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:16,236 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -87.25 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:16,236 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:16,236 root DEBUG dOFF/dON = 0.1
10:09:16,236 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.71944576442469, 'dON1': 0.1628405421814169, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.1628405421814169, 'nTON': 1, 'dON': 0.1628405421814169, 'dxOFFAngle': 87.7284629606694, 'dOFF1': 0.011084519972670907, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.011084519972670907, 'nTOFF': 1, 'dOFF': 0.011084519972670907, 'SUCCESS': False}
10:09:16,244 root DEBUG 

=================== Experiment ID #96 	 Dual Point ID: 98 ===================
10:09:16,251 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.424E-08|<1.000E-06)
10:09:16,251 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:16,568 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.862E-02 	 Total distance: 2.862E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([164], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:16,795 root DEBUG Side: ON	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.207E-01 	 Total distance: 2.493E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([58], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:17,71 root DEBUG Side: OFF	 Angle(dx0, dx): 0.78 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.797E-03 	 Total distance: 9.797E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([111], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:17,71 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:17,71 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -92.44 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:17,71 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:17,71 root DEBUG dOFF/dON = 0.0
10:09:17,71 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.32147758905849, 'dON1': 0.24932519752212431, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.24932519752212431, 'nTON': 1, 'dON': 0.24932519752212431, 'dxOFFAngle': 88.73674591014043, 'dOFF1': 0.009797180978040417, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.009797180978040417, 'nTOFF': 1, 'dOFF': 0.009797180978040417, 'SUCCESS': False}
10:09:17,82 root DEBUG 

=================== Experiment ID #97 	 Dual Point ID: 99 ===================
10:09:17,93 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.752E-08|<1.000E-06)
10:09:17,94 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:17,361 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.513E-02 	 Total distance: 3.513E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([255], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:17,529 root DEBUG Side: ON	 Angle(dx0, dx): 0.95 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.938E-02 	 Total distance: 5.451E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([230], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:17,833 root DEBUG Side: OFF	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.292E-01 	 Total distance: 1.292E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([236], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:17,833 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:17,834 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 40.65 	 cIDON = [2 6], cIDOFF = [2 6]
10:09:17,834 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:17,834 root DEBUG dOFF/dON = 2.4
10:09:17,834 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.88023850348533, 'dON1': 0.054507414438936495, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.054507414438936495, 'nTON': 1, 'dON': 0.054507414438936495, 'dxOFFAngle': 81.83004043163075, 'dOFF1': 0.1291872928353459, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.1291872928353459, 'nTOFF': 1, 'dOFF': 0.1291872928353459, 'SUCCESS': True}
10:09:17,842 root DEBUG 

=================== Experiment ID #98 	 Dual Point ID: 100 ===================
10:09:17,849 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.470E-08|<1.000E-06)
10:09:17,849 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:18,129 root DEBUG Side: ON	 Angle(dx0, dx): 1.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.018E-03 	 Total distance: 5.018E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([121], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:09:18,437 root DEBUG Side: OFF	 Angle(dx0, dx): 1.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.703E-02 	 Total distance: 3.703E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([145], dtype=int64), array([[False]])]] 	 class: [0 9]
10:09:18,437 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:18,438 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 76.13 	 cIDON = [1 9], cIDOFF = [0 9]
10:09:18,438 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:18,438 root DEBUG dOFF/dON = 7.4
10:09:18,438 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.46563435548076, 'dON1': 0.005017656831128002, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.005017656831128002, 'nTON': 1, 'dON': 0.005017656831128002, 'dxOFFAngle': 84.04248768358255, 'dOFF1': 0.03702677561657902, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.03702677561657902, 'nTOFF': 1, 'dOFF': 0.03702677561657902, 'SUCCESS': True}
10:09:18,449 root DEBUG 

=================== Experiment ID #99 	 Dual Point ID: 101 ===================
10:09:18,459 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.904E-09|<1.000E-06)
10:09:18,459 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:18,769 root DEBUG Side: ON	 Angle(dx0, dx): 1.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.368E-01 	 Total distance: 1.368E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([108], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:18,982 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.501E-02 	 Total distance: 1.518E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([17], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:19,175 root DEBUG Side: ON	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.274E-02 	 Total distance: 2.146E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([152], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:19,427 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.459E-01 	 Total distance: 5.605E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([137], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:19,622 root DEBUG Side: ON	 Angle(dx0, dx): 1.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.244E-01 	 Total distance: 8.849E-01 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([29], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:19,822 root DEBUG Side: ON	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.874E-02 	 Total distance: 9.536E-01 	 Future toggles: 0 	 Past toggles: 6 	 Toggled: [[1, array([131], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:20,46 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.113E-01 	 Total distance: 1.065E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([245], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:20,376 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.087E-01 	 Total distance: 6.087E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([104], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:20,555 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.852E-01 	 Total distance: 7.939E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([134], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:20,555 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:20,555 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -14.58 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:20,555 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:20,555 root DEBUG dOFF/dON = 0.7
10:09:20,555 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.57249572339431, 'dON1': 1.064866383455269, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 1.064866383455269, 'nTON': 1, 'dON': 1.064866383455269, 'dxOFFAngle': 86.15228633073434, 'dOFF1': 0.7938664014991808, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.7938664014991808, 'nTOFF': 1, 'dOFF': 0.7938664014991808, 'SUCCESS': False}
10:09:20,565 root DEBUG 

=================== Experiment ID #100 	 Dual Point ID: 102 ===================
10:09:20,574 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.922E-08|<1.000E-06)
10:09:20,574 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:20,857 root DEBUG Side: ON	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.134E-01 	 Total distance: 1.134E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([6], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:21,146 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.740E-02 	 Total distance: 9.740E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([61], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:21,146 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:21,146 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -7.60 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:21,147 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:21,147 root DEBUG dOFF/dON = 0.9
10:09:21,147 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.54386379670686, 'dON1': 0.11341150196869237, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.11341150196869237, 'nTON': 1, 'dON': 0.11341150196869237, 'dxOFFAngle': 88.87029128895448, 'dOFF1': 0.09739719390661562, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.09739719390661562, 'nTOFF': 1, 'dOFF': 0.09739719390661562, 'SUCCESS': False}
10:09:21,156 root DEBUG 

=================== Experiment ID #101 	 Dual Point ID: 103 ===================
10:09:21,165 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.577E-09|<1.000E-06)
10:09:21,165 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:21,452 root DEBUG Side: ON	 Angle(dx0, dx): 1.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.794E-03 	 Total distance: 6.794E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([143], dtype=int64), array([[False]])]] 	 class: [6 7]
10:09:21,778 root DEBUG Side: OFF	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.509E-03 	 Total distance: 2.509E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([193], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:09:21,778 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:21,778 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -46.06 	 cIDON = [6 7], cIDOFF = [6 7]
10:09:21,778 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:21,779 root DEBUG dOFF/dON = 0.4
10:09:21,779 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.53185657929262, 'dON1': 0.006794118499939925, 'cIDON1': array([6, 7], dtype=int64), 'dON_patch_1': 0.006794118499939925, 'nTON': 1, 'dON': 0.006794118499939925, 'dxOFFAngle': 80.40892406192114, 'dOFF1': 0.0025093056467576725, 'cIDOFF1': array([6, 7], dtype=int64), 'dOFF_patch_1': 0.0025093056467576725, 'nTOFF': 1, 'dOFF': 0.0025093056467576725, 'SUCCESS': False}
10:09:21,790 root DEBUG 

=================== Experiment ID #102 	 Dual Point ID: 104 ===================
10:09:21,797 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.345E-07|<1.000E-06)
10:09:21,798 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:22,112 root DEBUG Side: ON	 Angle(dx0, dx): 0.96 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.544E-01 	 Total distance: 3.544E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([254], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:09:22,387 root DEBUG Side: OFF	 Angle(dx0, dx): 1.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.613E-01 	 Total distance: 2.613E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([138], dtype=int64), array([[False]])]] 	 class: [6 9]
10:09:22,388 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:22,388 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -15.13 	 cIDON = [6 9], cIDOFF = [6 9]
10:09:22,388 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:22,388 root DEBUG dOFF/dON = 0.7
10:09:22,388 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.76890078514187, 'dON1': 0.35443697075332603, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.35443697075332603, 'nTON': 1, 'dON': 0.35443697075332603, 'dxOFFAngle': 86.66487137925452, 'dOFF1': 0.26129201663975543, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.26129201663975543, 'nTOFF': 1, 'dOFF': 0.26129201663975543, 'SUCCESS': False}
10:09:22,398 root DEBUG 

=================== Experiment ID #103 	 Dual Point ID: 105 ===================
10:09:22,406 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.967E-08|<1.000E-06)
10:09:22,407 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:22,648 root DEBUG Side: ON	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.061E-02 	 Total distance: 4.061E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([15], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:22,922 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.740E-02 	 Total distance: 7.740E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([242], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:22,922 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:22,922 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 31.17 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:22,922 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:22,922 root DEBUG dOFF/dON = 1.9
10:09:22,922 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.21161528663536, 'dON1': 0.040610008540019775, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.040610008540019775, 'nTON': 1, 'dON': 0.040610008540019775, 'dxOFFAngle': 85.04936969781345, 'dOFF1': 0.07739927711135086, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.07739927711135086, 'nTOFF': 1, 'dOFF': 0.07739927711135086, 'SUCCESS': True}
10:09:22,929 root DEBUG 

=================== Experiment ID #104 	 Dual Point ID: 106 ===================
10:09:22,936 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.114E-07|<1.000E-06)
10:09:22,936 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:23,251 root DEBUG Side: ON	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.116E+00 	 Total distance: 1.116E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([1], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:23,423 root DEBUG Side: ON	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.427E-01 	 Total distance: 1.359E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([12], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:23,681 root DEBUG Side: OFF	 Angle(dx0, dx): 6.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.264E-01 	 Total distance: 2.264E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([1, 8], dtype=int64), array([[1.],
       [0.]])]] 	 class: [1 9]
10:09:23,682 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:23,682 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -71.43 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:23,682 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:23,682 root DEBUG dOFF/dON = 0.2
10:09:23,682 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.86846343781257, 'dON1': 1.35863144962046, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 1.35863144962046, 'nTON': 1, 'dON': 1.35863144962046, 'dxOFFAngle': 85.24682640754664, 'dOFF1': 0.22638412957723286, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.22638412957723286, 'nTOFF': 1, 'dOFF': 0.22638412957723286, 'SUCCESS': False}
10:09:23,688 root DEBUG 

=================== Experiment ID #105 	 Dual Point ID: 107 ===================
10:09:23,694 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.266E-08|<1.000E-06)
10:09:23,694 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:23,939 root DEBUG Side: ON	 Angle(dx0, dx): 0.77 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.608E-03 	 Total distance: 5.608E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([56], dtype=int64), array([[False]])]] 	 class: [5 9]
10:09:24,189 root DEBUG Side: OFF	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.153E-02 	 Total distance: 4.153E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([37], dtype=int64), array([[False]])]] 	 class: [5 9]
10:09:24,189 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:24,189 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 76.21 	 cIDON = [5 9], cIDOFF = [5 9]
10:09:24,189 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:24,189 root DEBUG dOFF/dON = 7.4
10:09:24,190 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.34217357150048, 'dON1': 0.0056075560963761975, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.0056075560963761975, 'nTON': 1, 'dON': 0.0056075560963761975, 'dxOFFAngle': 85.29536997153454, 'dOFF1': 0.04152908688233564, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.04152908688233564, 'nTOFF': 1, 'dOFF': 0.04152908688233564, 'SUCCESS': True}
10:09:24,198 root DEBUG 

=================== Experiment ID #106 	 Dual Point ID: 108 ===================
10:09:24,208 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.182E-08|<1.000E-06)
10:09:24,208 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:24,454 root DEBUG Side: ON	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.844E-02 	 Total distance: 2.844E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([228], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:24,761 root DEBUG Side: OFF	 Angle(dx0, dx): 0.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.749E-02 	 Total distance: 3.749E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([202], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:24,761 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:24,762 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 13.73 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:24,762 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:24,762 root DEBUG dOFF/dON = 1.3
10:09:24,762 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.17923871839278, 'dON1': 0.028435965481289776, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.028435965481289776, 'nTON': 1, 'dON': 0.028435965481289776, 'dxOFFAngle': 88.84443530847892, 'dOFF1': 0.03748657341272874, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.03748657341272874, 'nTOFF': 1, 'dOFF': 0.03748657341272874, 'SUCCESS': True}
10:09:24,772 root DEBUG 

=================== Experiment ID #107 	 Dual Point ID: 109 ===================
10:09:24,781 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.929E-09|<1.000E-06)
10:09:24,781 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:25,94 root DEBUG Side: ON	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.664E-02 	 Total distance: 2.664E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([123], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:25,374 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.355E-01 	 Total distance: 1.355E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([255], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:25,555 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.376E-03 	 Total distance: 1.439E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([244], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:25,789 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.810E-01 	 Total distance: 3.249E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([204], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:25,789 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:25,790 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 84.84 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:25,790 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:25,790 root DEBUG dOFF/dON = 12.2
10:09:25,790 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.67800921417242, 'dON1': 0.026639809680200414, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.026639809680200414, 'nTON': 1, 'dON': 0.026639809680200414, 'dxOFFAngle': 83.58963309051094, 'dOFF1': 0.32487137274999767, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.32487137274999767, 'nTOFF': 1, 'dOFF': 0.32487137274999767, 'SUCCESS': True}
10:09:25,803 root DEBUG 

=================== Experiment ID #108 	 Dual Point ID: 110 ===================
10:09:25,811 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.271E-07|<1.000E-06)
10:09:25,811 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:26,136 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.893E-02 	 Total distance: 3.893E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([238], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:26,352 root DEBUG Side: ON	 Angle(dx0, dx): 1.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.874E-02 	 Total distance: 1.177E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([221], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:26,523 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.066E-01 	 Total distance: 5.242E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([177], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:26,703 root DEBUG Side: ON	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.114E-01 	 Total distance: 8.356E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([254], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:27,1 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.797E-01 	 Total distance: 3.797E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([3], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:27,199 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.591E-01 	 Total distance: 5.388E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([136], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:27,413 root DEBUG Side: OFF	 Angle(dx0, dx): 1.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.044E-02 	 Total distance: 5.692E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([2], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:27,628 root DEBUG Side: OFF	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.437E-04 	 Total distance: 5.693E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([237], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:27,628 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:27,628 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -18.95 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:27,629 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:27,629 root DEBUG dOFF/dON = 0.7
10:09:27,629 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.08993168896446, 'dON1': 0.8355958295040387, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.8355958295040387, 'nTON': 1, 'dON': 0.8355958295040387, 'dxOFFAngle': 83.2516276191556, 'dOFF1': 0.5693365070887324, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.5693365070887324, 'nTOFF': 1, 'dOFF': 0.5693365070887324, 'SUCCESS': False}
10:09:27,638 root DEBUG 

=================== Experiment ID #109 	 Dual Point ID: 111 ===================
10:09:27,645 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.101E-09|<1.000E-06)
10:09:27,646 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:27,935 root DEBUG Side: ON	 Angle(dx0, dx): 0.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.514E-01 	 Total distance: 3.514E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([18], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:28,338 root DEBUG Side: OFF	 Angle(dx0, dx): 1.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.567E-01 	 Total distance: 6.567E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([223], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:28,338 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:28,339 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 30.29 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:28,339 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:28,339 root DEBUG dOFF/dON = 1.9
10:09:28,339 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.90199204838112, 'dON1': 0.3513690457324387, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.3513690457324387, 'nTON': 1, 'dON': 0.3513690457324387, 'dxOFFAngle': 82.23012344109348, 'dOFF1': 0.6566609305937449, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.6566609305937449, 'nTOFF': 1, 'dOFF': 0.6566609305937449, 'SUCCESS': True}
10:09:28,350 root DEBUG 

=================== Experiment ID #110 	 Dual Point ID: 112 ===================
10:09:28,358 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.187E-09|<1.000E-06)
10:09:28,358 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:28,683 root DEBUG Side: ON	 Angle(dx0, dx): 1.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.275E-02 	 Total distance: 5.275E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([225], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:28,985 root DEBUG Side: OFF	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.596E-02 	 Total distance: 6.596E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([22], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:29,188 root DEBUG Side: OFF	 Angle(dx0, dx): 1.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.430E-02 	 Total distance: 1.003E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([29], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:29,427 root DEBUG Side: OFF	 Angle(dx0, dx): 1.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.942E-01 	 Total distance: 2.945E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([96], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:29,428 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:29,428 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 69.62 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:29,428 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:29,428 root DEBUG dOFF/dON = 5.6
10:09:29,428 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.35414850125562, 'dON1': 0.05275026913617196, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.05275026913617196, 'nTON': 1, 'dON': 0.05275026913617196, 'dxOFFAngle': 83.85728484299457, 'dOFF1': 0.29446504078920965, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.29446504078920965, 'nTOFF': 1, 'dOFF': 0.29446504078920965, 'SUCCESS': True}
10:09:29,436 root DEBUG 

=================== Experiment ID #111 	 Dual Point ID: 113 ===================
10:09:29,443 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.388E-08|<1.000E-06)
10:09:29,444 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:29,772 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.128E-01 	 Total distance: 2.128E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([115], dtype=int64), array([[ True]])]] 	 class: [0 5]
10:09:30,46 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.852E-01 	 Total distance: 3.980E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([92], dtype=int64), array([[ True]])]] 	 class: [0 5]
10:09:30,218 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.271E-01 	 Total distance: 5.251E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([227], dtype=int64), array([[False]])]] 	 class: [0 5]
10:09:30,405 root DEBUG Side: ON	 Angle(dx0, dx): 7.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.604E-02 	 Total distance: 5.512E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 3], dtype=int64), array([[0.],
       [1.]])]] 	 class: [3 5]
10:09:30,639 root DEBUG Side: OFF	 Angle(dx0, dx): 3.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.075E-06 	 Total distance: 8.075E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 5]
10:09:30,639 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:30,639 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -100.00 	 cIDON = [0 5], cIDOFF = [0 5]
10:09:30,639 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:30,639 root DEBUG dOFF/dON = 0.0
10:09:30,639 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.24399257572301, 'dON1': 0.5511515109282845, 'cIDON1': array([0, 5], dtype=int64), 'dON_patch_1': 0.5511515109282845, 'nTON': 1, 'dON': 0.5511515109282845, 'dxOFFAngle': 86.83066436681416, 'dOFF1': 8.074651131199061e-06, 'cIDOFF1': array([0, 5], dtype=int64), 'dOFF_patch_1': 8.074651131199061e-06, 'nTOFF': 1, 'dOFF': 8.074651131199061e-06, 'SUCCESS': False}
10:09:30,649 root DEBUG 

=================== Experiment ID #112 	 Dual Point ID: 114 ===================
10:09:30,657 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.901E-08|<1.000E-06)
10:09:30,657 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:30,936 root DEBUG Side: ON	 Angle(dx0, dx): 2.95 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.075E-02 	 Total distance: 4.075E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([2, 7], dtype=int64), array([[1.],
       [0.]])]] 	 class: [2 5]
10:09:31,238 root DEBUG Side: OFF	 Angle(dx0, dx): 2.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.747E-02 	 Total distance: 2.747E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([51], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:31,238 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:31,238 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -19.46 	 cIDON = [5 7], cIDOFF = [5 7]
10:09:31,238 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:31,238 root DEBUG dOFF/dON = 0.7
10:09:31,238 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.92505952707323, 'dON1': 0.04074910220860919, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.04074910220860919, 'nTON': 1, 'dON': 0.04074910220860919, 'dxOFFAngle': 87.3744189081445, 'dOFF1': 0.027472016195889664, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.027472016195889664, 'nTOFF': 1, 'dOFF': 0.027472016195889664, 'SUCCESS': False}
10:09:31,247 root DEBUG 

=================== Experiment ID #113 	 Dual Point ID: 115 ===================
10:09:31,256 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.460E-07|<1.000E-06)
10:09:31,256 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:31,513 root DEBUG Side: ON	 Angle(dx0, dx): 1.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.735E-01 	 Total distance: 1.735E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([86], dtype=int64), array([[False]])]] 	 class: [0 6]
10:09:31,771 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.187E-01 	 Total distance: 1.187E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([21], dtype=int64), array([[False]])]] 	 class: [1 6]
10:09:31,772 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:31,772 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -18.74 	 cIDON = [0 6], cIDOFF = [1 6]
10:09:31,772 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:31,772 root DEBUG dOFF/dON = 0.7
10:09:31,772 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.01146728154568, 'dON1': 0.1734831402339082, 'cIDON1': array([0, 6], dtype=int64), 'dON_patch_1': 0.1734831402339082, 'nTON': 1, 'dON': 0.1734831402339082, 'dxOFFAngle': 88.29634484018581, 'dOFF1': 0.11871790146415337, 'cIDOFF1': array([1, 6], dtype=int64), 'dOFF_patch_1': 0.11871790146415337, 'nTOFF': 1, 'dOFF': 0.11871790146415337, 'SUCCESS': False}
10:09:31,783 root DEBUG 

=================== Experiment ID #114 	 Dual Point ID: 116 ===================
10:09:31,792 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.506E-08|<1.000E-06)
10:09:31,792 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:32,118 root DEBUG Side: ON	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.968E-01 	 Total distance: 2.968E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([119], dtype=int64), array([[False]])]] 	 class: [4 6]
10:09:32,363 root DEBUG Side: ON	 Angle(dx0, dx): 2.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.055E-01 	 Total distance: 6.023E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([97], dtype=int64), array([[False]])]] 	 class: [4 6]
10:09:32,600 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.011E-02 	 Total distance: 9.011E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([188], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:09:32,600 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:32,600 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -73.97 	 cIDON = [4 6], cIDOFF = [4 6]
10:09:32,600 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:32,600 root DEBUG dOFF/dON = 0.1
10:09:32,600 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.4170870940721, 'dON1': 0.6022853463535778, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.6022853463535778, 'nTON': 1, 'dON': 0.6022853463535778, 'dxOFFAngle': 85.51832077516144, 'dOFF1': 0.09010836230338991, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.09010836230338991, 'nTOFF': 1, 'dOFF': 0.09010836230338991, 'SUCCESS': False}
10:09:32,608 root DEBUG 

=================== Experiment ID #115 	 Dual Point ID: 117 ===================
10:09:32,615 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.107E-07|<1.000E-06)
10:09:32,616 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:32,957 root DEBUG Side: ON	 Angle(dx0, dx): 1.95 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.187E-02 	 Total distance: 2.187E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([76], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:33,306 root DEBUG Side: OFF	 Angle(dx0, dx): 2.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.973E-01 	 Total distance: 1.973E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([31], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:33,307 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:33,307 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 80.04 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:33,307 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:33,307 root DEBUG dOFF/dON = 9.0
10:09:33,307 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.72785557236782, 'dON1': 0.02187035068670887, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.02187035068670887, 'nTON': 1, 'dON': 0.02187035068670887, 'dxOFFAngle': 89.764167395363, 'dOFF1': 0.19725123788579912, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.19725123788579912, 'nTOFF': 1, 'dOFF': 0.19725123788579912, 'SUCCESS': True}
10:09:33,318 root DEBUG 

=================== Experiment ID #116 	 Dual Point ID: 118 ===================
10:09:33,330 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.569E-08|<1.000E-06)
10:09:33,331 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:33,637 root DEBUG Side: ON	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.106E-01 	 Total distance: 1.106E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([4], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:09:33,873 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.590E-02 	 Total distance: 5.590E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([194], dtype=int64), array([[False]])]] 	 class: [5 9]
10:09:33,873 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:33,874 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -32.86 	 cIDON = [5 9], cIDOFF = [5 9]
10:09:33,874 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:33,874 root DEBUG dOFF/dON = 0.5
10:09:33,874 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.27135444558542, 'dON1': 0.11061809677597015, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.11061809677597015, 'nTON': 1, 'dON': 0.11061809677597015, 'dxOFFAngle': 82.03272884467191, 'dOFF1': 0.05589529268641705, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.05589529268641705, 'nTOFF': 1, 'dOFF': 0.05589529268641705, 'SUCCESS': False}
10:09:33,882 root DEBUG 

=================== Experiment ID #117 	 Dual Point ID: 119 ===================
10:09:33,890 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.463E-08|<1.000E-06)
10:09:33,890 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:34,172 root DEBUG Side: ON	 Angle(dx0, dx): 0.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.177E-01 	 Total distance: 2.177E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([78], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:34,449 root DEBUG Side: OFF	 Angle(dx0, dx): 2.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.312E-01 	 Total distance: 1.312E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([19], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:34,450 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:34,450 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -24.78 	 cIDON = [2 4], cIDOFF = [2 4]
10:09:34,450 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:34,450 root DEBUG dOFF/dON = 0.6
10:09:34,451 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.76218277406876, 'dON1': 0.21769953682621032, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.21769953682621032, 'nTON': 1, 'dON': 0.21769953682621032, 'dxOFFAngle': 85.44721346331819, 'dOFF1': 0.13122938930688352, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.13122938930688352, 'nTOFF': 1, 'dOFF': 0.13122938930688352, 'SUCCESS': False}
10:09:34,462 root DEBUG 

=================== Experiment ID #118 	 Dual Point ID: 120 ===================
10:09:34,473 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.680E-09|<1.000E-06)
10:09:34,473 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:34,705 root DEBUG Side: ON	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.406E-03 	 Total distance: 5.406E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([171], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:34,996 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.348E-01 	 Total distance: 1.348E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([17], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:35,187 root DEBUG Side: OFF	 Angle(dx0, dx): 1.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.612E-02 	 Total distance: 1.809E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([8], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:35,187 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:35,188 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 94.20 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:35,188 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:35,188 root DEBUG dOFF/dON = 33.5
10:09:35,188 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.49689232356775, 'dON1': 0.005405887823351889, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.005405887823351889, 'nTON': 1, 'dON': 0.005405887823351889, 'dxOFFAngle': 85.52650635809076, 'dOFF1': 0.180930417201825, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.180930417201825, 'nTOFF': 1, 'dOFF': 0.180930417201825, 'SUCCESS': True}
10:09:35,197 root DEBUG 

=================== Experiment ID #119 	 Dual Point ID: 121 ===================
10:09:35,205 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.628E-09|<1.000E-06)
10:09:35,206 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:35,476 root DEBUG Side: ON	 Angle(dx0, dx): 1.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.585E-02 	 Total distance: 8.585E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([54], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:09:35,767 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.498E-02 	 Total distance: 1.498E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([48], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:09:35,767 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:35,767 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -70.29 	 cIDON = [2 3], cIDOFF = [2 3]
10:09:35,767 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:35,767 root DEBUG dOFF/dON = 0.2
10:09:35,768 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.61075264038568, 'dON1': 0.08585299576875735, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.08585299576875735, 'nTON': 1, 'dON': 0.08585299576875735, 'dxOFFAngle': 82.43773592097124, 'dOFF1': 0.014978346060696127, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.014978346060696127, 'nTOFF': 1, 'dOFF': 0.014978346060696127, 'SUCCESS': False}
10:09:35,779 root DEBUG 

=================== Experiment ID #120 	 Dual Point ID: 122 ===================
10:09:35,788 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.276E-08|<1.000E-06)
10:09:35,789 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:36,80 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.086E-01 	 Total distance: 1.086E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([137], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:36,220 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.547E-04 	 Total distance: 1.090E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([183], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:36,426 root DEBUG Side: ON	 Angle(dx0, dx): 3.86 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.084E-02 	 Total distance: 1.699E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([5, 7], dtype=int64), array([[1.],
       [0.]])]] 	 class: [2 5]
10:09:36,667 root DEBUG Side: OFF	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.598E-02 	 Total distance: 4.598E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([206], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:36,824 root DEBUG Side: OFF	 Angle(dx0, dx): 1.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.333E-01 	 Total distance: 1.793E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([124], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:36,824 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:36,824 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 2.69 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:36,824 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:36,824 root DEBUG dOFF/dON = 1.1
10:09:36,824 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.13904799297723, 'dON1': 0.16986839528745598, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.16986839528745598, 'nTON': 1, 'dON': 0.16986839528745598, 'dxOFFAngle': 84.85497021901023, 'dOFF1': 0.17927760752231814, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.17927760752231814, 'nTOFF': 1, 'dOFF': 0.17927760752231814, 'SUCCESS': True}
10:09:36,831 root DEBUG 

=================== Experiment ID #121 	 Dual Point ID: 123 ===================
10:09:36,840 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.575E-08|<1.000E-06)
10:09:36,840 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:37,151 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.530E-02 	 Total distance: 2.530E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([139], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:37,315 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.355E-02 	 Total distance: 4.885E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([79], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:37,529 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.665E-02 	 Total distance: 1.665E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([177], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:37,753 root DEBUG Side: OFF	 Angle(dx0, dx): 0.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.317E-02 	 Total distance: 4.981E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([83], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:37,753 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:37,753 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 0.97 	 cIDON = [2 4], cIDOFF = [2 4]
10:09:37,753 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:37,753 root DEBUG dOFF/dON = 1.0
10:09:37,753 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.52080641192204, 'dON1': 0.04885237972613864, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.04885237972613864, 'nTON': 1, 'dON': 0.04885237972613864, 'dxOFFAngle': 85.74546532565354, 'dOFF1': 0.04981392806286169, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.04981392806286169, 'nTOFF': 1, 'dOFF': 0.04981392806286169, 'SUCCESS': True}
10:09:37,760 root DEBUG 

=================== Experiment ID #122 	 Dual Point ID: 124 ===================
10:09:37,766 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.366E-07|<1.000E-06)
10:09:37,766 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:38,69 root DEBUG Side: ON	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.054E-02 	 Total distance: 8.054E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([68], dtype=int64), array([[False]])]] 	 class: [5 6]
10:09:38,380 root DEBUG Side: OFF	 Angle(dx0, dx): 0.60 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.595E-01 	 Total distance: 1.595E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([131], dtype=int64), array([[False]])]] 	 class: [5 6]
10:09:38,578 root DEBUG Side: OFF	 Angle(dx0, dx): 2.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.477E-01 	 Total distance: 4.072E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([51], dtype=int64), array([[False]])]] 	 class: [5 6]
10:09:38,578 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:38,578 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 66.98 	 cIDON = [5 6], cIDOFF = [5 6]
10:09:38,578 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:38,578 root DEBUG dOFF/dON = 5.1
10:09:38,578 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.6937466771263, 'dON1': 0.08053503859381633, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.08053503859381633, 'nTON': 1, 'dON': 0.08053503859381633, 'dxOFFAngle': 86.7760926238849, 'dOFF1': 0.40723153846736576, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.40723153846736576, 'nTOFF': 1, 'dOFF': 0.40723153846736576, 'SUCCESS': True}
10:09:38,585 root DEBUG 

=================== Experiment ID #123 	 Dual Point ID: 125 ===================
10:09:38,591 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.193E-08|<1.000E-06)
10:09:38,591 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:38,877 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.163E-01 	 Total distance: 1.163E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([122], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:39,105 root DEBUG Side: ON	 Angle(dx0, dx): 0.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.832E-02 	 Total distance: 2.146E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([185], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:39,328 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.262E-03 	 Total distance: 1.262E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([49], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:39,513 root DEBUG Side: OFF	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.804E-02 	 Total distance: 3.930E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([137], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:39,713 root DEBUG Side: OFF	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.258E-01 	 Total distance: 2.651E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([202], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:39,714 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:39,714 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 10.53 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:39,714 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:39,714 root DEBUG dOFF/dON = 1.2
10:09:39,714 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.40845912005317, 'dON1': 0.21462598834866284, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.21462598834866284, 'nTON': 1, 'dON': 0.21462598834866284, 'dxOFFAngle': 82.0886737030692, 'dOFF1': 0.26514209391168064, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.26514209391168064, 'nTOFF': 1, 'dOFF': 0.26514209391168064, 'SUCCESS': True}
10:09:39,726 root DEBUG 

=================== Experiment ID #124 	 Dual Point ID: 126 ===================
10:09:39,734 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.872E-08|<1.000E-06)
10:09:39,734 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:39,947 root DEBUG Side: ON	 Angle(dx0, dx): 7.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.615E-06 	 Total distance: 3.615E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 4]
10:09:40,224 root DEBUG Side: OFF	 Angle(dx0, dx): 0.85 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.632E-03 	 Total distance: 8.632E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([178], dtype=int64), array([[ True]])]] 	 class: [0 4]
10:09:40,445 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.251E-02 	 Total distance: 9.114E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([215], dtype=int64), array([[False]])]] 	 class: [0 4]
10:09:40,445 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:40,445 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.99 	 cIDON = [1 4], cIDOFF = [0 4]
10:09:40,445 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:40,445 root DEBUG dOFF/dON = 25212.9
10:09:40,446 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.40476584942222, 'dON1': 3.614960574956832e-06, 'cIDON1': array([1, 4], dtype=int64), 'dON_patch_1': 3.614960574956832e-06, 'nTON': 1, 'dON': 3.614960574956832e-06, 'dxOFFAngle': 86.34593636169065, 'dOFF1': 0.09114356455356916, 'cIDOFF1': array([0, 4], dtype=int64), 'dOFF_patch_1': 0.09114356455356916, 'nTOFF': 1, 'dOFF': 0.09114356455356916, 'SUCCESS': True}
10:09:40,454 root DEBUG 

=================== Experiment ID #125 	 Dual Point ID: 127 ===================
10:09:40,462 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.370E-08|<1.000E-06)
10:09:40,463 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:40,734 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.556E-02 	 Total distance: 2.556E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([8], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:09:40,925 root DEBUG Side: ON	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.433E-03 	 Total distance: 2.699E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([246], dtype=int64), array([[False]])]] 	 class: [0 8]
10:09:41,201 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.949E-02 	 Total distance: 9.649E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([122], dtype=int64), array([[False]])]] 	 class: [0 8]
10:09:41,463 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.146E-02 	 Total distance: 6.146E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([176], dtype=int64), array([[False]])]] 	 class: [1 8]
10:09:41,463 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:41,463 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -22.17 	 cIDON = [0 8], cIDOFF = [1 8]
10:09:41,464 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:41,464 root DEBUG dOFF/dON = 0.6
10:09:41,464 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.13840297987535, 'dON1': 0.096485645715008, 'cIDON1': array([0, 8], dtype=int64), 'dON_patch_1': 0.096485645715008, 'nTON': 1, 'dON': 0.096485645715008, 'dxOFFAngle': 88.18556062880972, 'dOFF1': 0.0614628623111584, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 0.0614628623111584, 'nTOFF': 1, 'dOFF': 0.0614628623111584, 'SUCCESS': False}
10:09:41,476 root DEBUG 

=================== Experiment ID #126 	 Dual Point ID: 128 ===================
10:09:41,486 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.392E-08|<1.000E-06)
10:09:41,486 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:41,725 root DEBUG Side: ON	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.178E-02 	 Total distance: 5.178E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([142], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:41,961 root DEBUG Side: OFF	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.916E-02 	 Total distance: 4.916E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([197], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:41,961 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:41,961 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -2.59 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:41,961 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:41,961 root DEBUG dOFF/dON = 0.9
10:09:41,961 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.85670546547128, 'dON1': 0.051778945903433043, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.051778945903433043, 'nTON': 1, 'dON': 0.051778945903433043, 'dxOFFAngle': 88.65218137133849, 'dOFF1': 0.04916407626734581, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.04916407626734581, 'nTOFF': 1, 'dOFF': 0.04916407626734581, 'SUCCESS': False}
10:09:41,971 root DEBUG 

=================== Experiment ID #127 	 Dual Point ID: 129 ===================
10:09:41,979 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.699E-08|<1.000E-06)
10:09:41,979 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:42,232 root DEBUG Side: ON	 Angle(dx0, dx): 1.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.174E-01 	 Total distance: 1.174E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([14], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:42,516 root DEBUG Side: OFF	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.387E-01 	 Total distance: 1.387E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([28], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:42,516 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:42,516 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 8.33 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:42,516 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:42,516 root DEBUG dOFF/dON = 1.2
10:09:42,516 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.8080009539464, 'dON1': 0.11741249416553845, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.11741249416553845, 'nTON': 1, 'dON': 0.11741249416553845, 'dxOFFAngle': 86.92186580053917, 'dOFF1': 0.13874992901516744, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.13874992901516744, 'nTOFF': 1, 'dOFF': 0.13874992901516744, 'SUCCESS': True}
10:09:42,523 root DEBUG 

=================== Experiment ID #128 	 Dual Point ID: 130 ===================
10:09:42,535 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.834E-09|<1.000E-06)
10:09:42,535 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:42,843 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.063E-01 	 Total distance: 1.063E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([182], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:43,190 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.032E-01 	 Total distance: 1.032E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([218], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:43,190 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:43,190 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -1.47 	 cIDON = [5 7], cIDOFF = [5 7]
10:09:43,190 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:43,191 root DEBUG dOFF/dON = 1.0
10:09:43,191 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.00767683597168, 'dON1': 0.1063039434999896, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.1063039434999896, 'nTON': 1, 'dON': 0.1063039434999896, 'dxOFFAngle': 88.03637377379235, 'dOFF1': 0.10322223340904026, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.10322223340904026, 'nTOFF': 1, 'dOFF': 0.10322223340904026, 'SUCCESS': False}
10:09:43,201 root DEBUG 

=================== Experiment ID #129 	 Dual Point ID: 131 ===================
10:09:43,209 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.553E-08|<1.000E-06)
10:09:43,209 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:43,433 root DEBUG Side: ON	 Angle(dx0, dx): 1.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.357E-01 	 Total distance: 2.357E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([175], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:43,752 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.208E-02 	 Total distance: 8.208E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([52], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:43,981 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.193E-01 	 Total distance: 3.014E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([98], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:44,160 root DEBUG Side: OFF	 Angle(dx0, dx): 2.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.644E-01 	 Total distance: 6.657E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([127], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:44,160 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:44,161 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 47.71 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:44,161 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:44,161 root DEBUG dOFF/dON = 2.8
10:09:44,161 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.57814573754901, 'dON1': 0.23567360105902124, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.23567360105902124, 'nTON': 1, 'dON': 0.23567360105902124, 'dxOFFAngle': 89.27771887972042, 'dOFF1': 0.6657369411170315, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.6657369411170315, 'nTOFF': 1, 'dOFF': 0.6657369411170315, 'SUCCESS': True}
10:09:44,172 root DEBUG 

=================== Experiment ID #130 	 Dual Point ID: 132 ===================
10:09:44,184 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.752E-09|<1.000E-06)
10:09:44,184 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:44,436 root DEBUG Side: ON	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.923E-02 	 Total distance: 8.923E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([36], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:44,656 root DEBUG Side: OFF	 Angle(dx0, dx): 0.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.455E-02 	 Total distance: 3.455E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([35], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:44,656 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:44,657 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -44.17 	 cIDON = [2 6], cIDOFF = [2 6]
10:09:44,657 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:44,657 root DEBUG dOFF/dON = 0.4
10:09:44,657 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.66892055223407, 'dON1': 0.08922586407966872, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.08922586407966872, 'nTON': 1, 'dON': 0.08922586407966872, 'dxOFFAngle': 87.65689885648479, 'dOFF1': 0.034554350089645976, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.034554350089645976, 'nTOFF': 1, 'dOFF': 0.034554350089645976, 'SUCCESS': False}
10:09:44,667 root DEBUG 

=================== Experiment ID #131 	 Dual Point ID: 133 ===================
10:09:44,674 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.207E-08|<1.000E-06)
10:09:44,674 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:44,969 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.683E-01 	 Total distance: 1.683E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([77], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:09:45,142 root DEBUG Side: ON	 Angle(dx0, dx): 1.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.227E-03 	 Total distance: 1.695E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([155], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:09:45,414 root DEBUG Side: OFF	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.983E-02 	 Total distance: 7.983E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([37], dtype=int64), array([[False]])]] 	 class: [2 3]
10:09:45,414 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:45,414 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -35.97 	 cIDON = [2 3], cIDOFF = [2 3]
10:09:45,414 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:45,414 root DEBUG dOFF/dON = 0.5
10:09:45,414 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.92635527389257, 'dON1': 0.16953640940087272, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.16953640940087272, 'nTON': 1, 'dON': 0.16953640940087272, 'dxOFFAngle': 79.65764807234495, 'dOFF1': 0.07983193451500413, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.07983193451500413, 'nTOFF': 1, 'dOFF': 0.07983193451500413, 'SUCCESS': False}
10:09:45,423 root DEBUG 

=================== Experiment ID #132 	 Dual Point ID: 134 ===================
10:09:45,432 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.284E-08|<1.000E-06)
10:09:45,432 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:45,739 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.221E-01 	 Total distance: 1.221E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([205], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:09:45,936 root DEBUG Side: ON	 Angle(dx0, dx): 2.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.371E-01 	 Total distance: 2.592E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([65], dtype=int64), array([[False]])]] 	 class: [3 8]
10:09:46,203 root DEBUG Side: OFF	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.166E-02 	 Total distance: 4.166E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([243], dtype=int64), array([[False]])]] 	 class: [3 8]
10:09:46,203 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:46,203 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -72.31 	 cIDON = [3 8], cIDOFF = [3 8]
10:09:46,203 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:46,203 root DEBUG dOFF/dON = 0.2
10:09:46,203 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.6930230709808, 'dON1': 0.25919294982469854, 'cIDON1': array([3, 8], dtype=int64), 'dON_patch_1': 0.25919294982469854, 'nTON': 1, 'dON': 0.25919294982469854, 'dxOFFAngle': 83.73630176724126, 'dOFF1': 0.0416575572278767, 'cIDOFF1': array([3, 8], dtype=int64), 'dOFF_patch_1': 0.0416575572278767, 'nTOFF': 1, 'dOFF': 0.0416575572278767, 'SUCCESS': False}
10:09:46,213 root DEBUG 

=================== Experiment ID #133 	 Dual Point ID: 135 ===================
10:09:46,220 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.979E-08|<1.000E-06)
10:09:46,220 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:46,504 root DEBUG Side: ON	 Angle(dx0, dx): 1.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.201E-02 	 Total distance: 6.201E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([54], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:46,811 root DEBUG Side: OFF	 Angle(dx0, dx): 0.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.022E-02 	 Total distance: 6.022E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([185], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:46,812 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:46,812 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -1.47 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:46,812 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:46,812 root DEBUG dOFF/dON = 1.0
10:09:46,812 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.14470368827669, 'dON1': 0.06200853404608557, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.06200853404608557, 'nTON': 1, 'dON': 0.06200853404608557, 'dxOFFAngle': 82.6552307952405, 'dOFF1': 0.060217829629094013, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.060217829629094013, 'nTOFF': 1, 'dOFF': 0.060217829629094013, 'SUCCESS': False}
10:09:46,823 root DEBUG 

=================== Experiment ID #134 	 Dual Point ID: 136 ===================
10:09:46,831 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.243E-08|<1.000E-06)
10:09:46,831 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:47,138 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.143E-02 	 Total distance: 1.143E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([114], dtype=int64), array([[False]])]] 	 class: [0 3]
10:09:47,314 root DEBUG Side: ON	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.950E-02 	 Total distance: 5.092E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([35], dtype=int64), array([[False]])]] 	 class: [0 3]
10:09:47,484 root DEBUG Side: ON	 Angle(dx0, dx): 1.83 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.513E-02 	 Total distance: 1.161E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 2], dtype=int64), array([[0.],
       [1.]])]] 	 class: [2 3]
10:09:47,739 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.203E-02 	 Total distance: 1.203E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([36], dtype=int64), array([[ True]])]] 	 class: [1 3]
10:09:47,951 root DEBUG Side: OFF	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.053E-03 	 Total distance: 2.009E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([115], dtype=int64), array([[ True]])]] 	 class: [1 3]
10:09:47,951 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:47,951 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -70.49 	 cIDON = [0 3], cIDOFF = [1 3]
10:09:47,952 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:47,952 root DEBUG dOFF/dON = 0.2
10:09:47,952 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.11730900611096, 'dON1': 0.11605164560147432, 'cIDON1': array([0, 3], dtype=int64), 'dON_patch_1': 0.11605164560147432, 'nTON': 1, 'dON': 0.11605164560147432, 'dxOFFAngle': 89.23367534363683, 'dOFF1': 0.020086777236619755, 'cIDOFF1': array([1, 3], dtype=int64), 'dOFF_patch_1': 0.020086777236619755, 'nTOFF': 1, 'dOFF': 0.020086777236619755, 'SUCCESS': False}
10:09:47,964 root DEBUG 

=================== Experiment ID #135 	 Dual Point ID: 137 ===================
10:09:47,972 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.846E-08|<1.000E-06)
10:09:47,972 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:48,233 root DEBUG Side: ON	 Angle(dx0, dx): 1.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.510E-02 	 Total distance: 1.510E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([30], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:48,475 root DEBUG Side: OFF	 Angle(dx0, dx): 0.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.295E-02 	 Total distance: 7.295E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([138], dtype=int64), array([[False]])]] 	 class: [4 7]
10:09:48,476 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:48,476 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 65.70 	 cIDON = [4 7], cIDOFF = [4 7]
10:09:48,476 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:48,476 root DEBUG dOFF/dON = 4.8
10:09:48,476 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.79574347061984, 'dON1': 0.015099212808871686, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.015099212808871686, 'nTON': 1, 'dON': 0.015099212808871686, 'dxOFFAngle': 87.88718806252746, 'dOFF1': 0.07294891746478802, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.07294891746478802, 'nTOFF': 1, 'dOFF': 0.07294891746478802, 'SUCCESS': True}
10:09:48,486 root DEBUG 

=================== Experiment ID #136 	 Dual Point ID: 138 ===================
10:09:48,499 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.750E-09|<1.000E-06)
10:09:48,499 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:48,813 root DEBUG Side: ON	 Angle(dx0, dx): 0.99 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.748E-01 	 Total distance: 1.748E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([221], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:09:49,79 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.543E-02 	 Total distance: 9.543E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([247], dtype=int64), array([[False]])]] 	 class: [2 9]
10:09:49,258 root DEBUG Side: OFF	 Angle(dx0, dx): 1.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.988E-01 	 Total distance: 4.942E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([192], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:09:49,259 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:49,259 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 47.75 	 cIDON = [2 9], cIDOFF = [2 9]
10:09:49,259 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:49,259 root DEBUG dOFF/dON = 2.8
10:09:49,259 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.75780545639009, 'dON1': 0.17476236680817075, 'cIDON1': array([2, 9], dtype=int64), 'dON_patch_1': 0.17476236680817075, 'nTON': 1, 'dON': 0.17476236680817075, 'dxOFFAngle': 83.13238239157874, 'dOFF1': 0.49423650640371897, 'cIDOFF1': array([2, 9], dtype=int64), 'dOFF_patch_1': 0.49423650640371897, 'nTOFF': 1, 'dOFF': 0.49423650640371897, 'SUCCESS': True}
10:09:49,272 root DEBUG 

=================== Experiment ID #137 	 Dual Point ID: 139 ===================
10:09:49,281 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.774E-08|<1.000E-06)
10:09:49,281 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:49,638 root DEBUG Side: ON	 Angle(dx0, dx): 0.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.654E-02 	 Total distance: 8.654E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([210], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:09:49,918 root DEBUG Side: OFF	 Angle(dx0, dx): 0.60 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.236E-01 	 Total distance: 2.236E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([117], dtype=int64), array([[False]])]] 	 class: [2 5]
10:09:49,918 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:49,918 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 44.19 	 cIDON = [2 5], cIDOFF = [2 5]
10:09:49,919 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:49,919 root DEBUG dOFF/dON = 2.6
10:09:49,919 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.11947087816019, 'dON1': 0.086540207697423, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.086540207697423, 'nTON': 1, 'dON': 0.086540207697423, 'dxOFFAngle': 89.61373539542737, 'dOFF1': 0.22357806018265286, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.22357806018265286, 'nTOFF': 1, 'dOFF': 0.22357806018265286, 'SUCCESS': True}
10:09:49,928 root DEBUG 

=================== Experiment ID #138 	 Dual Point ID: 140 ===================
10:09:49,935 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.972E-08|<1.000E-06)
10:09:49,935 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:50,260 root DEBUG Side: ON	 Angle(dx0, dx): 1.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.327E-01 	 Total distance: 2.327E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([6], dtype=int64), array([[False]])]] 	 class: [0 5]
10:09:50,499 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.963E-02 	 Total distance: 4.963E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([47], dtype=int64), array([[ True]])]] 	 class: [1 5]
10:09:50,499 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:50,499 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -64.84 	 cIDON = [0 5], cIDOFF = [1 5]
10:09:50,499 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:50,499 root DEBUG dOFF/dON = 0.2
10:09:50,499 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.00314879535766, 'dON1': 0.2326794538138246, 'cIDON1': array([0, 5], dtype=int64), 'dON_patch_1': 0.2326794538138246, 'nTON': 1, 'dON': 0.2326794538138246, 'dxOFFAngle': 86.03391243726124, 'dOFF1': 0.0496294443942686, 'cIDOFF1': array([1, 5], dtype=int64), 'dOFF_patch_1': 0.0496294443942686, 'nTOFF': 1, 'dOFF': 0.0496294443942686, 'SUCCESS': False}
10:09:50,509 root DEBUG 

=================== Experiment ID #139 	 Dual Point ID: 141 ===================
10:09:50,519 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.233E-08|<1.000E-06)
10:09:50,519 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:50,910 root DEBUG Side: ON	 Angle(dx0, dx): 1.86 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.206E-01 	 Total distance: 3.206E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([241], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:51,234 root DEBUG Side: OFF	 Angle(dx0, dx): 0.98 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.526E-01 	 Total distance: 2.526E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([26], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:51,234 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:51,234 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -11.86 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:51,235 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:51,235 root DEBUG dOFF/dON = 0.8
10:09:51,235 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.88941435954102, 'dON1': 0.3205958097676417, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.3205958097676417, 'nTON': 1, 'dON': 0.3205958097676417, 'dxOFFAngle': 89.06105996572833, 'dOFF1': 0.25259355541016804, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.25259355541016804, 'nTOFF': 1, 'dOFF': 0.25259355541016804, 'SUCCESS': False}
10:09:51,246 root DEBUG 

=================== Experiment ID #140 	 Dual Point ID: 142 ===================
10:09:51,253 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.542E-08|<1.000E-06)
10:09:51,253 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:51,568 root DEBUG Side: ON	 Angle(dx0, dx): 0.83 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.481E-02 	 Total distance: 4.481E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([0], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:09:51,864 root DEBUG Side: OFF	 Angle(dx0, dx): 2.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.767E-02 	 Total distance: 1.767E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([40], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:09:51,865 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:51,865 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -43.44 	 cIDON = [3 9], cIDOFF = [3 9]
10:09:51,865 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:51,865 root DEBUG dOFF/dON = 0.4
10:09:51,865 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.63143718093565, 'dON1': 0.044813184859169436, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.044813184859169436, 'nTON': 1, 'dON': 0.044813184859169436, 'dxOFFAngle': 81.64500888534246, 'dOFF1': 0.017669283767939678, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.017669283767939678, 'nTOFF': 1, 'dOFF': 0.017669283767939678, 'SUCCESS': False}
10:09:51,876 root DEBUG 

=================== Experiment ID #141 	 Dual Point ID: 143 ===================
10:09:51,885 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.141E-08|<1.000E-06)
10:09:51,885 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:52,177 root DEBUG Side: ON	 Angle(dx0, dx): 2.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.207E-01 	 Total distance: 6.207E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([53], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:52,382 root DEBUG Side: OFF	 Angle(dx0, dx): 1.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.799E-01 	 Total distance: 2.799E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([238], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:52,382 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:52,382 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -37.85 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:52,383 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:52,383 root DEBUG dOFF/dON = 0.5
10:09:52,383 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.72424048633597, 'dON1': 0.6207448524970339, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.6207448524970339, 'nTON': 1, 'dON': 0.6207448524970339, 'dxOFFAngle': 83.49482456457476, 'dOFF1': 0.2798535401801636, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.2798535401801636, 'nTOFF': 1, 'dOFF': 0.2798535401801636, 'SUCCESS': False}
10:09:52,394 root DEBUG 

=================== Experiment ID #142 	 Dual Point ID: 144 ===================
10:09:52,405 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.522E-08|<1.000E-06)
10:09:52,405 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:52,663 root DEBUG Side: ON	 Angle(dx0, dx): 0.83 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.540E-03 	 Total distance: 4.540E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([218], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:52,939 root DEBUG Side: OFF	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.702E-02 	 Total distance: 1.702E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([34], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:52,939 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:52,939 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 57.88 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:52,940 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:52,940 root DEBUG dOFF/dON = 3.7
10:09:52,940 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.86763555733938, 'dON1': 0.004539938896360653, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.004539938896360653, 'nTON': 1, 'dON': 0.004539938896360653, 'dxOFFAngle': 83.25605034251473, 'dOFF1': 0.017018125095847294, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.017018125095847294, 'nTOFF': 1, 'dOFF': 0.017018125095847294, 'SUCCESS': True}
10:09:52,948 root DEBUG 

=================== Experiment ID #143 	 Dual Point ID: 145 ===================
10:09:52,960 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.926E-09|<1.000E-06)
10:09:52,961 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:53,253 root DEBUG Side: ON	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.836E-02 	 Total distance: 9.836E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([233], dtype=int64), array([[False]])]] 	 class: [4 9]
10:09:53,441 root DEBUG Side: OFF	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.561E-02 	 Total distance: 4.561E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([157], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:09:53,442 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:53,442 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -36.64 	 cIDON = [4 9], cIDOFF = [4 9]
10:09:53,442 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:53,442 root DEBUG dOFF/dON = 0.5
10:09:53,442 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.06630706125841, 'dON1': 0.09836412805888632, 'cIDON1': array([4, 9], dtype=int64), 'dON_patch_1': 0.09836412805888632, 'nTON': 1, 'dON': 0.09836412805888632, 'dxOFFAngle': 89.4991844353074, 'dOFF1': 0.04560659531330048, 'cIDOFF1': array([4, 9], dtype=int64), 'dOFF_patch_1': 0.04560659531330048, 'nTOFF': 1, 'dOFF': 0.04560659531330048, 'SUCCESS': False}
10:09:53,455 root DEBUG 

=================== Experiment ID #144 	 Dual Point ID: 146 ===================
10:09:53,470 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.180E-09|<1.000E-06)
10:09:53,470 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:53,795 root DEBUG Side: ON	 Angle(dx0, dx): 1.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.053E-02 	 Total distance: 2.053E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([7], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:54,120 root DEBUG Side: OFF	 Angle(dx0, dx): 1.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.549E-01 	 Total distance: 1.549E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([209], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:54,120 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:54,120 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 76.60 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:54,121 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:54,121 root DEBUG dOFF/dON = 7.5
10:09:54,121 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 79.86703462686543, 'dON1': 0.020529721130274268, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.020529721130274268, 'nTON': 1, 'dON': 0.020529721130274268, 'dxOFFAngle': 80.86262286095642, 'dOFF1': 0.15493750188488745, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.15493750188488745, 'nTOFF': 1, 'dOFF': 0.15493750188488745, 'SUCCESS': True}
10:09:54,131 root DEBUG 

=================== Experiment ID #145 	 Dual Point ID: 147 ===================
10:09:54,145 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.713E-08|<1.000E-06)
10:09:54,146 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:54,422 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.461E-01 	 Total distance: 3.461E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([69], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:09:54,705 root DEBUG Side: OFF	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.281E-01 	 Total distance: 1.281E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([135], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:09:54,705 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:54,705 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -45.98 	 cIDON = [1 8], cIDOFF = [0 8]
10:09:54,705 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:54,705 root DEBUG dOFF/dON = 0.4
10:09:54,705 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.55514353083652, 'dON1': 0.34613867111281343, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 0.34613867111281343, 'nTON': 1, 'dON': 0.34613867111281343, 'dxOFFAngle': 87.94123961347158, 'dOFF1': 0.12809858788700104, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.12809858788700104, 'nTOFF': 1, 'dOFF': 0.12809858788700104, 'SUCCESS': False}
10:09:54,716 root DEBUG 

=================== Experiment ID #146 	 Dual Point ID: 148 ===================
10:09:54,725 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.708E-09|<1.000E-06)
10:09:54,725 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:54,934 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.231E-01 	 Total distance: 2.231E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([8], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:09:55,133 root DEBUG Side: ON	 Angle(dx0, dx): 0.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.192E-01 	 Total distance: 4.423E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([132], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:09:55,367 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.959E-01 	 Total distance: 2.959E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([12], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:09:55,555 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.218E-01 	 Total distance: 5.177E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([19], dtype=int64), array([[False]])]] 	 class: [3 4]
10:09:55,742 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.052E-01 	 Total distance: 6.228E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([28], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:09:55,743 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:55,743 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 16.95 	 cIDON = [3 4], cIDOFF = [3 4]
10:09:55,743 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:55,743 root DEBUG dOFF/dON = 1.4
10:09:55,743 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.17799271580243, 'dON1': 0.4422922526824994, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.4422922526824994, 'nTON': 1, 'dON': 0.4422922526824994, 'dxOFFAngle': 89.1704284546366, 'dOFF1': 0.6228288900363962, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.6228288900363962, 'nTOFF': 1, 'dOFF': 0.6228288900363962, 'SUCCESS': True}
10:09:55,752 root DEBUG 

=================== Experiment ID #147 	 Dual Point ID: 149 ===================
10:09:55,761 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.788E-08|<1.000E-06)
10:09:55,761 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:56,30 root DEBUG Side: ON	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.816E-01 	 Total distance: 1.816E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([140], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:09:56,332 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.417E-02 	 Total distance: 4.417E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([9], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:09:56,333 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:56,333 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -60.86 	 cIDON = [6 9], cIDOFF = [6 9]
10:09:56,333 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:56,333 root DEBUG dOFF/dON = 0.2
10:09:56,333 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.91244864185448, 'dON1': 0.18155809758917346, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.18155809758917346, 'nTON': 1, 'dON': 0.18155809758917346, 'dxOFFAngle': 89.38592243146857, 'dOFF1': 0.044174988087810056, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.044174988087810056, 'nTOFF': 1, 'dOFF': 0.044174988087810056, 'SUCCESS': False}
10:09:56,345 root DEBUG 

=================== Experiment ID #148 	 Dual Point ID: 150 ===================
10:09:56,354 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.314E-08|<1.000E-06)
10:09:56,354 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:56,625 root DEBUG Side: ON	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.639E-02 	 Total distance: 1.639E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([131], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:56,827 root DEBUG Side: ON	 Angle(dx0, dx): 0.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.225E-01 	 Total distance: 1.389E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([70], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:57,80 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.098E-01 	 Total distance: 3.098E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([38], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:57,80 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:57,81 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 38.09 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:57,81 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:57,81 root DEBUG dOFF/dON = 2.2
10:09:57,81 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.7137746260388, 'dON1': 0.1388859727848738, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.1388859727848738, 'nTON': 1, 'dON': 0.1388859727848738, 'dxOFFAngle': 87.0484179780604, 'dOFF1': 0.3097892214953028, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.3097892214953028, 'nTOFF': 1, 'dOFF': 0.3097892214953028, 'SUCCESS': True}
10:09:57,94 root DEBUG 

=================== Experiment ID #149 	 Dual Point ID: 151 ===================
10:09:57,103 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.708E-09|<1.000E-06)
10:09:57,103 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:57,348 root DEBUG Side: ON	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.340E-02 	 Total distance: 1.340E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([138], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:09:57,635 root DEBUG Side: OFF	 Angle(dx0, dx): 1.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.910E-02 	 Total distance: 9.910E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([137], dtype=int64), array([[False]])]] 	 class: [4 5]
10:09:57,635 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:57,635 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 76.18 	 cIDON = [4 5], cIDOFF = [4 5]
10:09:57,635 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:57,635 root DEBUG dOFF/dON = 7.4
10:09:57,635 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.75272942404042, 'dON1': 0.013399668921455166, 'cIDON1': array([4, 5], dtype=int64), 'dON_patch_1': 0.013399668921455166, 'nTON': 1, 'dON': 0.013399668921455166, 'dxOFFAngle': 89.6294626705422, 'dOFF1': 0.09909939623251543, 'cIDOFF1': array([4, 5], dtype=int64), 'dOFF_patch_1': 0.09909939623251543, 'nTOFF': 1, 'dOFF': 0.09909939623251543, 'SUCCESS': True}
10:09:57,647 root DEBUG 

=================== Experiment ID #150 	 Dual Point ID: 152 ===================
10:09:57,660 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.501E-08|<1.000E-06)
10:09:57,660 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:57,994 root DEBUG Side: ON	 Angle(dx0, dx): 0.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.408E-01 	 Total distance: 2.408E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([6], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:58,230 root DEBUG Side: OFF	 Angle(dx0, dx): 2.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.503E-02 	 Total distance: 2.503E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([10], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:58,231 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:58,231 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -81.17 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:58,231 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:58,231 root DEBUG dOFF/dON = 0.1
10:09:58,231 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.36593798096212, 'dON1': 0.240829507179946, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.240829507179946, 'nTON': 1, 'dON': 0.240829507179946, 'dxOFFAngle': 86.21867935210676, 'dOFF1': 0.025032399066170018, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.025032399066170018, 'nTOFF': 1, 'dOFF': 0.025032399066170018, 'SUCCESS': False}
10:09:58,248 root DEBUG 

=================== Experiment ID #151 	 Dual Point ID: 153 ===================
10:09:58,257 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.724E-08|<1.000E-06)
10:09:58,258 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:58,504 root DEBUG Side: ON	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.370E-01 	 Total distance: 2.370E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([106], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:58,655 root DEBUG Side: ON	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.627E-03 	 Total distance: 2.386E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([56], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:58,890 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.625E-02 	 Total distance: 1.625E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([58], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:59,49 root DEBUG Side: OFF	 Angle(dx0, dx): 0.92 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.442E-02 	 Total distance: 5.067E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([25], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:59,50 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:59,50 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -64.97 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:59,50 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:59,50 root DEBUG dOFF/dON = 0.2
10:09:59,51 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.64769964306706, 'dON1': 0.23861166050983024, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.23861166050983024, 'nTON': 1, 'dON': 0.23861166050983024, 'dxOFFAngle': 83.64821417723604, 'dOFF1': 0.05067162577686514, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.05067162577686514, 'nTOFF': 1, 'dOFF': 0.05067162577686514, 'SUCCESS': False}
10:09:59,61 root DEBUG 

=================== Experiment ID #152 	 Dual Point ID: 154 ===================
10:09:59,70 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.707E-08|<1.000E-06)
10:09:59,70 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:59,302 root DEBUG Side: ON	 Angle(dx0, dx): 1.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.754E-01 	 Total distance: 1.754E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([211], dtype=int64), array([[False]])]] 	 class: [4 5]
10:09:59,515 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.813E-02 	 Total distance: 2.336E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([71], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:09:59,690 root DEBUG Side: ON	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.165E-02 	 Total distance: 2.552E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([191], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:09:59,833 root DEBUG Side: ON	 Angle(dx0, dx): 1.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.975E-02 	 Total distance: 3.450E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([15], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:10:00,107 root DEBUG Side: OFF	 Angle(dx0, dx): 1.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.422E-02 	 Total distance: 8.422E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([10], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:10:00,107 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:00,107 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -60.75 	 cIDON = [4 5], cIDOFF = [4 5]
10:10:00,107 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:00,107 root DEBUG dOFF/dON = 0.2
10:10:00,107 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.84649466723297, 'dON1': 0.3449633540517447, 'cIDON1': array([4, 5], dtype=int64), 'dON_patch_1': 0.3449633540517447, 'nTON': 1, 'dON': 0.3449633540517447, 'dxOFFAngle': 81.07381026866028, 'dOFF1': 0.08422205930672529, 'cIDOFF1': array([4, 5], dtype=int64), 'dOFF_patch_1': 0.08422205930672529, 'nTOFF': 1, 'dOFF': 0.08422205930672529, 'SUCCESS': False}
10:10:00,121 root DEBUG 

=================== Experiment ID #153 	 Dual Point ID: 155 ===================
10:10:00,129 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.578E-08|<1.000E-06)
10:10:00,129 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:00,404 root DEBUG Side: ON	 Angle(dx0, dx): 1.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.352E-01 	 Total distance: 1.352E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([45], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:00,646 root DEBUG Side: ON	 Angle(dx0, dx): 0.94 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.387E-01 	 Total distance: 5.739E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([38], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:00,893 root DEBUG Side: OFF	 Angle(dx0, dx): 2.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.002E-03 	 Total distance: 4.002E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([10], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:00,893 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:00,893 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -98.62 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:00,893 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:00,893 root DEBUG dOFF/dON = 0.0
10:10:00,893 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.65042116367641, 'dON1': 0.5739492221297201, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.5739492221297201, 'nTON': 1, 'dON': 0.5739492221297201, 'dxOFFAngle': 83.58404322205536, 'dOFF1': 0.004001568454771926, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.004001568454771926, 'nTOFF': 1, 'dOFF': 0.004001568454771926, 'SUCCESS': False}
10:10:00,901 root DEBUG 

=================== Experiment ID #154 	 Dual Point ID: 156 ===================
10:10:00,909 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.697E-09|<1.000E-06)
10:10:00,909 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:01,200 root DEBUG Side: ON	 Angle(dx0, dx): 0.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.955E-02 	 Total distance: 5.955E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([18], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:01,547 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.585E-01 	 Total distance: 3.585E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([163], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:01,702 root DEBUG Side: OFF	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.153E-04 	 Total distance: 3.593E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([187], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:01,926 root DEBUG Side: OFF	 Angle(dx0, dx): 1.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.618E-01 	 Total distance: 6.211E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([2], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:01,926 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:01,926 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 82.50 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:01,927 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:01,927 root DEBUG dOFF/dON = 10.4
10:10:01,927 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.81057474963548, 'dON1': 0.05954688085326966, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.05954688085326966, 'nTON': 1, 'dON': 0.05954688085326966, 'dxOFFAngle': 80.62106000349283, 'dOFF1': 0.6211245568133562, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.6211245568133562, 'nTOFF': 1, 'dOFF': 0.6211245568133562, 'SUCCESS': True}
10:10:01,936 root DEBUG 

=================== Experiment ID #155 	 Dual Point ID: 157 ===================
10:10:01,945 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.911E-08|<1.000E-06)
10:10:01,945 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:02,226 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.995E-01 	 Total distance: 3.995E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([78], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:10:02,391 root DEBUG Side: ON	 Angle(dx0, dx): 0.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.193E-02 	 Total distance: 4.114E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([215], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:10:02,611 root DEBUG Side: ON	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.908E-01 	 Total distance: 6.022E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([86], dtype=int64), array([[False]])]] 	 class: [3 8]
10:10:02,878 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.558E-01 	 Total distance: 6.558E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([40], dtype=int64), array([[False]])]] 	 class: [3 8]
10:10:03,52 root DEBUG Side: OFF	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.245E-02 	 Total distance: 6.783E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([69], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:10:03,53 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:03,53 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 5.94 	 cIDON = [3 8], cIDOFF = [3 8]
10:10:03,53 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:03,53 root DEBUG dOFF/dON = 1.1
10:10:03,53 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.99547865467729, 'dON1': 0.6022102911194136, 'cIDON1': array([3, 8], dtype=int64), 'dON_patch_1': 0.6022102911194136, 'nTON': 1, 'dON': 0.6022102911194136, 'dxOFFAngle': 87.32453959783938, 'dOFF1': 0.6782934308135079, 'cIDOFF1': array([3, 8], dtype=int64), 'dOFF_patch_1': 0.6782934308135079, 'nTOFF': 1, 'dOFF': 0.6782934308135079, 'SUCCESS': True}
10:10:03,64 root DEBUG 

=================== Experiment ID #156 	 Dual Point ID: 158 ===================
10:10:03,74 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.163E-08|<1.000E-06)
10:10:03,74 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:03,418 root DEBUG Side: ON	 Angle(dx0, dx): 0.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.041E-02 	 Total distance: 1.041E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([25], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:03,599 root DEBUG Side: ON	 Angle(dx0, dx): 2.87 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.375E-01 	 Total distance: 1.479E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([72], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:03,927 root DEBUG Side: OFF	 Angle(dx0, dx): 1.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.081E-03 	 Total distance: 4.081E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([236], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:03,928 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:03,928 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -94.63 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:03,928 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:03,928 root DEBUG dOFF/dON = 0.0
10:10:03,928 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.70898706353978, 'dON1': 0.14786574406718714, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.14786574406718714, 'nTON': 1, 'dON': 0.14786574406718714, 'dxOFFAngle': 85.31790884400395, 'dOFF1': 0.004081498889803922, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.004081498889803922, 'nTOFF': 1, 'dOFF': 0.004081498889803922, 'SUCCESS': False}
10:10:03,942 root DEBUG 

=================== Experiment ID #157 	 Dual Point ID: 159 ===================
10:10:03,951 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.223E-08|<1.000E-06)
10:10:03,951 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:04,242 root DEBUG Side: ON	 Angle(dx0, dx): 1.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.371E-02 	 Total distance: 1.371E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([20], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:04,448 root DEBUG Side: OFF	 Angle(dx0, dx): 0.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.020E-02 	 Total distance: 2.020E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([53], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:04,448 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:04,448 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 19.13 	 cIDON = [2 6], cIDOFF = [2 6]
10:10:04,448 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:04,448 root DEBUG dOFF/dON = 1.5
10:10:04,449 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.26565045346969, 'dON1': 0.013713308582627991, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.013713308582627991, 'nTON': 1, 'dON': 0.013713308582627991, 'dxOFFAngle': 89.95847661025702, 'dOFF1': 0.020200548176426664, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.020200548176426664, 'nTOFF': 1, 'dOFF': 0.020200548176426664, 'SUCCESS': True}
10:10:04,454 root DEBUG 

=================== Experiment ID #158 	 Dual Point ID: 160 ===================
10:10:04,463 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.097E-08|<1.000E-06)
10:10:04,464 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:04,727 root DEBUG Side: ON	 Angle(dx0, dx): 1.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.788E-03 	 Total distance: 7.788E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([72], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:04,945 root DEBUG Side: OFF	 Angle(dx0, dx): 1.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.064E-02 	 Total distance: 9.064E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([77], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:04,946 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:04,946 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 84.18 	 cIDON = [5 7], cIDOFF = [5 7]
10:10:04,946 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:04,946 root DEBUG dOFF/dON = 11.6
10:10:04,946 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.5528440681006, 'dON1': 0.007788166682642692, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.007788166682642692, 'nTON': 1, 'dON': 0.007788166682642692, 'dxOFFAngle': 83.20593820051802, 'dOFF1': 0.0906422462081379, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.0906422462081379, 'nTOFF': 1, 'dOFF': 0.0906422462081379, 'SUCCESS': True}
10:10:04,958 root DEBUG 

=================== Experiment ID #159 	 Dual Point ID: 161 ===================
10:10:04,963 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.211E-08|<1.000E-06)
10:10:04,964 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:05,266 root DEBUG Side: ON	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.364E-02 	 Total distance: 2.364E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([211], dtype=int64), array([[False]])]] 	 class: [3 9]
10:10:05,551 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.146E-01 	 Total distance: 2.146E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([229], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:10:05,692 root DEBUG Side: OFF	 Angle(dx0, dx): 0.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.485E-02 	 Total distance: 2.894E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([43], dtype=int64), array([[False]])]] 	 class: [3 9]
10:10:05,692 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:05,693 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 84.90 	 cIDON = [3 9], cIDOFF = [3 9]
10:10:05,693 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:05,693 root DEBUG dOFF/dON = 12.2
10:10:05,693 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.62453627901829, 'dON1': 0.023640510680784623, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.023640510680784623, 'nTON': 1, 'dON': 0.023640510680784623, 'dxOFFAngle': 85.70079907599151, 'dOFF1': 0.28940478758604876, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.28940478758604876, 'nTOFF': 1, 'dOFF': 0.28940478758604876, 'SUCCESS': True}
10:10:05,699 root DEBUG 

=================== Experiment ID #160 	 Dual Point ID: 162 ===================
10:10:05,711 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.709E-08|<1.000E-06)
10:10:05,711 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:05,999 root DEBUG Side: ON	 Angle(dx0, dx): 0.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.793E-01 	 Total distance: 1.793E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([237], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:10:06,268 root DEBUG Side: OFF	 Angle(dx0, dx): 1.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.705E-02 	 Total distance: 7.705E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([190], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:10:06,268 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:06,268 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -39.89 	 cIDON = [0 8], cIDOFF = [1 8]
10:10:06,268 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:06,268 root DEBUG dOFF/dON = 0.4
10:10:06,268 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.3406565926717, 'dON1': 0.17930641068823291, 'cIDON1': array([0, 8], dtype=int64), 'dON_patch_1': 0.17930641068823291, 'nTON': 1, 'dON': 0.17930641068823291, 'dxOFFAngle': 85.89689098414605, 'dOFF1': 0.07704733228747845, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 0.07704733228747845, 'nTOFF': 1, 'dOFF': 0.07704733228747845, 'SUCCESS': False}
10:10:06,280 root DEBUG 

=================== Experiment ID #161 	 Dual Point ID: 163 ===================
10:10:06,285 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.702E-08|<1.000E-06)
10:10:06,285 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:06,581 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.636E-02 	 Total distance: 1.636E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([145], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:10:06,808 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.838E-04 	 Total distance: 6.838E-04 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([102], dtype=int64), array([[False]])]] 	 class: [5 9]
10:10:06,935 root DEBUG Side: OFF	 Angle(dx0, dx): 1.86 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.304E-02 	 Total distance: 7.372E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([44], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:10:06,935 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:06,935 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 63.67 	 cIDON = [5 9], cIDOFF = [5 9]
10:10:06,936 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:06,936 root DEBUG dOFF/dON = 4.5
10:10:06,936 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.22626574496931, 'dON1': 0.016363246345423035, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.016363246345423035, 'nTON': 1, 'dON': 0.016363246345423035, 'dxOFFAngle': 88.26883307893063, 'dOFF1': 0.07371974542060476, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.07371974542060476, 'nTOFF': 1, 'dOFF': 0.07371974542060476, 'SUCCESS': True}
10:10:06,946 root DEBUG 

=================== Experiment ID #162 	 Dual Point ID: 164 ===================
10:10:06,956 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.083E-10|<1.000E-06)
10:10:06,956 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:07,280 root DEBUG Side: ON	 Angle(dx0, dx): 1.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.059E-01 	 Total distance: 1.059E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([207], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:10:07,489 root DEBUG Side: OFF	 Angle(dx0, dx): 0.79 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.198E-01 	 Total distance: 2.198E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([66], dtype=int64), array([[False]])]] 	 class: [2 4]
10:10:07,489 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:07,490 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 34.99 	 cIDON = [2 4], cIDOFF = [2 4]
10:10:07,490 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:07,490 root DEBUG dOFF/dON = 2.1
10:10:07,490 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.1044578063582, 'dON1': 0.10585929614117959, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.10585929614117959, 'nTON': 1, 'dON': 0.10585929614117959, 'dxOFFAngle': 88.50829296181004, 'dOFF1': 0.2198196743358289, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.2198196743358289, 'nTOFF': 1, 'dOFF': 0.2198196743358289, 'SUCCESS': True}
10:10:07,505 root DEBUG 

=================== Experiment ID #163 	 Dual Point ID: 165 ===================
10:10:07,516 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.515E-08|<1.000E-06)
10:10:07,516 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:07,767 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.348E-02 	 Total distance: 1.348E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([101], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:07,931 root DEBUG Side: ON	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.122E-02 	 Total distance: 2.470E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([16], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:08,205 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.225E-01 	 Total distance: 1.225E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([99], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:08,398 root DEBUG Side: OFF	 Angle(dx0, dx): 0.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.256E-03 	 Total distance: 1.307E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([8], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:08,398 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:08,398 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 68.21 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:08,398 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:08,398 root DEBUG dOFF/dON = 5.3
10:10:08,398 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.22381105688238, 'dON1': 0.024702300131910777, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.024702300131910777, 'nTON': 1, 'dON': 0.024702300131910777, 'dxOFFAngle': 89.73287570302114, 'dOFF1': 0.1307146270723257, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.1307146270723257, 'nTOFF': 1, 'dOFF': 0.1307146270723257, 'SUCCESS': True}
10:10:08,405 root DEBUG 

=================== Experiment ID #164 	 Dual Point ID: 166 ===================
10:10:08,413 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.747E-09|<1.000E-06)
10:10:08,414 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:08,708 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.051E-02 	 Total distance: 4.051E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([133], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:10:09,28 root DEBUG Side: OFF	 Angle(dx0, dx): 0.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.187E-02 	 Total distance: 3.187E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([77], dtype=int64), array([[False]])]] 	 class: [2 8]
10:10:09,28 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:09,28 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -11.94 	 cIDON = [2 8], cIDOFF = [2 8]
10:10:09,29 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:09,29 root DEBUG dOFF/dON = 0.8
10:10:09,29 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.492302267614, 'dON1': 0.04051275471920401, 'cIDON1': array([2, 8], dtype=int64), 'dON_patch_1': 0.04051275471920401, 'nTON': 1, 'dON': 0.04051275471920401, 'dxOFFAngle': 89.71651381693566, 'dOFF1': 0.031869769834329174, 'cIDOFF1': array([2, 8], dtype=int64), 'dOFF_patch_1': 0.031869769834329174, 'nTOFF': 1, 'dOFF': 0.031869769834329174, 'SUCCESS': False}
10:10:09,36 root DEBUG 

=================== Experiment ID #165 	 Dual Point ID: 167 ===================
10:10:09,44 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.446E-08|<1.000E-06)
10:10:09,44 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:09,339 root DEBUG Side: ON	 Angle(dx0, dx): 2.99 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.607E-03 	 Total distance: 3.607E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([123], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:09,684 root DEBUG Side: OFF	 Angle(dx0, dx): 1.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.508E-02 	 Total distance: 4.508E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([193], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:09,685 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:09,685 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 85.18 	 cIDON = [2 7], cIDOFF = [2 7]
10:10:09,685 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:09,685 root DEBUG dOFF/dON = 12.5
10:10:09,685 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.2217118011464, 'dON1': 0.0036073774793738684, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.0036073774793738684, 'nTON': 1, 'dON': 0.0036073774793738684, 'dxOFFAngle': 89.71617289971914, 'dOFF1': 0.04507598172259299, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.04507598172259299, 'nTOFF': 1, 'dOFF': 0.04507598172259299, 'SUCCESS': True}
10:10:09,699 root DEBUG 

=================== Experiment ID #166 	 Dual Point ID: 168 ===================
10:10:09,706 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.004E-07|<1.000E-06)
10:10:09,706 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:09,967 root DEBUG Side: ON	 Angle(dx0, dx): 1.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.580E-01 	 Total distance: 2.580E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([155], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:10:10,322 root DEBUG Side: OFF	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.716E-03 	 Total distance: 3.716E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([35], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:10:10,513 root DEBUG Side: OFF	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.767E-02 	 Total distance: 4.139E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([165], dtype=int64), array([[False]])]] 	 class: [2 3]
10:10:10,513 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:10,514 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -72.35 	 cIDON = [2 3], cIDOFF = [2 3]
10:10:10,514 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:10,514 root DEBUG dOFF/dON = 0.2
10:10:10,514 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.4926124450801, 'dON1': 0.2580131503440991, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.2580131503440991, 'nTON': 1, 'dON': 0.2580131503440991, 'dxOFFAngle': 85.24351217796232, 'dOFF1': 0.041389244282256765, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.041389244282256765, 'nTOFF': 1, 'dOFF': 0.041389244282256765, 'SUCCESS': False}
10:10:10,523 root DEBUG 

=================== Experiment ID #167 	 Dual Point ID: 169 ===================
10:10:10,532 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.990E-08|<1.000E-06)
10:10:10,532 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:10,804 root DEBUG Side: ON	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.337E-02 	 Total distance: 1.337E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([241], dtype=int64), array([[False]])]] 	 class: [2 4]
10:10:11,177 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.159E-01 	 Total distance: 1.159E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([74], dtype=int64), array([[False]])]] 	 class: [2 4]
10:10:11,177 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:11,177 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 79.32 	 cIDON = [2 4], cIDOFF = [2 4]
10:10:11,177 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:11,177 root DEBUG dOFF/dON = 8.7
10:10:11,177 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.30294159726338, 'dON1': 0.01336867962158284, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.01336867962158284, 'nTON': 1, 'dON': 0.01336867962158284, 'dxOFFAngle': 88.37943432340705, 'dOFF1': 0.1159302990587287, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.1159302990587287, 'nTOFF': 1, 'dOFF': 0.1159302990587287, 'SUCCESS': True}
10:10:11,190 root DEBUG 

=================== Experiment ID #168 	 Dual Point ID: 170 ===================
10:10:11,199 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.228E-08|<1.000E-06)
10:10:11,199 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:11,472 root DEBUG Side: ON	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.618E-02 	 Total distance: 4.618E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([72], dtype=int64), array([[False]])]] 	 class: [2 4]
10:10:11,736 root DEBUG Side: OFF	 Angle(dx0, dx): 1.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.503E-02 	 Total distance: 2.503E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([236], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:10:11,736 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:11,736 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -29.70 	 cIDON = [2 4], cIDOFF = [2 4]
10:10:11,736 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:11,736 root DEBUG dOFF/dON = 0.5
10:10:11,736 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.14784599927191, 'dON1': 0.04618118255462986, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.04618118255462986, 'nTON': 1, 'dON': 0.04618118255462986, 'dxOFFAngle': 81.52664460076761, 'dOFF1': 0.025033475018776244, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.025033475018776244, 'nTOFF': 1, 'dOFF': 0.025033475018776244, 'SUCCESS': False}
10:10:11,743 root DEBUG 

=================== Experiment ID #169 	 Dual Point ID: 171 ===================
10:10:11,748 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.322E-08|<1.000E-06)
10:10:11,748 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:12,38 root DEBUG Side: ON	 Angle(dx0, dx): 0.95 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.198E-01 	 Total distance: 2.198E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([49], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:10:12,289 root DEBUG Side: OFF	 Angle(dx0, dx): 2.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.429E-01 	 Total distance: 1.429E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([81], dtype=int64), array([[False]])]] 	 class: [7 9]
10:10:12,289 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:12,289 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -21.20 	 cIDON = [7 9], cIDOFF = [7 9]
10:10:12,290 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:12,290 root DEBUG dOFF/dON = 0.7
10:10:12,290 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.23553521595989, 'dON1': 0.219777721048559, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.219777721048559, 'nTON': 1, 'dON': 0.219777721048559, 'dxOFFAngle': 89.70499710651193, 'dOFF1': 0.1428855741596868, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.1428855741596868, 'nTOFF': 1, 'dOFF': 0.1428855741596868, 'SUCCESS': False}
10:10:12,301 root DEBUG 

=================== Experiment ID #170 	 Dual Point ID: 172 ===================
10:10:12,309 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.981E-08|<1.000E-06)
10:10:12,309 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:12,604 root DEBUG Side: ON	 Angle(dx0, dx): 1.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.250E-02 	 Total distance: 3.250E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([245], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:12,923 root DEBUG Side: OFF	 Angle(dx0, dx): 3.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.393E-02 	 Total distance: 3.393E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([5], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:12,923 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:12,923 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 2.15 	 cIDON = [2 6], cIDOFF = [2 6]
10:10:12,923 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:12,923 root DEBUG dOFF/dON = 1.0
10:10:12,924 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.61713375301758, 'dON1': 0.03249732478792197, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.03249732478792197, 'nTON': 1, 'dON': 0.03249732478792197, 'dxOFFAngle': 86.68648754594379, 'dOFF1': 0.033926443966635564, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.033926443966635564, 'nTOFF': 1, 'dOFF': 0.033926443966635564, 'SUCCESS': True}
10:10:12,935 root DEBUG 

=================== Experiment ID #171 	 Dual Point ID: 173 ===================
10:10:12,945 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.642E-08|<1.000E-06)
10:10:12,945 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:13,203 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.533E-02 	 Total distance: 1.533E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([6], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:10:13,406 root DEBUG Side: ON	 Angle(dx0, dx): 2.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.256E-01 	 Total distance: 1.410E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([47], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:10:13,678 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.966E-03 	 Total distance: 1.966E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([219], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:10:13,842 root DEBUG Side: OFF	 Angle(dx0, dx): 1.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.306E-02 	 Total distance: 8.503E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([8], dtype=int64), array([[False]])]] 	 class: [6 7]
10:10:13,842 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:13,842 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -24.75 	 cIDON = [6 7], cIDOFF = [6 7]
10:10:13,842 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:13,842 root DEBUG dOFF/dON = 0.6
10:10:13,842 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.68918404440033, 'dON1': 0.1409632451211865, 'cIDON1': array([6, 7], dtype=int64), 'dON_patch_1': 0.1409632451211865, 'nTON': 1, 'dON': 0.1409632451211865, 'dxOFFAngle': 88.15774183507082, 'dOFF1': 0.08502725887909561, 'cIDOFF1': array([6, 7], dtype=int64), 'dOFF_patch_1': 0.08502725887909561, 'nTOFF': 1, 'dOFF': 0.08502725887909561, 'SUCCESS': False}
10:10:13,848 root DEBUG 

=================== Experiment ID #172 	 Dual Point ID: 174 ===================
10:10:13,857 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.217E-07|<1.000E-06)
10:10:13,857 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:14,230 root DEBUG Side: ON	 Angle(dx0, dx): 4.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.092E-01 	 Total distance: 1.092E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([186], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:14,405 root DEBUG Side: ON	 Angle(dx0, dx): 0.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.989E-01 	 Total distance: 4.081E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([249], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:14,544 root DEBUG Side: ON	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.597E-01 	 Total distance: 7.678E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([226], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:14,688 root DEBUG Side: ON	 Angle(dx0, dx): 2.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.577E-01 	 Total distance: 9.255E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([180], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:14,997 root DEBUG Side: OFF	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.424E-01 	 Total distance: 2.424E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([17], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:14,997 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:14,997 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -58.49 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:14,997 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:14,997 root DEBUG dOFF/dON = 0.3
10:10:14,997 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.97020217403998, 'dON1': 0.9254664460753697, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.9254664460753697, 'nTON': 1, 'dON': 0.9254664460753697, 'dxOFFAngle': 84.9613135850195, 'dOFF1': 0.2423711728798482, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.2423711728798482, 'nTOFF': 1, 'dOFF': 0.2423711728798482, 'SUCCESS': False}
10:10:15,5 root DEBUG 

=================== Experiment ID #173 	 Dual Point ID: 175 ===================
10:10:15,15 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.304E-07|<1.000E-06)
10:10:15,15 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:15,301 root DEBUG Side: ON	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.248E-02 	 Total distance: 1.248E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([87], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:15,601 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.562E-01 	 Total distance: 2.562E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([254], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:15,601 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:15,601 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 90.71 	 cIDON = [2 6], cIDOFF = [2 6]
10:10:15,601 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:15,602 root DEBUG dOFF/dON = 20.5
10:10:15,602 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.44762383660864, 'dON1': 0.012479871772750116, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.012479871772750116, 'nTON': 1, 'dON': 0.012479871772750116, 'dxOFFAngle': 85.53017633822853, 'dOFF1': 0.2562225513254039, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.2562225513254039, 'nTOFF': 1, 'dOFF': 0.2562225513254039, 'SUCCESS': True}
10:10:15,609 root DEBUG 

=================== Experiment ID #174 	 Dual Point ID: 176 ===================
10:10:15,619 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.369E-08|<1.000E-06)
10:10:15,619 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:15,892 root DEBUG Side: ON	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.836E-02 	 Total distance: 4.836E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([231], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:16,250 root DEBUG Side: OFF	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.464E-01 	 Total distance: 3.464E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([96], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:16,250 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:16,250 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 75.50 	 cIDON = [3 6], cIDOFF = [3 6]
10:10:16,250 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:16,251 root DEBUG dOFF/dON = 7.2
10:10:16,251 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.12237409225642, 'dON1': 0.048363517443795835, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.048363517443795835, 'nTON': 1, 'dON': 0.048363517443795835, 'dxOFFAngle': 85.57852813014995, 'dOFF1': 0.34644959112311124, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.34644959112311124, 'nTOFF': 1, 'dOFF': 0.34644959112311124, 'SUCCESS': True}
10:10:16,259 root DEBUG 

=================== Experiment ID #175 	 Dual Point ID: 177 ===================
10:10:16,268 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.988E-08|<1.000E-06)
10:10:16,268 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:16,607 root DEBUG Side: ON	 Angle(dx0, dx): 1.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.841E-02 	 Total distance: 6.841E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([0], dtype=int64), array([[False]])]] 	 class: [5 6]
10:10:16,877 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.053E-02 	 Total distance: 8.053E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([198], dtype=int64), array([[False]])]] 	 class: [5 6]
10:10:17,70 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.610E-02 	 Total distance: 1.666E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([118], dtype=int64), array([[False]])]] 	 class: [5 6]
10:10:17,298 root DEBUG Side: OFF	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.324E-02 	 Total distance: 2.199E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([1], dtype=int64), array([[False]])]] 	 class: [5 6]
10:10:17,444 root DEBUG Side: OFF	 Angle(dx0, dx): 2.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.298E-02 	 Total distance: 2.629E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([146], dtype=int64), array([[False]])]] 	 class: [5 6]
10:10:17,444 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:17,444 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 58.70 	 cIDON = [5 6], cIDOFF = [5 6]
10:10:17,444 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:17,444 root DEBUG dOFF/dON = 3.8
10:10:17,444 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.35870340947184, 'dON1': 0.06840938884528971, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.06840938884528971, 'nTON': 1, 'dON': 0.06840938884528971, 'dxOFFAngle': 86.03039815276135, 'dOFF1': 0.26285840543053307, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.26285840543053307, 'nTOFF': 1, 'dOFF': 0.26285840543053307, 'SUCCESS': True}
10:10:17,451 root DEBUG 

=================== Experiment ID #176 	 Dual Point ID: 178 ===================
10:10:17,459 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.125E-08|<1.000E-06)
10:10:17,460 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:17,712 root DEBUG Side: ON	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.430E-01 	 Total distance: 1.430E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([83], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:17,985 root DEBUG Side: OFF	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.596E-01 	 Total distance: 1.596E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([60], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:18,212 root DEBUG Side: OFF	 Angle(dx0, dx): 1.84 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.065E-01 	 Total distance: 7.661E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([190], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:18,212 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:18,213 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 68.54 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:18,213 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:18,213 root DEBUG dOFF/dON = 5.4
10:10:18,213 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.8842967251917, 'dON1': 0.14299057331756027, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.14299057331756027, 'nTON': 1, 'dON': 0.14299057331756027, 'dxOFFAngle': 89.38903058918511, 'dOFF1': 0.7661425355800544, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.7661425355800544, 'nTOFF': 1, 'dOFF': 0.7661425355800544, 'SUCCESS': True}
10:10:18,225 root DEBUG 

=================== Experiment ID #177 	 Dual Point ID: 179 ===================
10:10:18,231 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.119E-08|<1.000E-06)
10:10:18,232 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:18,484 root DEBUG Side: ON	 Angle(dx0, dx): 0.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.944E-02 	 Total distance: 2.944E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([163], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:10:18,703 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.018E-02 	 Total distance: 4.018E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([160], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:10:18,703 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:18,703 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 15.43 	 cIDON = [1 8], cIDOFF = [0 8]
10:10:18,703 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:18,704 root DEBUG dOFF/dON = 1.4
10:10:18,704 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.26824721645696, 'dON1': 0.029436965578799715, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 0.029436965578799715, 'nTON': 1, 'dON': 0.029436965578799715, 'dxOFFAngle': 86.81684638122518, 'dOFF1': 0.04018000176091645, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.04018000176091645, 'nTOFF': 1, 'dOFF': 0.04018000176091645, 'SUCCESS': True}
10:10:18,718 root DEBUG 

=================== Experiment ID #178 	 Dual Point ID: 180 ===================
10:10:18,729 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.127E-08|<1.000E-06)
10:10:18,729 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:18,950 root DEBUG Side: ON	 Angle(dx0, dx): 1.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.888E-03 	 Total distance: 5.888E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([150], dtype=int64), array([[False]])]] 	 class: [2 4]
10:10:19,297 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.010E-02 	 Total distance: 9.010E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([122], dtype=int64), array([[False]])]] 	 class: [2 4]
10:10:19,297 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:19,297 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 87.73 	 cIDON = [2 4], cIDOFF = [2 4]
10:10:19,297 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:19,297 root DEBUG dOFF/dON = 15.3
10:10:19,297 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.98831927866205, 'dON1': 0.0058882614973662034, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.0058882614973662034, 'nTON': 1, 'dON': 0.0058882614973662034, 'dxOFFAngle': 85.79437091910548, 'dOFF1': 0.09009874638634303, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.09009874638634303, 'nTOFF': 1, 'dOFF': 0.09009874638634303, 'SUCCESS': True}
10:10:19,308 root DEBUG 

=================== Experiment ID #179 	 Dual Point ID: 181 ===================
10:10:19,316 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.068E-07|<1.000E-06)
10:10:19,317 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:19,609 root DEBUG Side: ON	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.946E-02 	 Total distance: 4.946E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([29], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:19,851 root DEBUG Side: OFF	 Angle(dx0, dx): 1.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.984E-02 	 Total distance: 6.984E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([154], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:19,851 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:19,851 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 17.08 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:19,851 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:19,851 root DEBUG dOFF/dON = 1.4
10:10:19,852 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.7079219088569, 'dON1': 0.04946387895846207, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.04946387895846207, 'nTON': 1, 'dON': 0.04946387895846207, 'dxOFFAngle': 84.68246165315959, 'dOFF1': 0.06984060054027565, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.06984060054027565, 'nTOFF': 1, 'dOFF': 0.06984060054027565, 'SUCCESS': True}
10:10:19,859 root DEBUG 

=================== Experiment ID #180 	 Dual Point ID: 182 ===================
10:10:19,868 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.112E-08|<1.000E-06)
10:10:19,868 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:20,108 root DEBUG Side: ON	 Angle(dx0, dx): 2.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.585E-02 	 Total distance: 7.585E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([99], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:20,380 root DEBUG Side: OFF	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.997E-02 	 Total distance: 1.997E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([172], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:20,380 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:20,381 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -58.32 	 cIDON = [3 6], cIDOFF = [3 6]
10:10:20,381 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:20,381 root DEBUG dOFF/dON = 0.3
10:10:20,381 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.50526084099818, 'dON1': 0.07585409781495363, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.07585409781495363, 'nTON': 1, 'dON': 0.07585409781495363, 'dxOFFAngle': 84.50354623586459, 'dOFF1': 0.019968969776632508, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.019968969776632508, 'nTOFF': 1, 'dOFF': 0.019968969776632508, 'SUCCESS': False}
10:10:20,393 root DEBUG 

=================== Experiment ID #181 	 Dual Point ID: 183 ===================
10:10:20,403 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.682E-08|<1.000E-06)
10:10:20,404 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:20,649 root DEBUG Side: ON	 Angle(dx0, dx): 0.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.489E-02 	 Total distance: 5.489E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([98], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:20,948 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.831E-01 	 Total distance: 1.831E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([71], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:21,232 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.633E-01 	 Total distance: 5.463E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([184], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:21,232 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:21,232 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 81.74 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:21,233 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:21,233 root DEBUG dOFF/dON = 10.0
10:10:21,233 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.90240160255716, 'dON1': 0.05488511338190345, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.05488511338190345, 'nTON': 1, 'dON': 0.05488511338190345, 'dxOFFAngle': 86.51654404533922, 'dOFF1': 0.5463368841182582, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.5463368841182582, 'nTOFF': 1, 'dOFF': 0.5463368841182582, 'SUCCESS': True}
10:10:21,243 root DEBUG 

=================== Experiment ID #182 	 Dual Point ID: 184 ===================
10:10:21,254 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.813E-08|<1.000E-06)
10:10:21,254 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:21,568 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.364E-02 	 Total distance: 5.364E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([161], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:21,728 root DEBUG Side: ON	 Angle(dx0, dx): 0.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.123E-02 	 Total distance: 1.349E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([207], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:21,935 root DEBUG Side: ON	 Angle(dx0, dx): 0.60 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.139E-02 	 Total distance: 1.963E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([94], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:22,235 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.035E-02 	 Total distance: 3.035E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([180], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:22,429 root DEBUG Side: OFF	 Angle(dx0, dx): 2.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.306E-02 	 Total distance: 5.341E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([44], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:22,429 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:22,430 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -57.21 	 cIDON = [2 6], cIDOFF = [2 6]
10:10:22,430 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:22,430 root DEBUG dOFF/dON = 0.3
10:10:22,430 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.26368981771247, 'dON1': 0.19626278371245684, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.19626278371245684, 'nTON': 1, 'dON': 0.19626278371245684, 'dxOFFAngle': 84.23151495398136, 'dOFF1': 0.05341405022331121, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.05341405022331121, 'nTOFF': 1, 'dOFF': 0.05341405022331121, 'SUCCESS': False}
10:10:22,447 root DEBUG 

=================== Experiment ID #183 	 Dual Point ID: 185 ===================
10:10:22,456 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.093E-07|<1.000E-06)
10:10:22,457 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:22,784 root DEBUG Side: ON	 Angle(dx0, dx): 1.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.654E-02 	 Total distance: 2.654E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([182], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:23,59 root DEBUG Side: OFF	 Angle(dx0, dx): 1.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.469E-01 	 Total distance: 1.469E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([12], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:23,59 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:23,59 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 69.40 	 cIDON = [2 7], cIDOFF = [2 7]
10:10:23,59 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:23,59 root DEBUG dOFF/dON = 5.5
10:10:23,59 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.51991097488909, 'dON1': 0.026539338865904656, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.026539338865904656, 'nTON': 1, 'dON': 0.026539338865904656, 'dxOFFAngle': 88.82144830228634, 'dOFF1': 0.1469064926107254, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.1469064926107254, 'nTOFF': 1, 'dOFF': 0.1469064926107254, 'SUCCESS': True}
10:10:23,67 root DEBUG 

=================== Experiment ID #184 	 Dual Point ID: 186 ===================
10:10:23,82 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.318E-08|<1.000E-06)
10:10:23,82 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:23,364 root DEBUG Side: ON	 Angle(dx0, dx): 1.77 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.649E-01 	 Total distance: 1.649E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([139], dtype=int64), array([[False]])]] 	 class: [0 9]
10:10:23,617 root DEBUG Side: OFF	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.506E-01 	 Total distance: 2.506E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([84], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:10:23,834 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.369E-02 	 Total distance: 2.743E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([37], dtype=int64), array([[False]])]] 	 class: [1 9]
10:10:23,834 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:23,834 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 24.90 	 cIDON = [0 9], cIDOFF = [1 9]
10:10:23,834 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:23,834 root DEBUG dOFF/dON = 1.7
10:10:23,834 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.33392203100797, 'dON1': 0.16494224180389283, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.16494224180389283, 'nTON': 1, 'dON': 0.16494224180389283, 'dxOFFAngle': 87.38216787798153, 'dOFF1': 0.2742970698690248, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.2742970698690248, 'nTOFF': 1, 'dOFF': 0.2742970698690248, 'SUCCESS': True}
10:10:23,841 root DEBUG 

=================== Experiment ID #185 	 Dual Point ID: 187 ===================
10:10:23,848 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.415E-08|<1.000E-06)
10:10:23,848 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:24,200 root DEBUG Side: ON	 Angle(dx0, dx): 1.71 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.149E-01 	 Total distance: 1.149E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([178], dtype=int64), array([[False]])]] 	 class: [0 9]
10:10:24,551 root DEBUG Side: OFF	 Angle(dx0, dx): 0.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.134E-02 	 Total distance: 9.134E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([52], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:10:24,552 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:24,552 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -11.44 	 cIDON = [0 9], cIDOFF = [1 9]
10:10:24,552 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:24,552 root DEBUG dOFF/dON = 0.8
10:10:24,552 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.9760992725739, 'dON1': 0.11494434235830883, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.11494434235830883, 'nTON': 1, 'dON': 0.11494434235830883, 'dxOFFAngle': 86.56628514717724, 'dOFF1': 0.0913432318714768, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.0913432318714768, 'nTOFF': 1, 'dOFF': 0.0913432318714768, 'SUCCESS': False}
10:10:24,561 root DEBUG 

=================== Experiment ID #186 	 Dual Point ID: 188 ===================
10:10:24,568 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.263E-08|<1.000E-06)
10:10:24,568 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:24,842 root DEBUG Side: ON	 Angle(dx0, dx): 8.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.399E-01 	 Total distance: 1.399E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([29], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:25,220 root DEBUG Side: OFF	 Angle(dx0, dx): 1.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.571E-01 	 Total distance: 1.571E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([152], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:25,407 root DEBUG Side: OFF	 Angle(dx0, dx): 1.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.240E-02 	 Total distance: 1.895E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([93], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:25,408 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:25,408 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 15.05 	 cIDON = [3 6], cIDOFF = [3 6]
10:10:25,408 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:25,408 root DEBUG dOFF/dON = 1.4
10:10:25,408 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.2971282226833, 'dON1': 0.1399156357433891, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.1399156357433891, 'nTON': 1, 'dON': 0.1399156357433891, 'dxOFFAngle': 89.4605597899824, 'dOFF1': 0.18948527616287125, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.18948527616287125, 'nTOFF': 1, 'dOFF': 0.18948527616287125, 'SUCCESS': True}
10:10:25,416 root DEBUG 

=================== Experiment ID #187 	 Dual Point ID: 189 ===================
10:10:25,425 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.319E-07|<1.000E-06)
10:10:25,425 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:25,732 root DEBUG Side: ON	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.048E-02 	 Total distance: 4.048E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([53], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:26,60 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.928E-01 	 Total distance: 2.928E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([105], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:26,60 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:26,61 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 75.71 	 cIDON = [3 6], cIDOFF = [3 6]
10:10:26,61 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:26,61 root DEBUG dOFF/dON = 7.2
10:10:26,61 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.10458563872393, 'dON1': 0.04047515147372193, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.04047515147372193, 'nTON': 1, 'dON': 0.04047515147372193, 'dxOFFAngle': 87.50714957106857, 'dOFF1': 0.29283652493379847, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.29283652493379847, 'nTOFF': 1, 'dOFF': 0.29283652493379847, 'SUCCESS': True}
10:10:26,69 root DEBUG 

=================== Experiment ID #188 	 Dual Point ID: 190 ===================
10:10:26,81 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.248E-08|<1.000E-06)
10:10:26,81 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:26,383 root DEBUG Side: ON	 Angle(dx0, dx): 1.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.059E-02 	 Total distance: 1.059E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([235], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:26,663 root DEBUG Side: OFF	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.307E-01 	 Total distance: 3.307E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([180], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:26,664 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:26,664 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 93.80 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:26,664 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:26,664 root DEBUG dOFF/dON = 31.2
10:10:26,664 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.02822725683114, 'dON1': 0.01058749785215638, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.01058749785215638, 'nTON': 1, 'dON': 0.01058749785215638, 'dxOFFAngle': 86.77978557738389, 'dOFF1': 0.33066976460095254, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.33066976460095254, 'nTOFF': 1, 'dOFF': 0.33066976460095254, 'SUCCESS': True}
10:10:26,671 root DEBUG 

=================== Experiment ID #189 	 Dual Point ID: 191 ===================
10:10:26,684 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.132E-08|<1.000E-06)
10:10:26,685 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:26,980 root DEBUG Side: ON	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.693E-03 	 Total distance: 5.693E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([171], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:27,277 root DEBUG Side: OFF	 Angle(dx0, dx): 0.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.740E-02 	 Total distance: 8.740E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([72], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:27,277 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:27,278 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 87.77 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:27,278 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:27,278 root DEBUG dOFF/dON = 15.4
10:10:27,278 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.11492416104474, 'dON1': 0.0056929562042428525, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.0056929562042428525, 'nTON': 1, 'dON': 0.0056929562042428525, 'dxOFFAngle': 86.14146672119385, 'dOFF1': 0.08739816563974158, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.08739816563974158, 'nTOFF': 1, 'dOFF': 0.08739816563974158, 'SUCCESS': True}
10:10:27,287 root DEBUG 

=================== Experiment ID #190 	 Dual Point ID: 192 ===================
10:10:27,298 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.653E-08|<1.000E-06)
10:10:27,299 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:27,554 root DEBUG Side: ON	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.982E-02 	 Total distance: 1.982E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([23], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:27,733 root DEBUG Side: ON	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.379E-02 	 Total distance: 4.361E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([119], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:27,978 root DEBUG Side: OFF	 Angle(dx0, dx): 0.73 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.310E-01 	 Total distance: 2.310E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([64], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:27,978 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:27,978 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 68.23 	 cIDON = [2 6], cIDOFF = [2 6]
10:10:27,978 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:27,978 root DEBUG dOFF/dON = 5.3
10:10:27,978 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.16452993492332, 'dON1': 0.04361056287116351, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.04361056287116351, 'nTON': 1, 'dON': 0.04361056287116351, 'dxOFFAngle': 87.46121541200358, 'dOFF1': 0.23096079023164498, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.23096079023164498, 'nTOFF': 1, 'dOFF': 0.23096079023164498, 'SUCCESS': True}
10:10:27,987 root DEBUG 

=================== Experiment ID #191 	 Dual Point ID: 193 ===================
10:10:27,995 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.772E-08|<1.000E-06)
10:10:27,996 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:28,270 root DEBUG Side: ON	 Angle(dx0, dx): 3.94 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.147E-02 	 Total distance: 7.147E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([1, 4], dtype=int64), array([[1.],
       [0.]])]] 	 class: [1 8]
10:10:28,581 root DEBUG Side: OFF	 Angle(dx0, dx): 0.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.561E-01 	 Total distance: 1.561E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([30], dtype=int64), array([[ True]])]] 	 class: [4 8]
10:10:28,581 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:28,581 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 37.18 	 cIDON = [4 8], cIDOFF = [4 8]
10:10:28,582 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:28,582 root DEBUG dOFF/dON = 2.2
10:10:28,582 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.4118371461088, 'dON1': 0.0714726447774962, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.0714726447774962, 'nTON': 1, 'dON': 0.0714726447774962, 'dxOFFAngle': 88.26858443796415, 'dOFF1': 0.15607767694141672, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.15607767694141672, 'nTOFF': 1, 'dOFF': 0.15607767694141672, 'SUCCESS': True}
10:10:28,588 root DEBUG 

=================== Experiment ID #192 	 Dual Point ID: 194 ===================
10:10:28,596 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.327E-07|<1.000E-06)
10:10:28,596 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:28,861 root DEBUG Side: ON	 Angle(dx0, dx): 2.95 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.785E-01 	 Total distance: 2.785E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([41], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:29,177 root DEBUG Side: OFF	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.047E-01 	 Total distance: 5.047E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([162], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:29,177 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:29,177 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 28.89 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:29,177 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:29,177 root DEBUG dOFF/dON = 1.8
10:10:29,177 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.58910807258627, 'dON1': 0.2784586516048791, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.2784586516048791, 'nTON': 1, 'dON': 0.2784586516048791, 'dxOFFAngle': 89.28199641340683, 'dOFF1': 0.5047369816478978, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.5047369816478978, 'nTOFF': 1, 'dOFF': 0.5047369816478978, 'SUCCESS': True}
10:10:29,188 root DEBUG 

=================== Experiment ID #193 	 Dual Point ID: 195 ===================
10:10:29,197 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.649E-09|<1.000E-06)
10:10:29,197 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:29,437 root DEBUG Side: ON	 Angle(dx0, dx): 1.93 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.963E-06 	 Total distance: 8.963E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:10:29,655 root DEBUG Side: OFF	 Angle(dx0, dx): 1.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.792E-06 	 Total distance: 1.792E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:10:29,655 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:29,656 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -66.68 	 cIDON = [1 8], cIDOFF = [1 8]
10:10:29,656 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:29,656 root DEBUG dOFF/dON = 0.2
10:10:29,656 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.1911060626621, 'dON1': 8.962578437664305e-06, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 8.962578437664305e-06, 'nTON': 1, 'dON': 8.962578437664305e-06, 'dxOFFAngle': 88.9563928420671, 'dOFF1': 1.7919196663258427e-06, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 1.7919196663258427e-06, 'nTOFF': 1, 'dOFF': 1.7919196663258427e-06, 'SUCCESS': False}
10:10:29,673 root DEBUG 

=================== Experiment ID #194 	 Dual Point ID: 196 ===================
10:10:29,679 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.542E-08|<1.000E-06)
10:10:29,680 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:29,955 root DEBUG Side: ON	 Angle(dx0, dx): 0.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.414E-01 	 Total distance: 1.414E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([182], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:30,215 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.013E-02 	 Total distance: 3.013E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([36], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:30,215 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:30,215 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -64.87 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:30,215 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:30,215 root DEBUG dOFF/dON = 0.2
10:10:30,215 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.53137461650506, 'dON1': 0.1414174134478275, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.1414174134478275, 'nTON': 1, 'dON': 0.1414174134478275, 'dxOFFAngle': 87.39616063297167, 'dOFF1': 0.03013395249756428, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.03013395249756428, 'nTOFF': 1, 'dOFF': 0.03013395249756428, 'SUCCESS': False}
10:10:30,223 root DEBUG 

=================== Experiment ID #195 	 Dual Point ID: 197 ===================
10:10:30,237 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.049E-07|<1.000E-06)
10:10:30,237 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:30,560 root DEBUG Side: ON	 Angle(dx0, dx): 1.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.015E-01 	 Total distance: 1.015E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([187], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:30,827 root DEBUG Side: OFF	 Angle(dx0, dx): 1.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.248E-01 	 Total distance: 1.248E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([151], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:30,828 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:30,828 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 10.27 	 cIDON = [2 6], cIDOFF = [2 6]
10:10:30,828 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:30,828 root DEBUG dOFF/dON = 1.2
10:10:30,828 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 79.94748320504637, 'dON1': 0.10150756677242133, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.10150756677242133, 'nTON': 1, 'dON': 0.10150756677242133, 'dxOFFAngle': 82.65680419353497, 'dOFF1': 0.12475352345869764, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.12475352345869764, 'nTOFF': 1, 'dOFF': 0.12475352345869764, 'SUCCESS': True}
10:10:30,839 root DEBUG 

=================== Experiment ID #196 	 Dual Point ID: 198 ===================
10:10:30,846 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.540E-08|<1.000E-06)
10:10:30,846 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:31,158 root DEBUG Side: ON	 Angle(dx0, dx): 0.77 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.818E-02 	 Total distance: 8.818E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([192], dtype=int64), array([[False]])]] 	 class: [2 9]
10:10:31,481 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.809E-01 	 Total distance: 1.809E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([247], dtype=int64), array([[False]])]] 	 class: [2 9]
10:10:31,729 root DEBUG Side: OFF	 Angle(dx0, dx): 0.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.295E-01 	 Total distance: 3.103E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([60], dtype=int64), array([[False]])]] 	 class: [2 9]
10:10:31,730 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:31,730 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 55.75 	 cIDON = [2 9], cIDOFF = [2 9]
10:10:31,730 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:31,730 root DEBUG dOFF/dON = 3.5
10:10:31,730 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.9134301221938, 'dON1': 0.0881754069747002, 'cIDON1': array([2, 9], dtype=int64), 'dON_patch_1': 0.0881754069747002, 'nTON': 1, 'dON': 0.0881754069747002, 'dxOFFAngle': 88.52655321134179, 'dOFF1': 0.3103451793500328, 'cIDOFF1': array([2, 9], dtype=int64), 'dOFF_patch_1': 0.3103451793500328, 'nTOFF': 1, 'dOFF': 0.3103451793500328, 'SUCCESS': True}
10:10:31,736 root DEBUG 

=================== Experiment ID #197 	 Dual Point ID: 199 ===================
10:10:31,744 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.691E-07|<1.000E-06)
10:10:31,744 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:32,5 root DEBUG Side: ON	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.851E-01 	 Total distance: 5.851E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([3], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:32,285 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.946E-01 	 Total distance: 4.946E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([65], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:32,489 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.287E-02 	 Total distance: 5.275E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([99], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:32,731 root DEBUG Side: OFF	 Angle(dx0, dx): 0.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.228E-01 	 Total distance: 8.503E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([173], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:32,731 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:32,731 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 18.48 	 cIDON = [5 7], cIDOFF = [5 7]
10:10:32,731 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:32,731 root DEBUG dOFF/dON = 1.5
10:10:32,731 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.12649072974094, 'dON1': 0.5850837776785175, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.5850837776785175, 'nTON': 1, 'dON': 0.5850837776785175, 'dxOFFAngle': 88.74340302386386, 'dOFF1': 0.8503175632710742, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.8503175632710742, 'nTOFF': 1, 'dOFF': 0.8503175632710742, 'SUCCESS': True}
10:10:32,737 root DEBUG 

=================== Experiment ID #198 	 Dual Point ID: 200 ===================
10:10:32,746 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.191E-08|<1.000E-06)
10:10:32,746 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:33,71 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.494E-02 	 Total distance: 3.494E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([167], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:33,270 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.709E-02 	 Total distance: 6.203E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([129], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:33,448 root DEBUG Side: ON	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.521E-01 	 Total distance: 3.141E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([25], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:33,814 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.794E-01 	 Total distance: 2.794E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([113], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:34,10 root DEBUG Side: OFF	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.030E-01 	 Total distance: 3.824E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([217], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:34,180 root DEBUG Side: OFF	 Angle(dx0, dx): 0.88 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.170E-02 	 Total distance: 4.241E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([101], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:34,380 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.289E-01 	 Total distance: 5.530E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([225], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:34,508 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.381E-02 	 Total distance: 6.268E-01 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([29], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:34,774 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.343E-01 	 Total distance: 7.612E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([168], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:34,774 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:34,775 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 41.57 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:34,775 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:34,775 root DEBUG dOFF/dON = 2.4
10:10:34,775 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.71641833672048, 'dON1': 0.314116834996501, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.314116834996501, 'nTON': 1, 'dON': 0.314116834996501, 'dxOFFAngle': 87.504947460439, 'dOFF1': 0.7611518968997855, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.7611518968997855, 'nTOFF': 1, 'dOFF': 0.7611518968997855, 'SUCCESS': True}
10:10:34,781 root DEBUG 

=================== Experiment ID #199 	 Dual Point ID: 201 ===================
10:10:34,790 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.073E-08|<1.000E-06)
10:10:34,790 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:35,105 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.755E-03 	 Total distance: 6.755E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([12], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:35,386 root DEBUG Side: OFF	 Angle(dx0, dx): 0.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.475E-03 	 Total distance: 4.475E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([105], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:35,656 root DEBUG Side: OFF	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.298E-02 	 Total distance: 5.745E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([209], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:35,656 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:35,656 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 78.96 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:35,656 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:35,656 root DEBUG dOFF/dON = 8.5
10:10:35,656 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.42991190501363, 'dON1': 0.006754940560900197, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.006754940560900197, 'nTON': 1, 'dON': 0.006754940560900197, 'dxOFFAngle': 86.95879245707644, 'dOFF1': 0.057454365334548584, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.057454365334548584, 'nTOFF': 1, 'dOFF': 0.057454365334548584, 'SUCCESS': True}
10:10:35,664 root DEBUG 

=================== Experiment ID #200 	 Dual Point ID: 202 ===================
10:10:35,672 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.299E-09|<1.000E-06)
10:10:35,672 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:35,953 root DEBUG Side: ON	 Angle(dx0, dx): 3.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.250E-03 	 Total distance: 7.250E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([162], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:10:36,296 root DEBUG Side: OFF	 Angle(dx0, dx): 0.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.335E-02 	 Total distance: 3.335E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([106], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:10:36,492 root DEBUG Side: OFF	 Angle(dx0, dx): 1.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.624E-02 	 Total distance: 4.959E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([185], dtype=int64), array([[False]])]] 	 class: [6 7]
10:10:36,492 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:36,492 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 74.49 	 cIDON = [6 7], cIDOFF = [6 7]
10:10:36,492 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:36,492 root DEBUG dOFF/dON = 6.8
10:10:36,493 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.47519774239598, 'dON1': 0.007250104282078668, 'cIDON1': array([6, 7], dtype=int64), 'dON_patch_1': 0.007250104282078668, 'nTON': 1, 'dON': 0.007250104282078668, 'dxOFFAngle': 88.57650553407017, 'dOFF1': 0.04959010040030436, 'cIDOFF1': array([6, 7], dtype=int64), 'dOFF_patch_1': 0.04959010040030436, 'nTOFF': 1, 'dOFF': 0.04959010040030436, 'SUCCESS': True}
10:10:36,504 root DEBUG 

=================== Experiment ID #201 	 Dual Point ID: 203 ===================
10:10:36,511 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.033E-08|<1.000E-06)
10:10:36,511 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:36,837 root DEBUG Side: ON	 Angle(dx0, dx): 0.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.013E-03 	 Total distance: 6.013E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([177], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:37,63 root DEBUG Side: OFF	 Angle(dx0, dx): 1.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.140E-02 	 Total distance: 9.140E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([78], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:37,64 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:37,64 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 87.65 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:37,64 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:37,64 root DEBUG dOFF/dON = 15.2
10:10:37,64 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.40713284348583, 'dON1': 0.0060132168521006765, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.0060132168521006765, 'nTON': 1, 'dON': 0.0060132168521006765, 'dxOFFAngle': 88.10879373807043, 'dOFF1': 0.09139565334183294, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.09139565334183294, 'nTOFF': 1, 'dOFF': 0.09139565334183294, 'SUCCESS': True}
10:10:37,75 root DEBUG 

=================== Experiment ID #202 	 Dual Point ID: 204 ===================
10:10:37,83 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.947E-09|<1.000E-06)
10:10:37,83 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:37,389 root DEBUG Side: ON	 Angle(dx0, dx): 2.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.165E-05 	 Total distance: 1.165E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 8]
10:10:37,632 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.849E-01 	 Total distance: 1.849E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([236], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:10:37,633 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:37,633 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.99 	 cIDON = [0 8], cIDOFF = [0 8]
10:10:37,633 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:37,633 root DEBUG dOFF/dON = 15869.3
10:10:37,633 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.89431605736897, 'dON1': 1.1653414705121648e-05, 'cIDON1': array([0, 8], dtype=int64), 'dON_patch_1': 1.1653414705121648e-05, 'nTON': 1, 'dON': 1.1653414705121648e-05, 'dxOFFAngle': 87.87601634539652, 'dOFF1': 0.1849311154930088, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.1849311154930088, 'nTOFF': 1, 'dOFF': 0.1849311154930088, 'SUCCESS': True}
10:10:37,642 root DEBUG 

=================== Experiment ID #203 	 Dual Point ID: 205 ===================
10:10:37,652 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.398E-08|<1.000E-06)
10:10:37,652 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:37,928 root DEBUG Side: ON	 Angle(dx0, dx): 1.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.541E-01 	 Total distance: 5.541E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([199], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:38,294 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.563E-01 	 Total distance: 2.563E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([106], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:38,294 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:38,295 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -36.75 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:38,295 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:38,295 root DEBUG dOFF/dON = 0.5
10:10:38,295 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.12282292140169, 'dON1': 0.5541028827235188, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.5541028827235188, 'nTON': 1, 'dON': 0.5541028827235188, 'dxOFFAngle': 86.88172194998901, 'dOFF1': 0.25630559163081823, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.25630559163081823, 'nTOFF': 1, 'dOFF': 0.25630559163081823, 'SUCCESS': False}
10:10:38,307 root DEBUG 

=================== Experiment ID #204 	 Dual Point ID: 206 ===================
10:10:38,314 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.589E-08|<1.000E-06)
10:10:38,314 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:38,581 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.828E-02 	 Total distance: 6.828E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([89], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:10:38,836 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.395E-02 	 Total distance: 1.395E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([136], dtype=int64), array([[False]])]] 	 class: [2 4]
10:10:38,981 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.357E-02 	 Total distance: 2.751E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([71], dtype=int64), array([[False]])]] 	 class: [2 4]
10:10:39,163 root DEBUG Side: OFF	 Angle(dx0, dx): 0.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.529E-03 	 Total distance: 3.404E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([174], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:10:39,163 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:39,163 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -33.46 	 cIDON = [2 4], cIDOFF = [2 4]
10:10:39,163 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:39,163 root DEBUG dOFF/dON = 0.5
10:10:39,163 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.94543521793624, 'dON1': 0.06827592981754182, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.06827592981754182, 'nTON': 1, 'dON': 0.06827592981754182, 'dxOFFAngle': 82.96458358008722, 'dOFF1': 0.03404366767554712, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.03404366767554712, 'nTOFF': 1, 'dOFF': 0.03404366767554712, 'SUCCESS': False}
10:10:39,173 root DEBUG 

=================== Experiment ID #205 	 Dual Point ID: 207 ===================
10:10:39,180 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.998E-09|<1.000E-06)
10:10:39,180 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:39,493 root DEBUG Side: ON	 Angle(dx0, dx): 0.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.801E-02 	 Total distance: 2.801E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([3], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:39,705 root DEBUG Side: OFF	 Angle(dx0, dx): 0.93 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.149E-01 	 Total distance: 3.149E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([2], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:39,705 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:39,705 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 83.67 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:39,705 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:39,706 root DEBUG dOFF/dON = 11.2
10:10:39,706 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.45408897888039, 'dON1': 0.02800698160854794, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.02800698160854794, 'nTON': 1, 'dON': 0.02800698160854794, 'dxOFFAngle': 88.23834063339329, 'dOFF1': 0.31492078143723023, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.31492078143723023, 'nTOFF': 1, 'dOFF': 0.31492078143723023, 'SUCCESS': True}
10:10:39,718 root DEBUG 

=================== Experiment ID #206 	 Dual Point ID: 208 ===================
10:10:39,725 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.165E-09|<1.000E-06)
10:10:39,725 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:39,979 root DEBUG Side: ON	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.935E-02 	 Total distance: 8.935E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([220], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:40,215 root DEBUG Side: OFF	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.362E-02 	 Total distance: 2.362E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([85], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:40,215 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:40,215 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -58.18 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:40,216 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:40,216 root DEBUG dOFF/dON = 0.3
10:10:40,216 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.88649595794693, 'dON1': 0.0893516464890169, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.0893516464890169, 'nTON': 1, 'dON': 0.0893516464890169, 'dxOFFAngle': 88.86976886830976, 'dOFF1': 0.023623554573696595, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.023623554573696595, 'nTOFF': 1, 'dOFF': 0.023623554573696595, 'SUCCESS': False}
10:10:40,229 root DEBUG 

=================== Experiment ID #207 	 Dual Point ID: 209 ===================
10:10:40,240 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.284E-08|<1.000E-06)
10:10:40,240 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:40,500 root DEBUG Side: ON	 Angle(dx0, dx): 4.96 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.286E-02 	 Total distance: 1.286E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([59], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:40,790 root DEBUG Side: OFF	 Angle(dx0, dx): 1.73 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.899E-01 	 Total distance: 4.899E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([108], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:40,790 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:40,791 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 94.89 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:40,791 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:40,791 root DEBUG dOFF/dON = 38.1
10:10:40,791 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 74.16066538985588, 'dON1': 0.012855689325130246, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.012855689325130246, 'nTON': 1, 'dON': 0.012855689325130246, 'dxOFFAngle': 76.05402496957359, 'dOFF1': 0.4899253823519997, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.4899253823519997, 'nTOFF': 1, 'dOFF': 0.4899253823519997, 'SUCCESS': True}
10:10:40,802 root DEBUG 

=================== Experiment ID #208 	 Dual Point ID: 210 ===================
10:10:40,814 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.665E-08|<1.000E-06)
10:10:40,815 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:41,140 root DEBUG Side: ON	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.211E-01 	 Total distance: 7.211E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([132], dtype=int64), array([[False]])]] 	 class: [1 8]
10:10:41,429 root DEBUG Side: OFF	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.028E-01 	 Total distance: 3.028E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([180], dtype=int64), array([[False]])]] 	 class: [0 8]
10:10:41,429 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:41,429 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -40.85 	 cIDON = [1 8], cIDOFF = [0 8]
10:10:41,429 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:41,429 root DEBUG dOFF/dON = 0.4
10:10:41,430 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.6711528881304, 'dON1': 0.721148202860831, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 0.721148202860831, 'nTON': 1, 'dON': 0.721148202860831, 'dxOFFAngle': 87.85480080468469, 'dOFF1': 0.3028181462049784, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.3028181462049784, 'nTOFF': 1, 'dOFF': 0.3028181462049784, 'SUCCESS': False}
10:10:41,441 root DEBUG 

=================== Experiment ID #209 	 Dual Point ID: 211 ===================
10:10:41,453 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.020E-09|<1.000E-06)
10:10:41,453 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:41,714 root DEBUG Side: ON	 Angle(dx0, dx): 3.98 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.762E-02 	 Total distance: 2.762E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([63], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:42,68 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.859E-02 	 Total distance: 7.859E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([52], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:42,206 root DEBUG Side: OFF	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.063E-02 	 Total distance: 1.092E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([226], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:42,206 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:42,206 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 59.63 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:42,206 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:42,207 root DEBUG dOFF/dON = 4.0
10:10:42,207 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.94774699301493, 'dON1': 0.027617657918383557, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.027617657918383557, 'nTON': 1, 'dON': 0.027617657918383557, 'dxOFFAngle': 88.50510140775678, 'dOFF1': 0.1092213278081723, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.1092213278081723, 'nTOFF': 1, 'dOFF': 0.1092213278081723, 'SUCCESS': True}
10:10:42,218 root DEBUG 

=================== Experiment ID #210 	 Dual Point ID: 212 ===================
10:10:42,224 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.171E-09|<1.000E-06)
10:10:42,224 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:42,483 root DEBUG Side: ON	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.232E-02 	 Total distance: 1.232E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([30], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:10:42,719 root DEBUG Side: OFF	 Angle(dx0, dx): 3.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.794E-06 	 Total distance: 1.794E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:10:42,719 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:42,719 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.97 	 cIDON = [0 8], cIDOFF = [1 8]
10:10:42,719 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:42,719 root DEBUG dOFF/dON = 0.0
10:10:42,720 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.22316013447917, 'dON1': 0.012323329547709915, 'cIDON1': array([0, 8], dtype=int64), 'dON_patch_1': 0.012323329547709915, 'nTON': 1, 'dON': 0.012323329547709915, 'dxOFFAngle': 86.83299758765489, 'dOFF1': 1.7943628734513062e-06, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 1.7943628734513062e-06, 'nTOFF': 1, 'dOFF': 1.7943628734513062e-06, 'SUCCESS': False}
10:10:42,729 root DEBUG 

=================== Experiment ID #211 	 Dual Point ID: 213 ===================
10:10:42,740 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.924E-08|<1.000E-06)
10:10:42,741 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:42,994 root DEBUG Side: ON	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.213E-02 	 Total distance: 4.213E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([138], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:10:43,200 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.350E-02 	 Total distance: 4.350E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([31], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:10:43,346 root DEBUG Side: OFF	 Angle(dx0, dx): 1.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.447E-02 	 Total distance: 1.080E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([232], dtype=int64), array([[False]])]] 	 class: [6 9]
10:10:43,346 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:43,347 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 43.87 	 cIDON = [6 9], cIDOFF = [6 9]
10:10:43,347 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:43,347 root DEBUG dOFF/dON = 2.6
10:10:43,347 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.40996308638712, 'dON1': 0.04213009876008921, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.04213009876008921, 'nTON': 1, 'dON': 0.04213009876008921, 'dxOFFAngle': 88.1638568172615, 'dOFF1': 0.10797302097726971, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.10797302097726971, 'nTOFF': 1, 'dOFF': 0.10797302097726971, 'SUCCESS': True}
10:10:43,355 root DEBUG 

=================== Experiment ID #212 	 Dual Point ID: 214 ===================
10:10:43,362 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.719E-09|<1.000E-06)
10:10:43,363 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:43,694 root DEBUG Side: ON	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.924E-02 	 Total distance: 4.924E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([204], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:44,17 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.927E-02 	 Total distance: 5.927E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([108], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:44,17 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:44,17 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 9.24 	 cIDON = [5 7], cIDOFF = [5 7]
10:10:44,17 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:44,17 root DEBUG dOFF/dON = 1.2
10:10:44,17 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.28979794315809, 'dON1': 0.04924048910978345, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.04924048910978345, 'nTON': 1, 'dON': 0.04924048910978345, 'dxOFFAngle': 88.23199861313368, 'dOFF1': 0.05927089910405604, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.05927089910405604, 'nTOFF': 1, 'dOFF': 0.05927089910405604, 'SUCCESS': True}
10:10:44,29 root DEBUG 

=================== Experiment ID #213 	 Dual Point ID: 215 ===================
10:10:44,36 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.652E-09|<1.000E-06)
10:10:44,36 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:44,357 root DEBUG Side: ON	 Angle(dx0, dx): 0.98 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.230E-01 	 Total distance: 3.230E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([180], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:44,644 root DEBUG Side: OFF	 Angle(dx0, dx): 2.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.425E-01 	 Total distance: 1.425E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([42], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:44,644 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:44,644 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -38.76 	 cIDON = [2 6], cIDOFF = [2 6]
10:10:44,644 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:44,644 root DEBUG dOFF/dON = 0.4
10:10:44,645 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.04569267845147, 'dON1': 0.32297757054250953, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.32297757054250953, 'nTON': 1, 'dON': 0.32297757054250953, 'dxOFFAngle': 83.5764647211678, 'dOFF1': 0.14253061564873445, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.14253061564873445, 'nTOFF': 1, 'dOFF': 0.14253061564873445, 'SUCCESS': False}
10:10:44,657 root DEBUG 

=================== Experiment ID #214 	 Dual Point ID: 216 ===================
10:10:44,669 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.491E-08|<1.000E-06)
10:10:44,669 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:44,988 root DEBUG Side: ON	 Angle(dx0, dx): 0.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.407E-02 	 Total distance: 3.407E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([59], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:10:45,295 root DEBUG Side: OFF	 Angle(dx0, dx): 3.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.870E-03 	 Total distance: 2.870E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([8], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:10:45,295 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:45,295 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -84.46 	 cIDON = [4 6], cIDOFF = [4 6]
10:10:45,295 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:45,296 root DEBUG dOFF/dON = 0.1
10:10:45,296 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.33315318375953, 'dON1': 0.03407116119617853, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.03407116119617853, 'nTON': 1, 'dON': 0.03407116119617853, 'dxOFFAngle': 86.61554269339155, 'dOFF1': 0.0028698095560271203, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.0028698095560271203, 'nTOFF': 1, 'dOFF': 0.0028698095560271203, 'SUCCESS': False}
10:10:45,308 root DEBUG 

=================== Experiment ID #215 	 Dual Point ID: 217 ===================
10:10:45,320 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.322E-08|<1.000E-06)
10:10:45,320 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:45,566 root DEBUG Side: ON	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.797E-02 	 Total distance: 7.797E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([5], dtype=int64), array([[False]])]] 	 class: [5 6]
10:10:45,827 root DEBUG Side: OFF	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.534E-02 	 Total distance: 2.534E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([56], dtype=int64), array([[False]])]] 	 class: [5 6]
10:10:46,57 root DEBUG Side: OFF	 Angle(dx0, dx): 1.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.348E-01 	 Total distance: 2.602E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([24], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:10:46,57 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:46,57 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 53.89 	 cIDON = [5 6], cIDOFF = [5 6]
10:10:46,57 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:46,57 root DEBUG dOFF/dON = 3.3
10:10:46,57 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.62370265179366, 'dON1': 0.07796678928163389, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.07796678928163389, 'nTON': 1, 'dON': 0.07796678928163389, 'dxOFFAngle': 88.10564094042279, 'dOFF1': 0.2601811255706466, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.2601811255706466, 'nTOFF': 1, 'dOFF': 0.2601811255706466, 'SUCCESS': True}
10:10:46,306 matplotlib.pyplot DEBUG Loaded backend tkagg version 8.6.
10:10:46,390 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:46,391 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:46,391 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:46,391 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:46,391 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 1189
10:10:46,400 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:46,401 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:46,401 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:46,401 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:46,401 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 2994
10:10:46,441 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:46,442 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:46,442 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:46,442 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:46,442 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 696
10:10:46,446 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:46,447 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:46,447 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:46,447 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:46,447 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 526
10:10:46,451 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:46,451 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:46,451 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:46,451 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:46,451 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 499
10:10:46,456 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:46,456 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:46,456 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:46,456 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:46,456 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 673
10:10:46,460 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:46,460 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:46,461 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:46,461 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:46,461 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 922
10:10:46,465 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:46,467 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:46,467 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:46,467 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:46,467 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 568
10:10:46,472 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:10:46,472 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:10:46,472 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:10:46,472 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:10:46,472 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 626
10:10:46,481 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
10:10:46,481 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,481 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,482 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:10:46,482 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:10:46,482 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,482 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,482 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,482 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,482 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,482 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,482 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,482 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,482 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:10:46,482 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,483 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,483 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,483 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,483 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,483 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,483 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,483 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,483 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,483 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,483 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,483 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,483 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,484 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,484 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,484 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,484 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,484 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,484 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,484 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,484 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,484 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,484 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:10:46,484 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,484 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,484 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,484 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:10:46,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:46,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:10:46,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:10:46,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:46,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:10:46,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:46,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:10:46,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:46,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,491 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,491 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,491 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,491 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,491 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,491 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:46,491 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:46,491 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,491 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:10:46,491 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,491 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,491 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,491 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,491 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,492 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,492 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,492 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,492 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,492 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,492 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,492 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,492 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:46,492 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,492 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,492 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,492 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,492 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,492 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,493 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,493 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,493 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:10:46,493 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:46,493 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,493 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,493 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,493 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,493 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,493 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,493 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,493 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,493 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,494 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,494 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,494 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:46,494 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,494 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:10:46,494 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:10:46,494 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,494 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,494 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:46,494 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,494 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,495 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,495 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,495 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:46,495 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,495 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,495 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,495 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,495 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,495 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,495 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,495 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,495 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,495 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:46,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:46,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:10:46,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:46,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:46,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:10:46,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:46,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:46,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:46,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:10:46,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:46,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:46,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:10:46,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:10:46,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:10:46,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:46,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:46,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:46,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:10:46,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:46,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:46,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:10:46,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:10:46,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:46,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,507 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,508 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:10:46,508 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,508 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,508 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,508 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,508 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:10:46,508 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,508 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:10:46,508 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:10:46,508 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,508 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,508 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,508 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,508 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,508 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,509 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,510 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:46,510 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,510 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,510 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,510 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,510 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,510 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:46,510 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,510 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,511 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,511 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:10:46,511 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,511 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,511 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,511 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,511 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,511 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,511 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,511 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,511 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:46,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,512 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,513 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,513 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,513 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,513 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,513 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,513 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:46,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:10:46,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:46,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:46,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,514 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,515 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,515 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
10:10:46,663 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
10:10:46,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:10:46,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:10:46,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:10:46,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:10:46,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:10:46,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:46,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:10:46,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:10:46,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:46,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:10:46,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:46,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:10:46,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,673 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,673 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,673 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,673 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,673 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,673 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,673 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,673 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:46,673 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,674 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,674 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,674 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,674 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,674 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,674 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,674 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,674 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,674 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,674 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,674 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,675 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,675 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,675 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,675 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,675 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,675 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,675 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,675 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,675 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,675 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,675 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,676 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,676 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,676 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,676 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,676 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,676 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,676 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,676 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,676 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,676 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,676 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,676 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:46,677 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:46,677 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,677 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:10:46,677 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,677 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,677 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,677 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,677 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,677 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,677 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,677 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,677 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,678 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,678 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,678 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,678 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:46,678 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,678 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,678 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,678 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,678 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,678 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,678 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,678 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,679 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:10:46,679 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:46,679 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,679 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,679 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,679 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,679 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,679 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,679 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,679 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,679 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,679 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,679 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,680 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:46,680 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,680 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:10:46,680 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:10:46,680 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,680 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,680 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:46,680 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,680 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,680 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,680 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,680 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:46,681 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,681 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,681 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,681 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,681 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,681 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,681 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,681 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,681 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,681 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:46,681 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,681 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:46,682 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,682 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,682 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,682 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,682 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,682 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,682 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,682 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,682 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,682 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,682 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,682 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:10:46,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:46,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,683 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:46,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:10:46,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:46,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:46,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:46,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,684 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:10:46,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:46,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:46,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:10:46,685 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,686 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:10:46,686 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,686 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:10:46,686 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,686 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:46,686 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,686 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,686 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,686 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,686 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:46,686 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,686 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,686 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,686 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,686 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,686 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:46,686 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,686 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,686 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,686 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,686 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,687 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,687 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,687 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,687 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,687 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,687 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,687 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,687 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,687 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,687 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,687 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,687 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,688 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,688 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,688 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,688 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,688 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,688 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,688 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,688 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,688 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,688 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:10:46,688 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,688 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,688 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,689 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,689 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,689 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,689 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,689 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,689 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,689 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,689 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,689 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,689 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,689 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,689 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,689 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,689 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,690 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,690 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,690 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,690 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:46,690 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,690 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,690 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,690 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,690 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,690 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,690 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,690 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,690 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,690 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,690 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,690 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,690 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,690 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:46,690 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:10:46,692 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,692 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,692 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,692 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,692 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,692 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,692 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,692 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,692 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,692 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,692 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,692 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:10:46,692 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,692 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,693 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,693 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,693 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:46,693 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,693 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,693 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,693 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,693 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,693 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,694 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,694 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,694 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,694 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,694 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,694 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,694 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,694 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,694 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,695 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:10:46,695 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,695 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,695 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,695 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,695 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:10:46,695 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,695 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:10:46,695 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:10:46,695 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,695 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,696 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,696 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,696 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,696 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,696 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,696 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,696 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,696 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,696 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,696 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,696 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,696 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,697 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,697 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,697 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,697 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,697 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:46,697 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,697 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,697 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,698 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,698 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,698 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:46,698 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,698 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,698 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,698 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:10:46,698 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,698 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,698 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,698 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,699 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,699 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,699 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,699 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,699 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,699 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,699 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,699 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,699 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,699 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,699 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,699 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:46,700 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,700 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,700 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,700 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,700 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,700 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,700 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,700 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,700 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,700 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:46,700 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,700 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,700 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,701 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:10:46,701 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,701 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,701 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:46,701 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,701 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,701 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,701 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:46,701 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,701 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,701 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,702 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,702 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
10:10:46,866 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0.
10:10:46,867 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,867 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,867 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:10:46,867 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:10:46,867 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,867 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,868 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,868 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,868 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,868 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,868 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,868 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,868 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:10:46,868 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,868 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,868 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,868 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,868 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,868 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,868 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,869 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,869 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,869 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,869 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,869 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,869 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,869 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,869 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,869 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,869 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,869 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,870 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,870 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,870 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,870 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,870 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:10:46,870 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,870 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,871 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,871 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,871 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,871 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,871 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,871 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,871 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:10:46,871 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,871 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,871 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,872 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,872 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,872 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,873 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:46,873 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,873 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,873 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:10:46,874 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,874 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,874 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,874 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,874 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:10:46,875 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,875 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,875 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,875 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,875 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,875 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,875 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,875 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,875 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,875 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,875 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,876 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,876 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,876 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,876 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,876 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,876 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,876 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:46,876 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,877 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,877 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:10:46,877 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,877 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,877 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,877 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,877 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,877 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,878 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,878 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,878 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:46,878 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,878 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,878 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,879 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:10:46,879 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,879 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,879 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,879 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,879 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,879 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,880 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,880 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,880 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,880 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,880 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,880 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:46,880 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,880 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,880 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,880 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,881 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,881 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,881 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,881 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,881 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,881 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,881 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,881 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,882 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,882 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,882 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,882 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,882 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,882 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,882 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,882 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,882 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,882 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,883 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,883 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,883 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,883 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,883 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,883 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,883 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,883 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,883 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,884 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,884 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,884 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,884 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:46,884 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:46,884 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,884 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:10:46,884 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,884 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,885 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,885 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,885 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,885 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,885 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,885 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,885 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,885 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,885 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:46,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,887 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,887 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:10:46,887 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:46,887 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,887 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,887 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,887 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,888 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,888 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,888 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,888 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,888 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,888 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,888 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,889 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:46,889 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,889 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:10:46,889 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:10:46,890 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,890 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,890 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:46,890 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,890 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,890 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,892 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,892 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:46,892 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,892 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,892 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,892 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,892 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,893 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,893 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,893 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,893 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,893 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:46,893 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,893 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:46,893 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,893 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,895 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,895 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,895 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,895 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:10:46,895 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,895 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,895 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,895 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,895 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,895 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,895 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,895 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:46,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:46,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:10:46,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:46,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:46,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:10:46,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:10:46,898 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,898 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,898 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,898 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,898 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,898 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,898 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:46,898 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,898 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,898 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,898 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,898 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,898 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,898 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,898 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:46,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:10:46,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:10:46,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:10:46,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:10:46,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,900 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:46,900 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,900 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,900 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,900 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,900 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,900 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:46,900 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,900 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,900 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,900 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,900 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,900 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,901 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,901 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,901 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,901 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,901 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,901 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,901 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,901 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,901 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,902 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,902 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,902 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,902 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,902 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,902 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,902 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,902 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,902 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,902 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,902 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,902 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:10:46,902 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,903 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,903 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,903 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,903 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,903 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,903 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,903 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,903 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,903 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,903 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,904 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,904 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,904 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,904 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,904 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,904 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,904 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,904 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,904 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,904 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:46,905 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,905 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,905 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,905 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,905 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,905 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,905 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,905 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,905 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,905 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,905 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:46,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:10:46,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,906 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:10:46,907 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:46,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,908 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,909 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:10:46,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:10:46,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:10:46,910 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:10:46,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,911 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:10:46,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:10:46,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:10:46,912 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:10:46,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:10:46,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,913 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,914 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:10:46,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:10:46,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,915 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:10:46,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:10:46,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:46,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:10:46,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:10:46,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:10:46,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,916 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,917 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:10:46,917 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
