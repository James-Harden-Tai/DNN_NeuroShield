10:08:00,618 root DEBUG Check that model weights are dtype tf.float64: 	 <dtype: 'float64'>
10:08:00,619 root INFO eps: 1e-06
10:08:00,619 root INFO tol: 1e-06
10:08:00,619 root DEBUG Load dual points from file: ../data/dual_points_cifar10_3x256_64_10_float64.
10:08:00,630 root DEBUG 

=================== Experiment ID #0 	 Dual Point ID: 1 ===================
10:08:00,637 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.562E-08|<1.000E-06)
10:08:00,637 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:00,929 root DEBUG Side: ON	 Angle(dx0, dx): 6.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.473E-03 	 Total distance: 3.473E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([3, 9], dtype=int64), array([[0.],
       [1.]])]] 	 class: [5 9]
10:08:01,319 root DEBUG Side: OFF	 Angle(dx0, dx): 1.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.511E-02 	 Total distance: 1.511E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([3, 9], dtype=int64), array([[0.],
       [1.]])]] 	 class: [5 9]
10:08:01,319 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:01,320 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 62.63 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:01,320 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:01,320 root DEBUG dOFF/dON = 4.4
10:08:01,320 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.27346044323342, 'dON1': 0.003472660514784608, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.003472660514784608, 'nTON': 1, 'dON': 0.003472660514784608, 'dxOFFAngle': 89.07280304219127, 'dOFF1': 0.01511319818509415, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.01511319818509415, 'nTOFF': 1, 'dOFF': 0.01511319818509415, 'SUCCESS': True}
10:08:01,333 root DEBUG 

=================== Experiment ID #1 	 Dual Point ID: 2 ===================
10:08:01,341 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.163E-07|<1.000E-06)
10:08:01,341 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:01,706 root DEBUG Side: ON	 Angle(dx0, dx): 1.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.040E-02 	 Total distance: 7.040E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([188], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:01,967 root DEBUG Side: ON	 Angle(dx0, dx): 2.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.918E-02 	 Total distance: 1.596E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([94], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:02,317 root DEBUG Side: OFF	 Angle(dx0, dx): 1.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.241E-02 	 Total distance: 6.241E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([117], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:02,582 root DEBUG Side: OFF	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.537E-02 	 Total distance: 1.178E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([8], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:02,582 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:02,582 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -15.07 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:02,582 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:02,582 root DEBUG dOFF/dON = 0.7
10:08:02,582 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 79.36264503741259, 'dON1': 0.15958363709776435, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.15958363709776435, 'nTON': 1, 'dON': 0.15958363709776435, 'dxOFFAngle': 84.96192884523374, 'dOFF1': 0.11778721314064611, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.11778721314064611, 'nTOFF': 1, 'dOFF': 0.11778721314064611, 'SUCCESS': False}
10:08:02,589 root DEBUG 

=================== Experiment ID #2 	 Dual Point ID: 3 ===================
10:08:02,599 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.954E-07|<1.000E-06)
10:08:02,599 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:02,907 root DEBUG Side: ON	 Angle(dx0, dx): 3.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.784E-02 	 Total distance: 1.784E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([190], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:08:03,181 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.525E-02 	 Total distance: 5.525E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([21], dtype=int64), array([[False]])]] 	 class: [0 8]
10:08:03,181 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:03,181 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 51.17 	 cIDON = [1 8], cIDOFF = [0 8]
10:08:03,181 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:03,181 root DEBUG dOFF/dON = 3.1
10:08:03,181 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 66.89369221852853, 'dON1': 0.017844203249466613, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 0.017844203249466613, 'nTON': 1, 'dON': 0.017844203249466613, 'dxOFFAngle': 82.79148518725073, 'dOFF1': 0.055249846916361374, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.055249846916361374, 'nTOFF': 1, 'dOFF': 0.055249846916361374, 'SUCCESS': True}
10:08:03,191 root DEBUG 

=================== Experiment ID #3 	 Dual Point ID: 4 ===================
10:08:03,207 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.182E-08|<1.000E-06)
10:08:03,208 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:03,546 root DEBUG Side: ON	 Angle(dx0, dx): 0.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.869E-01 	 Total distance: 1.869E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([48], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:08:03,851 root DEBUG Side: OFF	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.658E-02 	 Total distance: 1.658E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([12], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:08:03,851 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:03,851 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -83.71 	 cIDON = [2 4], cIDOFF = [2 4]
10:08:03,851 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:03,851 root DEBUG dOFF/dON = 0.1
10:08:03,851 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.13037421826331, 'dON1': 0.18693685883985503, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.18693685883985503, 'nTON': 1, 'dON': 0.18693685883985503, 'dxOFFAngle': 87.92406132454059, 'dOFF1': 0.016575645052367406, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.016575645052367406, 'nTOFF': 1, 'dOFF': 0.016575645052367406, 'SUCCESS': False}
10:08:03,861 root DEBUG 

=================== Experiment ID #4 	 Dual Point ID: 5 ===================
10:08:03,869 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.150E-08|<1.000E-06)
10:08:03,869 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:04,161 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.153E-02 	 Total distance: 5.153E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([93], dtype=int64), array([[False]])]] 	 class: [3 4]
10:08:04,314 root DEBUG Side: ON	 Angle(dx0, dx): 3.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.350E-03 	 Total distance: 5.788E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([22], dtype=int64), array([[False]])]] 	 class: [3 4]
10:08:04,693 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.459E-02 	 Total distance: 5.459E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([92], dtype=int64), array([[False]])]] 	 class: [3 4]
10:08:04,693 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:04,693 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -2.92 	 cIDON = [3 4], cIDOFF = [3 4]
10:08:04,694 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:04,694 root DEBUG dOFF/dON = 0.9
10:08:04,694 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.71926315927193, 'dON1': 0.057876908734331635, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.057876908734331635, 'nTON': 1, 'dON': 0.057876908734331635, 'dxOFFAngle': 86.28770293659902, 'dOFF1': 0.05459163452733625, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.05459163452733625, 'nTOFF': 1, 'dOFF': 0.05459163452733625, 'SUCCESS': False}
10:08:04,707 root DEBUG 

=================== Experiment ID #5 	 Dual Point ID: 6 ===================
10:08:04,719 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.335E-07|<1.000E-06)
10:08:04,719 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:04,988 root DEBUG Side: ON	 Angle(dx0, dx): 6.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.724E-03 	 Total distance: 7.724E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([125], dtype=int64), array([[False]])]] 	 class: [3 8]
10:08:05,358 root DEBUG Side: OFF	 Angle(dx0, dx): 0.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.967E-02 	 Total distance: 2.967E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([113], dtype=int64), array([[False]])]] 	 class: [3 8]
10:08:05,358 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:05,358 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 58.69 	 cIDON = [3 8], cIDOFF = [3 8]
10:08:05,359 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:05,359 root DEBUG dOFF/dON = 3.8
10:08:05,359 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 64.63986977489353, 'dON1': 0.007723930757955449, 'cIDON1': array([3, 8], dtype=int64), 'dON_patch_1': 0.007723930757955449, 'nTON': 1, 'dON': 0.007723930757955449, 'dxOFFAngle': 80.04699283637034, 'dOFF1': 0.029669003876894688, 'cIDOFF1': array([3, 8], dtype=int64), 'dOFF_patch_1': 0.029669003876894688, 'nTOFF': 1, 'dOFF': 0.029669003876894688, 'SUCCESS': True}
10:08:05,368 root DEBUG 

=================== Experiment ID #6 	 Dual Point ID: 7 ===================
10:08:05,384 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.886E-07|<1.000E-06)
10:08:05,384 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:05,808 root DEBUG Side: ON	 Angle(dx0, dx): 4.87 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.730E-02 	 Total distance: 2.730E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([113], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:06,179 root DEBUG Side: OFF	 Angle(dx0, dx): 0.96 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.369E-02 	 Total distance: 1.369E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([217], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:06,179 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:06,179 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -33.22 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:06,179 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:06,180 root DEBUG dOFF/dON = 0.5
10:08:06,180 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.89866968678957, 'dON1': 0.02730040788254321, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.02730040788254321, 'nTON': 1, 'dON': 0.02730040788254321, 'dxOFFAngle': 89.62450323117501, 'dOFF1': 0.01368631552223285, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.01368631552223285, 'nTOFF': 1, 'dOFF': 0.01368631552223285, 'SUCCESS': False}
10:08:06,190 root DEBUG 

=================== Experiment ID #7 	 Dual Point ID: 8 ===================
10:08:06,202 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.112E-07|<1.000E-06)
10:08:06,203 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:06,587 root DEBUG Side: ON	 Angle(dx0, dx): 1.86 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.048E-01 	 Total distance: 1.048E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([91], dtype=int64), array([[False]])]] 	 class: [5 6]
10:08:06,825 root DEBUG Side: ON	 Angle(dx0, dx): 2.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.358E-02 	 Total distance: 1.984E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([13], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:08:07,158 root DEBUG Side: OFF	 Angle(dx0, dx): 0.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.744E-02 	 Total distance: 3.744E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([44], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:08:07,159 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:07,159 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -68.25 	 cIDON = [5 6], cIDOFF = [5 6]
10:08:07,159 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:07,159 root DEBUG dOFF/dON = 0.2
10:08:07,159 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 77.52062646563606, 'dON1': 0.19840462479487647, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.19840462479487647, 'nTON': 1, 'dON': 0.19840462479487647, 'dxOFFAngle': 86.34996056525301, 'dOFF1': 0.03743983684124172, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.03743983684124172, 'nTOFF': 1, 'dOFF': 0.03743983684124172, 'SUCCESS': False}
10:08:07,172 root DEBUG 

=================== Experiment ID #8 	 Dual Point ID: 9 ===================
10:08:07,182 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.353E-07|<1.000E-06)
10:08:07,182 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:07,559 root DEBUG Side: ON	 Angle(dx0, dx): 3.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.216E-02 	 Total distance: 1.216E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([178], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:07,893 root DEBUG Side: OFF	 Angle(dx0, dx): 1.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.837E-02 	 Total distance: 4.837E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([188], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:08,69 root DEBUG Side: OFF	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.189E-02 	 Total distance: 1.103E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([164], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:08,69 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:08,69 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 80.14 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:08,70 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:08,70 root DEBUG dOFF/dON = 9.1
10:08:08,70 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.32299648763471, 'dON1': 0.012159099686543735, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.012159099686543735, 'nTON': 1, 'dON': 0.012159099686543735, 'dxOFFAngle': 89.31096791610618, 'dOFF1': 0.11025940675183701, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.11025940675183701, 'nTOFF': 1, 'dOFF': 0.11025940675183701, 'SUCCESS': True}
10:08:08,80 root DEBUG 

=================== Experiment ID #9 	 Dual Point ID: 10 ===================
10:08:08,94 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.909E-07|<1.000E-06)
10:08:08,94 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:08,327 root DEBUG Side: ON	 Angle(dx0, dx): 0.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.904E-02 	 Total distance: 2.904E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([32], dtype=int64), array([[False]])]] 	 class: [3 9]
10:08:08,664 root DEBUG Side: OFF	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.259E-02 	 Total distance: 6.259E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([197], dtype=int64), array([[False]])]] 	 class: [3 9]
10:08:08,664 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:08,664 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 36.61 	 cIDON = [3 9], cIDOFF = [3 9]
10:08:08,664 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:08,664 root DEBUG dOFF/dON = 2.2
10:08:08,664 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.21217435290413, 'dON1': 0.029042812173852618, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.029042812173852618, 'nTON': 1, 'dON': 0.029042812173852618, 'dxOFFAngle': 89.05032653735451, 'dOFF1': 0.06258637408847784, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.06258637408847784, 'nTOFF': 1, 'dOFF': 0.06258637408847784, 'SUCCESS': True}
10:08:08,673 root DEBUG 

=================== Experiment ID #10 	 Dual Point ID: 11 ===================
10:08:08,684 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.031E-07|<1.000E-06)
10:08:08,684 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:09,135 root DEBUG Side: ON	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.983E-02 	 Total distance: 5.983E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([19], dtype=int64), array([[ True]])]] 	 class: [0 2]
10:08:09,427 root DEBUG Side: OFF	 Angle(dx0, dx): 2.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.068E-02 	 Total distance: 5.068E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([58], dtype=int64), array([[ True]])]] 	 class: [1 2]
10:08:09,427 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:09,427 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -8.28 	 cIDON = [0 2], cIDOFF = [1 2]
10:08:09,427 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:09,427 root DEBUG dOFF/dON = 0.8
10:08:09,427 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.73778596122436, 'dON1': 0.059829513472314945, 'cIDON1': array([0, 2], dtype=int64), 'dON_patch_1': 0.059829513472314945, 'nTON': 1, 'dON': 0.059829513472314945, 'dxOFFAngle': 87.25129503597132, 'dOFF1': 0.05068040435239082, 'cIDOFF1': array([1, 2], dtype=int64), 'dOFF_patch_1': 0.05068040435239082, 'nTOFF': 1, 'dOFF': 0.05068040435239082, 'SUCCESS': False}
10:08:09,436 root DEBUG 

=================== Experiment ID #11 	 Dual Point ID: 12 ===================
10:08:09,451 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.230E-07|<1.000E-06)
10:08:09,452 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:09,880 root DEBUG Side: ON	 Angle(dx0, dx): 0.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.421E-02 	 Total distance: 2.421E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([166], dtype=int64), array([[ True]])]] 	 class: [6 8]
10:08:10,229 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.725E-01 	 Total distance: 1.725E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([166], dtype=int64), array([[ True]])]] 	 class: [6 8]
10:08:10,229 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:10,230 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 75.39 	 cIDON = [6 8], cIDOFF = [6 8]
10:08:10,230 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:10,230 root DEBUG dOFF/dON = 7.1
10:08:10,230 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.18738166169611, 'dON1': 0.02420874599300038, 'cIDON1': array([6, 8], dtype=int64), 'dON_patch_1': 0.02420874599300038, 'nTON': 1, 'dON': 0.02420874599300038, 'dxOFFAngle': 88.28374240158637, 'dOFF1': 0.17249434676180345, 'cIDOFF1': array([6, 8], dtype=int64), 'dOFF_patch_1': 0.17249434676180345, 'nTOFF': 1, 'dOFF': 0.17249434676180345, 'SUCCESS': True}
10:08:10,245 root DEBUG 

=================== Experiment ID #12 	 Dual Point ID: 13 ===================
10:08:10,256 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.713E-08|<1.000E-06)
10:08:10,256 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:10,607 root DEBUG Side: ON	 Angle(dx0, dx): 1.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.137E-02 	 Total distance: 8.137E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([77], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:10,967 root DEBUG Side: OFF	 Angle(dx0, dx): 0.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.916E-01 	 Total distance: 2.916E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([30], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:10,967 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:10,969 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 56.37 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:10,969 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:10,969 root DEBUG dOFF/dON = 3.6
10:08:10,969 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.70799017815014, 'dON1': 0.08137237245283818, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.08137237245283818, 'nTON': 1, 'dON': 0.08137237245283818, 'dxOFFAngle': 89.4628263452988, 'dOFF1': 0.29163043354058993, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.29163043354058993, 'nTOFF': 1, 'dOFF': 0.29163043354058993, 'SUCCESS': True}
10:08:10,976 root DEBUG 

=================== Experiment ID #13 	 Dual Point ID: 14 ===================
10:08:10,989 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.616E-08|<1.000E-06)
10:08:10,989 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:11,300 root DEBUG Side: ON	 Angle(dx0, dx): 5.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.009E-02 	 Total distance: 3.009E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([58], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:11,668 root DEBUG Side: OFF	 Angle(dx0, dx): 0.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.533E-01 	 Total distance: 3.533E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([113], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:11,668 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:11,668 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 84.30 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:11,669 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:11,669 root DEBUG dOFF/dON = 11.7
10:08:11,669 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.54698421743656, 'dON1': 0.030090083981644408, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.030090083981644408, 'nTON': 1, 'dON': 0.030090083981644408, 'dxOFFAngle': 87.15639509627071, 'dOFF1': 0.35331709660433974, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.35331709660433974, 'nTOFF': 1, 'dOFF': 0.35331709660433974, 'SUCCESS': True}
10:08:11,679 root DEBUG 

=================== Experiment ID #14 	 Dual Point ID: 15 ===================
10:08:11,688 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.506E-09|<1.000E-06)
10:08:11,688 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:12,70 root DEBUG Side: ON	 Angle(dx0, dx): 1.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.764E-01 	 Total distance: 1.764E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([113], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:08:12,309 root DEBUG Side: OFF	 Angle(dx0, dx): 3.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.267E-03 	 Total distance: 7.267E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([106], dtype=int64), array([[False]])]] 	 class: [4 7]
10:08:12,467 root DEBUG Side: OFF	 Angle(dx0, dx): 2.96 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.249E-02 	 Total distance: 1.976E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([15], dtype=int64), array([[False]])]] 	 class: [4 7]
10:08:12,468 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:12,468 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -79.86 	 cIDON = [4 7], cIDOFF = [4 7]
10:08:12,468 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:12,468 root DEBUG dOFF/dON = 0.1
10:08:12,468 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 65.25014291440291, 'dON1': 0.17643543440780485, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.17643543440780485, 'nTON': 1, 'dON': 0.17643543440780485, 'dxOFFAngle': 80.12114020873345, 'dOFF1': 0.019760134688454202, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.019760134688454202, 'nTOFF': 1, 'dOFF': 0.019760134688454202, 'SUCCESS': False}
10:08:12,478 root DEBUG 

=================== Experiment ID #15 	 Dual Point ID: 16 ===================
10:08:12,487 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.391E-07|<1.000E-06)
10:08:12,487 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:12,817 root DEBUG Side: ON	 Angle(dx0, dx): 2.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.491E-02 	 Total distance: 1.491E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([79], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:08:13,146 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.672E-02 	 Total distance: 2.672E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([94], dtype=int64), array([[False]])]] 	 class: [2 6]
10:08:13,400 root DEBUG Side: OFF	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.044E-01 	 Total distance: 1.311E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([177], dtype=int64), array([[False]])]] 	 class: [2 6]
10:08:13,400 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:13,400 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 79.58 	 cIDON = [2 6], cIDOFF = [2 6]
10:08:13,400 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:13,400 root DEBUG dOFF/dON = 8.8
10:08:13,400 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 76.97863064712129, 'dON1': 0.014905343413978372, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.014905343413978372, 'nTON': 1, 'dON': 0.014905343413978372, 'dxOFFAngle': 83.23072365682704, 'dOFF1': 0.13111596743823403, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.13111596743823403, 'nTOFF': 1, 'dOFF': 0.13111596743823403, 'SUCCESS': True}
10:08:13,406 root DEBUG 

=================== Experiment ID #16 	 Dual Point ID: 17 ===================
10:08:13,417 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.004E-07|<1.000E-06)
10:08:13,417 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:13,799 root DEBUG Side: ON	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.131E-02 	 Total distance: 7.131E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([81], dtype=int64), array([[False]])]] 	 class: [3 4]
10:08:14,191 root DEBUG Side: OFF	 Angle(dx0, dx): 0.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.931E-02 	 Total distance: 7.931E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([39], dtype=int64), array([[False]])]] 	 class: [3 4]
10:08:14,191 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:14,191 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 5.31 	 cIDON = [3 4], cIDOFF = [3 4]
10:08:14,193 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:14,193 root DEBUG dOFF/dON = 1.1
10:08:14,193 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 72.16399744261653, 'dON1': 0.07130791038252858, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.07130791038252858, 'nTON': 1, 'dON': 0.07130791038252858, 'dxOFFAngle': 81.65742348613198, 'dOFF1': 0.07931172592068289, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.07931172592068289, 'nTOFF': 1, 'dOFF': 0.07931172592068289, 'SUCCESS': True}
10:08:14,202 root DEBUG 

=================== Experiment ID #17 	 Dual Point ID: 18 ===================
10:08:14,210 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.122E-07|<1.000E-06)
10:08:14,210 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:14,587 root DEBUG Side: ON	 Angle(dx0, dx): 19.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.729E-02 	 Total distance: 4.729E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 8], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 8]
10:08:14,846 root DEBUG Side: OFF	 Angle(dx0, dx): 1.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.334E-01 	 Total distance: 2.334E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([84], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:14,846 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:14,847 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 66.31 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:14,847 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:14,847 root DEBUG dOFF/dON = 4.9
10:08:14,847 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.08414462701774, 'dON1': 0.04728778978248795, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.04728778978248795, 'nTON': 1, 'dON': 0.04728778978248795, 'dxOFFAngle': 86.44455422166492, 'dOFF1': 0.23341677718494558, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.23341677718494558, 'nTOFF': 1, 'dOFF': 0.23341677718494558, 'SUCCESS': True}
10:08:14,856 root DEBUG 

=================== Experiment ID #18 	 Dual Point ID: 19 ===================
10:08:14,863 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.674E-07|<1.000E-06)
10:08:14,864 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:15,201 root DEBUG Side: ON	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.513E-03 	 Total distance: 2.513E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([72], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:08:15,526 root DEBUG Side: OFF	 Angle(dx0, dx): 0.89 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.788E-01 	 Total distance: 1.788E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([35], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:08:15,808 root DEBUG Side: OFF	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.145E-02 	 Total distance: 1.903E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([61], dtype=int64), array([[False]])]] 	 class: [4 7]
10:08:15,809 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:15,809 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 97.39 	 cIDON = [4 7], cIDOFF = [4 7]
10:08:15,809 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:15,809 root DEBUG dOFF/dON = 75.7
10:08:15,809 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 79.94611829806205, 'dON1': 0.002513231195375212, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.002513231195375212, 'nTON': 1, 'dON': 0.002513231195375212, 'dxOFFAngle': 88.12640588827604, 'dOFF1': 0.19028966590301077, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.19028966590301077, 'nTOFF': 1, 'dOFF': 0.19028966590301077, 'SUCCESS': True}
10:08:15,815 root DEBUG 

=================== Experiment ID #19 	 Dual Point ID: 20 ===================
10:08:15,826 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.195E-07|<1.000E-06)
10:08:15,826 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:16,170 root DEBUG Side: ON	 Angle(dx0, dx): 0.79 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.344E-02 	 Total distance: 3.344E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([54], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:08:16,425 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.068E-02 	 Total distance: 1.068E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([86], dtype=int64), array([[False]])]] 	 class: [4 6]
10:08:16,425 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:16,425 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -51.59 	 cIDON = [4 6], cIDOFF = [4 6]
10:08:16,426 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:16,426 root DEBUG dOFF/dON = 0.3
10:08:16,426 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 79.9399970626663, 'dON1': 0.03344110893585385, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.03344110893585385, 'nTON': 1, 'dON': 0.03344110893585385, 'dxOFFAngle': 83.40301125591716, 'dOFF1': 0.01067798630663056, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.01067798630663056, 'nTOFF': 1, 'dOFF': 0.01067798630663056, 'SUCCESS': False}
10:08:16,436 root DEBUG 

=================== Experiment ID #20 	 Dual Point ID: 21 ===================
10:08:16,445 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.415E-08|<1.000E-06)
10:08:16,445 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:16,790 root DEBUG Side: ON	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.870E-02 	 Total distance: 2.870E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([74], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:08:17,145 root DEBUG Side: OFF	 Angle(dx0, dx): 0.97 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.400E-02 	 Total distance: 2.400E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([229], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:08:17,146 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:17,146 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -8.91 	 cIDON = [2 3], cIDOFF = [2 3]
10:08:17,146 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:17,146 root DEBUG dOFF/dON = 0.8
10:08:17,146 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 70.84667384580524, 'dON1': 0.028696670992910307, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.028696670992910307, 'nTON': 1, 'dON': 0.028696670992910307, 'dxOFFAngle': 84.35308076323244, 'dOFF1': 0.02399896265902789, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.02399896265902789, 'nTOFF': 1, 'dOFF': 0.02399896265902789, 'SUCCESS': False}
10:08:17,157 root DEBUG 

=================== Experiment ID #21 	 Dual Point ID: 22 ===================
10:08:17,169 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.658E-07|<1.000E-06)
10:08:17,169 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:17,477 root DEBUG Side: ON	 Angle(dx0, dx): 1.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.161E-02 	 Total distance: 2.161E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([170], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:17,806 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.734E-02 	 Total distance: 1.734E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([217], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:18,2 root DEBUG Side: OFF	 Angle(dx0, dx): 1.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.202E-01 	 Total distance: 4.376E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([26], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:18,202 root DEBUG Side: OFF	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.132E-01 	 Total distance: 5.508E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([72], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:18,202 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:18,202 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 92.45 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:18,202 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:18,203 root DEBUG dOFF/dON = 25.5
10:08:18,203 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.71156568039703, 'dON1': 0.021614062120261342, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.021614062120261342, 'nTON': 1, 'dON': 0.021614062120261342, 'dxOFFAngle': 83.29417506477992, 'dOFF1': 0.5507753299629028, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.5507753299629028, 'nTOFF': 1, 'dOFF': 0.5507753299629028, 'SUCCESS': True}
10:08:18,212 root DEBUG 

=================== Experiment ID #22 	 Dual Point ID: 23 ===================
10:08:18,220 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.586E-07|<1.000E-06)
10:08:18,220 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:18,675 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.680E-01 	 Total distance: 1.680E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([142], dtype=int64), array([[False]])]] 	 class: [1 4]
10:08:19,79 root DEBUG Side: OFF	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.136E-01 	 Total distance: 4.136E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([248], dtype=int64), array([[False]])]] 	 class: [0 4]
10:08:19,79 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:19,80 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 42.23 	 cIDON = [1 4], cIDOFF = [0 4]
10:08:19,80 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:19,80 root DEBUG dOFF/dON = 2.5
10:08:19,80 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.98154338475923, 'dON1': 0.16797864014010536, 'cIDON1': array([1, 4], dtype=int64), 'dON_patch_1': 0.16797864014010536, 'nTON': 1, 'dON': 0.16797864014010536, 'dxOFFAngle': 81.50384510514421, 'dOFF1': 0.41357452548684265, 'cIDOFF1': array([0, 4], dtype=int64), 'dOFF_patch_1': 0.41357452548684265, 'nTOFF': 1, 'dOFF': 0.41357452548684265, 'SUCCESS': True}
10:08:19,91 root DEBUG 

=================== Experiment ID #23 	 Dual Point ID: 24 ===================
10:08:19,99 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.619E-07|<1.000E-06)
10:08:19,99 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:19,473 root DEBUG Side: ON	 Angle(dx0, dx): 0.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.450E-03 	 Total distance: 9.450E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([85], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:19,726 root DEBUG Side: OFF	 Angle(dx0, dx): 0.73 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.214E-02 	 Total distance: 1.214E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([88], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:20,22 root DEBUG Side: OFF	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.206E-02 	 Total distance: 2.419E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([85], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:20,22 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:20,23 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 43.82 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:20,23 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:20,23 root DEBUG dOFF/dON = 2.6
10:08:20,23 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.19033175814977, 'dON1': 0.009449622849659566, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.009449622849659566, 'nTON': 1, 'dON': 0.009449622849659566, 'dxOFFAngle': 85.7834427509407, 'dOFF1': 0.02419275317945039, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.02419275317945039, 'nTOFF': 1, 'dOFF': 0.02419275317945039, 'SUCCESS': True}
10:08:20,39 root DEBUG 

=================== Experiment ID #24 	 Dual Point ID: 25 ===================
10:08:20,50 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.166E-10|<1.000E-06)
10:08:20,51 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:20,374 root DEBUG Side: ON	 Angle(dx0, dx): 1.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.306E-04 	 Total distance: 5.306E-04 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([27], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:20,681 root DEBUG Side: ON	 Angle(dx0, dx): 0.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.098E-02 	 Total distance: 1.151E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([101], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:20,991 root DEBUG Side: ON	 Angle(dx0, dx): 1.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.122E-02 	 Total distance: 2.273E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([149], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:21,346 root DEBUG Side: OFF	 Angle(dx0, dx): 1.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.545E-02 	 Total distance: 6.545E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([182], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:21,346 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:21,346 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 48.45 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:21,347 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:21,347 root DEBUG dOFF/dON = 2.9
10:08:21,347 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.39764607245083, 'dON1': 0.02272955690555963, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.02272955690555963, 'nTON': 1, 'dON': 0.02272955690555963, 'dxOFFAngle': 83.18929620686497, 'dOFF1': 0.06544776376537065, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.06544776376537065, 'nTOFF': 1, 'dOFF': 0.06544776376537065, 'SUCCESS': True}
10:08:21,357 root DEBUG 

=================== Experiment ID #25 	 Dual Point ID: 26 ===================
10:08:21,369 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.377E-07|<1.000E-06)
10:08:21,370 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:21,755 root DEBUG Side: ON	 Angle(dx0, dx): 1.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.127E-01 	 Total distance: 1.127E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([189], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:22,113 root DEBUG Side: OFF	 Angle(dx0, dx): 7.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.469E-02 	 Total distance: 4.469E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([33], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:22,113 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:22,113 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -43.22 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:22,114 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:22,114 root DEBUG dOFF/dON = 0.4
10:08:22,114 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 79.76718543480136, 'dON1': 0.11272597376074144, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.11272597376074144, 'nTON': 1, 'dON': 0.11272597376074144, 'dxOFFAngle': 84.56594466258149, 'dOFF1': 0.044694867917453175, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.044694867917453175, 'nTOFF': 1, 'dOFF': 0.044694867917453175, 'SUCCESS': False}
10:08:22,126 root DEBUG 

=================== Experiment ID #26 	 Dual Point ID: 27 ===================
10:08:22,137 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.983E-07|<1.000E-06)
10:08:22,138 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:22,565 root DEBUG Side: ON	 Angle(dx0, dx): 3.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.475E-02 	 Total distance: 3.475E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([216], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:22,958 root DEBUG Side: OFF	 Angle(dx0, dx): 2.97 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.467E-02 	 Total distance: 5.467E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([2], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:22,958 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:22,959 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 22.28 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:22,959 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:22,959 root DEBUG dOFF/dON = 1.6
10:08:22,959 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.75709029018614, 'dON1': 0.03475049890315543, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.03475049890315543, 'nTON': 1, 'dON': 0.03475049890315543, 'dxOFFAngle': 89.66957037124273, 'dOFF1': 0.05467438005729969, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.05467438005729969, 'nTOFF': 1, 'dOFF': 0.05467438005729969, 'SUCCESS': True}
10:08:22,970 root DEBUG 

=================== Experiment ID #27 	 Dual Point ID: 28 ===================
10:08:22,981 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.384E-08|<1.000E-06)
10:08:22,981 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:23,352 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.305E-02 	 Total distance: 5.305E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([254], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:08:23,633 root DEBUG Side: OFF	 Angle(dx0, dx): 1.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.349E-02 	 Total distance: 7.349E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([14], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:08:23,634 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:23,634 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 16.15 	 cIDON = [2 5], cIDOFF = [2 5]
10:08:23,634 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:23,634 root DEBUG dOFF/dON = 1.4
10:08:23,634 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.11651218793942, 'dON1': 0.053050139860262704, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.053050139860262704, 'nTON': 1, 'dON': 0.053050139860262704, 'dxOFFAngle': 89.23770878271704, 'dOFF1': 0.07349310052474947, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.07349310052474947, 'nTOFF': 1, 'dOFF': 0.07349310052474947, 'SUCCESS': True}
10:08:23,644 root DEBUG 

=================== Experiment ID #28 	 Dual Point ID: 29 ===================
10:08:23,653 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.106E-09|<1.000E-06)
10:08:23,653 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:23,971 root DEBUG Side: ON	 Angle(dx0, dx): 1.87 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.488E-02 	 Total distance: 1.488E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([187], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:24,237 root DEBUG Side: ON	 Angle(dx0, dx): 0.79 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.591E-02 	 Total distance: 6.079E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([129], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:24,619 root DEBUG Side: OFF	 Angle(dx0, dx): 1.93 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.355E-02 	 Total distance: 7.355E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([211], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:24,841 root DEBUG Side: OFF	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.370E-02 	 Total distance: 9.725E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([79], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:24,841 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:24,842 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 23.07 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:24,842 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:24,842 root DEBUG dOFF/dON = 1.6
10:08:24,842 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 76.02105004866544, 'dON1': 0.06078872817578828, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.06078872817578828, 'nTON': 1, 'dON': 0.06078872817578828, 'dxOFFAngle': 88.41081518934841, 'dOFF1': 0.09724783068175802, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.09724783068175802, 'nTOFF': 1, 'dOFF': 0.09724783068175802, 'SUCCESS': True}
10:08:24,848 root DEBUG 

=================== Experiment ID #29 	 Dual Point ID: 30 ===================
10:08:24,857 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.588E-07|<1.000E-06)
10:08:24,857 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:25,221 root DEBUG Side: ON	 Angle(dx0, dx): 0.99 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.031E-02 	 Total distance: 5.031E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([172], dtype=int64), array([[False]])]] 	 class: [1 9]
10:08:25,558 root DEBUG Side: OFF	 Angle(dx0, dx): 4.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.061E-01 	 Total distance: 1.061E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([171], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:08:25,558 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:25,559 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 35.68 	 cIDON = [1 9], cIDOFF = [1 9]
10:08:25,559 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:25,559 root DEBUG dOFF/dON = 2.1
10:08:25,559 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 68.85973806345156, 'dON1': 0.05031238085215841, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.05031238085215841, 'nTON': 1, 'dON': 0.05031238085215841, 'dxOFFAngle': 82.91450376985836, 'dOFF1': 0.1061328851128139, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.1061328851128139, 'nTOFF': 1, 'dOFF': 0.1061328851128139, 'SUCCESS': True}
10:08:25,567 root DEBUG 

=================== Experiment ID #30 	 Dual Point ID: 31 ===================
10:08:25,577 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.116E-07|<1.000E-06)
10:08:25,577 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:25,958 root DEBUG Side: ON	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.761E-03 	 Total distance: 3.761E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([5], dtype=int64), array([[False]])]] 	 class: [6 7]
10:08:26,316 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.939E-02 	 Total distance: 3.939E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([54], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:08:26,316 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:26,317 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 82.57 	 cIDON = [6 7], cIDOFF = [6 7]
10:08:26,317 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:26,318 root DEBUG dOFF/dON = 10.5
10:08:26,318 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 58.84409348269637, 'dON1': 0.003760880545323132, 'cIDON1': array([6, 7], dtype=int64), 'dON_patch_1': 0.003760880545323132, 'nTON': 1, 'dON': 0.003760880545323132, 'dxOFFAngle': 75.87365190106988, 'dOFF1': 0.03938687799101293, 'cIDOFF1': array([6, 7], dtype=int64), 'dOFF_patch_1': 0.03938687799101293, 'nTOFF': 1, 'dOFF': 0.03938687799101293, 'SUCCESS': True}
10:08:26,331 root DEBUG 

=================== Experiment ID #31 	 Dual Point ID: 32 ===================
10:08:26,347 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.260E-07|<1.000E-06)
10:08:26,347 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:26,705 root DEBUG Side: ON	 Angle(dx0, dx): 2.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.216E-02 	 Total distance: 3.216E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([56], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:27,61 root DEBUG Side: OFF	 Angle(dx0, dx): 1.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.182E-01 	 Total distance: 1.182E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([14], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:27,62 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:27,62 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 57.23 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:27,62 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:27,62 root DEBUG dOFF/dON = 3.7
10:08:27,62 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.09329708020329, 'dON1': 0.032160267047887596, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.032160267047887596, 'nTON': 1, 'dON': 0.032160267047887596, 'dxOFFAngle': 83.99920939074161, 'dOFF1': 0.11821497862481828, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.11821497862481828, 'nTOFF': 1, 'dOFF': 0.11821497862481828, 'SUCCESS': True}
10:08:27,74 root DEBUG 

=================== Experiment ID #32 	 Dual Point ID: 33 ===================
10:08:27,85 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.398E-07|<1.000E-06)
10:08:27,85 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:27,397 root DEBUG Side: ON	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.049E-01 	 Total distance: 3.049E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([56], dtype=int64), array([[ True]])]] 	 class: [1 2]
10:08:27,728 root DEBUG Side: OFF	 Angle(dx0, dx): 0.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.016E-02 	 Total distance: 1.016E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([106], dtype=int64), array([[False]])]] 	 class: [0 2]
10:08:27,943 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.020E-01 	 Total distance: 2.122E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([21], dtype=int64), array([[False]])]] 	 class: [0 2]
10:08:27,943 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:27,943 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -17.94 	 cIDON = [1 2], cIDOFF = [0 2]
10:08:27,943 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:27,943 root DEBUG dOFF/dON = 0.7
10:08:27,943 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.24008512558115, 'dON1': 0.3049412542069145, 'cIDON1': array([1, 2], dtype=int64), 'dON_patch_1': 0.3049412542069145, 'nTON': 1, 'dON': 0.3049412542069145, 'dxOFFAngle': 83.47854974097243, 'dOFF1': 0.21215201543803658, 'cIDOFF1': array([0, 2], dtype=int64), 'dOFF_patch_1': 0.21215201543803658, 'nTOFF': 1, 'dOFF': 0.21215201543803658, 'SUCCESS': False}
10:08:27,953 root DEBUG 

=================== Experiment ID #33 	 Dual Point ID: 34 ===================
10:08:27,963 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.492E-08|<1.000E-06)
10:08:27,963 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:28,242 root DEBUG Side: ON	 Angle(dx0, dx): 0.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.071E-02 	 Total distance: 8.071E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([18], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:28,555 root DEBUG Side: OFF	 Angle(dx0, dx): 0.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.719E-02 	 Total distance: 1.719E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([229], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:28,556 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:28,556 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -64.89 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:28,556 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:28,556 root DEBUG dOFF/dON = 0.2
10:08:28,556 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.574871781295, 'dON1': 0.08071251893080465, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.08071251893080465, 'nTON': 1, 'dON': 0.08071251893080465, 'dxOFFAngle': 86.87024961235005, 'dOFF1': 0.017187284036213807, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.017187284036213807, 'nTOFF': 1, 'dOFF': 0.017187284036213807, 'SUCCESS': False}
10:08:28,573 root DEBUG 

=================== Experiment ID #34 	 Dual Point ID: 35 ===================
10:08:28,582 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.134E-08|<1.000E-06)
10:08:28,582 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:28,945 root DEBUG Side: ON	 Angle(dx0, dx): 4.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.416E-02 	 Total distance: 3.416E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([56], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:29,260 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.962E-03 	 Total distance: 8.962E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([39], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:29,261 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:29,261 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -58.43 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:29,261 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:29,261 root DEBUG dOFF/dON = 0.3
10:08:29,261 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.5092798065138, 'dON1': 0.03416012369605761, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.03416012369605761, 'nTON': 1, 'dON': 0.03416012369605761, 'dxOFFAngle': 87.40882399685253, 'dOFF1': 0.008961878901349684, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.008961878901349684, 'nTOFF': 1, 'dOFF': 0.008961878901349684, 'SUCCESS': False}
10:08:29,271 root DEBUG 

=================== Experiment ID #35 	 Dual Point ID: 36 ===================
10:08:29,279 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.264E-09|<1.000E-06)
10:08:29,280 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:29,625 root DEBUG Side: ON	 Angle(dx0, dx): 0.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.957E-02 	 Total distance: 2.957E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([231], dtype=int64), array([[ True]])]] 	 class: [1 2]
10:08:29,818 root DEBUG Side: ON	 Angle(dx0, dx): 1.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.412E-03 	 Total distance: 3.298E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([206], dtype=int64), array([[False]])]] 	 class: [1 2]
10:08:30,81 root DEBUG Side: OFF	 Angle(dx0, dx): 1.79 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.124E-03 	 Total distance: 4.124E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([30], dtype=int64), array([[ True]])]] 	 class: [0 2]
10:08:30,81 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:30,81 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -77.78 	 cIDON = [1 2], cIDOFF = [0 2]
10:08:30,81 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:30,81 root DEBUG dOFF/dON = 0.1
10:08:30,81 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 70.92508863172245, 'dON1': 0.03298425625294096, 'cIDON1': array([1, 2], dtype=int64), 'dON_patch_1': 0.03298425625294096, 'nTON': 1, 'dON': 0.03298425625294096, 'dxOFFAngle': 87.5931379117683, 'dOFF1': 0.004123567378279539, 'cIDOFF1': array([0, 2], dtype=int64), 'dOFF_patch_1': 0.004123567378279539, 'nTOFF': 1, 'dOFF': 0.004123567378279539, 'SUCCESS': False}
10:08:30,88 root DEBUG 

=================== Experiment ID #36 	 Dual Point ID: 37 ===================
10:08:30,97 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.115E-07|<1.000E-06)
10:08:30,97 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:30,328 root DEBUG Side: ON	 Angle(dx0, dx): 1.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.972E-02 	 Total distance: 3.972E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([217], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:30,557 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.652E-02 	 Total distance: 6.652E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([143], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:30,557 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:30,557 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 25.23 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:30,557 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:30,557 root DEBUG dOFF/dON = 1.7
10:08:30,557 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 77.01910306975545, 'dON1': 0.03971641555610136, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.03971641555610136, 'nTON': 1, 'dON': 0.03971641555610136, 'dxOFFAngle': 81.67882549350108, 'dOFF1': 0.06651864587216076, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.06651864587216076, 'nTOFF': 1, 'dOFF': 0.06651864587216076, 'SUCCESS': True}
10:08:30,566 root DEBUG 

=================== Experiment ID #37 	 Dual Point ID: 38 ===================
10:08:30,577 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.225E-07|<1.000E-06)
10:08:30,577 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:30,868 root DEBUG Side: ON	 Angle(dx0, dx): 2.92 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.294E-03 	 Total distance: 4.294E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([53], dtype=int64), array([[False]])]] 	 class: [4 9]
10:08:31,181 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.005E-02 	 Total distance: 3.005E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([208], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:08:31,182 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:31,182 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 75.00 	 cIDON = [4 9], cIDOFF = [4 9]
10:08:31,182 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:31,182 root DEBUG dOFF/dON = 7.0
10:08:31,183 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.56833518226887, 'dON1': 0.004293943160378054, 'cIDON1': array([4, 9], dtype=int64), 'dON_patch_1': 0.004293943160378054, 'nTON': 1, 'dON': 0.004293943160378054, 'dxOFFAngle': 89.50553043934116, 'dOFF1': 0.030050884577119335, 'cIDOFF1': array([4, 9], dtype=int64), 'dOFF_patch_1': 0.030050884577119335, 'nTOFF': 1, 'dOFF': 0.030050884577119335, 'SUCCESS': True}
10:08:31,199 root DEBUG 

=================== Experiment ID #38 	 Dual Point ID: 39 ===================
10:08:31,206 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.701E-07|<1.000E-06)
10:08:31,206 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:31,452 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.165E-02 	 Total distance: 4.165E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([230], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:31,656 root DEBUG Side: ON	 Angle(dx0, dx): 1.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.506E-01 	 Total distance: 1.923E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([60], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:32,30 root DEBUG Side: OFF	 Angle(dx0, dx): 1.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.080E-01 	 Total distance: 2.080E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([28], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:32,30 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:32,31 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 3.93 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:32,31 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:32,31 root DEBUG dOFF/dON = 1.1
10:08:32,31 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.41341377391761, 'dON1': 0.19225628463554728, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.19225628463554728, 'nTON': 1, 'dON': 0.19225628463554728, 'dxOFFAngle': 89.34867274198008, 'dOFF1': 0.20799282512241907, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.20799282512241907, 'nTOFF': 1, 'dOFF': 0.20799282512241907, 'SUCCESS': True}
10:08:32,42 root DEBUG 

=================== Experiment ID #39 	 Dual Point ID: 40 ===================
10:08:32,50 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.201E-07|<1.000E-06)
10:08:32,50 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:32,379 root DEBUG Side: ON	 Angle(dx0, dx): 1.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.919E-03 	 Total distance: 2.919E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([186], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:32,643 root DEBUG Side: OFF	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.387E-02 	 Total distance: 4.387E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([61], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:32,643 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:32,643 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 87.52 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:32,643 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:32,643 root DEBUG dOFF/dON = 15.0
10:08:32,643 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.10915788609256, 'dON1': 0.002919269648358956, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.002919269648358956, 'nTON': 1, 'dON': 0.002919269648358956, 'dxOFFAngle': 88.75047841336689, 'dOFF1': 0.04387044067141718, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.04387044067141718, 'nTOFF': 1, 'dOFF': 0.04387044067141718, 'SUCCESS': True}
10:08:32,650 root DEBUG 

=================== Experiment ID #40 	 Dual Point ID: 41 ===================
10:08:32,660 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.178E-07|<1.000E-06)
10:08:32,660 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:32,960 root DEBUG Side: ON	 Angle(dx0, dx): 2.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.027E-01 	 Total distance: 1.027E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([239], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:33,195 root DEBUG Side: OFF	 Angle(dx0, dx): 1.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.540E-02 	 Total distance: 3.540E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([234], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:33,195 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:33,195 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -48.72 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:33,195 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:33,195 root DEBUG dOFF/dON = 0.3
10:08:33,195 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 77.24379678092778, 'dON1': 0.10266000707590049, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.10266000707590049, 'nTON': 1, 'dON': 0.10266000707590049, 'dxOFFAngle': 84.63920200285169, 'dOFF1': 0.03539974174868392, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.03539974174868392, 'nTOFF': 1, 'dOFF': 0.03539974174868392, 'SUCCESS': False}
10:08:33,208 root DEBUG 

=================== Experiment ID #41 	 Dual Point ID: 42 ===================
10:08:33,219 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.819E-09|<1.000E-06)
10:08:33,219 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:33,452 root DEBUG Side: ON	 Angle(dx0, dx): 1.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.952E-02 	 Total distance: 6.952E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([75], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:08:33,777 root DEBUG Side: OFF	 Angle(dx0, dx): 4.98 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.008E-02 	 Total distance: 4.008E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([63], dtype=int64), array([[False]])]] 	 class: [0 9]
10:08:33,778 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:33,778 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -26.87 	 cIDON = [1 9], cIDOFF = [0 9]
10:08:33,778 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:33,778 root DEBUG dOFF/dON = 0.6
10:08:33,778 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 73.1404458988984, 'dON1': 0.06952248849665624, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.06952248849665624, 'nTON': 1, 'dON': 0.06952248849665624, 'dxOFFAngle': 89.69974740896414, 'dOFF1': 0.040075151346547364, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.040075151346547364, 'nTOFF': 1, 'dOFF': 0.040075151346547364, 'SUCCESS': False}
10:08:33,788 root DEBUG 

=================== Experiment ID #42 	 Dual Point ID: 43 ===================
10:08:33,798 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.206E-09|<1.000E-06)
10:08:33,799 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:34,97 root DEBUG Side: ON	 Angle(dx0, dx): 7.96 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.103E-02 	 Total distance: 8.103E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([148], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:34,379 root DEBUG Side: OFF	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.114E-02 	 Total distance: 2.114E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([71], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:34,379 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:34,380 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -58.62 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:34,380 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:34,380 root DEBUG dOFF/dON = 0.3
10:08:34,380 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 64.44162724490911, 'dON1': 0.08103072403518716, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.08103072403518716, 'nTON': 1, 'dON': 0.08103072403518716, 'dxOFFAngle': 76.97093952988807, 'dOFF1': 0.02113604602454054, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.02113604602454054, 'nTOFF': 1, 'dOFF': 0.02113604602454054, 'SUCCESS': False}
10:08:34,392 root DEBUG 

=================== Experiment ID #43 	 Dual Point ID: 44 ===================
10:08:34,403 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.049E-09|<1.000E-06)
10:08:34,404 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:34,688 root DEBUG Side: ON	 Angle(dx0, dx): 0.66 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.942E-03 	 Total distance: 5.942E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([209], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:08:35,28 root DEBUG Side: OFF	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.344E-02 	 Total distance: 2.344E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([56], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:08:35,28 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:35,29 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 59.56 	 cIDON = [3 4], cIDOFF = [3 4]
10:08:35,29 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:35,29 root DEBUG dOFF/dON = 3.9
10:08:35,29 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 72.10888508981839, 'dON1': 0.005942272593765131, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.005942272593765131, 'nTON': 1, 'dON': 0.005942272593765131, 'dxOFFAngle': 82.6472389345566, 'dOFF1': 0.023443341556507256, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.023443341556507256, 'nTOFF': 1, 'dOFF': 0.023443341556507256, 'SUCCESS': True}
10:08:35,43 root DEBUG 

=================== Experiment ID #44 	 Dual Point ID: 45 ===================
10:08:35,55 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.990E-08|<1.000E-06)
10:08:35,56 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:35,376 root DEBUG Side: ON	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.169E-02 	 Total distance: 7.169E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([180], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:35,641 root DEBUG Side: OFF	 Angle(dx0, dx): 4.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.787E-01 	 Total distance: 1.787E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([3, 4], dtype=int64), array([[0.],
       [1.]])]] 	 class: [4 5]
10:08:35,642 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:35,642 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 42.74 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:35,642 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:35,642 root DEBUG dOFF/dON = 2.5
10:08:35,642 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.94783737300396, 'dON1': 0.07168586892339196, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.07168586892339196, 'nTON': 1, 'dON': 0.07168586892339196, 'dxOFFAngle': 86.55503273749721, 'dOFF1': 0.1786911612901092, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.1786911612901092, 'nTOFF': 1, 'dOFF': 0.1786911612901092, 'SUCCESS': True}
10:08:35,652 root DEBUG 

=================== Experiment ID #45 	 Dual Point ID: 46 ===================
10:08:35,660 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.279E-07|<1.000E-06)
10:08:35,660 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:35,919 root DEBUG Side: ON	 Angle(dx0, dx): 4.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.234E-02 	 Total distance: 1.234E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([59], dtype=int64), array([[False]])]] 	 class: [3 8]
10:08:36,259 root DEBUG Side: OFF	 Angle(dx0, dx): 1.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.039E-02 	 Total distance: 4.039E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([48], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:08:36,259 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:36,259 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 53.19 	 cIDON = [3 8], cIDOFF = [3 8]
10:08:36,259 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:36,259 root DEBUG dOFF/dON = 3.3
10:08:36,259 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 70.4092080584728, 'dON1': 0.012343983718313354, 'cIDON1': array([3, 8], dtype=int64), 'dON_patch_1': 0.012343983718313354, 'nTON': 1, 'dON': 0.012343983718313354, 'dxOFFAngle': 81.48862257637796, 'dOFF1': 0.04039266722684863, 'cIDOFF1': array([3, 8], dtype=int64), 'dOFF_patch_1': 0.04039266722684863, 'nTOFF': 1, 'dOFF': 0.04039266722684863, 'SUCCESS': True}
10:08:36,267 root DEBUG 

=================== Experiment ID #46 	 Dual Point ID: 47 ===================
10:08:36,274 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.698E-08|<1.000E-06)
10:08:36,274 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:36,548 root DEBUG Side: ON	 Angle(dx0, dx): 0.88 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.716E-02 	 Total distance: 6.716E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([70], dtype=int64), array([[False]])]] 	 class: [3 8]
10:08:36,810 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.532E-03 	 Total distance: 9.532E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([21], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:08:36,810 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:36,810 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -75.14 	 cIDON = [3 8], cIDOFF = [3 8]
10:08:36,810 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:36,810 root DEBUG dOFF/dON = 0.1
10:08:36,810 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.46838877126139, 'dON1': 0.06715867220921835, 'cIDON1': array([3, 8], dtype=int64), 'dON_patch_1': 0.06715867220921835, 'nTON': 1, 'dON': 0.06715867220921835, 'dxOFFAngle': 88.18730328337382, 'dOFF1': 0.00953168829323673, 'cIDOFF1': array([3, 8], dtype=int64), 'dOFF_patch_1': 0.00953168829323673, 'nTOFF': 1, 'dOFF': 0.00953168829323673, 'SUCCESS': False}
10:08:36,825 root DEBUG 

=================== Experiment ID #47 	 Dual Point ID: 48 ===================
10:08:36,837 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.819E-08|<1.000E-06)
10:08:36,837 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:37,136 root DEBUG Side: ON	 Angle(dx0, dx): 1.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.637E-02 	 Total distance: 2.637E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([225], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:37,478 root DEBUG Side: OFF	 Angle(dx0, dx): 2.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.143E-01 	 Total distance: 1.143E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([51], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:37,478 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:37,478 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 62.51 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:37,478 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:37,478 root DEBUG dOFF/dON = 4.3
10:08:37,478 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.58530014892828, 'dON1': 0.026368328337456344, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.026368328337456344, 'nTON': 1, 'dON': 0.026368328337456344, 'dxOFFAngle': 82.37356579480196, 'dOFF1': 0.11430685531494214, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.11430685531494214, 'nTOFF': 1, 'dOFF': 0.11430685531494214, 'SUCCESS': True}
10:08:37,492 root DEBUG 

=================== Experiment ID #48 	 Dual Point ID: 49 ===================
10:08:37,503 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.497E-08|<1.000E-06)
10:08:37,503 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:37,902 root DEBUG Side: ON	 Angle(dx0, dx): 3.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.468E-02 	 Total distance: 5.468E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([13], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:38,181 root DEBUG Side: OFF	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.091E-01 	 Total distance: 2.091E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([64], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:38,181 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:38,182 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 58.54 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:38,182 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:38,182 root DEBUG dOFF/dON = 3.8
10:08:38,182 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.47974903903523, 'dON1': 0.05468327348890876, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.05468327348890876, 'nTON': 1, 'dON': 0.05468327348890876, 'dxOFFAngle': 85.92081833856602, 'dOFF1': 0.2091039303464741, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.2091039303464741, 'nTOFF': 1, 'dOFF': 0.2091039303464741, 'SUCCESS': True}
10:08:38,192 root DEBUG 

=================== Experiment ID #49 	 Dual Point ID: 50 ===================
10:08:38,201 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.378E-08|<1.000E-06)
10:08:38,201 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:38,545 root DEBUG Side: ON	 Angle(dx0, dx): 13.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.058E-02 	 Total distance: 1.058E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([33], dtype=int64), array([[False]])]] 	 class: [2 4]
10:08:38,826 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.622E-02 	 Total distance: 9.622E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([33], dtype=int64), array([[False]])]] 	 class: [2 4]
10:08:39,119 root DEBUG Side: OFF	 Angle(dx0, dx): 8.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.910E-01 	 Total distance: 2.873E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([17], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:08:39,120 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:39,120 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 92.89 	 cIDON = [2 4], cIDOFF = [2 4]
10:08:39,120 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:39,120 root DEBUG dOFF/dON = 27.1
10:08:39,120 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 67.2210731364724, 'dON1': 0.010584949452365525, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.010584949452365525, 'nTON': 1, 'dON': 0.010584949452365525, 'dxOFFAngle': 88.59121219168229, 'dOFF1': 0.28726147458446594, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.28726147458446594, 'nTOFF': 1, 'dOFF': 0.28726147458446594, 'SUCCESS': True}
10:08:39,129 root DEBUG 

=================== Experiment ID #50 	 Dual Point ID: 51 ===================
10:08:39,139 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.205E-07|<1.000E-06)
10:08:39,140 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:39,381 root DEBUG Side: ON	 Angle(dx0, dx): 3.96 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.119E-02 	 Total distance: 2.119E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([81], dtype=int64), array([[False]])]] 	 class: [6 9]
10:08:39,706 root DEBUG Side: OFF	 Angle(dx0, dx): 0.73 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.425E-01 	 Total distance: 1.425E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([17], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:08:39,706 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:39,706 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 74.11 	 cIDON = [6 9], cIDOFF = [6 9]
10:08:39,707 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:39,707 root DEBUG dOFF/dON = 6.7
10:08:39,707 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.07622761135312, 'dON1': 0.02118630722127148, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.02118630722127148, 'nTON': 1, 'dON': 0.02118630722127148, 'dxOFFAngle': 85.44708241968944, 'dOFF1': 0.14250193819673185, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.14250193819673185, 'nTOFF': 1, 'dOFF': 0.14250193819673185, 'SUCCESS': True}
10:08:39,723 root DEBUG 

=================== Experiment ID #51 	 Dual Point ID: 52 ===================
10:08:39,739 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.110E-07|<1.000E-06)
10:08:39,739 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:40,61 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.077E-02 	 Total distance: 2.077E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([109], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:40,376 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.809E-01 	 Total distance: 3.809E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([219], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:40,376 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:40,376 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 89.66 	 cIDON = [3 7], cIDOFF = [3 7]
10:08:40,376 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:40,376 root DEBUG dOFF/dON = 18.3
10:08:40,376 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 74.01906457547608, 'dON1': 0.020772031426676302, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.020772031426676302, 'nTON': 1, 'dON': 0.020772031426676302, 'dxOFFAngle': 87.19440657671763, 'dOFF1': 0.38086524180921516, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.38086524180921516, 'nTOFF': 1, 'dOFF': 0.38086524180921516, 'SUCCESS': True}
10:08:40,387 root DEBUG 

=================== Experiment ID #52 	 Dual Point ID: 53 ===================
10:08:40,398 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.790E-08|<1.000E-06)
10:08:40,398 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:40,742 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.643E-03 	 Total distance: 6.643E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([36], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:41,35 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.245E-01 	 Total distance: 1.245E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([173], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:41,35 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:41,35 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 89.87 	 cIDON = [3 7], cIDOFF = [3 7]
10:08:41,35 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:41,35 root DEBUG dOFF/dON = 18.7
10:08:41,35 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.05862802740432, 'dON1': 0.006643400443378673, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.006643400443378673, 'nTON': 1, 'dON': 0.006643400443378673, 'dxOFFAngle': 85.87301443262987, 'dOFF1': 0.1244752684087144, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.1244752684087144, 'nTOFF': 1, 'dOFF': 0.1244752684087144, 'SUCCESS': True}
10:08:41,44 root DEBUG 

=================== Experiment ID #53 	 Dual Point ID: 54 ===================
10:08:41,55 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.158E-08|<1.000E-06)
10:08:41,55 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:41,328 root DEBUG Side: ON	 Angle(dx0, dx): 1.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.850E-02 	 Total distance: 1.850E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([94], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:41,627 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.497E-01 	 Total distance: 1.497E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([156], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:41,627 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:41,627 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 78.00 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:41,628 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:41,628 root DEBUG dOFF/dON = 8.1
10:08:41,628 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.96988110120228, 'dON1': 0.018502440224905426, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.018502440224905426, 'nTON': 1, 'dON': 0.018502440224905426, 'dxOFFAngle': 83.30216375137044, 'dOFF1': 0.14968595660468179, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.14968595660468179, 'nTOFF': 1, 'dOFF': 0.14968595660468179, 'SUCCESS': True}
10:08:41,634 root DEBUG 

=================== Experiment ID #54 	 Dual Point ID: 55 ===================
10:08:41,643 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.654E-07|<1.000E-06)
10:08:41,643 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:42,42 root DEBUG Side: ON	 Angle(dx0, dx): 2.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.439E-02 	 Total distance: 2.439E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([128], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:42,340 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.120E-02 	 Total distance: 1.120E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([33], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:42,340 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:42,341 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -37.03 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:42,341 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:42,341 root DEBUG dOFF/dON = 0.5
10:08:42,341 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.37653223933766, 'dON1': 0.02438596993044037, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.02438596993044037, 'nTON': 1, 'dON': 0.02438596993044037, 'dxOFFAngle': 80.52595079218064, 'dOFF1': 0.011204944492122282, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.011204944492122282, 'nTOFF': 1, 'dOFF': 0.011204944492122282, 'SUCCESS': False}
10:08:42,358 root DEBUG 

=================== Experiment ID #55 	 Dual Point ID: 56 ===================
10:08:42,369 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.981E-07|<1.000E-06)
10:08:42,369 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:42,853 root DEBUG Side: ON	 Angle(dx0, dx): 1.73 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.926E-01 	 Total distance: 1.926E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([21], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:43,69 root DEBUG Side: ON	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.179E-01 	 Total distance: 5.106E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([133], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:43,446 root DEBUG Side: OFF	 Angle(dx0, dx): 0.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.703E-02 	 Total distance: 9.703E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([142], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:43,646 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.150E-02 	 Total distance: 1.585E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([131], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:43,794 root DEBUG Side: OFF	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.025E-02 	 Total distance: 2.288E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([247], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:43,973 root DEBUG Side: OFF	 Angle(dx0, dx): 3.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.452E-02 	 Total distance: 2.633E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([57], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:43,973 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:43,974 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -31.95 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:43,974 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:43,974 root DEBUG dOFF/dON = 0.5
10:08:43,974 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 72.1455567807168, 'dON1': 0.5105811848958043, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.5105811848958043, 'nTON': 1, 'dON': 0.5105811848958043, 'dxOFFAngle': 77.34405843263582, 'dOFF1': 0.26330175140896195, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.26330175140896195, 'nTOFF': 1, 'dOFF': 0.26330175140896195, 'SUCCESS': False}
10:08:43,984 root DEBUG 

=================== Experiment ID #56 	 Dual Point ID: 57 ===================
10:08:43,991 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.186E-07|<1.000E-06)
10:08:43,991 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:44,272 root DEBUG Side: ON	 Angle(dx0, dx): 0.85 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.438E-01 	 Total distance: 1.438E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([18], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:44,591 root DEBUG Side: OFF	 Angle(dx0, dx): 4.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.787E-02 	 Total distance: 1.787E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([33], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:44,591 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:44,591 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -77.90 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:44,591 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:44,591 root DEBUG dOFF/dON = 0.1
10:08:44,591 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.06729289012017, 'dON1': 0.14381674256116564, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.14381674256116564, 'nTON': 1, 'dON': 0.14381674256116564, 'dxOFFAngle': 83.78262142828021, 'dOFF1': 0.017866193815918766, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.017866193815918766, 'nTOFF': 1, 'dOFF': 0.017866193815918766, 'SUCCESS': False}
10:08:44,599 root DEBUG 

=================== Experiment ID #57 	 Dual Point ID: 58 ===================
10:08:44,608 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.097E-07|<1.000E-06)
10:08:44,608 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:44,842 root DEBUG Side: ON	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.287E-04 	 Total distance: 1.287E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([24], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:45,136 root DEBUG Side: OFF	 Angle(dx0, dx): 1.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.054E-02 	 Total distance: 1.054E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([101], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:45,137 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:45,137 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 97.59 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:45,137 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:45,137 root DEBUG dOFF/dON = 81.9
10:08:45,137 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.25195208176126, 'dON1': 0.0001286563465215743, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.0001286563465215743, 'nTON': 1, 'dON': 0.0001286563465215743, 'dxOFFAngle': 81.23617842033211, 'dOFF1': 0.010539102506632021, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.010539102506632021, 'nTOFF': 1, 'dOFF': 0.010539102506632021, 'SUCCESS': True}
10:08:45,146 root DEBUG 

=================== Experiment ID #58 	 Dual Point ID: 59 ===================
10:08:45,156 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.795E-07|<1.000E-06)
10:08:45,156 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:45,439 root DEBUG Side: ON	 Angle(dx0, dx): 2.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.167E-01 	 Total distance: 1.167E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([199], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:45,602 root DEBUG Side: ON	 Angle(dx0, dx): 1.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.580E-03 	 Total distance: 1.253E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([192], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:45,925 root DEBUG Side: OFF	 Angle(dx0, dx): 0.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.590E-01 	 Total distance: 2.590E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([179], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:45,925 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:45,926 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 34.78 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:45,926 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:45,926 root DEBUG dOFF/dON = 2.1
10:08:45,926 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 76.2061188543613, 'dON1': 0.12530970637742012, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.12530970637742012, 'nTON': 1, 'dON': 0.12530970637742012, 'dxOFFAngle': 87.1414782943468, 'dOFF1': 0.25896184459754623, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.25896184459754623, 'nTOFF': 1, 'dOFF': 0.25896184459754623, 'SUCCESS': True}
10:08:45,938 root DEBUG 

=================== Experiment ID #59 	 Dual Point ID: 60 ===================
10:08:45,946 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.190E-09|<1.000E-06)
10:08:45,946 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:46,209 root DEBUG Side: ON	 Angle(dx0, dx): 1.77 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.441E-02 	 Total distance: 2.441E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([50], dtype=int64), array([[False]])]] 	 class: [0 2]
10:08:46,534 root DEBUG Side: OFF	 Angle(dx0, dx): 1.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.288E-02 	 Total distance: 1.288E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([84], dtype=int64), array([[False]])]] 	 class: [1 2]
10:08:46,534 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:46,534 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -30.91 	 cIDON = [0 2], cIDOFF = [1 2]
10:08:46,534 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:46,535 root DEBUG dOFF/dON = 0.5
10:08:46,535 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.28511574155416, 'dON1': 0.024414546310300763, 'cIDON1': array([0, 2], dtype=int64), 'dON_patch_1': 0.024414546310300763, 'nTON': 1, 'dON': 0.024414546310300763, 'dxOFFAngle': 87.92380457075562, 'dOFF1': 0.01288472030112626, 'cIDOFF1': array([1, 2], dtype=int64), 'dOFF_patch_1': 0.01288472030112626, 'nTOFF': 1, 'dOFF': 0.01288472030112626, 'SUCCESS': False}
10:08:46,545 root DEBUG 

=================== Experiment ID #60 	 Dual Point ID: 61 ===================
10:08:46,555 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.126E-07|<1.000E-06)
10:08:46,556 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:46,825 root DEBUG Side: ON	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.857E-02 	 Total distance: 6.857E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([133], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:47,196 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.450E-01 	 Total distance: 2.450E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([133], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:47,364 root DEBUG Side: OFF	 Angle(dx0, dx): 0.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.560E-02 	 Total distance: 3.405E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([81], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:47,364 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:47,364 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 66.48 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:47,364 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:47,364 root DEBUG dOFF/dON = 5.0
10:08:47,364 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.3992675701849, 'dON1': 0.06856568566134678, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.06856568566134678, 'nTON': 1, 'dON': 0.06856568566134678, 'dxOFFAngle': 84.72122322181043, 'dOFF1': 0.3405476480220937, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.3405476480220937, 'nTOFF': 1, 'dOFF': 0.3405476480220937, 'SUCCESS': True}
10:08:47,374 root DEBUG 

=================== Experiment ID #61 	 Dual Point ID: 62 ===================
10:08:47,388 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.323E-08|<1.000E-06)
10:08:47,389 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:47,638 root DEBUG Side: ON	 Angle(dx0, dx): 1.88 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.629E-03 	 Total distance: 1.629E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([217], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:47,951 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.474E-02 	 Total distance: 1.474E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([16], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:47,952 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:47,952 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 80.10 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:47,952 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:47,952 root DEBUG dOFF/dON = 9.1
10:08:47,952 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.17445677959512, 'dON1': 0.0016291087885986042, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.0016291087885986042, 'nTON': 1, 'dON': 0.0016291087885986042, 'dxOFFAngle': 89.36505240833573, 'dOFF1': 0.014744098928696983, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.014744098928696983, 'nTOFF': 1, 'dOFF': 0.014744098928696983, 'SUCCESS': True}
10:08:47,959 root DEBUG 

=================== Experiment ID #62 	 Dual Point ID: 63 ===================
10:08:47,966 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.757E-07|<1.000E-06)
10:08:47,966 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:48,226 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.231E-02 	 Total distance: 3.231E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([111], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:48,485 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.049E-03 	 Total distance: 5.049E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([228], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:48,629 root DEBUG Side: OFF	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.172E-01 	 Total distance: 3.222E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([233], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:48,803 root DEBUG Side: OFF	 Angle(dx0, dx): 1.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.253E-02 	 Total distance: 3.448E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([202], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:48,803 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:48,803 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 82.86 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:48,803 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:48,803 root DEBUG dOFF/dON = 10.7
10:08:48,803 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.66915592209772, 'dON1': 0.03231219064834671, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.03231219064834671, 'nTON': 1, 'dON': 0.03231219064834671, 'dxOFFAngle': 81.15203605058083, 'dOFF1': 0.34475036383909013, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.34475036383909013, 'nTOFF': 1, 'dOFF': 0.34475036383909013, 'SUCCESS': True}
10:08:48,812 root DEBUG 

=================== Experiment ID #63 	 Dual Point ID: 64 ===================
10:08:48,820 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.111E-08|<1.000E-06)
10:08:48,821 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:49,114 root DEBUG Side: ON	 Angle(dx0, dx): 3.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.373E-02 	 Total distance: 2.373E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([130], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:49,371 root DEBUG Side: OFF	 Angle(dx0, dx): 2.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.768E-01 	 Total distance: 1.768E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([56], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:49,371 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:49,372 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 76.33 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:49,372 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:49,372 root DEBUG dOFF/dON = 7.4
10:08:49,372 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.93893313226019, 'dON1': 0.02373348277441006, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.02373348277441006, 'nTON': 1, 'dON': 0.02373348277441006, 'dxOFFAngle': 84.70254965788833, 'dOFF1': 0.1767868530439928, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.1767868530439928, 'nTOFF': 1, 'dOFF': 0.1767868530439928, 'SUCCESS': True}
10:08:49,382 root DEBUG 

=================== Experiment ID #64 	 Dual Point ID: 65 ===================
10:08:49,390 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.684E-07|<1.000E-06)
10:08:49,390 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:49,646 root DEBUG Side: ON	 Angle(dx0, dx): 4.93 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.290E-02 	 Total distance: 7.290E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([2], dtype=int64), array([[False]])]] 	 class: [2 3]
10:08:50,75 root DEBUG Side: OFF	 Angle(dx0, dx): 0.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.777E-02 	 Total distance: 2.777E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([209], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:08:50,75 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:50,75 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -44.84 	 cIDON = [2 3], cIDOFF = [2 3]
10:08:50,75 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:50,75 root DEBUG dOFF/dON = 0.4
10:08:50,75 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.96250398533417, 'dON1': 0.07289908793897452, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.07289908793897452, 'nTON': 1, 'dON': 0.07289908793897452, 'dxOFFAngle': 87.1710002681244, 'dOFF1': 0.0277656603171169, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.0277656603171169, 'nTOFF': 1, 'dOFF': 0.0277656603171169, 'SUCCESS': False}
10:08:50,87 root DEBUG 

=================== Experiment ID #65 	 Dual Point ID: 66 ===================
10:08:50,95 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.469E-07|<1.000E-06)
10:08:50,95 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:50,350 root DEBUG Side: ON	 Angle(dx0, dx): 1.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.501E-02 	 Total distance: 3.501E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([30], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:50,681 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.368E-01 	 Total distance: 1.368E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([99], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:50,897 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.641E-01 	 Total distance: 6.008E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([167], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:50,897 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:50,898 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 88.99 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:50,898 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:50,898 root DEBUG dOFF/dON = 17.2
10:08:50,898 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.75574236494238, 'dON1': 0.035011420557539745, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.035011420557539745, 'nTON': 1, 'dON': 0.035011420557539745, 'dxOFFAngle': 89.66399856143887, 'dOFF1': 0.6008237268292544, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.6008237268292544, 'nTOFF': 1, 'dOFF': 0.6008237268292544, 'SUCCESS': True}
10:08:50,905 root DEBUG 

=================== Experiment ID #66 	 Dual Point ID: 67 ===================
10:08:50,914 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.660E-08|<1.000E-06)
10:08:50,915 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:51,244 root DEBUG Side: ON	 Angle(dx0, dx): 3.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.236E-01 	 Total distance: 2.236E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([60], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:08:51,488 root DEBUG Side: OFF	 Angle(dx0, dx): 1.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.282E-02 	 Total distance: 2.282E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([145], dtype=int64), array([[False]])]] 	 class: [2 4]
10:08:51,489 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:51,490 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -81.48 	 cIDON = [2 4], cIDOFF = [2 4]
10:08:51,490 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:51,491 root DEBUG dOFF/dON = 0.1
10:08:51,491 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 68.68990877537584, 'dON1': 0.22360884857396185, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.22360884857396185, 'nTON': 1, 'dON': 0.22360884857396185, 'dxOFFAngle': 81.89566879463399, 'dOFF1': 0.022817650162481728, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.022817650162481728, 'nTOFF': 1, 'dOFF': 0.022817650162481728, 'SUCCESS': False}
10:08:51,507 root DEBUG 

=================== Experiment ID #67 	 Dual Point ID: 68 ===================
10:08:51,522 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.938E-08|<1.000E-06)
10:08:51,522 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:51,873 root DEBUG Side: ON	 Angle(dx0, dx): 4.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.180E-02 	 Total distance: 3.180E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([8], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:08:52,168 root DEBUG Side: OFF	 Angle(dx0, dx): 4.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.171E-02 	 Total distance: 1.171E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([33], dtype=int64), array([[False]])]] 	 class: [0 8]
10:08:52,169 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:52,169 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -46.16 	 cIDON = [1 8], cIDOFF = [0 8]
10:08:52,169 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:52,169 root DEBUG dOFF/dON = 0.4
10:08:52,169 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 79.90542446357435, 'dON1': 0.03179656979527015, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 0.03179656979527015, 'nTON': 1, 'dON': 0.03179656979527015, 'dxOFFAngle': 89.57015246232787, 'dOFF1': 0.011711692081551633, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.011711692081551633, 'nTOFF': 1, 'dOFF': 0.011711692081551633, 'SUCCESS': False}
10:08:52,176 root DEBUG 

=================== Experiment ID #68 	 Dual Point ID: 69 ===================
10:08:52,187 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.016E-08|<1.000E-06)
10:08:52,188 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:52,393 root DEBUG Side: ON	 Angle(dx0, dx): 5.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.795E-02 	 Total distance: 1.795E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([156], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:52,774 root DEBUG Side: OFF	 Angle(dx0, dx): 2.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.956E-02 	 Total distance: 4.956E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([20], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:52,775 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:52,775 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 46.83 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:52,775 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:52,775 root DEBUG dOFF/dON = 2.8
10:08:52,775 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 72.43290027408264, 'dON1': 0.017947622529153825, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.017947622529153825, 'nTON': 1, 'dON': 0.017947622529153825, 'dxOFFAngle': 84.08692744037039, 'dOFF1': 0.04955644266945119, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.04955644266945119, 'nTOFF': 1, 'dOFF': 0.04955644266945119, 'SUCCESS': True}
10:08:52,787 root DEBUG 

=================== Experiment ID #69 	 Dual Point ID: 70 ===================
10:08:52,795 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.180E-07|<1.000E-06)
10:08:52,795 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:53,82 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.492E-02 	 Total distance: 6.492E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([19], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:53,423 root DEBUG Side: OFF	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.832E-02 	 Total distance: 2.832E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([56], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:53,423 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:53,423 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -39.26 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:53,423 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:53,423 root DEBUG dOFF/dON = 0.4
10:08:53,423 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.09178298967727, 'dON1': 0.06492140192874715, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.06492140192874715, 'nTON': 1, 'dON': 0.06492140192874715, 'dxOFFAngle': 86.78669210571002, 'dOFF1': 0.028317557863690328, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.028317557863690328, 'nTOFF': 1, 'dOFF': 0.028317557863690328, 'SUCCESS': False}
10:08:53,431 root DEBUG 

=================== Experiment ID #70 	 Dual Point ID: 71 ===================
10:08:53,440 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.148E-07|<1.000E-06)
10:08:53,440 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:53,739 root DEBUG Side: ON	 Angle(dx0, dx): 1.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.132E-02 	 Total distance: 1.132E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([27], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:54,39 root DEBUG Side: OFF	 Angle(dx0, dx): 0.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.448E-01 	 Total distance: 1.448E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([112], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:54,40 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:54,40 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 85.50 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:54,40 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:54,40 root DEBUG dOFF/dON = 12.8
10:08:54,41 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 75.84292694278206, 'dON1': 0.011316958095748187, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.011316958095748187, 'nTON': 1, 'dON': 0.011316958095748187, 'dxOFFAngle': 83.15882213137763, 'dOFF1': 0.14477991161533868, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.14477991161533868, 'nTOFF': 1, 'dOFF': 0.14477991161533868, 'SUCCESS': True}
10:08:54,52 root DEBUG 

=================== Experiment ID #71 	 Dual Point ID: 72 ===================
10:08:54,59 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.214E-07|<1.000E-06)
10:08:54,60 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:54,338 root DEBUG Side: ON	 Angle(dx0, dx): 2.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.634E-02 	 Total distance: 1.634E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([188], dtype=int64), array([[False]])]] 	 class: [0 2]
10:08:54,653 root DEBUG Side: OFF	 Angle(dx0, dx): 1.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.256E-01 	 Total distance: 1.256E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([144], dtype=int64), array([[ True]])]] 	 class: [1 2]
10:08:54,653 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:54,653 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 76.97 	 cIDON = [0 2], cIDOFF = [1 2]
10:08:54,653 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:54,653 root DEBUG dOFF/dON = 7.7
10:08:54,653 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.28764580392912, 'dON1': 0.0163438859032371, 'cIDON1': array([0, 2], dtype=int64), 'dON_patch_1': 0.0163438859032371, 'nTON': 1, 'dON': 0.0163438859032371, 'dxOFFAngle': 86.13577746023832, 'dOFF1': 0.12557505723336743, 'cIDOFF1': array([1, 2], dtype=int64), 'dOFF_patch_1': 0.12557505723336743, 'nTOFF': 1, 'dOFF': 0.12557505723336743, 'SUCCESS': True}
10:08:54,659 root DEBUG 

=================== Experiment ID #72 	 Dual Point ID: 73 ===================
10:08:54,666 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.056E-07|<1.000E-06)
10:08:54,666 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:55,19 root DEBUG Side: ON	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.117E-02 	 Total distance: 9.117E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([2], dtype=int64), array([[False]])]] 	 class: [2 4]
10:08:55,319 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.154E-03 	 Total distance: 9.154E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([103], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:08:55,319 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:55,319 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -81.75 	 cIDON = [2 4], cIDOFF = [2 4]
10:08:55,319 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:55,320 root DEBUG dOFF/dON = 0.1
10:08:55,320 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.7013581326531, 'dON1': 0.09116525288272655, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.09116525288272655, 'nTON': 1, 'dON': 0.09116525288272655, 'dxOFFAngle': 86.15551194327274, 'dOFF1': 0.009154235693414484, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.009154235693414484, 'nTOFF': 1, 'dOFF': 0.009154235693414484, 'SUCCESS': False}
10:08:55,332 root DEBUG 

=================== Experiment ID #73 	 Dual Point ID: 74 ===================
10:08:55,344 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.781E-07|<1.000E-06)
10:08:55,345 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:55,678 root DEBUG Side: ON	 Angle(dx0, dx): 1.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.312E-03 	 Total distance: 5.312E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([113], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:55,953 root DEBUG Side: OFF	 Angle(dx0, dx): 1.60 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.862E-02 	 Total distance: 8.862E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([4], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:55,953 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:55,953 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 88.69 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:55,953 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:55,953 root DEBUG dOFF/dON = 16.7
10:08:55,954 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.07285910096758, 'dON1': 0.00531186173922178, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.00531186173922178, 'nTON': 1, 'dON': 0.00531186173922178, 'dxOFFAngle': 85.32207664597397, 'dOFF1': 0.08862086830844691, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.08862086830844691, 'nTOFF': 1, 'dOFF': 0.08862086830844691, 'SUCCESS': True}
10:08:55,964 root DEBUG 

=================== Experiment ID #74 	 Dual Point ID: 75 ===================
10:08:55,973 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.072E-08|<1.000E-06)
10:08:55,974 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:56,261 root DEBUG Side: ON	 Angle(dx0, dx): 0.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.877E-03 	 Total distance: 6.877E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([165], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:56,547 root DEBUG Side: OFF	 Angle(dx0, dx): 1.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.105E-02 	 Total distance: 7.105E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([29], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:56,695 root DEBUG Side: OFF	 Angle(dx0, dx): 1.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.233E-02 	 Total distance: 1.334E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([54], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:56,696 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:56,696 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 90.19 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:56,696 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:56,696 root DEBUG dOFF/dON = 19.4
10:08:56,696 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.73236872224906, 'dON1': 0.006876745251050954, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.006876745251050954, 'nTON': 1, 'dON': 0.006876745251050954, 'dxOFFAngle': 89.74441686406628, 'dOFF1': 0.13338055825210027, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.13338055825210027, 'nTOFF': 1, 'dOFF': 0.13338055825210027, 'SUCCESS': True}
10:08:56,706 root DEBUG 

=================== Experiment ID #75 	 Dual Point ID: 76 ===================
10:08:56,719 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.107E-08|<1.000E-06)
10:08:56,719 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:57,82 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.810E-02 	 Total distance: 4.810E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([169], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:57,259 root DEBUG Side: ON	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.090E-01 	 Total distance: 1.571E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([181], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:57,560 root DEBUG Side: OFF	 Angle(dx0, dx): 4.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.514E-02 	 Total distance: 3.514E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([20], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:57,560 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:57,561 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -63.44 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:57,561 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:57,562 root DEBUG dOFF/dON = 0.2
10:08:57,562 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 75.19746490793511, 'dON1': 0.1571356099899721, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.1571356099899721, 'nTON': 1, 'dON': 0.1571356099899721, 'dxOFFAngle': 85.69211287006736, 'dOFF1': 0.035144205289576194, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.035144205289576194, 'nTOFF': 1, 'dOFF': 0.035144205289576194, 'SUCCESS': False}
10:08:57,576 root DEBUG 

=================== Experiment ID #76 	 Dual Point ID: 77 ===================
10:08:57,585 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.597E-07|<1.000E-06)
10:08:57,585 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:57,874 root DEBUG Side: ON	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.435E-02 	 Total distance: 5.435E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([173], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:58,116 root DEBUG Side: OFF	 Angle(dx0, dx): 1.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.668E-01 	 Total distance: 1.668E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([221], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:58,311 root DEBUG Side: OFF	 Angle(dx0, dx): 0.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.314E-02 	 Total distance: 2.500E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([211], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:58,507 root DEBUG Side: OFF	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.992E-01 	 Total distance: 4.492E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([56], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:58,708 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.119E-02 	 Total distance: 5.404E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([24], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:58,708 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:58,708 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 81.72 	 cIDON = [3 7], cIDOFF = [3 7]
10:08:58,708 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:58,708 root DEBUG dOFF/dON = 9.9
10:08:58,708 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 82.11787337975925, 'dON1': 0.054346231994735934, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.054346231994735934, 'nTON': 1, 'dON': 0.054346231994735934, 'dxOFFAngle': 85.18291796606071, 'dOFF1': 0.5403666865709458, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.5403666865709458, 'nTOFF': 1, 'dOFF': 0.5403666865709458, 'SUCCESS': True}
10:08:58,718 root DEBUG 

=================== Experiment ID #77 	 Dual Point ID: 78 ===================
10:08:58,727 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.402E-07|<1.000E-06)
10:08:58,727 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:59,73 root DEBUG Side: ON	 Angle(dx0, dx): 1.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.143E-01 	 Total distance: 1.143E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([244], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:59,381 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.267E-02 	 Total distance: 4.267E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([179], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:59,381 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:59,382 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -45.62 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:59,382 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:59,382 root DEBUG dOFF/dON = 0.4
10:08:59,382 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.1854195296635, 'dON1': 0.1142669244153957, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.1142669244153957, 'nTON': 1, 'dON': 0.1142669244153957, 'dxOFFAngle': 89.640604159291, 'dOFF1': 0.04267120752770768, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.04267120752770768, 'nTOFF': 1, 'dOFF': 0.04267120752770768, 'SUCCESS': False}
10:08:59,391 root DEBUG 

=================== Experiment ID #78 	 Dual Point ID: 79 ===================
10:08:59,401 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.163E-08|<1.000E-06)
10:08:59,401 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:59,649 root DEBUG Side: ON	 Angle(dx0, dx): 4.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.547E-03 	 Total distance: 9.547E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([27], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:59,965 root DEBUG Side: OFF	 Angle(dx0, dx): 1.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.192E-02 	 Total distance: 1.192E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([17], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:59,966 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:59,967 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 11.07 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:59,967 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:59,967 root DEBUG dOFF/dON = 1.2
10:08:59,967 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.16502954743378, 'dON1': 0.009546849522273571, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.009546849522273571, 'nTON': 1, 'dON': 0.009546849522273571, 'dxOFFAngle': 88.04692699872135, 'dOFF1': 0.01192291936686162, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.01192291936686162, 'nTOFF': 1, 'dOFF': 0.01192291936686162, 'SUCCESS': True}
10:08:59,981 root DEBUG 

=================== Experiment ID #79 	 Dual Point ID: 80 ===================
10:08:59,990 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.821E-07|<1.000E-06)
10:08:59,990 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:00,250 root DEBUG Side: ON	 Angle(dx0, dx): 9.84 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.303E-02 	 Total distance: 2.303E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([140], dtype=int64), array([[False]])]] 	 class: [3 8]
10:09:00,540 root DEBUG Side: OFF	 Angle(dx0, dx): 0.84 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.466E-02 	 Total distance: 5.466E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([26], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:09:00,541 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:00,541 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 40.72 	 cIDON = [3 8], cIDOFF = [3 8]
10:09:00,542 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:00,542 root DEBUG dOFF/dON = 2.4
10:09:00,542 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.02636441908426, 'dON1': 0.02302603577195729, 'cIDON1': array([3, 8], dtype=int64), 'dON_patch_1': 0.02302603577195729, 'nTON': 1, 'dON': 0.02302603577195729, 'dxOFFAngle': 85.01403924643017, 'dOFF1': 0.0546576229400127, 'cIDOFF1': array([3, 8], dtype=int64), 'dOFF_patch_1': 0.0546576229400127, 'nTOFF': 1, 'dOFF': 0.0546576229400127, 'SUCCESS': True}
10:09:00,551 root DEBUG 

=================== Experiment ID #80 	 Dual Point ID: 81 ===================
10:09:00,559 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.304E-07|<1.000E-06)
10:09:00,559 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:00,842 root DEBUG Side: ON	 Angle(dx0, dx): 2.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.473E-02 	 Total distance: 6.473E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([80], dtype=int64), array([[False]])]] 	 class: [5 9]
10:09:01,2 root DEBUG Side: ON	 Angle(dx0, dx): 2.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.373E-07 	 Total distance: 6.473E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([80], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:09:01,127 root DEBUG Side: ON	 Angle(dx0, dx): 2.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.495E-07 	 Total distance: 6.473E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([80], dtype=int64), array([[False]])]] 	 class: [5 9]
10:09:01,219 root DEBUG Side: ON	 Angle(dx0, dx): 2.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.373E-07 	 Total distance: 6.473E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([80], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:09:01,224 root DEBUG Got stuck in too many past-layer relus.
10:09:01,321 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:09:01,321 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=0, results['nTOFF']=0.
10:09:01,323 root DEBUG 

=================== Experiment ID #80 	 Dual Point ID: 82 ===================
10:09:01,334 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.922E-08|<1.000E-06)
10:09:01,334 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:01,575 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.658E-02 	 Total distance: 1.658E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([195], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:09:01,721 root DEBUG Side: ON	 Angle(dx0, dx): 0.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.814E-02 	 Total distance: 6.472E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([229], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:02,13 root DEBUG Side: OFF	 Angle(dx0, dx): 5.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.749E-02 	 Total distance: 3.749E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([17], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:02,13 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:02,13 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -26.64 	 cIDON = [7 9], cIDOFF = [7 9]
10:09:02,13 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:02,14 root DEBUG dOFF/dON = 0.6
10:09:02,14 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.35874447213163, 'dON1': 0.06471650152049921, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.06471650152049921, 'nTON': 1, 'dON': 0.06471650152049921, 'dxOFFAngle': 81.22656534852668, 'dOFF1': 0.037492805253114686, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.037492805253114686, 'nTOFF': 1, 'dOFF': 0.037492805253114686, 'SUCCESS': False}
10:09:02,24 root DEBUG 

=================== Experiment ID #81 	 Dual Point ID: 83 ===================
10:09:02,33 root DEBUG CONTROL: 	 WARNING! 	 (target neuron output > tolerance: |1.856E-06|>1.000E-06)
10:09:02,33 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:02,33 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:02,34 root DEBUG 

=================== Experiment ID #81 	 Dual Point ID: 84 ===================
10:09:02,45 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.746E-07|<1.000E-06)
10:09:02,45 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:02,304 root DEBUG Side: ON	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.163E-02 	 Total distance: 2.163E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([90], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:02,615 root DEBUG Side: OFF	 Angle(dx0, dx): 0.91 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.560E-02 	 Total distance: 9.560E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([116], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:02,616 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:02,616 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 63.09 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:02,616 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:02,616 root DEBUG dOFF/dON = 4.4
10:09:02,616 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.08725869561653, 'dON1': 0.02163322410571009, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.02163322410571009, 'nTON': 1, 'dON': 0.02163322410571009, 'dxOFFAngle': 88.4786642507219, 'dOFF1': 0.0956002925040782, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.0956002925040782, 'nTOFF': 1, 'dOFF': 0.0956002925040782, 'SUCCESS': True}
10:09:02,622 root DEBUG 

=================== Experiment ID #82 	 Dual Point ID: 85 ===================
10:09:02,629 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.370E-07|<1.000E-06)
10:09:02,629 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:02,925 root DEBUG Side: ON	 Angle(dx0, dx): 0.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.576E-02 	 Total distance: 1.576E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([213], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:03,177 root DEBUG Side: OFF	 Angle(dx0, dx): 0.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.187E-01 	 Total distance: 1.187E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([148], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:03,177 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:03,178 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 76.56 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:03,178 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:03,178 root DEBUG dOFF/dON = 7.5
10:09:03,178 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.43272520894475, 'dON1': 0.01575793657084414, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.01575793657084414, 'nTON': 1, 'dON': 0.01575793657084414, 'dxOFFAngle': 82.85873460577065, 'dOFF1': 0.11868427173815362, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.11868427173815362, 'nTOFF': 1, 'dOFF': 0.11868427173815362, 'SUCCESS': True}
10:09:03,189 root DEBUG 

=================== Experiment ID #83 	 Dual Point ID: 86 ===================
10:09:03,205 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.058E-07|<1.000E-06)
10:09:03,206 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:03,463 root DEBUG Side: ON	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.217E-02 	 Total distance: 1.217E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([218], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:03,694 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.839E-02 	 Total distance: 7.839E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([218], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:03,694 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:03,694 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 73.12 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:03,694 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:03,694 root DEBUG dOFF/dON = 6.4
10:09:03,694 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 83.15116936355624, 'dON1': 0.012170356549501913, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.012170356549501913, 'nTON': 1, 'dON': 0.012170356549501913, 'dxOFFAngle': 88.6102104431304, 'dOFF1': 0.07839450345179429, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.07839450345179429, 'nTOFF': 1, 'dOFF': 0.07839450345179429, 'SUCCESS': True}
10:09:03,700 root DEBUG 

=================== Experiment ID #84 	 Dual Point ID: 87 ===================
10:09:03,707 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.031E-08|<1.000E-06)
10:09:03,707 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:04,47 root DEBUG Side: ON	 Angle(dx0, dx): 9.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.133E-02 	 Total distance: 5.133E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([29], dtype=int64), array([[False]])]] 	 class: [2 8]
10:09:04,271 root DEBUG Side: OFF	 Angle(dx0, dx): 2.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.237E-02 	 Total distance: 4.237E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([166], dtype=int64), array([[ True]])]] 	 class: [2 8]
10:09:04,272 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:04,272 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -9.56 	 cIDON = [2 8], cIDOFF = [2 8]
10:09:04,272 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:04,272 root DEBUG dOFF/dON = 0.8
10:09:04,272 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.92669734543938, 'dON1': 0.05132666090835212, 'cIDON1': array([2, 8], dtype=int64), 'dON_patch_1': 0.05132666090835212, 'nTON': 1, 'dON': 0.05132666090835212, 'dxOFFAngle': 82.25306868693002, 'dOFF1': 0.04236738851847629, 'cIDOFF1': array([2, 8], dtype=int64), 'dOFF_patch_1': 0.04236738851847629, 'nTOFF': 1, 'dOFF': 0.04236738851847629, 'SUCCESS': False}
10:09:04,279 root DEBUG 

=================== Experiment ID #85 	 Dual Point ID: 88 ===================
10:09:04,287 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.468E-09|<1.000E-06)
10:09:04,287 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:04,585 root DEBUG Side: ON	 Angle(dx0, dx): 2.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.050E-03 	 Total distance: 8.050E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([239], dtype=int64), array([[False]])]] 	 class: [4 5]
10:09:04,840 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.981E-04 	 Total distance: 2.981E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([145], dtype=int64), array([[False]])]] 	 class: [4 5]
10:09:04,840 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:04,841 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -92.86 	 cIDON = [4 5], cIDOFF = [4 5]
10:09:04,841 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:04,841 root DEBUG dOFF/dON = 0.0
10:09:04,841 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 72.63220410123529, 'dON1': 0.008049664380721388, 'cIDON1': array([4, 5], dtype=int64), 'dON_patch_1': 0.008049664380721388, 'nTON': 1, 'dON': 0.008049664380721388, 'dxOFFAngle': 88.32974669585343, 'dOFF1': 0.000298052232613279, 'cIDOFF1': array([4, 5], dtype=int64), 'dOFF_patch_1': 0.000298052232613279, 'nTOFF': 1, 'dOFF': 0.000298052232613279, 'SUCCESS': False}
10:09:04,851 root DEBUG 

=================== Experiment ID #86 	 Dual Point ID: 89 ===================
10:09:04,859 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.526E-07|<1.000E-06)
10:09:04,860 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:05,186 root DEBUG Side: ON	 Angle(dx0, dx): 1.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.226E-02 	 Total distance: 4.226E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([62], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:05,490 root DEBUG Side: OFF	 Angle(dx0, dx): 1.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.076E-01 	 Total distance: 1.076E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([179], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:05,491 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:05,491 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 43.61 	 cIDON = [2 4], cIDOFF = [2 4]
10:09:05,491 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:05,491 root DEBUG dOFF/dON = 2.5
10:09:05,491 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.61403283527393, 'dON1': 0.042264561451593935, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.042264561451593935, 'nTON': 1, 'dON': 0.042264561451593935, 'dxOFFAngle': 83.71439356905279, 'dOFF1': 0.10763221751810763, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.10763221751810763, 'nTOFF': 1, 'dOFF': 0.10763221751810763, 'SUCCESS': True}
10:09:05,507 root DEBUG 

=================== Experiment ID #87 	 Dual Point ID: 90 ===================
10:09:05,517 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.891E-08|<1.000E-06)
10:09:05,518 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:05,760 root DEBUG Side: ON	 Angle(dx0, dx): 1.86 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.906E-03 	 Total distance: 9.906E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([15], dtype=int64), array([[False]])]] 	 class: [4 9]
10:09:06,39 root DEBUG Side: OFF	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.728E-02 	 Total distance: 9.728E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([15], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:09:06,39 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:06,39 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 81.52 	 cIDON = [4 9], cIDOFF = [4 9]
10:09:06,39 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:06,39 root DEBUG dOFF/dON = 9.8
10:09:06,40 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 79.4925289283394, 'dON1': 0.009905906831758949, 'cIDON1': array([4, 9], dtype=int64), 'dON_patch_1': 0.009905906831758949, 'nTON': 1, 'dON': 0.009905906831758949, 'dxOFFAngle': 76.59664184621474, 'dOFF1': 0.09728236126436758, 'cIDOFF1': array([4, 9], dtype=int64), 'dOFF_patch_1': 0.09728236126436758, 'nTOFF': 1, 'dOFF': 0.09728236126436758, 'SUCCESS': True}
10:09:06,50 root DEBUG 

=================== Experiment ID #88 	 Dual Point ID: 91 ===================
10:09:06,61 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.448E-08|<1.000E-06)
10:09:06,61 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:06,407 root DEBUG Side: ON	 Angle(dx0, dx): 1.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.758E-03 	 Total distance: 9.758E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([11], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:09:06,621 root DEBUG Side: OFF	 Angle(dx0, dx): 1.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.950E-02 	 Total distance: 6.950E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([182], dtype=int64), array([[False]])]] 	 class: [1 8]
10:09:06,815 root DEBUG Side: OFF	 Angle(dx0, dx): 3.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.328E-01 	 Total distance: 2.023E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([59], dtype=int64), array([[False]])]] 	 class: [1 8]
10:09:06,815 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:06,815 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 90.80 	 cIDON = [0 8], cIDOFF = [1 8]
10:09:06,816 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:06,816 root DEBUG dOFF/dON = 20.7
10:09:06,816 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 61.86399456408496, 'dON1': 0.009758457841333425, 'cIDON1': array([0, 8], dtype=int64), 'dON_patch_1': 0.009758457841333425, 'nTON': 1, 'dON': 0.009758457841333425, 'dxOFFAngle': 86.80912482073175, 'dOFF1': 0.20231588965848551, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 0.20231588965848551, 'nTOFF': 1, 'dOFF': 0.20231588965848551, 'SUCCESS': True}
10:09:06,822 root DEBUG 

=================== Experiment ID #89 	 Dual Point ID: 92 ===================
10:09:06,832 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.182E-07|<1.000E-06)
10:09:06,832 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:07,201 root DEBUG Side: ON	 Angle(dx0, dx): 2.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.689E-01 	 Total distance: 1.689E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([35], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:09:07,509 root DEBUG Side: OFF	 Angle(dx0, dx): 1.71 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.527E-02 	 Total distance: 2.527E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([85], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:09:07,509 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:07,510 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -73.98 	 cIDON = [1 8], cIDOFF = [0 8]
10:09:07,510 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:07,510 root DEBUG dOFF/dON = 0.1
10:09:07,510 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.70216499707797, 'dON1': 0.1689420294698211, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 0.1689420294698211, 'nTON': 1, 'dON': 0.1689420294698211, 'dxOFFAngle': 88.3614427529291, 'dOFF1': 0.025271125307822488, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.025271125307822488, 'nTOFF': 1, 'dOFF': 0.025271125307822488, 'SUCCESS': False}
10:09:07,516 root DEBUG 

=================== Experiment ID #90 	 Dual Point ID: 93 ===================
10:09:07,524 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.946E-08|<1.000E-06)
10:09:07,524 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:07,875 root DEBUG Side: ON	 Angle(dx0, dx): 1.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.297E-02 	 Total distance: 2.297E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([29], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:08,90 root DEBUG Side: OFF	 Angle(dx0, dx): 6.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.056E-02 	 Total distance: 1.056E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([29], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:08,90 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:08,90 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -37.01 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:08,90 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:08,90 root DEBUG dOFF/dON = 0.5
10:09:08,90 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 73.80959965095224, 'dON1': 0.022970375891517805, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.022970375891517805, 'nTON': 1, 'dON': 0.022970375891517805, 'dxOFFAngle': 81.23376044328829, 'dOFF1': 0.010561597070143581, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.010561597070143581, 'nTOFF': 1, 'dOFF': 0.010561597070143581, 'SUCCESS': False}
10:09:08,98 root DEBUG 

=================== Experiment ID #91 	 Dual Point ID: 94 ===================
10:09:08,107 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.075E-08|<1.000E-06)
10:09:08,107 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:08,417 root DEBUG Side: ON	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.905E-02 	 Total distance: 8.905E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([133], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:08,621 root DEBUG Side: ON	 Angle(dx0, dx): 2.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.357E-04 	 Total distance: 8.998E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([13], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:08,920 root DEBUG Side: OFF	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.288E-02 	 Total distance: 3.288E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([8], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:08,921 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:08,921 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -46.48 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:08,922 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:08,922 root DEBUG dOFF/dON = 0.4
10:09:08,922 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.71884577080942, 'dON1': 0.08998213885005196, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.08998213885005196, 'nTON': 1, 'dON': 0.08998213885005196, 'dxOFFAngle': 89.70063239421437, 'dOFF1': 0.032876899363857945, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.032876899363857945, 'nTOFF': 1, 'dOFF': 0.032876899363857945, 'SUCCESS': False}
10:09:08,937 root DEBUG 

=================== Experiment ID #92 	 Dual Point ID: 95 ===================
10:09:08,948 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.095E-07|<1.000E-06)
10:09:08,948 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:09,264 root DEBUG Side: ON	 Angle(dx0, dx): 1.77 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.915E-02 	 Total distance: 1.915E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([20], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:09:09,587 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.659E-01 	 Total distance: 1.659E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([233], dtype=int64), array([[False]])]] 	 class: [4 9]
10:09:09,587 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:09,588 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 79.31 	 cIDON = [4 9], cIDOFF = [4 9]
10:09:09,588 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:09,588 root DEBUG dOFF/dON = 8.7
10:09:09,588 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.64452560697036, 'dON1': 0.019147211662715963, 'cIDON1': array([4, 9], dtype=int64), 'dON_patch_1': 0.019147211662715963, 'nTON': 1, 'dON': 0.019147211662715963, 'dxOFFAngle': 88.24228996483109, 'dOFF1': 0.16592572781698348, 'cIDOFF1': array([4, 9], dtype=int64), 'dOFF_patch_1': 0.16592572781698348, 'nTOFF': 1, 'dOFF': 0.16592572781698348, 'SUCCESS': True}
10:09:09,597 root DEBUG 

=================== Experiment ID #93 	 Dual Point ID: 96 ===================
10:09:09,607 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.460E-07|<1.000E-06)
10:09:09,607 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:09,940 root DEBUG Side: ON	 Angle(dx0, dx): 33.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.218E-03 	 Total distance: 9.218E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([5, 7], dtype=int64), array([[0.],
       [1.]])]] 	 class: [3 7]
10:09:10,228 root DEBUG Side: OFF	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.522E-02 	 Total distance: 4.522E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([63], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:10,228 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:10,228 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 66.14 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:10,228 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:10,228 root DEBUG dOFF/dON = 4.9
10:09:10,228 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 80.99992990745005, 'dON1': 0.009218265133504886, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.009218265133504886, 'nTON': 1, 'dON': 0.009218265133504886, 'dxOFFAngle': 85.78013676385861, 'dOFF1': 0.04522327716406239, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.04522327716406239, 'nTOFF': 1, 'dOFF': 0.04522327716406239, 'SUCCESS': True}
10:09:10,241 root DEBUG 

=================== Experiment ID #94 	 Dual Point ID: 97 ===================
10:09:10,250 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.389E-08|<1.000E-06)
10:09:10,250 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:10,583 root DEBUG Side: ON	 Angle(dx0, dx): 1.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.584E-02 	 Total distance: 7.584E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([21], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:10,761 root DEBUG Side: ON	 Angle(dx0, dx): 1.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.101E-02 	 Total distance: 9.684E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([98], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:10,913 root DEBUG Side: ON	 Angle(dx0, dx): 5.94 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.824E-03 	 Total distance: 1.067E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([226], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:11,212 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.497E-01 	 Total distance: 2.497E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([35], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:11,418 root DEBUG Side: OFF	 Angle(dx0, dx): 1.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.057E-01 	 Total distance: 3.554E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([116], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:11,704 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.927E-01 	 Total distance: 5.481E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([117], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:11,705 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:11,706 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 67.42 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:11,706 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:11,706 root DEBUG dOFF/dON = 5.1
10:09:11,706 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 78.01966969406688, 'dON1': 0.10666803368973292, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.10666803368973292, 'nTON': 1, 'dON': 0.10666803368973292, 'dxOFFAngle': 82.19007515821525, 'dOFF1': 0.5480834906927015, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.5480834906927015, 'nTOFF': 1, 'dOFF': 0.5480834906927015, 'SUCCESS': True}
10:09:11,718 root DEBUG 

=================== Experiment ID #95 	 Dual Point ID: 98 ===================
10:09:11,727 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.383E-07|<1.000E-06)
10:09:11,727 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:12,159 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.954E-01 	 Total distance: 1.954E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([136], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:09:12,407 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.827E-02 	 Total distance: 6.827E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([135], dtype=int64), array([[False]])]] 	 class: [0 8]
10:09:12,407 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:12,407 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -48.21 	 cIDON = [1 8], cIDOFF = [0 8]
10:09:12,407 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:12,407 root DEBUG dOFF/dON = 0.3
10:09:12,408 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.4458334329437, 'dON1': 0.19535436294206224, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 0.19535436294206224, 'nTON': 1, 'dON': 0.19535436294206224, 'dxOFFAngle': 81.51832539202283, 'dOFF1': 0.06827271507874977, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.06827271507874977, 'nTOFF': 1, 'dOFF': 0.06827271507874977, 'SUCCESS': False}
10:09:12,417 root DEBUG 

=================== Experiment ID #96 	 Dual Point ID: 99 ===================
10:09:12,425 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.111E-08|<1.000E-06)
10:09:12,425 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:12,734 root DEBUG Side: ON	 Angle(dx0, dx): 0.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.634E-02 	 Total distance: 2.634E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([168], dtype=int64), array([[False]])]] 	 class: [7 9]
10:09:13,51 root DEBUG Side: OFF	 Angle(dx0, dx): 1.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.868E-02 	 Total distance: 4.868E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([202], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:09:13,51 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:13,51 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 29.78 	 cIDON = [7 9], cIDOFF = [7 9]
10:09:13,51 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:13,51 root DEBUG dOFF/dON = 1.8
10:09:13,51 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.48256198353761, 'dON1': 0.02633940478610738, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.02633940478610738, 'nTON': 1, 'dON': 0.02633940478610738, 'dxOFFAngle': 84.42072982360938, 'dOFF1': 0.0486764960939744, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.0486764960939744, 'nTOFF': 1, 'dOFF': 0.0486764960939744, 'SUCCESS': True}
10:09:13,58 root DEBUG 

=================== Experiment ID #97 	 Dual Point ID: 100 ===================
10:09:13,65 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.076E-07|<1.000E-06)
10:09:13,66 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:13,385 root DEBUG Side: ON	 Angle(dx0, dx): 0.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.535E-02 	 Total distance: 2.535E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([78], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:13,772 root DEBUG Side: OFF	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.000E-02 	 Total distance: 5.000E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([78], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:13,773 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:13,773 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 32.71 	 cIDON = [2 6], cIDOFF = [2 6]
10:09:13,773 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:13,773 root DEBUG dOFF/dON = 2.0
10:09:13,773 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.58001401793098, 'dON1': 0.025350532209856468, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.025350532209856468, 'nTON': 1, 'dON': 0.025350532209856468, 'dxOFFAngle': 83.85856872461265, 'dOFF1': 0.0499998117518059, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.0499998117518059, 'nTOFF': 1, 'dOFF': 0.0499998117518059, 'SUCCESS': True}
10:09:13,782 root DEBUG 

=================== Experiment ID #98 	 Dual Point ID: 101 ===================
10:09:13,795 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.209E-07|<1.000E-06)
10:09:13,796 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:14,22 root DEBUG Side: ON	 Angle(dx0, dx): 2.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.233E-02 	 Total distance: 2.233E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([47], dtype=int64), array([[False]])]] 	 class: [1 5]
10:09:14,381 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.528E-01 	 Total distance: 1.528E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([164], dtype=int64), array([[False]])]] 	 class: [0 5]
10:09:14,381 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:14,382 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 74.50 	 cIDON = [1 5], cIDOFF = [0 5]
10:09:14,382 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:14,382 root DEBUG dOFF/dON = 6.8
10:09:14,382 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.28168335274955, 'dON1': 0.02232710313935628, 'cIDON1': array([1, 5], dtype=int64), 'dON_patch_1': 0.02232710313935628, 'nTON': 1, 'dON': 0.02232710313935628, 'dxOFFAngle': 87.00474483028329, 'dOFF1': 0.15275328868108828, 'cIDOFF1': array([0, 5], dtype=int64), 'dOFF_patch_1': 0.15275328868108828, 'nTOFF': 1, 'dOFF': 0.15275328868108828, 'SUCCESS': True}
10:09:14,391 root DEBUG 

=================== Experiment ID #99 	 Dual Point ID: 102 ===================
10:09:14,401 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.070E-08|<1.000E-06)
10:09:14,401 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:14,823 root DEBUG Side: ON	 Angle(dx0, dx): 4.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.350E-02 	 Total distance: 5.350E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([223], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:09:15,50 root DEBUG Side: OFF	 Angle(dx0, dx): 0.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.314E-03 	 Total distance: 5.314E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([14], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:09:15,50 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:15,50 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -81.93 	 cIDON = [4 6], cIDOFF = [4 6]
10:09:15,50 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:15,50 root DEBUG dOFF/dON = 0.1
10:09:15,50 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 81.4872086574384, 'dON1': 0.05350476804492856, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.05350476804492856, 'nTON': 1, 'dON': 0.05350476804492856, 'dxOFFAngle': 88.75829839693674, 'dOFF1': 0.005314426273043868, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.005314426273043868, 'nTOFF': 1, 'dOFF': 0.005314426273043868, 'SUCCESS': False}
10:09:15,64 root DEBUG 

=================== Experiment ID #100 	 Dual Point ID: 103 ===================
10:09:15,77 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.039E-08|<1.000E-06)
10:09:15,78 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:15,400 root DEBUG Side: ON	 Angle(dx0, dx): 1.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.182E-02 	 Total distance: 9.182E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([1], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:15,760 root DEBUG Side: OFF	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.509E-03 	 Total distance: 8.509E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([55], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:15,761 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:15,761 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -83.04 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:15,761 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:15,761 root DEBUG dOFF/dON = 0.1
10:09:15,761 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 76.4687794218877, 'dON1': 0.0918201908324312, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.0918201908324312, 'nTON': 1, 'dON': 0.0918201908324312, 'dxOFFAngle': 89.23592808408496, 'dOFF1': 0.008509161202248846, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.008509161202248846, 'nTOFF': 1, 'dOFF': 0.008509161202248846, 'SUCCESS': False}
10:09:15,776 root DEBUG 

=================== Experiment ID #101 	 Dual Point ID: 104 ===================
10:09:15,785 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.137E-07|<1.000E-06)
10:09:15,786 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:16,126 root DEBUG Side: ON	 Angle(dx0, dx): 4.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.943E-02 	 Total distance: 1.943E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([217], dtype=int64), array([[False]])]] 	 class: [6 9]
10:09:16,484 root DEBUG Side: OFF	 Angle(dx0, dx): 1.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.724E-02 	 Total distance: 2.724E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([109], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:09:16,484 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:16,484 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 16.74 	 cIDON = [6 9], cIDOFF = [6 9]
10:09:16,484 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:16,484 root DEBUG dOFF/dON = 1.4
10:09:16,484 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 60.83386557510385, 'dON1': 0.01943038422254929, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.01943038422254929, 'nTON': 1, 'dON': 0.01943038422254929, 'dxOFFAngle': 82.80715131350259, 'dOFF1': 0.027241075014223497, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.027241075014223497, 'nTOFF': 1, 'dOFF': 0.027241075014223497, 'SUCCESS': True}
10:09:16,492 root DEBUG 

=================== Experiment ID #102 	 Dual Point ID: 105 ===================
10:09:16,502 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.383E-08|<1.000E-06)
10:09:16,503 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:16,839 root DEBUG Side: ON	 Angle(dx0, dx): 0.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.707E-02 	 Total distance: 2.707E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([18], dtype=int64), array([[False]])]] 	 class: [3 4]
10:09:17,110 root DEBUG Side: OFF	 Angle(dx0, dx): 2.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.718E-01 	 Total distance: 1.718E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([35], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:09:17,111 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:17,111 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 72.78 	 cIDON = [3 4], cIDOFF = [3 4]
10:09:17,111 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:17,111 root DEBUG dOFF/dON = 6.3
10:09:17,111 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.29150174613828, 'dON1': 0.027066047609086208, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.027066047609086208, 'nTON': 1, 'dON': 0.027066047609086208, 'dxOFFAngle': 88.5985319637671, 'dOFF1': 0.17179415766295855, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.17179415766295855, 'nTOFF': 1, 'dOFF': 0.17179415766295855, 'SUCCESS': True}
10:09:17,120 root DEBUG 

=================== Experiment ID #103 	 Dual Point ID: 106 ===================
10:09:17,130 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.593E-08|<1.000E-06)
10:09:17,130 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:17,441 root DEBUG Side: ON	 Angle(dx0, dx): 6.86 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.986E-02 	 Total distance: 4.986E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([88], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:17,701 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.945E-02 	 Total distance: 4.945E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([74], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:17,924 root DEBUG Side: OFF	 Angle(dx0, dx): 3.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.896E-02 	 Total distance: 1.484E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([27], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:18,83 root DEBUG Side: OFF	 Angle(dx0, dx): 3.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.339E-02 	 Total distance: 1.718E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([2], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:18,83 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:18,83 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 55.01 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:18,83 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:18,83 root DEBUG dOFF/dON = 3.4
10:09:18,83 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 65.66958334597244, 'dON1': 0.049859916021549155, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.049859916021549155, 'nTON': 1, 'dON': 0.049859916021549155, 'dxOFFAngle': 86.93325322805987, 'dOFF1': 0.17180367084601725, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.17180367084601725, 'nTOFF': 1, 'dOFF': 0.17180367084601725, 'SUCCESS': True}
10:09:18,274 matplotlib.pyplot DEBUG Loaded backend tkagg version 8.6.
10:09:18,374 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:09:18,374 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:09:18,375 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:09:18,375 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:09:18,375 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 1189
10:09:18,385 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:09:18,385 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:09:18,385 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:09:18,385 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:09:18,385 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 2994
10:09:18,422 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:09:18,423 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:09:18,423 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:09:18,423 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:09:18,423 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 696
10:09:18,427 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:09:18,427 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:09:18,428 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:09:18,428 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:09:18,428 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 526
10:09:18,432 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:09:18,432 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:09:18,432 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:09:18,432 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:09:18,432 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 499
10:09:18,436 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:09:18,437 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:09:18,437 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:09:18,437 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:09:18,437 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 673
10:09:18,440 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:09:18,441 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:09:18,441 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:09:18,441 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:09:18,441 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 922
10:09:18,444 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:09:18,445 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:09:18,445 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:09:18,445 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:09:18,445 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 568
10:09:18,449 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:09:18,449 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:09:18,449 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:09:18,449 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:09:18,449 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 626
10:09:18,457 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
10:09:18,459 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,459 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,459 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:09:18,460 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:09:18,460 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,460 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,460 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,460 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,460 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,461 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,461 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,461 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,461 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:09:18,461 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,461 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,461 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,461 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,461 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,461 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,461 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,462 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,462 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,462 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,462 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,462 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,462 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,462 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,462 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,462 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,462 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,463 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,463 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,463 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,463 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,463 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,463 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:09:18,463 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,464 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,464 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,464 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,464 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,464 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,464 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,464 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,464 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:09:18,464 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,465 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,465 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,465 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,465 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,465 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,465 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:09:18,465 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,465 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,465 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:09:18,465 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,466 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,466 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,466 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,466 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:09:18,466 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,466 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,466 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,466 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,467 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,467 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,467 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,467 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,467 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,467 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,467 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,467 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,467 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,468 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,468 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,468 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,468 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,468 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:09:18,468 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,469 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,469 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:09:18,469 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,469 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,469 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,469 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,469 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,469 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,470 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,470 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,470 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:09:18,470 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,470 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,470 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,470 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:09:18,471 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,471 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,471 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,471 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,471 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,471 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,471 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,471 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,471 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,471 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,471 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,471 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:09:18,471 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,471 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,472 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,472 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,472 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,472 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,472 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,472 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,472 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,472 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,472 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,472 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,473 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,473 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,473 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,473 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,473 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,473 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,473 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,473 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,474 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,474 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,474 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,474 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,474 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,474 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,474 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,474 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,474 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,475 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,475 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,475 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,475 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,475 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,475 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:09:18,475 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:09:18,475 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,475 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:09:18,475 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,475 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,475 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,475 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,475 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,475 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,476 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,476 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,476 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,476 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,476 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,476 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,476 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:09:18,476 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,476 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,476 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,476 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,477 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,477 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,477 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,477 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,477 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:09:18,477 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:09:18,477 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,477 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,477 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,477 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,477 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,477 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,477 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,477 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,477 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,477 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,477 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,478 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:09:18,478 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,478 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:09:18,478 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:09:18,478 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,478 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,478 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:09:18,478 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,478 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,479 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,479 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,479 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:09:18,479 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,479 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,479 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,479 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,479 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,479 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,479 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,480 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,480 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,480 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:09:18,480 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,480 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:09:18,480 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,481 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,481 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,481 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,481 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,481 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,481 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,481 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,482 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,482 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,482 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,482 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,482 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,482 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,482 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,482 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,482 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:09:18,483 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,483 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,483 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,483 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,483 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,483 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,483 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,483 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:09:18,483 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,483 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,484 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,484 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,484 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,484 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,484 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,484 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,484 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,484 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:09:18,484 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:09:18,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:09:18,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:09:18,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:09:18,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:09:18,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:09:18,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:09:18,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:09:18,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:09:18,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:09:18,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:09:18,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:09:18,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:09:18,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,491 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,491 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,491 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,491 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,491 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,491 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,491 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,491 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,492 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,492 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,492 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,492 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,492 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,492 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,492 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,493 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,493 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,493 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,493 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,493 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,493 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,494 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,494 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,494 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:09:18,494 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,494 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,494 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,494 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,495 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,495 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,495 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,495 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,495 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,495 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,495 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,495 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,495 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,495 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,495 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:09:18,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,496 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:09:18,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:09:18,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,497 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:09:18,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:09:18,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,498 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:09:18,499 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:09:18,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:09:18,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:09:18,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,500 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,501 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:09:18,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:09:18,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,502 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:09:18,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,503 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:09:18,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,504 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:09:18,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:09:18,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:09:18,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,505 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:09:18,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,506 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,506 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
10:09:18,627 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
10:09:18,628 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,628 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,628 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:09:18,628 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:09:18,628 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,629 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,629 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,629 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,629 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,629 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,629 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,629 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,629 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:09:18,629 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,629 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,630 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,630 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,630 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,630 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,630 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,630 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,630 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,630 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,630 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,630 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,630 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,630 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,630 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,630 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,630 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,630 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,631 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,631 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,631 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,631 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,631 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:09:18,631 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,631 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,631 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,631 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,631 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,631 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,631 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,632 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,632 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:09:18,632 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,632 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,632 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,632 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,632 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,632 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,632 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:09:18,632 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,632 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,633 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:09:18,633 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,633 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,633 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,633 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,633 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:09:18,633 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,633 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,633 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,633 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,633 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,633 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,633 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,634 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,634 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,634 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,634 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,634 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,634 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,634 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,634 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,635 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,635 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,635 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:09:18,635 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,635 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,635 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:09:18,635 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,635 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,635 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,635 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,635 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,635 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,636 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,636 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,636 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:09:18,636 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,636 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,636 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,636 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:09:18,636 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,636 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,637 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,637 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,637 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,637 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,637 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,637 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,637 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,637 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,638 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,638 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:09:18,638 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,638 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,638 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,638 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,638 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,638 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,638 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,638 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,640 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,640 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,640 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,640 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,640 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,640 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,640 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,640 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,640 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,640 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,640 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,641 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,641 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,641 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,641 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,641 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,641 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:09:18,641 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:09:18,641 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,641 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:09:18,642 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,642 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,642 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,642 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,642 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,642 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,642 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,642 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,642 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,643 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,643 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,643 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,643 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:09:18,643 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,643 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,643 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,643 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,643 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,643 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,644 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,644 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,644 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:09:18,644 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:09:18,644 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,644 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,644 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,644 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,644 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,644 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,644 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,645 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,645 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,645 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,645 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,645 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:09:18,645 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,645 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:09:18,645 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:09:18,645 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,645 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,645 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:09:18,646 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,646 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,646 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,646 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,646 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:09:18,647 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,647 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,647 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,647 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,647 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,647 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,647 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,647 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,647 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,647 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:09:18,647 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,648 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:09:18,648 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,648 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,648 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,648 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,648 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,648 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,648 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,648 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,648 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,648 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:09:18,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,650 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,650 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,650 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,650 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,650 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:09:18,650 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,650 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,650 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,650 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,650 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,650 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,650 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,651 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,651 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,651 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:09:18,651 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,651 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,651 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:09:18,651 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:09:18,651 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,651 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:09:18,651 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,651 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:09:18,651 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,651 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,651 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:09:18,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:09:18,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:09:18,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,653 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,653 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:09:18,653 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,653 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:09:18,653 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,653 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:09:18,653 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,653 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:09:18,653 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,653 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,653 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,653 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,654 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:09:18,654 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,654 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,654 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,654 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,654 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,654 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:09:18,654 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,654 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,655 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,655 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,655 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,655 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,655 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,655 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,655 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,655 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,655 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,656 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,656 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,656 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,656 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,656 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,656 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,656 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,656 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,656 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,656 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:09:18,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,657 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,658 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,658 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,658 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,658 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,658 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,658 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,658 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,658 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,658 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,658 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,658 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,659 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,659 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,659 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,659 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,659 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,659 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:09:18,659 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,659 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,659 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,659 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,660 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,660 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,660 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,660 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,660 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,660 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,660 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:09:18,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:09:18,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,661 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,662 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,662 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:09:18,662 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,662 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,662 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,662 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,662 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:09:18,662 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,662 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,662 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,663 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,663 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,663 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,663 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,663 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,663 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,663 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:09:18,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,664 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:09:18,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:09:18,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:09:18,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,665 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,666 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:09:18,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,667 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:09:18,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:09:18,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,668 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,669 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:09:18,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,670 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:09:18,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,671 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:09:18,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:09:18,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,672 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:09:18,673 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,673 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,673 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,673 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,673 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
10:09:18,852 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0.
10:09:18,852 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,852 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,853 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:09:18,853 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:09:18,853 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,853 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,853 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,853 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,853 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,853 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,853 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,853 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,853 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:09:18,853 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,853 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,853 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,853 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,853 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,853 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,853 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,853 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,853 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,854 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,854 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,854 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,854 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,854 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,854 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,854 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,854 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,854 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,854 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,854 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,854 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,854 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,854 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:09:18,854 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,854 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,854 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,854 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,854 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,854 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,854 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,855 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,855 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:09:18,855 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,855 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,855 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,855 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,855 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,855 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,856 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:09:18,856 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,856 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,856 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:09:18,856 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,856 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,856 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,857 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,857 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:09:18,857 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,857 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,857 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,857 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,857 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,857 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,857 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,857 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,857 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,857 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,858 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,858 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,858 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,858 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,858 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,858 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,858 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,858 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:09:18,858 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,858 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,858 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:09:18,858 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,858 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,859 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,859 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,859 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,859 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,859 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,859 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,859 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:09:18,859 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,859 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,859 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,860 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:09:18,860 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,860 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,860 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,860 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,860 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,860 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,860 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,860 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,860 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,860 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,861 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,861 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:09:18,861 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,861 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,861 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,861 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,861 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,861 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,861 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,861 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,861 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,861 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,861 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,862 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,862 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,862 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,862 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,862 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,862 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,862 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,862 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,862 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,862 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,862 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,862 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,863 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,863 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,863 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,863 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,863 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,863 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,863 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,863 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,864 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,864 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,864 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,864 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:09:18,864 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:09:18,864 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,864 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:09:18,864 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,864 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,864 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,864 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,864 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,865 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,865 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,865 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,865 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,865 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,865 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,865 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,865 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:09:18,865 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,865 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,865 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,865 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,865 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,865 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,865 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,866 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,866 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:09:18,866 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:09:18,866 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,866 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,866 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,867 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,867 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,867 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,867 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,867 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,867 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,867 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,867 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,867 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:09:18,867 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,868 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:09:18,868 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:09:18,868 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,868 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,868 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:09:18,868 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,869 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,869 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,869 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,869 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:09:18,869 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,869 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,869 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,869 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,869 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,869 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,869 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,870 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,870 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,870 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:09:18,870 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,870 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:09:18,870 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,870 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,870 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,870 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,870 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,870 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,871 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,871 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,871 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,871 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,871 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,871 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,871 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,871 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,871 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,872 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,872 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:09:18,872 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,872 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,872 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,872 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,872 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,872 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,873 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,873 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:09:18,873 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,873 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,874 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,874 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,874 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,874 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,875 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,875 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,875 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,875 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:09:18,875 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,875 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,875 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:09:18,876 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:09:18,876 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,876 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:09:18,876 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,876 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:09:18,876 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,876 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,876 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,876 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,876 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,877 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,877 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,877 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:09:18,877 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,877 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,877 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,877 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,877 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,877 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,877 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:09:18,877 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,877 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,877 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,877 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,877 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,877 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,877 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,877 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:09:18,878 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,878 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,878 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:09:18,878 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,878 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:09:18,878 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,878 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:09:18,878 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,878 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:09:18,878 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,878 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,878 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,879 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,879 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:09:18,879 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,879 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,879 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,879 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,879 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,879 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:09:18,879 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,880 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,880 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,880 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,880 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,880 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,880 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,880 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,880 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,881 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,881 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,881 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,881 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,881 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,881 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,881 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,882 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,882 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,882 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,882 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,882 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,882 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,883 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,883 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,883 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,883 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,883 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:09:18,883 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,883 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,883 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,883 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,883 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,883 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,884 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,884 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,884 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,884 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,884 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,884 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,884 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,884 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,885 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,885 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,885 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,885 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,885 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,885 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,885 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:09:18,885 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,885 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,885 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,885 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,885 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:09:18,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:09:18,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,887 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,887 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,887 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:09:18,887 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,887 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,887 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,887 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,887 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:09:18,888 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,888 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,888 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,888 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,888 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,888 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,888 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,888 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,888 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,888 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,888 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,888 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,888 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,888 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,888 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,889 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:09:18,889 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,889 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,889 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,889 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,889 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:09:18,889 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,889 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:09:18,889 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:09:18,889 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,889 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,889 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,889 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,889 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,889 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,889 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,889 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,890 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,890 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,890 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,890 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,890 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,890 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,890 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,890 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,890 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:09:18,890 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:09:18,890 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:09:18,890 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,890 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,890 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,890 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,890 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,891 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:09:18,891 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,891 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,891 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,891 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:09:18,891 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,891 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,891 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,891 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,891 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,891 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,892 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,892 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,892 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,892 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,892 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,892 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,892 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,892 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,892 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,892 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:09:18,892 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,893 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,893 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,893 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,893 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,893 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,893 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:09:18,893 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,893 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,893 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:09:18,893 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,893 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,893 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,893 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:09:18,893 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:09:18,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:09:18,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:09:18,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:09:18,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,894 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:09:18,894 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
