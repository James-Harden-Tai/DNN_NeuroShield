10:07:59,335 root DEBUG Check that model weights are dtype tf.float64: 	 <dtype: 'float64'>
10:07:59,336 root INFO eps: 1e-06
10:07:59,336 root INFO tol: 1e-06
10:07:59,336 root DEBUG Load dual points from file: ../data/dual_points_cifar10_3x256_64_10_float64.
10:07:59,345 root DEBUG 

=================== Experiment ID #0 	 Dual Point ID: 1 ===================
10:07:59,353 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.726E-08|<1.000E-06)
10:07:59,354 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:07:59,637 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.522E-01 	 Total distance: 1.522E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([222], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:07:59,831 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.428E-01 	 Total distance: 4.950E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([207], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:00,114 root DEBUG Side: OFF	 Angle(dx0, dx): 0.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.552E-01 	 Total distance: 1.552E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([10], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:00,114 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:00,114 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -52.27 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:00,114 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:00,114 root DEBUG dOFF/dON = 0.3
10:08:00,114 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.55115433896931, 'dON1': 0.49498931763359166, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.49498931763359166, 'nTON': 1, 'dON': 0.49498931763359166, 'dxOFFAngle': 86.21176254994941, 'dOFF1': 0.15515430648400844, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.15515430648400844, 'nTOFF': 1, 'dOFF': 0.15515430648400844, 'SUCCESS': False}
10:08:00,131 root DEBUG 

=================== Experiment ID #1 	 Dual Point ID: 2 ===================
10:08:00,143 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.835E-08|<1.000E-06)
10:08:00,143 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:00,523 root DEBUG Side: ON	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.371E-01 	 Total distance: 1.371E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([123], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:00,854 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.100E-02 	 Total distance: 1.100E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([185], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:01,63 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.895E-03 	 Total distance: 1.889E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([98], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:01,331 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.127E-02 	 Total distance: 3.016E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([77], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:01,331 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:01,331 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -63.92 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:01,332 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:01,332 root DEBUG dOFF/dON = 0.2
10:08:01,332 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.91714107772287, 'dON1': 0.13705131941685475, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.13705131941685475, 'nTON': 1, 'dON': 0.13705131941685475, 'dxOFFAngle': 89.23164180103916, 'dOFF1': 0.030162686004401557, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.030162686004401557, 'nTOFF': 1, 'dOFF': 0.030162686004401557, 'SUCCESS': False}
10:08:01,344 root DEBUG 

=================== Experiment ID #2 	 Dual Point ID: 3 ===================
10:08:01,357 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.412E-08|<1.000E-06)
10:08:01,357 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:01,725 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.432E-01 	 Total distance: 3.432E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([232], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:08:01,979 root DEBUG Side: ON	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.582E-03 	 Total distance: 3.448E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([141], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:08:02,333 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.998E-02 	 Total distance: 4.998E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([218], dtype=int64), array([[False]])]] 	 class: [6 9]
10:08:02,582 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.763E-01 	 Total distance: 2.262E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([237], dtype=int64), array([[False]])]] 	 class: [6 9]
10:08:02,582 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:02,582 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -20.77 	 cIDON = [6 9], cIDOFF = [6 9]
10:08:02,583 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:02,583 root DEBUG dOFF/dON = 0.7
10:08:02,583 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.83845641157843, 'dON1': 0.3448196805048713, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.3448196805048713, 'nTON': 1, 'dON': 0.3448196805048713, 'dxOFFAngle': 87.96543458320117, 'dOFF1': 0.22623425033805922, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.22623425033805922, 'nTOFF': 1, 'dOFF': 0.22623425033805922, 'SUCCESS': False}
10:08:02,589 root DEBUG 

=================== Experiment ID #3 	 Dual Point ID: 4 ===================
10:08:02,600 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.932E-08|<1.000E-06)
10:08:02,601 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:02,980 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.077E-03 	 Total distance: 6.077E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([174], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:03,218 root DEBUG Side: ON	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.005E-02 	 Total distance: 6.613E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([95], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:03,536 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.389E-01 	 Total distance: 1.389E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([60], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:03,536 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:03,536 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 35.50 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:03,536 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:03,536 root DEBUG dOFF/dON = 2.1
10:08:03,537 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.94748775863056, 'dON1': 0.06613114353213218, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.06613114353213218, 'nTON': 1, 'dON': 0.06613114353213218, 'dxOFFAngle': 86.87159057016159, 'dOFF1': 0.13893385741675987, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.13893385741675987, 'nTOFF': 1, 'dOFF': 0.13893385741675987, 'SUCCESS': True}
10:08:03,548 root DEBUG 

=================== Experiment ID #4 	 Dual Point ID: 5 ===================
10:08:03,557 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.071E-08|<1.000E-06)
10:08:03,557 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:03,812 root DEBUG Side: ON	 Angle(dx0, dx): 2.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.721E-07 	 Total distance: 6.721E-07 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:08:04,40 root DEBUG Side: ON	 Angle(dx0, dx): 1.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.680E-02 	 Total distance: 9.680E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([125], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:08:04,280 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.560E-01 	 Total distance: 8.528E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([245], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:08:04,598 root DEBUG Side: ON	 Angle(dx0, dx): 0.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.944E-01 	 Total distance: 1.047E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([38], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:08:04,853 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.039E-01 	 Total distance: 1.551E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([21], dtype=int64), array([[False]])]] 	 class: [0 8]
10:08:05,164 root DEBUG Side: OFF	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.547E-02 	 Total distance: 3.547E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([227], dtype=int64), array([[False]])]] 	 class: [1 8]
10:08:05,164 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:05,164 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -95.53 	 cIDON = [0 8], cIDOFF = [1 8]
10:08:05,164 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:05,165 root DEBUG dOFF/dON = 0.0
10:08:05,165 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.40376829836102, 'dON1': 1.5510486640494419, 'cIDON1': array([0, 8], dtype=int64), 'dON_patch_1': 1.5510486640494419, 'nTON': 1, 'dON': 1.5510486640494419, 'dxOFFAngle': 87.86577757761827, 'dOFF1': 0.03546618410230895, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 0.03546618410230895, 'nTOFF': 1, 'dOFF': 0.03546618410230895, 'SUCCESS': False}
10:08:05,176 root DEBUG 

=================== Experiment ID #5 	 Dual Point ID: 6 ===================
10:08:05,187 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.322E-08|<1.000E-06)
10:08:05,187 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:05,590 root DEBUG Side: ON	 Angle(dx0, dx): 0.98 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.968E-01 	 Total distance: 4.968E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([38], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:08:05,901 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.117E-01 	 Total distance: 1.117E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([104], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:08:06,156 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.232E-01 	 Total distance: 5.349E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([83], dtype=int64), array([[False]])]] 	 class: [2 5]
10:08:06,414 root DEBUG Side: OFF	 Angle(dx0, dx): 0.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.018E-01 	 Total distance: 7.367E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([174], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:08:06,415 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:06,415 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 19.45 	 cIDON = [2 5], cIDOFF = [2 5]
10:08:06,415 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:06,415 root DEBUG dOFF/dON = 1.5
10:08:06,415 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.21483852623194, 'dON1': 0.4967820890266439, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.4967820890266439, 'nTON': 1, 'dON': 0.4967820890266439, 'dxOFFAngle': 85.98954170839392, 'dOFF1': 0.7367141842009055, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.7367141842009055, 'nTOFF': 1, 'dOFF': 0.7367141842009055, 'SUCCESS': True}
10:08:06,424 root DEBUG 

=================== Experiment ID #6 	 Dual Point ID: 7 ===================
10:08:06,433 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.271E-09|<1.000E-06)
10:08:06,433 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:06,852 root DEBUG Side: ON	 Angle(dx0, dx): 0.71 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.589E-01 	 Total distance: 3.589E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([25], dtype=int64), array([[False]])]] 	 class: [1 4]
10:08:07,128 root DEBUG Side: OFF	 Angle(dx0, dx): 4.94 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.374E-06 	 Total distance: 3.374E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 4]
10:08:07,128 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:07,128 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -100.00 	 cIDON = [1 4], cIDOFF = [0 4]
10:08:07,129 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:07,129 root DEBUG dOFF/dON = 0.0
10:08:07,129 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.85394681352183, 'dON1': 0.3589496996081042, 'cIDON1': array([1, 4], dtype=int64), 'dON_patch_1': 0.3589496996081042, 'nTON': 1, 'dON': 0.3589496996081042, 'dxOFFAngle': 84.68159120004185, 'dOFF1': 3.373852536525157e-06, 'cIDOFF1': array([0, 4], dtype=int64), 'dOFF_patch_1': 3.373852536525157e-06, 'nTOFF': 1, 'dOFF': 3.373852536525157e-06, 'SUCCESS': False}
10:08:07,138 root DEBUG 

=================== Experiment ID #7 	 Dual Point ID: 8 ===================
10:08:07,148 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.565E-08|<1.000E-06)
10:08:07,148 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:07,568 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.732E-01 	 Total distance: 9.732E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([94], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:08:07,900 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.635E-02 	 Total distance: 5.635E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([225], dtype=int64), array([[False]])]] 	 class: [3 6]
10:08:07,901 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:07,901 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -89.05 	 cIDON = [3 6], cIDOFF = [3 6]
10:08:07,901 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:07,901 root DEBUG dOFF/dON = 0.1
10:08:07,901 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.52215055686554, 'dON1': 0.9731807756803478, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.9731807756803478, 'nTON': 1, 'dON': 0.9731807756803478, 'dxOFFAngle': 89.73830888251953, 'dOFF1': 0.056353314915746376, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.056353314915746376, 'nTOFF': 1, 'dOFF': 0.056353314915746376, 'SUCCESS': False}
10:08:07,911 root DEBUG 

=================== Experiment ID #8 	 Dual Point ID: 9 ===================
10:08:07,919 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.650E-08|<1.000E-06)
10:08:07,919 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:08,297 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.365E-01 	 Total distance: 1.365E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([157], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:08:08,504 root DEBUG Side: ON	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.276E-01 	 Total distance: 2.641E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([195], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:08:08,910 root DEBUG Side: OFF	 Angle(dx0, dx): 1.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.199E-02 	 Total distance: 3.199E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([8], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:08:08,910 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:08,910 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -78.39 	 cIDON = [5 6], cIDOFF = [5 6]
10:08:08,910 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:08,910 root DEBUG dOFF/dON = 0.1
10:08:08,910 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.57689418389623, 'dON1': 0.2640542124099066, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.2640542124099066, 'nTON': 1, 'dON': 0.2640542124099066, 'dxOFFAngle': 87.39247907957686, 'dOFF1': 0.03198771963325005, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.03198771963325005, 'nTOFF': 1, 'dOFF': 0.03198771963325005, 'SUCCESS': False}
10:08:08,921 root DEBUG 

=================== Experiment ID #9 	 Dual Point ID: 10 ===================
10:08:08,932 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.460E-08|<1.000E-06)
10:08:08,933 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:09,325 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.063E-01 	 Total distance: 4.063E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([137], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:09,555 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.543E-01 	 Total distance: 6.605E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([22], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:09,871 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.748E-02 	 Total distance: 3.748E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([227], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:10,111 root DEBUG Side: OFF	 Angle(dx0, dx): 0.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.526E-01 	 Total distance: 2.901E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([24], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:10,112 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:10,112 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -38.96 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:10,112 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:10,112 root DEBUG dOFF/dON = 0.4
10:08:10,112 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.93486514170768, 'dON1': 0.6605341991479321, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.6605341991479321, 'nTON': 1, 'dON': 0.6605341991479321, 'dxOFFAngle': 89.94009656362347, 'dOFF1': 0.290117841094092, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.290117841094092, 'nTOFF': 1, 'dOFF': 0.290117841094092, 'SUCCESS': False}
10:08:10,120 root DEBUG 

=================== Experiment ID #10 	 Dual Point ID: 11 ===================
10:08:10,132 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.242E-07|<1.000E-06)
10:08:10,133 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:10,406 root DEBUG Side: ON	 Angle(dx0, dx): 1.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.063E-06 	 Total distance: 8.063E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 9]
10:08:10,700 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.696E-01 	 Total distance: 4.696E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([130], dtype=int64), array([[False]])]] 	 class: [0 9]
10:08:10,701 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:10,701 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [0 9], cIDOFF = [0 9]
10:08:10,701 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:10,701 root DEBUG dOFF/dON = 58247.6
10:08:10,701 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.3415169399945, 'dON1': 8.062919667003098e-06, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 8.062919667003098e-06, 'nTON': 1, 'dON': 8.062919667003098e-06, 'dxOFFAngle': 89.5846201328144, 'dOFF1': 0.46964572388325593, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.46964572388325593, 'nTOFF': 1, 'dOFF': 0.46964572388325593, 'SUCCESS': True}
10:08:10,709 root DEBUG 

=================== Experiment ID #11 	 Dual Point ID: 12 ===================
10:08:10,721 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.258E-08|<1.000E-06)
10:08:10,721 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:11,12 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.682E-01 	 Total distance: 1.682E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([218], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:11,289 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.534E-02 	 Total distance: 7.534E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([12], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:11,566 root DEBUG Side: OFF	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.209E-02 	 Total distance: 1.674E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([138], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:11,567 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:11,567 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -0.24 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:11,567 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:11,567 root DEBUG dOFF/dON = 1.0
10:08:11,567 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.66861960128998, 'dON1': 0.16823392861181788, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.16823392861181788, 'nTON': 1, 'dON': 0.16823392861181788, 'dxOFFAngle': 89.89895583791927, 'dOFF1': 0.16742776089899047, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.16742776089899047, 'nTOFF': 1, 'dOFF': 0.16742776089899047, 'SUCCESS': False}
10:08:11,578 root DEBUG 

=================== Experiment ID #12 	 Dual Point ID: 13 ===================
10:08:11,586 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.304E-10|<1.000E-06)
10:08:11,586 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:11,986 root DEBUG Side: ON	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.687E-02 	 Total distance: 7.687E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([129], dtype=int64), array([[False]])]] 	 class: [0 7]
10:08:12,206 root DEBUG Side: OFF	 Angle(dx0, dx): 2.88 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.736E-07 	 Total distance: 6.736E-07 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 7]
10:08:12,352 root DEBUG Side: OFF	 Angle(dx0, dx): 2.88 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.733E-07 	 Total distance: 1.347E-06 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 7]
10:08:12,489 root DEBUG Side: OFF	 Angle(dx0, dx): 2.88 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.736E-07 	 Total distance: 2.021E-06 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 7]
10:08:12,504 root DEBUG Got stuck in too many past-layer relus.
10:08:12,504 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:08:12,505 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:08:12,507 root DEBUG 

=================== Experiment ID #12 	 Dual Point ID: 14 ===================
10:08:12,518 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.506E-08|<1.000E-06)
10:08:12,518 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:12,790 root DEBUG Side: ON	 Angle(dx0, dx): 3.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.692E-06 	 Total distance: 2.692E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 4]
10:08:13,126 root DEBUG Side: OFF	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.784E-01 	 Total distance: 3.784E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([77], dtype=int64), array([[ True]])]] 	 class: [1 4]
10:08:13,126 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:13,126 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [1 4], cIDOFF = [1 4]
10:08:13,126 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:13,126 root DEBUG dOFF/dON = 140534.2
10:08:13,127 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.58969795581397, 'dON1': 2.6922299367114094e-06, 'cIDON1': array([1, 4], dtype=int64), 'dON_patch_1': 2.6922299367114094e-06, 'nTON': 1, 'dON': 2.6922299367114094e-06, 'dxOFFAngle': 86.65749714695467, 'dOFF1': 0.3783503495027182, 'cIDOFF1': array([1, 4], dtype=int64), 'dOFF_patch_1': 0.3783503495027182, 'nTOFF': 1, 'dOFF': 0.3783503495027182, 'SUCCESS': True}
10:08:13,140 root DEBUG 

=================== Experiment ID #13 	 Dual Point ID: 15 ===================
10:08:13,150 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.732E-08|<1.000E-06)
10:08:13,150 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:13,497 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.435E-02 	 Total distance: 1.435E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([255], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:08:13,772 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.703E-01 	 Total distance: 4.847E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([138], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:08:14,182 root DEBUG Side: OFF	 Angle(dx0, dx): 0.96 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.723E-01 	 Total distance: 1.723E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([60], dtype=int64), array([[False]])]] 	 class: [3 4]
10:08:14,183 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:14,183 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -47.54 	 cIDON = [3 4], cIDOFF = [3 4]
10:08:14,183 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:14,183 root DEBUG dOFF/dON = 0.4
10:08:14,183 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.52561943038151, 'dON1': 0.48469647280980627, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.48469647280980627, 'nTON': 1, 'dON': 0.48469647280980627, 'dxOFFAngle': 86.51691133257788, 'dOFF1': 0.17234753592033414, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.17234753592033414, 'nTOFF': 1, 'dOFF': 0.17234753592033414, 'SUCCESS': False}
10:08:14,190 root DEBUG 

=================== Experiment ID #14 	 Dual Point ID: 16 ===================
10:08:14,198 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.747E-08|<1.000E-06)
10:08:14,198 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:14,592 root DEBUG Side: ON	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.561E-02 	 Total distance: 5.561E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([28], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:14,925 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.575E-01 	 Total distance: 7.575E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([52], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:14,925 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:14,926 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 86.32 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:14,926 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:14,926 root DEBUG dOFF/dON = 13.6
10:08:14,926 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.05916718492689, 'dON1': 0.05560706248527477, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.05560706248527477, 'nTON': 1, 'dON': 0.05560706248527477, 'dxOFFAngle': 89.89485699058777, 'dOFF1': 0.7574780047913866, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.7574780047913866, 'nTOFF': 1, 'dOFF': 0.7574780047913866, 'SUCCESS': True}
10:08:14,934 root DEBUG 

=================== Experiment ID #15 	 Dual Point ID: 17 ===================
10:08:14,944 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.979E-08|<1.000E-06)
10:08:14,944 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:15,389 root DEBUG Side: ON	 Angle(dx0, dx): 0.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.749E-01 	 Total distance: 5.749E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([217], dtype=int64), array([[False]])]] 	 class: [4 8]
10:08:15,751 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.066E-02 	 Total distance: 8.066E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([154], dtype=int64), array([[False]])]] 	 class: [4 8]
10:08:15,958 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.017E-02 	 Total distance: 9.083E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([16], dtype=int64), array([[False]])]] 	 class: [4 8]
10:08:16,258 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.530E-02 	 Total distance: 1.161E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([136], dtype=int64), array([[False]])]] 	 class: [4 8]
10:08:16,258 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:16,258 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -66.39 	 cIDON = [4 8], cIDOFF = [4 8]
10:08:16,258 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:16,258 root DEBUG dOFF/dON = 0.2
10:08:16,258 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.2677668920697, 'dON1': 0.5748796992645477, 'cIDON1': array([4, 8], dtype=int64), 'dON_patch_1': 0.5748796992645477, 'nTON': 1, 'dON': 0.5748796992645477, 'dxOFFAngle': 89.02489166026162, 'dOFF1': 0.1161245259990342, 'cIDOFF1': array([4, 8], dtype=int64), 'dOFF_patch_1': 0.1161245259990342, 'nTOFF': 1, 'dOFF': 0.1161245259990342, 'SUCCESS': False}
10:08:16,266 root DEBUG 

=================== Experiment ID #16 	 Dual Point ID: 18 ===================
10:08:16,275 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.777E-08|<1.000E-06)
10:08:16,275 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:16,571 root DEBUG Side: ON	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.947E-02 	 Total distance: 4.947E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([158], dtype=int64), array([[False]])]] 	 class: [2 6]
10:08:16,887 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.594E-02 	 Total distance: 2.594E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([159], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:08:17,182 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.357E-02 	 Total distance: 5.950E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([215], dtype=int64), array([[False]])]] 	 class: [2 6]
10:08:17,480 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.291E-02 	 Total distance: 1.124E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([246], dtype=int64), array([[False]])]] 	 class: [2 6]
10:08:17,481 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:17,482 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 38.89 	 cIDON = [2 6], cIDOFF = [2 6]
10:08:17,483 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:17,483 root DEBUG dOFF/dON = 2.3
10:08:17,483 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.0373142130039, 'dON1': 0.049465024381115455, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.049465024381115455, 'nTON': 1, 'dON': 0.049465024381115455, 'dxOFFAngle': 89.2594566787415, 'dOFF1': 0.11241385875424176, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.11241385875424176, 'nTOFF': 1, 'dOFF': 0.11241385875424176, 'SUCCESS': True}
10:08:17,501 root DEBUG 

=================== Experiment ID #17 	 Dual Point ID: 19 ===================
10:08:17,512 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.227E-08|<1.000E-06)
10:08:17,512 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:17,858 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.187E-02 	 Total distance: 2.187E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([5], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:08:18,94 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.609E-01 	 Total distance: 3.828E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([237], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:08:18,298 root DEBUG Side: ON	 Angle(dx0, dx): 0.87 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.792E-02 	 Total distance: 4.607E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([196], dtype=int64), array([[False]])]] 	 class: [5 9]
10:08:18,719 root DEBUG Side: OFF	 Angle(dx0, dx): 0.95 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.002E-01 	 Total distance: 4.002E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([29], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:08:18,719 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:18,719 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -7.03 	 cIDON = [5 9], cIDOFF = [5 9]
10:08:18,719 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:18,720 root DEBUG dOFF/dON = 0.9
10:08:18,720 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.85491402949683, 'dON1': 0.4607014061589684, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.4607014061589684, 'nTON': 1, 'dON': 0.4607014061589684, 'dxOFFAngle': 84.4559739738944, 'dOFF1': 0.4002090955475207, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.4002090955475207, 'nTOFF': 1, 'dOFF': 0.4002090955475207, 'SUCCESS': False}
10:08:18,726 root DEBUG 

=================== Experiment ID #18 	 Dual Point ID: 20 ===================
10:08:18,738 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.449E-08|<1.000E-06)
10:08:18,738 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:19,90 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.685E-01 	 Total distance: 1.685E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([173], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:19,378 root DEBUG Side: ON	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.685E-02 	 Total distance: 2.154E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([76], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:19,632 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.149E-01 	 Total distance: 5.303E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([103], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:19,888 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.718E-01 	 Total distance: 1.002E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([81], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:20,219 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.968E-02 	 Total distance: 4.968E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([197], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:20,555 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.357E-01 	 Total distance: 9.854E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([219], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:20,917 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.444E-01 	 Total distance: 1.230E+00 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([16], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:21,200 root DEBUG Side: OFF	 Angle(dx0, dx): 1.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.591E-02 	 Total distance: 1.306E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([71], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:21,200 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:21,200 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 13.16 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:21,200 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:21,200 root DEBUG dOFF/dON = 1.3
10:08:21,200 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.750735431411, 'dON1': 1.0020849296089271, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 1.0020849296089271, 'nTON': 1, 'dON': 1.0020849296089271, 'dxOFFAngle': 89.34289801915763, 'dOFF1': 1.3057132253476729, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 1.3057132253476729, 'nTOFF': 1, 'dOFF': 1.3057132253476729, 'SUCCESS': True}
10:08:21,210 root DEBUG 

=================== Experiment ID #19 	 Dual Point ID: 21 ===================
10:08:21,224 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.867E-08|<1.000E-06)
10:08:21,224 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:21,588 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.400E-02 	 Total distance: 1.400E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([105], dtype=int64), array([[False]])]] 	 class: [0 9]
10:08:21,961 root DEBUG Side: OFF	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.740E-01 	 Total distance: 7.740E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([201], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:08:21,962 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:21,962 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 96.45 	 cIDON = [0 9], cIDOFF = [1 9]
10:08:21,962 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:21,963 root DEBUG dOFF/dON = 55.3
10:08:21,963 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.66424246214704, 'dON1': 0.013998560115719143, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.013998560115719143, 'nTON': 1, 'dON': 0.013998560115719143, 'dxOFFAngle': 88.26392320966188, 'dOFF1': 0.773982306166786, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.773982306166786, 'nTOFF': 1, 'dOFF': 0.773982306166786, 'SUCCESS': True}
10:08:21,976 root DEBUG 

=================== Experiment ID #20 	 Dual Point ID: 22 ===================
10:08:21,982 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.890E-08|<1.000E-06)
10:08:21,982 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:22,410 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.648E-02 	 Total distance: 2.648E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([142], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:08:22,722 root DEBUG Side: OFF	 Angle(dx0, dx): 1.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.008E-05 	 Total distance: 1.008E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 9]
10:08:22,722 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:22,722 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.92 	 cIDON = [1 9], cIDOFF = [1 9]
10:08:22,722 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:22,722 root DEBUG dOFF/dON = 0.0
10:08:22,722 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.65907421792136, 'dON1': 0.02648070764235341, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.02648070764235341, 'nTON': 1, 'dON': 0.02648070764235341, 'dxOFFAngle': 89.71724420217402, 'dOFF1': 1.0078106710094448e-05, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 1.0078106710094448e-05, 'nTOFF': 1, 'dOFF': 1.0078106710094448e-05, 'SUCCESS': False}
10:08:22,735 root DEBUG 

=================== Experiment ID #21 	 Dual Point ID: 23 ===================
10:08:22,745 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.220E-08|<1.000E-06)
10:08:22,746 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:23,162 root DEBUG Side: ON	 Angle(dx0, dx): 0.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.025E-01 	 Total distance: 3.025E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([197], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:08:23,369 root DEBUG Side: ON	 Angle(dx0, dx): 1.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.909E-02 	 Total distance: 3.216E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([65], dtype=int64), array([[False]])]] 	 class: [4 6]
10:08:23,706 root DEBUG Side: OFF	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.172E-01 	 Total distance: 1.172E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([22], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:08:23,706 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:23,706 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -46.58 	 cIDON = [4 6], cIDOFF = [4 6]
10:08:23,706 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:23,706 root DEBUG dOFF/dON = 0.4
10:08:23,706 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.77532593124756, 'dON1': 0.32163160596203383, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.32163160596203383, 'nTON': 1, 'dON': 0.32163160596203383, 'dxOFFAngle': 84.92286399766114, 'dOFF1': 0.11723019855380766, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.11723019855380766, 'nTOFF': 1, 'dOFF': 0.11723019855380766, 'SUCCESS': False}
10:08:23,716 root DEBUG 

=================== Experiment ID #22 	 Dual Point ID: 24 ===================
10:08:23,729 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.638E-09|<1.000E-06)
10:08:23,729 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:24,95 root DEBUG Side: ON	 Angle(dx0, dx): 0.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.190E-02 	 Total distance: 3.190E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([191], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:24,485 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.562E-02 	 Total distance: 7.562E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([95], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:24,781 root DEBUG Side: OFF	 Angle(dx0, dx): 0.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.899E-01 	 Total distance: 7.655E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([195], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:25,72 root DEBUG Side: OFF	 Angle(dx0, dx): 1.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.797E-01 	 Total distance: 9.452E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([57], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:25,72 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:25,73 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 93.47 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:25,73 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:25,73 root DEBUG dOFF/dON = 29.6
10:08:25,73 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.71830276738756, 'dON1': 0.03190210325878798, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.03190210325878798, 'nTON': 1, 'dON': 0.03190210325878798, 'dxOFFAngle': 86.00583824672135, 'dOFF1': 0.945211886870041, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.945211886870041, 'nTOFF': 1, 'dOFF': 0.945211886870041, 'SUCCESS': True}
10:08:25,84 root DEBUG 

=================== Experiment ID #23 	 Dual Point ID: 25 ===================
10:08:25,95 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.913E-08|<1.000E-06)
10:08:25,95 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:25,451 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.703E-02 	 Total distance: 4.703E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([155], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:25,719 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.386E-01 	 Total distance: 3.856E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([213], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:26,108 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.596E-02 	 Total distance: 3.596E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([52], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:26,377 root DEBUG Side: OFF	 Angle(dx0, dx): 0.95 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.261E-01 	 Total distance: 1.621E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([29], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:26,377 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:26,377 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -40.81 	 cIDON = [3 7], cIDOFF = [3 7]
10:08:26,377 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:26,378 root DEBUG dOFF/dON = 0.4
10:08:26,378 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.55951568046285, 'dON1': 0.38560772268230437, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.38560772268230437, 'nTON': 1, 'dON': 0.38560772268230437, 'dxOFFAngle': 88.88111962359568, 'dOFF1': 0.16207771665014575, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.16207771665014575, 'nTOFF': 1, 'dOFF': 0.16207771665014575, 'SUCCESS': False}
10:08:26,387 root DEBUG 

=================== Experiment ID #24 	 Dual Point ID: 26 ===================
10:08:26,396 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.450E-08|<1.000E-06)
10:08:26,397 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:26,756 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.158E-02 	 Total distance: 1.158E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([15], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:27,16 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.338E-01 	 Total distance: 2.454E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([226], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:27,284 root DEBUG Side: ON	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.092E-01 	 Total distance: 3.546E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([27], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:27,653 root DEBUG Side: OFF	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.561E-01 	 Total distance: 5.561E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([4], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:27,653 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:27,654 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 22.13 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:27,654 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:27,654 root DEBUG dOFF/dON = 1.6
10:08:27,654 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.40131952484249, 'dON1': 0.3545707371318908, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.3545707371318908, 'nTON': 1, 'dON': 0.3545707371318908, 'dxOFFAngle': 87.71222803045279, 'dOFF1': 0.5561231461079066, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.5561231461079066, 'nTOFF': 1, 'dOFF': 0.5561231461079066, 'SUCCESS': True}
10:08:27,664 root DEBUG 

=================== Experiment ID #25 	 Dual Point ID: 27 ===================
10:08:27,673 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.590E-07|<1.000E-06)
10:08:27,673 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:27,977 root DEBUG Side: ON	 Angle(dx0, dx): 1.94 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.352E-01 	 Total distance: 5.352E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([185], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:08:28,313 root DEBUG Side: OFF	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.386E-01 	 Total distance: 2.386E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([2], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:28,313 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:28,313 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -38.33 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:28,313 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:28,313 root DEBUG dOFF/dON = 0.4
10:08:28,313 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.06051479738204, 'dON1': 0.5352084176252689, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.5352084176252689, 'nTON': 1, 'dON': 0.5352084176252689, 'dxOFFAngle': 84.49024573183065, 'dOFF1': 0.23857921054076942, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.23857921054076942, 'nTOFF': 1, 'dOFF': 0.23857921054076942, 'SUCCESS': False}
10:08:28,320 root DEBUG 

=================== Experiment ID #26 	 Dual Point ID: 28 ===================
10:08:28,330 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.025E-10|<1.000E-06)
10:08:28,331 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:28,683 root DEBUG Side: ON	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.108E-01 	 Total distance: 1.108E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([30], dtype=int64), array([[False]])]] 	 class: [4 9]
10:08:28,896 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.242E-02 	 Total distance: 1.632E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([78], dtype=int64), array([[False]])]] 	 class: [4 9]
10:08:29,179 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.220E-04 	 Total distance: 9.220E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([65], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:08:29,179 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:29,180 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -98.88 	 cIDON = [4 9], cIDOFF = [4 9]
10:08:29,180 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:29,180 root DEBUG dOFF/dON = 0.0
10:08:29,180 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.10567964097304, 'dON1': 0.1631973928830515, 'cIDON1': array([4, 9], dtype=int64), 'dON_patch_1': 0.1631973928830515, 'nTON': 1, 'dON': 0.1631973928830515, 'dxOFFAngle': 88.91701284728273, 'dOFF1': 0.0009219642940089921, 'cIDOFF1': array([4, 9], dtype=int64), 'dOFF_patch_1': 0.0009219642940089921, 'nTOFF': 1, 'dOFF': 0.0009219642940089921, 'SUCCESS': False}
10:08:29,186 root DEBUG 

=================== Experiment ID #27 	 Dual Point ID: 29 ===================
10:08:29,196 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.519E-08|<1.000E-06)
10:08:29,197 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:29,559 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.088E-01 	 Total distance: 3.088E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([165], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:29,782 root DEBUG Side: ON	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.693E-02 	 Total distance: 3.257E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([33], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:30,90 root DEBUG Side: OFF	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.335E-01 	 Total distance: 3.335E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([20], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:30,90 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:30,90 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 1.19 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:30,90 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:30,90 root DEBUG dOFF/dON = 1.0
10:08:30,90 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.75094643731242, 'dON1': 0.32568993294887433, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.32568993294887433, 'nTON': 1, 'dON': 0.32568993294887433, 'dxOFFAngle': 87.58373274519889, 'dOFF1': 0.3335217151515154, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.3335217151515154, 'nTOFF': 1, 'dOFF': 0.3335217151515154, 'SUCCESS': True}
10:08:30,96 root DEBUG 

=================== Experiment ID #28 	 Dual Point ID: 30 ===================
10:08:30,103 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.658E-09|<1.000E-06)
10:08:30,103 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:30,407 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.247E-01 	 Total distance: 2.247E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([196], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:08:30,558 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.823E-02 	 Total distance: 2.430E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([251], dtype=int64), array([[False]])]] 	 class: [5 6]
10:08:30,783 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.661E-02 	 Total distance: 2.596E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([23], dtype=int64), array([[False]])]] 	 class: [5 6]
10:08:31,82 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.257E-02 	 Total distance: 4.257E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([216], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:08:31,83 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:31,83 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -71.82 	 cIDON = [5 6], cIDOFF = [5 6]
10:08:31,83 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:31,83 root DEBUG dOFF/dON = 0.2
10:08:31,83 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.17837587860828, 'dON1': 0.25957734309313923, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.25957734309313923, 'nTON': 1, 'dON': 0.25957734309313923, 'dxOFFAngle': 89.2000269091686, 'dOFF1': 0.04257422591197957, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.04257422591197957, 'nTOFF': 1, 'dOFF': 0.04257422591197957, 'SUCCESS': False}
10:08:31,91 root DEBUG 

=================== Experiment ID #29 	 Dual Point ID: 31 ===================
10:08:31,104 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.156E-08|<1.000E-06)
10:08:31,104 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:31,445 root DEBUG Side: ON	 Angle(dx0, dx): 1.97 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.990E-01 	 Total distance: 3.990E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([163], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:31,771 root DEBUG Side: OFF	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.954E-01 	 Total distance: 3.954E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([228], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:31,771 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:31,771 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -0.45 	 cIDON = [3 7], cIDOFF = [3 7]
10:08:31,771 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:31,771 root DEBUG dOFF/dON = 1.0
10:08:31,771 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.76268511834232, 'dON1': 0.39903205309295964, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.39903205309295964, 'nTON': 1, 'dON': 0.39903205309295964, 'dxOFFAngle': 88.16752574402588, 'dOFF1': 0.3954311946782516, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.3954311946782516, 'nTOFF': 1, 'dOFF': 0.3954311946782516, 'SUCCESS': False}
10:08:31,782 root DEBUG 

=================== Experiment ID #30 	 Dual Point ID: 32 ===================
10:08:31,792 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.761E-08|<1.000E-06)
10:08:31,792 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:32,122 root DEBUG Side: ON	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.694E-02 	 Total distance: 2.694E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([124], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:32,463 root DEBUG Side: OFF	 Angle(dx0, dx): 1.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.375E-02 	 Total distance: 4.375E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([161], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:32,463 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:32,463 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 23.77 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:32,463 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:32,463 root DEBUG dOFF/dON = 1.6
10:08:32,463 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.7329662575807, 'dON1': 0.026941253075376374, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.026941253075376374, 'nTON': 1, 'dON': 0.026941253075376374, 'dxOFFAngle': 86.70780645460495, 'dOFF1': 0.04374614784543321, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.04374614784543321, 'nTOFF': 1, 'dOFF': 0.04374614784543321, 'SUCCESS': True}
10:08:32,473 root DEBUG 

=================== Experiment ID #31 	 Dual Point ID: 33 ===================
10:08:32,484 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.267E-09|<1.000E-06)
10:08:32,484 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:32,862 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.485E-01 	 Total distance: 1.485E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([52], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:08:33,101 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.819E-03 	 Total distance: 1.513E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([149], dtype=int64), array([[False]])]] 	 class: [3 8]
10:08:33,431 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.775E-01 	 Total distance: 2.775E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([21], dtype=int64), array([[False]])]] 	 class: [3 8]
10:08:33,431 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:33,432 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 29.44 	 cIDON = [3 8], cIDOFF = [3 8]
10:08:33,432 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:33,432 root DEBUG dOFF/dON = 1.8
10:08:33,432 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.36594553305916, 'dON1': 0.1512724127125342, 'cIDON1': array([3, 8], dtype=int64), 'dON_patch_1': 0.1512724127125342, 'nTON': 1, 'dON': 0.1512724127125342, 'dxOFFAngle': 89.5059608017788, 'dOFF1': 0.2775237306534054, 'cIDOFF1': array([3, 8], dtype=int64), 'dOFF_patch_1': 0.2775237306534054, 'nTOFF': 1, 'dOFF': 0.2775237306534054, 'SUCCESS': True}
10:08:33,439 root DEBUG 

=================== Experiment ID #32 	 Dual Point ID: 34 ===================
10:08:33,448 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.052E-07|<1.000E-06)
10:08:33,449 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:33,766 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.755E-02 	 Total distance: 5.755E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([170], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:33,998 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.066E-01 	 Total distance: 1.642E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([34], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:34,250 root DEBUG Side: ON	 Angle(dx0, dx): 0.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.363E-01 	 Total distance: 1.000E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([128], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:34,546 root DEBUG Side: OFF	 Angle(dx0, dx): 1.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.440E-02 	 Total distance: 5.440E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([149], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:34,546 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:34,546 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -89.69 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:34,546 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:34,546 root DEBUG dOFF/dON = 0.1
10:08:34,546 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.25523742092052, 'dON1': 1.0004986502322843, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 1.0004986502322843, 'nTON': 1, 'dON': 1.0004986502322843, 'dxOFFAngle': 85.29393407449686, 'dOFF1': 0.054400939794446095, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.054400939794446095, 'nTOFF': 1, 'dOFF': 0.054400939794446095, 'SUCCESS': False}
10:08:34,554 root DEBUG 

=================== Experiment ID #33 	 Dual Point ID: 35 ===================
10:08:34,564 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.253E-08|<1.000E-06)
10:08:34,564 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:34,856 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.677E-01 	 Total distance: 1.677E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([245], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:08:35,59 root DEBUG Side: ON	 Angle(dx0, dx): 0.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.053E-01 	 Total distance: 2.730E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([30], dtype=int64), array([[False]])]] 	 class: [3 9]
10:08:35,415 root DEBUG Side: OFF	 Angle(dx0, dx): 2.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.630E-02 	 Total distance: 9.630E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([27], dtype=int64), array([[False]])]] 	 class: [3 9]
10:08:35,416 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:35,416 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -47.85 	 cIDON = [3 9], cIDOFF = [3 9]
10:08:35,416 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:35,416 root DEBUG dOFF/dON = 0.4
10:08:35,416 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.0972130666324, 'dON1': 0.27300804077898766, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 0.27300804077898766, 'nTON': 1, 'dON': 0.27300804077898766, 'dxOFFAngle': 84.07204917686218, 'dOFF1': 0.09629609808515663, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.09629609808515663, 'nTOFF': 1, 'dOFF': 0.09629609808515663, 'SUCCESS': False}
10:08:35,427 root DEBUG 

=================== Experiment ID #34 	 Dual Point ID: 36 ===================
10:08:35,435 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.141E-08|<1.000E-06)
10:08:35,435 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:35,736 root DEBUG Side: ON	 Angle(dx0, dx): 0.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.728E-01 	 Total distance: 3.728E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([110], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:36,12 root DEBUG Side: ON	 Angle(dx0, dx): 0.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.463E-02 	 Total distance: 4.274E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([239], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:08:36,296 root DEBUG Side: OFF	 Angle(dx0, dx): 0.87 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.420E-01 	 Total distance: 2.420E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([151], dtype=int64), array([[False]])]] 	 class: [3 7]
10:08:36,297 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:36,297 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -27.69 	 cIDON = [3 7], cIDOFF = [3 7]
10:08:36,297 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:36,297 root DEBUG dOFF/dON = 0.6
10:08:36,297 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.30111257991848, 'dON1': 0.42738125662728915, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.42738125662728915, 'nTON': 1, 'dON': 0.42738125662728915, 'dxOFFAngle': 84.06004401813472, 'dOFF1': 0.24202014231872937, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.24202014231872937, 'nTOFF': 1, 'dOFF': 0.24202014231872937, 'SUCCESS': False}
10:08:36,308 root DEBUG 

=================== Experiment ID #35 	 Dual Point ID: 37 ===================
10:08:36,320 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.318E-08|<1.000E-06)
10:08:36,320 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:36,626 root DEBUG Side: ON	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.164E-02 	 Total distance: 1.164E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([218], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:36,933 root DEBUG Side: OFF	 Angle(dx0, dx): 1.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.684E-02 	 Total distance: 7.684E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([104], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:36,933 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:36,933 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 73.68 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:36,933 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:36,933 root DEBUG dOFF/dON = 6.6
10:08:36,933 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.89380383862832, 'dON1': 0.011643906641660335, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.011643906641660335, 'nTON': 1, 'dON': 0.011643906641660335, 'dxOFFAngle': 88.27367612075653, 'dOFF1': 0.07684188004924022, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.07684188004924022, 'nTOFF': 1, 'dOFF': 0.07684188004924022, 'SUCCESS': True}
10:08:36,942 root DEBUG 

=================== Experiment ID #36 	 Dual Point ID: 38 ===================
10:08:36,949 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.386E-08|<1.000E-06)
10:08:36,949 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:37,262 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.902E-02 	 Total distance: 6.902E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([123], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:37,567 root DEBUG Side: ON	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.004E-02 	 Total distance: 1.191E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([45], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:37,953 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.922E-01 	 Total distance: 3.922E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([42], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:38,144 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.494E-02 	 Total distance: 4.371E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([2], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:38,324 root DEBUG Side: OFF	 Angle(dx0, dx): 0.63 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.516E-01 	 Total distance: 1.189E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([38], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:38,324 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:38,324 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 81.79 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:38,324 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:38,324 root DEBUG dOFF/dON = 10.0
10:08:38,324 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.86329284620824, 'dON1': 0.11906018609551111, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.11906018609551111, 'nTON': 1, 'dON': 0.11906018609551111, 'dxOFFAngle': 88.84871220974124, 'dOFF1': 1.1886796256446739, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 1.1886796256446739, 'nTOFF': 1, 'dOFF': 1.1886796256446739, 'SUCCESS': True}
10:08:38,330 root DEBUG 

=================== Experiment ID #37 	 Dual Point ID: 39 ===================
10:08:38,336 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.196E-09|<1.000E-06)
10:08:38,337 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:38,658 root DEBUG Side: ON	 Angle(dx0, dx): 0.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.203E-02 	 Total distance: 2.203E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([203], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:38,944 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.994E-02 	 Total distance: 2.994E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([24], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:38,944 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:38,945 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 15.22 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:38,945 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:38,945 root DEBUG dOFF/dON = 1.4
10:08:38,945 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.90271070432352, 'dON1': 0.022031794202893036, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.022031794202893036, 'nTON': 1, 'dON': 0.022031794202893036, 'dxOFFAngle': 87.31902453660452, 'dOFF1': 0.029944231597632046, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.029944231597632046, 'nTOFF': 1, 'dOFF': 0.029944231597632046, 'SUCCESS': True}
10:08:38,954 root DEBUG 

=================== Experiment ID #38 	 Dual Point ID: 40 ===================
10:08:38,967 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.397E-08|<1.000E-06)
10:08:38,968 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:39,272 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.975E-02 	 Total distance: 2.975E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([64], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:08:39,464 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.242E-02 	 Total distance: 1.122E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([139], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:08:39,687 root DEBUG Side: ON	 Angle(dx0, dx): 1.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.786E-01 	 Total distance: 2.908E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([20], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:08:40,0 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.567E-01 	 Total distance: 3.567E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([148], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:08:40,0 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:40,0 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 10.17 	 cIDON = [4 9], cIDOFF = [4 9]
10:08:40,0 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:40,0 root DEBUG dOFF/dON = 1.2
10:08:40,0 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.55893057984844, 'dON1': 0.2908095957277804, 'cIDON1': array([4, 9], dtype=int64), 'dON_patch_1': 0.2908095957277804, 'nTON': 1, 'dON': 0.2908095957277804, 'dxOFFAngle': 89.23131947035266, 'dOFF1': 0.35666507612585113, 'cIDOFF1': array([4, 9], dtype=int64), 'dOFF_patch_1': 0.35666507612585113, 'nTOFF': 1, 'dOFF': 0.35666507612585113, 'SUCCESS': True}
10:08:40,9 root DEBUG 

=================== Experiment ID #39 	 Dual Point ID: 41 ===================
10:08:40,18 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.513E-07|<1.000E-06)
10:08:40,18 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:40,392 root DEBUG Side: ON	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.878E-01 	 Total distance: 4.878E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([146], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:40,675 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.284E-01 	 Total distance: 6.284E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([233], dtype=int64), array([[False]])]] 	 class: [8 9]
10:08:40,675 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:40,675 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 12.60 	 cIDON = [8 9], cIDOFF = [8 9]
10:08:40,675 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:40,675 root DEBUG dOFF/dON = 1.3
10:08:40,675 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.48483194299865, 'dON1': 0.4877615465776132, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.4877615465776132, 'nTON': 1, 'dON': 0.4877615465776132, 'dxOFFAngle': 89.00861019081434, 'dOFF1': 0.6284073238568548, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.6284073238568548, 'nTOFF': 1, 'dOFF': 0.6284073238568548, 'SUCCESS': True}
10:08:40,681 root DEBUG 

=================== Experiment ID #40 	 Dual Point ID: 42 ===================
10:08:40,688 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.144E-08|<1.000E-06)
10:08:40,688 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:40,986 root DEBUG Side: ON	 Angle(dx0, dx): 0.86 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.456E-03 	 Total distance: 1.456E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([62], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:08:41,308 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.613E-02 	 Total distance: 3.613E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([57], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:41,516 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.147E-02 	 Total distance: 4.760E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([184], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:41,702 root DEBUG Side: OFF	 Angle(dx0, dx): 1.88 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.230E-02 	 Total distance: 6.990E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([134], dtype=int64), array([[False]])]] 	 class: [7 9]
10:08:41,702 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:41,702 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 95.92 	 cIDON = [7 9], cIDOFF = [7 9]
10:08:41,703 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:41,703 root DEBUG dOFF/dON = 48.0
10:08:41,703 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.74147173209936, 'dON1': 0.001456284054256424, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.001456284054256424, 'nTON': 1, 'dON': 0.001456284054256424, 'dxOFFAngle': 88.99636041332951, 'dOFF1': 0.06990086131544092, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.06990086131544092, 'nTOFF': 1, 'dOFF': 0.06990086131544092, 'SUCCESS': True}
10:08:41,712 root DEBUG 

=================== Experiment ID #41 	 Dual Point ID: 43 ===================
10:08:41,722 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.538E-09|<1.000E-06)
10:08:41,723 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:42,96 root DEBUG Side: ON	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.464E-01 	 Total distance: 1.464E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([117], dtype=int64), array([[False]])]] 	 class: [4 7]
10:08:42,314 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.039E-01 	 Total distance: 2.503E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([71], dtype=int64), array([[False]])]] 	 class: [4 7]
10:08:42,609 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.809E-01 	 Total distance: 6.312E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([5], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:08:42,893 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.919E-03 	 Total distance: 6.371E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([241], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:08:43,155 root DEBUG Side: ON	 Angle(dx0, dx): 3.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.464E-01 	 Total distance: 7.835E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([55], dtype=int64), array([[False]])]] 	 class: [4 7]
10:08:43,511 root DEBUG Side: OFF	 Angle(dx0, dx): 0.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.033E-02 	 Total distance: 6.033E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([47], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:08:43,511 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:43,511 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -85.70 	 cIDON = [4 7], cIDOFF = [4 7]
10:08:43,511 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:43,511 root DEBUG dOFF/dON = 0.1
10:08:43,511 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.18488872891282, 'dON1': 0.7835248086792925, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.7835248086792925, 'nTON': 1, 'dON': 0.7835248086792925, 'dxOFFAngle': 88.94821512290424, 'dOFF1': 0.06032555450192547, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.06032555450192547, 'nTOFF': 1, 'dOFF': 0.06032555450192547, 'SUCCESS': False}
10:08:43,524 root DEBUG 

=================== Experiment ID #42 	 Dual Point ID: 44 ===================
10:08:43,534 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.685E-08|<1.000E-06)
10:08:43,535 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:43,826 root DEBUG Side: ON	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.316E-01 	 Total distance: 1.316E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([50], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:08:44,35 root DEBUG Side: OFF	 Angle(dx0, dx): 3.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.749E-06 	 Total distance: 8.749E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:08:44,35 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:44,35 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.99 	 cIDON = [1 8], cIDOFF = [1 8]
10:08:44,36 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:44,36 root DEBUG dOFF/dON = 0.0
10:08:44,36 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.8504707295304, 'dON1': 0.13157062719595605, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 0.13157062719595605, 'nTON': 1, 'dON': 0.13157062719595605, 'dxOFFAngle': 86.65895628823456, 'dOFF1': 8.74912345869986e-06, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 8.74912345869986e-06, 'nTOFF': 1, 'dOFF': 8.74912345869986e-06, 'SUCCESS': False}
10:08:44,42 root DEBUG 

=================== Experiment ID #43 	 Dual Point ID: 45 ===================
10:08:44,48 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.387E-07|<1.000E-06)
10:08:44,48 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:44,298 root DEBUG Side: ON	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.047E-05 	 Total distance: 6.047E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 5]
10:08:44,607 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.791E-01 	 Total distance: 4.791E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([56], dtype=int64), array([[False]])]] 	 class: [1 5]
10:08:44,607 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:44,607 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.97 	 cIDON = [1 5], cIDOFF = [1 5]
10:08:44,608 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:44,608 root DEBUG dOFF/dON = 7923.6
10:08:44,608 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.7316532798108, 'dON1': 6.04685671242217e-05, 'cIDON1': array([1, 5], dtype=int64), 'dON_patch_1': 6.04685671242217e-05, 'nTON': 1, 'dON': 6.04685671242217e-05, 'dxOFFAngle': 89.19296256211032, 'dOFF1': 0.4791273409416494, 'cIDOFF1': array([1, 5], dtype=int64), 'dOFF_patch_1': 0.4791273409416494, 'nTOFF': 1, 'dOFF': 0.4791273409416494, 'SUCCESS': True}
10:08:44,621 root DEBUG 

=================== Experiment ID #44 	 Dual Point ID: 46 ===================
10:08:44,634 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.257E-09|<1.000E-06)
10:08:44,634 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:44,939 root DEBUG Side: ON	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.566E-02 	 Total distance: 6.566E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([112], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:45,194 root DEBUG Side: OFF	 Angle(dx0, dx): 1.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.848E-01 	 Total distance: 6.848E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([30], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:45,194 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:45,195 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 82.50 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:45,195 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:45,195 root DEBUG dOFF/dON = 10.4
10:08:45,195 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.79643048778495, 'dON1': 0.06566251131362875, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.06566251131362875, 'nTON': 1, 'dON': 0.06566251131362875, 'dxOFFAngle': 89.3814594687945, 'dOFF1': 0.6848335433231998, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.6848335433231998, 'nTOFF': 1, 'dOFF': 0.6848335433231998, 'SUCCESS': True}
10:08:45,202 root DEBUG 

=================== Experiment ID #45 	 Dual Point ID: 47 ===================
10:08:45,213 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.131E-08|<1.000E-06)
10:08:45,214 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:45,510 root DEBUG Side: ON	 Angle(dx0, dx): 0.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.144E-01 	 Total distance: 3.144E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([169], dtype=int64), array([[False]])]] 	 class: [6 9]
10:08:45,877 root DEBUG Side: OFF	 Angle(dx0, dx): 0.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.719E-01 	 Total distance: 3.719E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([98], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:08:46,105 root DEBUG Side: OFF	 Angle(dx0, dx): 0.82 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.838E-01 	 Total distance: 6.557E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([85], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:08:46,273 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.705E-01 	 Total distance: 8.263E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([254], dtype=int64), array([[False]])]] 	 class: [6 9]
10:08:46,425 root DEBUG Side: OFF	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.877E-02 	 Total distance: 9.251E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([88], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:08:46,425 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:46,425 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 49.27 	 cIDON = [6 9], cIDOFF = [6 9]
10:08:46,425 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:46,425 root DEBUG dOFF/dON = 2.9
10:08:46,425 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.2150201007197, 'dON1': 0.3144069468564072, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.3144069468564072, 'nTON': 1, 'dON': 0.3144069468564072, 'dxOFFAngle': 87.97826920399102, 'dOFF1': 0.9250566712654439, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.9250566712654439, 'nTOFF': 1, 'dOFF': 0.9250566712654439, 'SUCCESS': True}
10:08:46,431 root DEBUG 

=================== Experiment ID #46 	 Dual Point ID: 48 ===================
10:08:46,439 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.309E-09|<1.000E-06)
10:08:46,439 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:46,764 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.559E-02 	 Total distance: 6.559E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([241], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:08:46,989 root DEBUG Side: ON	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.188E-01 	 Total distance: 2.844E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([165], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:08:47,264 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.847E-02 	 Total distance: 9.847E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([208], dtype=int64), array([[False]])]] 	 class: [5 9]
10:08:47,477 root DEBUG Side: OFF	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.212E-01 	 Total distance: 5.197E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([3], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:08:47,477 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:47,477 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 29.25 	 cIDON = [5 9], cIDOFF = [5 9]
10:08:47,477 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:47,477 root DEBUG dOFF/dON = 1.8
10:08:47,477 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.16214954755189, 'dON1': 0.2844245517118092, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.2844245517118092, 'nTON': 1, 'dON': 0.2844245517118092, 'dxOFFAngle': 87.85017814680603, 'dOFF1': 0.5196539023629584, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.5196539023629584, 'nTOFF': 1, 'dOFF': 0.5196539023629584, 'SUCCESS': True}
10:08:47,484 root DEBUG 

=================== Experiment ID #47 	 Dual Point ID: 49 ===================
10:08:47,491 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.965E-08|<1.000E-06)
10:08:47,492 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:47,832 root DEBUG Side: ON	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.581E-01 	 Total distance: 5.581E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([17], dtype=int64), array([[ True]])]] 	 class: [1 2]
10:08:48,129 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.924E-02 	 Total distance: 5.924E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([60], dtype=int64), array([[ True]])]] 	 class: [0 2]
10:08:48,327 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.750E-03 	 Total distance: 6.699E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([189], dtype=int64), array([[False]])]] 	 class: [0 2]
10:08:48,592 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.066E-01 	 Total distance: 4.736E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([240], dtype=int64), array([[False]])]] 	 class: [0 2]
10:08:48,592 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:48,593 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -8.19 	 cIDON = [1 2], cIDOFF = [0 2]
10:08:48,593 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:48,593 root DEBUG dOFF/dON = 0.8
10:08:48,593 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.57524634963217, 'dON1': 0.5581381212711447, 'cIDON1': array([1, 2], dtype=int64), 'dON_patch_1': 0.5581381212711447, 'nTON': 1, 'dON': 0.5581381212711447, 'dxOFFAngle': 88.82452161478248, 'dOFF1': 0.47362272943198835, 'cIDOFF1': array([0, 2], dtype=int64), 'dOFF_patch_1': 0.47362272943198835, 'nTOFF': 1, 'dOFF': 0.47362272943198835, 'SUCCESS': False}
10:08:48,606 root DEBUG 

=================== Experiment ID #48 	 Dual Point ID: 50 ===================
10:08:48,616 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.449E-08|<1.000E-06)
10:08:48,616 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:48,935 root DEBUG Side: ON	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.656E-01 	 Total distance: 1.656E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([0], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:08:49,224 root DEBUG Side: OFF	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.723E-01 	 Total distance: 1.723E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([33], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:08:49,224 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:49,224 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 1.99 	 cIDON = [2 5], cIDOFF = [2 5]
10:08:49,224 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:49,224 root DEBUG dOFF/dON = 1.0
10:08:49,224 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.59893404860615, 'dON1': 0.16561678962032708, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.16561678962032708, 'nTON': 1, 'dON': 0.16561678962032708, 'dxOFFAngle': 86.90467072255811, 'dOFF1': 0.17234981859186738, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.17234981859186738, 'nTOFF': 1, 'dOFF': 0.17234981859186738, 'SUCCESS': True}
10:08:49,240 root DEBUG 

=================== Experiment ID #49 	 Dual Point ID: 51 ===================
10:08:49,253 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.989E-08|<1.000E-06)
10:08:49,253 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:49,524 root DEBUG Side: ON	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.275E-01 	 Total distance: 4.275E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([206], dtype=int64), array([[False]])]] 	 class: [0 1]
10:08:49,807 root DEBUG Side: ON	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.828E-02 	 Total distance: 4.558E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([212], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:50,193 root DEBUG Side: OFF	 Angle(dx0, dx): 1.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.384E-01 	 Total distance: 8.384E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([194], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:08:50,194 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:50,194 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 29.56 	 cIDON = [0 1], cIDOFF = [0 1]
10:08:50,194 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:50,194 root DEBUG dOFF/dON = 1.8
10:08:50,194 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.01111334965677, 'dON1': 0.45576719103722374, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.45576719103722374, 'nTON': 1, 'dON': 0.45576719103722374, 'dxOFFAngle': 86.43284575346685, 'dOFF1': 0.8383542563932416, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.8383542563932416, 'nTOFF': 1, 'dOFF': 0.8383542563932416, 'SUCCESS': True}
10:08:50,209 root DEBUG 

=================== Experiment ID #50 	 Dual Point ID: 52 ===================
10:08:50,221 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.761E-09|<1.000E-06)
10:08:50,221 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:50,555 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.114E-01 	 Total distance: 3.114E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([15], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:50,752 root DEBUG Side: ON	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.213E-02 	 Total distance: 3.236E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([64], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:50,958 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.889E-03 	 Total distance: 3.284E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([17], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:51,184 root DEBUG Side: ON	 Angle(dx0, dx): 0.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.248E-02 	 Total distance: 3.409E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([60], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:51,388 root DEBUG Side: ON	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.029E-02 	 Total distance: 3.512E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([196], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:08:51,698 root DEBUG Side: OFF	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.318E-02 	 Total distance: 5.318E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([230], dtype=int64), array([[False]])]] 	 class: [5 7]
10:08:51,698 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:51,698 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -73.70 	 cIDON = [5 7], cIDOFF = [5 7]
10:08:51,698 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:51,699 root DEBUG dOFF/dON = 0.2
10:08:51,699 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.92994210706523, 'dON1': 0.35120791405659485, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.35120791405659485, 'nTON': 1, 'dON': 0.35120791405659485, 'dxOFFAngle': 85.81591885067667, 'dOFF1': 0.05318351886200427, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.05318351886200427, 'nTOFF': 1, 'dOFF': 0.05318351886200427, 'SUCCESS': False}
10:08:51,707 root DEBUG 

=================== Experiment ID #51 	 Dual Point ID: 53 ===================
10:08:51,717 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.432E-09|<1.000E-06)
10:08:51,718 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:52,132 root DEBUG Side: ON	 Angle(dx0, dx): 0.84 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.467E-01 	 Total distance: 3.467E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([234], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:08:52,430 root DEBUG Side: OFF	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.148E-01 	 Total distance: 2.148E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([127], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:08:52,430 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:52,430 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -23.49 	 cIDON = [2 5], cIDOFF = [2 5]
10:08:52,430 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:52,430 root DEBUG dOFF/dON = 0.6
10:08:52,431 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.89017677461162, 'dON1': 0.3467033554019175, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.3467033554019175, 'nTON': 1, 'dON': 0.3467033554019175, 'dxOFFAngle': 87.92727166885469, 'dOFF1': 0.21482445721123442, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.21482445721123442, 'nTOFF': 1, 'dOFF': 0.21482445721123442, 'SUCCESS': False}
10:08:52,436 root DEBUG 

=================== Experiment ID #52 	 Dual Point ID: 54 ===================
10:08:52,446 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.080E-08|<1.000E-06)
10:08:52,446 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:52,838 root DEBUG Side: ON	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.351E-02 	 Total distance: 5.351E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([200], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:53,97 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.059E-02 	 Total distance: 8.410E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([174], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:53,411 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.019E-01 	 Total distance: 4.019E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([169], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:53,412 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:53,412 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 65.39 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:53,412 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:53,412 root DEBUG dOFF/dON = 4.8
10:08:53,412 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.32341989602253, 'dON1': 0.08409957981368454, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.08409957981368454, 'nTON': 1, 'dON': 0.08409957981368454, 'dxOFFAngle': 89.32136984013385, 'dOFF1': 0.40188645737497036, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.40188645737497036, 'nTOFF': 1, 'dOFF': 0.40188645737497036, 'SUCCESS': True}
10:08:53,425 root DEBUG 

=================== Experiment ID #53 	 Dual Point ID: 55 ===================
10:08:53,436 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.830E-08|<1.000E-06)
10:08:53,436 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:53,685 root DEBUG Side: ON	 Angle(dx0, dx): 2.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.725E-07 	 Total distance: 6.725E-07 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 7]
10:08:53,953 root DEBUG Side: ON	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.023E-01 	 Total distance: 2.023E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([20], dtype=int64), array([[ True]])]] 	 class: [0 7]
10:08:54,230 root DEBUG Side: OFF	 Angle(dx0, dx): 1.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.458E-02 	 Total distance: 6.458E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([33], dtype=int64), array([[False]])]] 	 class: [1 7]
10:08:54,230 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:54,230 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -51.60 	 cIDON = [0 7], cIDOFF = [1 7]
10:08:54,231 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:54,231 root DEBUG dOFF/dON = 0.3
10:08:54,231 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.4526985441472, 'dON1': 0.20228399574617986, 'cIDON1': array([0, 7], dtype=int64), 'dON_patch_1': 0.20228399574617986, 'nTON': 1, 'dON': 0.20228399574617986, 'dxOFFAngle': 87.56874622252248, 'dOFF1': 0.06457603858002219, 'cIDOFF1': array([1, 7], dtype=int64), 'dOFF_patch_1': 0.06457603858002219, 'nTOFF': 1, 'dOFF': 0.06457603858002219, 'SUCCESS': False}
10:08:54,246 root DEBUG 

=================== Experiment ID #54 	 Dual Point ID: 56 ===================
10:08:54,256 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.584E-08|<1.000E-06)
10:08:54,256 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:54,529 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.329E-03 	 Total distance: 7.329E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([194], dtype=int64), array([[ True]])]] 	 class: [0 3]
10:08:54,782 root DEBUG Side: OFF	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.414E-02 	 Total distance: 4.414E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([7], dtype=int64), array([[ True]])]] 	 class: [1 3]
10:08:54,782 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:54,783 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 71.52 	 cIDON = [0 3], cIDOFF = [1 3]
10:08:54,783 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:54,783 root DEBUG dOFF/dON = 6.0
10:08:54,783 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.51203095151928, 'dON1': 0.007328848636428375, 'cIDON1': array([0, 3], dtype=int64), 'dON_patch_1': 0.007328848636428375, 'nTON': 1, 'dON': 0.007328848636428375, 'dxOFFAngle': 88.65869781184703, 'dOFF1': 0.044136866936099896, 'cIDOFF1': array([1, 3], dtype=int64), 'dOFF_patch_1': 0.044136866936099896, 'nTOFF': 1, 'dOFF': 0.044136866936099896, 'SUCCESS': True}
10:08:54,796 root DEBUG 

=================== Experiment ID #55 	 Dual Point ID: 57 ===================
10:08:54,809 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.742E-09|<1.000E-06)
10:08:54,809 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:55,101 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.816E-02 	 Total distance: 7.816E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([218], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:08:55,364 root DEBUG Side: ON	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.550E-02 	 Total distance: 9.366E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([66], dtype=int64), array([[False]])]] 	 class: [3 4]
10:08:55,685 root DEBUG Side: OFF	 Angle(dx0, dx): 1.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.222E-03 	 Total distance: 6.222E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([32], dtype=int64), array([[ True]])]] 	 class: [3 4]
10:08:55,685 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:55,686 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -87.54 	 cIDON = [3 4], cIDOFF = [3 4]
10:08:55,686 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:55,686 root DEBUG dOFF/dON = 0.1
10:08:55,686 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.69604226089825, 'dON1': 0.09365996905050661, 'cIDON1': array([3, 4], dtype=int64), 'dON_patch_1': 0.09365996905050661, 'nTON': 1, 'dON': 0.09365996905050661, 'dxOFFAngle': 87.56756403748615, 'dOFF1': 0.006222378978742252, 'cIDOFF1': array([3, 4], dtype=int64), 'dOFF_patch_1': 0.006222378978742252, 'nTOFF': 1, 'dOFF': 0.006222378978742252, 'SUCCESS': False}
10:08:55,693 root DEBUG 

=================== Experiment ID #56 	 Dual Point ID: 58 ===================
10:08:55,703 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.691E-09|<1.000E-06)
10:08:55,703 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:56,36 root DEBUG Side: ON	 Angle(dx0, dx): 3.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.070E-02 	 Total distance: 5.070E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([10], dtype=int64), array([[False]])]] 	 class: [0 9]
10:08:56,383 root DEBUG Side: OFF	 Angle(dx0, dx): 0.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.937E-02 	 Total distance: 7.937E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([140], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:08:56,576 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.746E-02 	 Total distance: 1.468E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([229], dtype=int64), array([[False]])]] 	 class: [1 9]
10:08:56,576 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:56,576 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 48.67 	 cIDON = [0 9], cIDOFF = [1 9]
10:08:56,576 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:56,577 root DEBUG dOFF/dON = 2.9
10:08:56,577 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.88233027795101, 'dON1': 0.05069921781276564, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.05069921781276564, 'nTON': 1, 'dON': 0.05069921781276564, 'dxOFFAngle': 84.96329320195561, 'dOFF1': 0.14683563439525596, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.14683563439525596, 'nTOFF': 1, 'dOFF': 0.14683563439525596, 'SUCCESS': True}
10:08:56,587 root DEBUG 

=================== Experiment ID #57 	 Dual Point ID: 59 ===================
10:08:56,595 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.862E-08|<1.000E-06)
10:08:56,595 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:56,925 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.580E-03 	 Total distance: 8.580E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([151], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:57,165 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.660E-02 	 Total distance: 4.518E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([216], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:57,424 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.656E-02 	 Total distance: 2.656E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([216], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:57,424 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:57,424 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -25.95 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:57,424 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:57,424 root DEBUG dOFF/dON = 0.6
10:08:57,424 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.75116334052284, 'dON1': 0.045184058518815774, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.045184058518815774, 'nTON': 1, 'dON': 0.045184058518815774, 'dxOFFAngle': 88.77886619662685, 'dOFF1': 0.02656353622687075, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.02656353622687075, 'nTOFF': 1, 'dOFF': 0.02656353622687075, 'SUCCESS': False}
10:08:57,431 root DEBUG 

=================== Experiment ID #58 	 Dual Point ID: 60 ===================
10:08:57,437 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.854E-08|<1.000E-06)
10:08:57,438 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:57,762 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.050E-01 	 Total distance: 2.050E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([230], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:57,930 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.282E-02 	 Total distance: 2.278E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([71], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:58,134 root DEBUG Side: ON	 Angle(dx0, dx): 0.75 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.758E-01 	 Total distance: 5.037E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([67], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:58,402 root DEBUG Side: OFF	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.209E-02 	 Total distance: 3.209E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([12], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:58,402 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:58,403 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -88.02 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:58,403 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:58,403 root DEBUG dOFF/dON = 0.1
10:08:58,403 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.99800106606598, 'dON1': 0.5036852100852482, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.5036852100852482, 'nTON': 1, 'dON': 0.5036852100852482, 'dxOFFAngle': 88.29256683996812, 'dOFF1': 0.0320944884832991, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.0320944884832991, 'nTOFF': 1, 'dOFF': 0.0320944884832991, 'SUCCESS': False}
10:08:58,413 root DEBUG 

=================== Experiment ID #59 	 Dual Point ID: 61 ===================
10:08:58,418 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.101E-08|<1.000E-06)
10:08:58,418 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:58,645 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.988E-03 	 Total distance: 2.988E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([140], dtype=int64), array([[False]])]] 	 class: [2 7]
10:08:58,845 root DEBUG Side: ON	 Angle(dx0, dx): 0.79 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.057E-02 	 Total distance: 6.355E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([18], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:59,146 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.789E-02 	 Total distance: 9.789E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([12], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:08:59,146 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:59,146 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 21.27 	 cIDON = [2 7], cIDOFF = [2 7]
10:08:59,146 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:08:59,146 root DEBUG dOFF/dON = 1.5
10:08:59,146 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.2396959045607, 'dON1': 0.06355318490900819, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.06355318490900819, 'nTON': 1, 'dON': 0.06355318490900819, 'dxOFFAngle': 89.84039006055507, 'dOFF1': 0.09788918201708754, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.09788918201708754, 'nTOFF': 1, 'dOFF': 0.09788918201708754, 'SUCCESS': True}
10:08:59,152 root DEBUG 

=================== Experiment ID #60 	 Dual Point ID: 62 ===================
10:08:59,160 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.173E-09|<1.000E-06)
10:08:59,160 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:08:59,490 root DEBUG Side: ON	 Angle(dx0, dx): 0.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.195E+00 	 Total distance: 1.195E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([181], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:08:59,748 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.864E-02 	 Total distance: 3.864E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([81], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:59,903 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.653E-04 	 Total distance: 3.881E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([0], dtype=int64), array([[False]])]] 	 class: [3 5]
10:08:59,903 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:08:59,903 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -93.71 	 cIDON = [3 5], cIDOFF = [3 5]
10:08:59,903 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:08:59,904 root DEBUG dOFF/dON = 0.0
10:08:59,904 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.51990961389136, 'dON1': 1.1954146006487412, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 1.1954146006487412, 'nTON': 1, 'dON': 1.1954146006487412, 'dxOFFAngle': 88.92218303336223, 'dOFF1': 0.03880844810886597, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.03880844810886597, 'nTOFF': 1, 'dOFF': 0.03880844810886597, 'SUCCESS': False}
10:08:59,914 root DEBUG 

=================== Experiment ID #61 	 Dual Point ID: 63 ===================
10:08:59,928 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.902E-08|<1.000E-06)
10:08:59,928 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:00,206 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.737E-02 	 Total distance: 1.737E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([177], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:00,402 root DEBUG Side: ON	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.647E-01 	 Total distance: 1.820E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([98], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:00,584 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.331E-03 	 Total distance: 1.864E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([178], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:00,858 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.996E-01 	 Total distance: 2.996E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([65], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:00,859 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:00,859 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 23.30 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:00,859 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:00,859 root DEBUG dOFF/dON = 1.6
10:09:00,859 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.45516392286807, 'dON1': 0.18637518693898478, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.18637518693898478, 'nTON': 1, 'dON': 0.18637518693898478, 'dxOFFAngle': 88.89905365250183, 'dOFF1': 0.29963749779766546, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.29963749779766546, 'nTOFF': 1, 'dOFF': 0.29963749779766546, 'SUCCESS': True}
10:09:00,872 root DEBUG 

=================== Experiment ID #62 	 Dual Point ID: 64 ===================
10:09:00,883 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.910E-09|<1.000E-06)
10:09:00,883 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:01,208 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.102E-01 	 Total distance: 7.102E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([178], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:01,577 root DEBUG Side: OFF	 Angle(dx0, dx): 0.67 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.363E-01 	 Total distance: 2.363E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([72], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:01,577 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:01,577 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -50.06 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:01,577 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:01,577 root DEBUG dOFF/dON = 0.3
10:09:01,577 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.87810458471348, 'dON1': 0.7101731485703494, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.7101731485703494, 'nTON': 1, 'dON': 0.7101731485703494, 'dxOFFAngle': 86.15020151005847, 'dOFF1': 0.2363245007029069, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.2363245007029069, 'nTOFF': 1, 'dOFF': 0.2363245007029069, 'SUCCESS': False}
10:09:01,583 root DEBUG 

=================== Experiment ID #63 	 Dual Point ID: 65 ===================
10:09:01,589 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.257E-09|<1.000E-06)
10:09:01,590 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:01,933 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.293E-01 	 Total distance: 2.293E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([59], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:02,266 root DEBUG Side: OFF	 Angle(dx0, dx): 0.87 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.189E-03 	 Total distance: 1.189E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([196], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:02,266 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:02,266 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -98.97 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:02,267 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:02,267 root DEBUG dOFF/dON = 0.0
10:09:02,267 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.95427820102097, 'dON1': 0.22932825037462334, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.22932825037462334, 'nTON': 1, 'dON': 0.22932825037462334, 'dxOFFAngle': 87.81263005881003, 'dOFF1': 0.0011893968939172086, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.0011893968939172086, 'nTOFF': 1, 'dOFF': 0.0011893968939172086, 'SUCCESS': False}
10:09:02,278 root DEBUG 

=================== Experiment ID #64 	 Dual Point ID: 66 ===================
10:09:02,291 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.219E-08|<1.000E-06)
10:09:02,292 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:02,619 root DEBUG Side: ON	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.799E-01 	 Total distance: 1.799E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([240], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:02,844 root DEBUG Side: ON	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.224E-02 	 Total distance: 2.121E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([112], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:03,66 root DEBUG Side: ON	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.220E-02 	 Total distance: 2.343E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([139], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:03,361 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.114E-02 	 Total distance: 8.114E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([179], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:03,361 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:03,361 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -48.56 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:03,361 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:03,361 root DEBUG dOFF/dON = 0.3
10:09:03,361 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.71685044517943, 'dON1': 0.2343455166024459, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.2343455166024459, 'nTON': 1, 'dON': 0.2343455166024459, 'dxOFFAngle': 89.78535992623978, 'dOFF1': 0.08113640280856714, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.08113640280856714, 'nTOFF': 1, 'dOFF': 0.08113640280856714, 'SUCCESS': False}
10:09:03,369 root DEBUG 

=================== Experiment ID #65 	 Dual Point ID: 67 ===================
10:09:03,377 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.835E-08|<1.000E-06)
10:09:03,377 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:03,570 root DEBUG Side: ON	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.344E-06 	 Total distance: 1.344E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 3]
10:09:03,820 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.047E-06 	 Total distance: 6.047E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 3]
10:09:03,820 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:03,820 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 63.64 	 cIDON = [1 3], cIDOFF = [1 3]
10:09:03,820 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:03,820 root DEBUG dOFF/dON = 4.5
10:09:03,820 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.94580904530146, 'dON1': 1.3437317992682187e-06, 'cIDON1': array([1, 3], dtype=int64), 'dON_patch_1': 1.3437317992682187e-06, 'nTON': 1, 'dON': 1.3437317992682187e-06, 'dxOFFAngle': 89.90323063257448, 'dOFF1': 6.046799016442894e-06, 'cIDOFF1': array([1, 3], dtype=int64), 'dOFF_patch_1': 6.046799016442894e-06, 'nTOFF': 1, 'dOFF': 6.046799016442894e-06, 'SUCCESS': True}
10:09:03,833 root DEBUG 

=================== Experiment ID #66 	 Dual Point ID: 68 ===================
10:09:03,843 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.495E-09|<1.000E-06)
10:09:03,844 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:04,215 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.306E-02 	 Total distance: 3.306E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([114], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:04,481 root DEBUG Side: ON	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.420E-01 	 Total distance: 3.751E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([131], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:04,823 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.152E-01 	 Total distance: 1.152E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([6], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:05,28 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.104E-01 	 Total distance: 8.256E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([238], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:05,246 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.058E-01 	 Total distance: 9.314E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([129], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:05,466 root DEBUG Side: OFF	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.181E-02 	 Total distance: 9.932E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([85], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:05,466 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:05,467 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 45.18 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:05,467 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:05,467 root DEBUG dOFF/dON = 2.6
10:09:05,467 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.50671241312132, 'dON1': 0.37506507185907434, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.37506507185907434, 'nTON': 1, 'dON': 0.37506507185907434, 'dxOFFAngle': 88.90674142487005, 'dOFF1': 0.993186655078394, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.993186655078394, 'nTOFF': 1, 'dOFF': 0.993186655078394, 'SUCCESS': True}
10:09:05,477 root DEBUG 

=================== Experiment ID #67 	 Dual Point ID: 69 ===================
10:09:05,488 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.373E-09|<1.000E-06)
10:09:05,488 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:05,785 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.347E-01 	 Total distance: 2.347E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([8], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:06,107 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.831E-01 	 Total distance: 4.831E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([17], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:06,332 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.520E-01 	 Total distance: 1.035E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([254], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:06,332 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:06,332 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 63.03 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:06,332 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:06,332 root DEBUG dOFF/dON = 4.4
10:09:06,332 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.02857767550131, 'dON1': 0.23472377983050846, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.23472377983050846, 'nTON': 1, 'dON': 0.23472377983050846, 'dxOFFAngle': 89.45046598231416, 'dOFF1': 1.035102338200431, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 1.035102338200431, 'nTOFF': 1, 'dOFF': 1.035102338200431, 'SUCCESS': True}
10:09:06,343 root DEBUG 

=================== Experiment ID #68 	 Dual Point ID: 70 ===================
10:09:06,350 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.217E-08|<1.000E-06)
10:09:06,351 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:06,603 root DEBUG Side: ON	 Angle(dx0, dx): 4.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.857E-04 	 Total distance: 3.857E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 9]
10:09:06,944 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.211E-01 	 Total distance: 2.211E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([23], dtype=int64), array([[False]])]] 	 class: [1 9]
10:09:06,944 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:06,944 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.65 	 cIDON = [0 9], cIDOFF = [1 9]
10:09:06,945 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:06,945 root DEBUG dOFF/dON = 573.2
10:09:06,945 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.1939839009059, 'dON1': 0.000385663088078335, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.000385663088078335, 'nTON': 1, 'dON': 0.000385663088078335, 'dxOFFAngle': 89.19641337505078, 'dOFF1': 0.22107493138409134, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.22107493138409134, 'nTOFF': 1, 'dOFF': 0.22107493138409134, 'SUCCESS': True}
10:09:06,951 root DEBUG 

=================== Experiment ID #69 	 Dual Point ID: 71 ===================
10:09:06,959 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.236E-08|<1.000E-06)
10:09:06,959 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:07,270 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.393E-01 	 Total distance: 2.393E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([177], dtype=int64), array([[False]])]] 	 class: [0 1]
10:09:07,633 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.379E-01 	 Total distance: 4.379E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([207], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:07,634 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:07,634 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 29.33 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:07,634 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:07,634 root DEBUG dOFF/dON = 1.8
10:09:07,634 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.16587547031122, 'dON1': 0.23930222936103474, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.23930222936103474, 'nTON': 1, 'dON': 0.23930222936103474, 'dxOFFAngle': 88.94026863686908, 'dOFF1': 0.4379149319552495, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.4379149319552495, 'nTOFF': 1, 'dOFF': 0.4379149319552495, 'SUCCESS': True}
10:09:07,648 root DEBUG 

=================== Experiment ID #70 	 Dual Point ID: 72 ===================
10:09:07,661 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.512E-08|<1.000E-06)
10:09:07,661 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:08,37 root DEBUG Side: ON	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.982E-01 	 Total distance: 2.982E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([125], dtype=int64), array([[ True]])]] 	 class: [0 2]
10:09:08,266 root DEBUG Side: ON	 Angle(dx0, dx): 0.79 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.091E-01 	 Total distance: 4.072E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([215], dtype=int64), array([[ True]])]] 	 class: [0 2]
10:09:08,536 root DEBUG Side: OFF	 Angle(dx0, dx): 3.97 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.303E-04 	 Total distance: 9.303E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 2]
10:09:08,536 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:08,536 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.54 	 cIDON = [0 2], cIDOFF = [1 2]
10:09:08,536 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:08,536 root DEBUG dOFF/dON = 0.0
10:09:08,536 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.69684681938456, 'dON1': 0.4072431578279004, 'cIDON1': array([0, 2], dtype=int64), 'dON_patch_1': 0.4072431578279004, 'nTON': 1, 'dON': 0.4072431578279004, 'dxOFFAngle': 85.81183321747368, 'dOFF1': 0.000930330764659024, 'cIDOFF1': array([1, 2], dtype=int64), 'dOFF_patch_1': 0.000930330764659024, 'nTOFF': 1, 'dOFF': 0.000930330764659024, 'SUCCESS': False}
10:09:08,548 root DEBUG 

=================== Experiment ID #71 	 Dual Point ID: 73 ===================
10:09:08,562 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.492E-09|<1.000E-06)
10:09:08,562 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:08,779 root DEBUG Side: ON	 Angle(dx0, dx): 1.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.298E-01 	 Total distance: 2.298E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([240], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:09,49 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.557E-01 	 Total distance: 3.557E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([84], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:09,49 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:09,50 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 21.50 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:09,50 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:09,50 root DEBUG dOFF/dON = 1.5
10:09:09,50 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.95477482068974, 'dON1': 0.22984945198927204, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.22984945198927204, 'nTON': 1, 'dON': 0.22984945198927204, 'dxOFFAngle': 86.13453393670551, 'dOFF1': 0.3557309920833899, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.3557309920833899, 'nTOFF': 1, 'dOFF': 0.3557309920833899, 'SUCCESS': True}
10:09:09,63 root DEBUG 

=================== Experiment ID #72 	 Dual Point ID: 74 ===================
10:09:09,71 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.429E-08|<1.000E-06)
10:09:09,71 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:09,318 root DEBUG Side: ON	 Angle(dx0, dx): 0.69 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.008E-05 	 Total distance: 1.008E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 9]
10:09:09,583 root DEBUG Side: OFF	 Angle(dx0, dx): 2.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.539E-02 	 Total distance: 5.539E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([1, 8], dtype=int64), array([[0.],
       [1.]])]] 	 class: [8 9]
10:09:09,583 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:09,583 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.96 	 cIDON = [1 9], cIDOFF = [1 9]
10:09:09,584 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:09,584 root DEBUG dOFF/dON = 5495.5
10:09:09,584 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.18732399900024, 'dON1': 1.007899782738115e-05, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 1.007899782738115e-05, 'nTON': 1, 'dON': 1.007899782738115e-05, 'dxOFFAngle': 89.94567878216016, 'dOFF1': 0.055389296751355656, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.055389296751355656, 'nTOFF': 1, 'dOFF': 0.055389296751355656, 'SUCCESS': True}
10:09:09,595 root DEBUG 

=================== Experiment ID #73 	 Dual Point ID: 75 ===================
10:09:09,604 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.192E-09|<1.000E-06)
10:09:09,605 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:09,968 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.665E-01 	 Total distance: 1.665E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([4], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:10,275 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.541E-02 	 Total distance: 4.541E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([225], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:10,275 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:10,275 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -57.13 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:10,275 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:10,275 root DEBUG dOFF/dON = 0.3
10:09:10,275 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.59870230130906, 'dON1': 0.1664507323314346, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.1664507323314346, 'nTON': 1, 'dON': 0.1664507323314346, 'dxOFFAngle': 88.34683453027354, 'dOFF1': 0.04540879638289383, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.04540879638289383, 'nTOFF': 1, 'dOFF': 0.04540879638289383, 'SUCCESS': False}
10:09:10,284 root DEBUG 

=================== Experiment ID #74 	 Dual Point ID: 76 ===================
10:09:10,292 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.030E-08|<1.000E-06)
10:09:10,292 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:10,638 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.802E-01 	 Total distance: 9.802E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([129], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:09:10,835 root DEBUG Side: ON	 Angle(dx0, dx): 0.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.924E-01 	 Total distance: 1.173E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([241], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:09:11,105 root DEBUG Side: OFF	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.775E-01 	 Total distance: 1.775E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([188], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:09:11,287 root DEBUG Side: OFF	 Angle(dx0, dx): 0.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.777E-02 	 Total distance: 1.952E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([61], dtype=int64), array([[ True]])]] 	 class: [4 9]
10:09:11,287 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:11,287 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -71.45 	 cIDON = [4 9], cIDOFF = [4 9]
10:09:11,287 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:11,287 root DEBUG dOFF/dON = 0.2
10:09:11,288 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.22150653892356, 'dON1': 1.1725147863589171, 'cIDON1': array([4, 9], dtype=int64), 'dON_patch_1': 1.1725147863589171, 'nTON': 1, 'dON': 1.1725147863589171, 'dxOFFAngle': 88.9867433568177, 'dOFF1': 0.1952395589399707, 'cIDOFF1': array([4, 9], dtype=int64), 'dOFF_patch_1': 0.1952395589399707, 'nTOFF': 1, 'dOFF': 0.1952395589399707, 'SUCCESS': False}
10:09:11,298 root DEBUG 

=================== Experiment ID #75 	 Dual Point ID: 77 ===================
10:09:11,308 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.690E-09|<1.000E-06)
10:09:11,308 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:11,688 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.754E-02 	 Total distance: 5.754E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([226], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:09:11,971 root DEBUG Side: ON	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.130E-02 	 Total distance: 1.288E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([231], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:09:12,354 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.858E-01 	 Total distance: 2.858E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([116], dtype=int64), array([[False]])]] 	 class: [4 6]
10:09:12,354 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:12,354 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 37.86 	 cIDON = [4 6], cIDOFF = [4 6]
10:09:12,355 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:12,355 root DEBUG dOFF/dON = 2.2
10:09:12,355 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.86231271511197, 'dON1': 0.1288329985286546, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.1288329985286546, 'nTON': 1, 'dON': 0.1288329985286546, 'dxOFFAngle': 89.711358700186, 'dOFF1': 0.2857991277111045, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.2857991277111045, 'nTOFF': 1, 'dOFF': 0.2857991277111045, 'SUCCESS': True}
10:09:12,360 root DEBUG 

=================== Experiment ID #76 	 Dual Point ID: 78 ===================
10:09:12,368 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.151E-08|<1.000E-06)
10:09:12,368 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:12,677 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.943E-03 	 Total distance: 1.943E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([222], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:12,904 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.284E-01 	 Total distance: 1.303E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([198], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:13,87 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.137E-01 	 Total distance: 4.440E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([22], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:13,459 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.784E-01 	 Total distance: 1.784E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([8], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:13,750 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.085E-02 	 Total distance: 2.693E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([251], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:13,970 root DEBUG Side: OFF	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.049E-01 	 Total distance: 3.742E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([26], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:14,222 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.877E-01 	 Total distance: 5.619E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([15], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:14,506 root DEBUG Side: OFF	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.430E-01 	 Total distance: 8.049E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([77], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:14,506 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:14,507 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 28.90 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:14,507 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:14,507 root DEBUG dOFF/dON = 1.8
10:09:14,507 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.83641382358708, 'dON1': 0.4440020201985906, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.4440020201985906, 'nTON': 1, 'dON': 0.4440020201985906, 'dxOFFAngle': 88.55267026456669, 'dOFF1': 0.8049079738580998, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.8049079738580998, 'nTOFF': 1, 'dOFF': 0.8049079738580998, 'SUCCESS': True}
10:09:14,516 root DEBUG 

=================== Experiment ID #77 	 Dual Point ID: 79 ===================
10:09:14,525 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.243E-07|<1.000E-06)
10:09:14,525 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:14,975 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.089E-01 	 Total distance: 7.089E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([48], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:09:15,264 root DEBUG Side: OFF	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.889E-05 	 Total distance: 2.889E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 9]
10:09:15,265 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:15,265 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.99 	 cIDON = [1 9], cIDOFF = [1 9]
10:09:15,265 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:15,265 root DEBUG dOFF/dON = 0.0
10:09:15,265 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.53474748835505, 'dON1': 0.7089383283920505, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.7089383283920505, 'nTON': 1, 'dON': 0.7089383283920505, 'dxOFFAngle': 89.31218512854853, 'dOFF1': 2.889230259011914e-05, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 2.889230259011914e-05, 'nTOFF': 1, 'dOFF': 2.889230259011914e-05, 'SUCCESS': False}
10:09:15,273 root DEBUG 

=================== Experiment ID #78 	 Dual Point ID: 80 ===================
10:09:15,280 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.301E-09|<1.000E-06)
10:09:15,280 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:15,578 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.885E-01 	 Total distance: 3.885E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([123], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:15,927 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.434E-01 	 Total distance: 1.434E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([73], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:16,166 root DEBUG Side: OFF	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.099E-01 	 Total distance: 3.533E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([180], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:16,416 root DEBUG Side: OFF	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.098E-01 	 Total distance: 4.631E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([116], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:16,416 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:16,416 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 8.75 	 cIDON = [5 7], cIDOFF = [5 7]
10:09:16,416 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:16,416 root DEBUG dOFF/dON = 1.2
10:09:16,416 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.11355345546552, 'dON1': 0.3885361254170367, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.3885361254170367, 'nTON': 1, 'dON': 0.3885361254170367, 'dxOFFAngle': 88.09804791741747, 'dOFF1': 0.4630713734425955, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.4630713734425955, 'nTOFF': 1, 'dOFF': 0.4630713734425955, 'SUCCESS': True}
10:09:16,426 root DEBUG 

=================== Experiment ID #79 	 Dual Point ID: 81 ===================
10:09:16,433 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.724E-08|<1.000E-06)
10:09:16,433 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:16,785 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.078E-01 	 Total distance: 3.078E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([4], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:09:17,35 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.737E-02 	 Total distance: 3.552E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([195], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:09:17,392 root DEBUG Side: OFF	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.256E-02 	 Total distance: 2.256E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([38], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:09:17,393 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:17,393 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -88.06 	 cIDON = [6 9], cIDOFF = [6 9]
10:09:17,393 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:17,393 root DEBUG dOFF/dON = 0.1
10:09:17,393 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.93167292710834, 'dON1': 0.3551853946973996, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.3551853946973996, 'nTON': 1, 'dON': 0.3551853946973996, 'dxOFFAngle': 88.9133311354374, 'dOFF1': 0.022557241311433794, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.022557241311433794, 'nTOFF': 1, 'dOFF': 0.022557241311433794, 'SUCCESS': False}
10:09:17,400 root DEBUG 

=================== Experiment ID #80 	 Dual Point ID: 82 ===================
10:09:17,409 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.008E-09|<1.000E-06)
10:09:17,409 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:17,723 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.097E-02 	 Total distance: 2.097E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([234], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:17,974 root DEBUG Side: ON	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.282E-01 	 Total distance: 1.492E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([95], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:18,157 root DEBUG Side: ON	 Angle(dx0, dx): 0.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.118E-01 	 Total distance: 3.610E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([160], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:18,454 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.188E-02 	 Total distance: 4.188E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([167], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:18,723 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.386E-01 	 Total distance: 5.805E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([179], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:18,724 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:18,724 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 23.31 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:18,724 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:18,724 root DEBUG dOFF/dON = 1.6
10:09:18,724 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.37317313729906, 'dON1': 0.3610274465125622, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.3610274465125622, 'nTON': 1, 'dON': 0.3610274465125622, 'dxOFFAngle': 88.67419989136472, 'dOFF1': 0.5804934774033191, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.5804934774033191, 'nTOFF': 1, 'dOFF': 0.5804934774033191, 'SUCCESS': True}
10:09:18,734 root DEBUG 

=================== Experiment ID #81 	 Dual Point ID: 83 ===================
10:09:18,740 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.725E-09|<1.000E-06)
10:09:18,740 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:19,63 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.261E-01 	 Total distance: 1.261E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([245], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:19,271 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.932E-02 	 Total distance: 1.554E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([234], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:09:19,596 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.469E-02 	 Total distance: 1.469E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([196], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:19,822 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.193E-02 	 Total distance: 8.661E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([189], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:19,822 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:19,823 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -28.43 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:19,823 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:19,823 root DEBUG dOFF/dON = 0.6
10:09:19,823 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.22885080470043, 'dON1': 0.15542926742705132, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.15542926742705132, 'nTON': 1, 'dON': 0.15542926742705132, 'dxOFFAngle': 89.28671320955065, 'dOFF1': 0.08661303531883786, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.08661303531883786, 'nTOFF': 1, 'dOFF': 0.08661303531883786, 'SUCCESS': False}
10:09:19,832 root DEBUG 

=================== Experiment ID #82 	 Dual Point ID: 84 ===================
10:09:19,841 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.310E-08|<1.000E-06)
10:09:19,842 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:20,145 root DEBUG Side: ON	 Angle(dx0, dx): 1.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.285E-05 	 Total distance: 2.285E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:09:20,452 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.058E-01 	 Total distance: 5.058E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([164], dtype=int64), array([[False]])]] 	 class: [1 8]
10:09:20,452 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:20,453 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 99.99 	 cIDON = [1 8], cIDOFF = [1 8]
10:09:20,453 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:20,453 root DEBUG dOFF/dON = 22134.7
10:09:20,453 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.43820667946208, 'dON1': 2.2851919587769754e-05, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 2.2851919587769754e-05, 'nTON': 1, 'dON': 2.2851919587769754e-05, 'dxOFFAngle': 88.4178701483789, 'dOFF1': 0.5058207410530011, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 0.5058207410530011, 'nTOFF': 1, 'dOFF': 0.5058207410530011, 'SUCCESS': True}
10:09:20,464 root DEBUG 

=================== Experiment ID #83 	 Dual Point ID: 85 ===================
10:09:20,477 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.440E-08|<1.000E-06)
10:09:20,477 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:20,813 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.430E-02 	 Total distance: 1.430E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([72], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:21,12 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.670E-01 	 Total distance: 2.813E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([104], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:21,229 root DEBUG Side: ON	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.842E-01 	 Total distance: 5.655E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([13], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:21,510 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.755E-02 	 Total distance: 1.755E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([3], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:21,827 root DEBUG Side: OFF	 Angle(dx0, dx): 1.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.555E-01 	 Total distance: 3.730E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([27], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:21,828 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:21,828 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -20.50 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:21,828 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:21,828 root DEBUG dOFF/dON = 0.7
10:09:21,829 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.10501517175877, 'dON1': 0.565486708850967, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.565486708850967, 'nTON': 1, 'dON': 0.565486708850967, 'dxOFFAngle': 88.43104431145659, 'dOFF1': 0.3730491542072369, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.3730491542072369, 'nTOFF': 1, 'dOFF': 0.3730491542072369, 'SUCCESS': False}
10:09:21,841 root DEBUG 

=================== Experiment ID #84 	 Dual Point ID: 86 ===================
10:09:21,852 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.173E-08|<1.000E-06)
10:09:21,852 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:22,180 root DEBUG Side: ON	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.917E-01 	 Total distance: 3.917E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([39], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:22,472 root DEBUG Side: OFF	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.895E-02 	 Total distance: 1.895E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([212], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:22,661 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.743E-01 	 Total distance: 3.932E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([16], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:22,916 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.933E+00 	 Total distance: 2.326E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([177], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:09:22,916 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:22,917 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 71.18 	 cIDON = [5 7], cIDOFF = [5 7]
10:09:22,917 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:22,917 root DEBUG dOFF/dON = 5.9
10:09:22,917 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.11019775158707, 'dON1': 0.3916661119359778, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.3916661119359778, 'nTON': 1, 'dON': 0.3916661119359778, 'dxOFFAngle': 87.92550846221202, 'dOFF1': 2.3262951967503454, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 2.3262951967503454, 'nTOFF': 1, 'dOFF': 2.3262951967503454, 'SUCCESS': True}
10:09:22,926 root DEBUG 

=================== Experiment ID #85 	 Dual Point ID: 87 ===================
10:09:22,934 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.880E-09|<1.000E-06)
10:09:22,934 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:23,261 root DEBUG Side: ON	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.000E-02 	 Total distance: 9.000E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([236], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:23,551 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.180E-01 	 Total distance: 1.180E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([130], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:23,551 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:23,551 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 13.45 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:23,551 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:23,551 root DEBUG dOFF/dON = 1.3
10:09:23,551 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.05480192605863, 'dON1': 0.08999517931276618, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.08999517931276618, 'nTON': 1, 'dON': 0.08999517931276618, 'dxOFFAngle': 88.40515531874503, 'dOFF1': 0.11797558214324623, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.11797558214324623, 'nTOFF': 1, 'dOFF': 0.11797558214324623, 'SUCCESS': True}
10:09:23,560 root DEBUG 

=================== Experiment ID #86 	 Dual Point ID: 88 ===================
10:09:23,570 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.057E-09|<1.000E-06)
10:09:23,571 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:23,866 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.890E-01 	 Total distance: 1.890E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([36], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:24,184 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.634E-01 	 Total distance: 3.634E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([237], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:24,185 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:24,185 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 31.58 	 cIDON = [2 6], cIDOFF = [2 6]
10:09:24,185 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:24,185 root DEBUG dOFF/dON = 1.9
10:09:24,185 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.81205841957791, 'dON1': 0.18897096643104772, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.18897096643104772, 'nTON': 1, 'dON': 0.18897096643104772, 'dxOFFAngle': 88.00701114101274, 'dOFF1': 0.36342971325382867, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.36342971325382867, 'nTOFF': 1, 'dOFF': 0.36342971325382867, 'SUCCESS': True}
10:09:24,196 root DEBUG 

=================== Experiment ID #87 	 Dual Point ID: 89 ===================
10:09:24,206 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.661E-09|<1.000E-06)
10:09:24,206 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:24,506 root DEBUG Side: ON	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.952E-02 	 Total distance: 7.952E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([209], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:24,765 root DEBUG Side: ON	 Angle(dx0, dx): 0.12 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.736E-01 	 Total distance: 5.531E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([86], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:25,11 root DEBUG Side: ON	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.129E-01 	 Total distance: 8.660E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([38], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:25,227 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.084E-01 	 Total distance: 1.574E+00 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([144], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:25,409 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.650E-02 	 Total distance: 1.611E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([49], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:25,647 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.197E-01 	 Total distance: 1.197E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([19], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:25,647 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:25,647 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -86.17 	 cIDON = [2 6], cIDOFF = [2 6]
10:09:25,647 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:25,648 root DEBUG dOFF/dON = 0.1
10:09:25,648 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.24480844627706, 'dON1': 1.610956268111497, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 1.610956268111497, 'nTON': 1, 'dON': 1.610956268111497, 'dxOFFAngle': 88.42013480006442, 'dOFF1': 0.11967250530393213, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.11967250530393213, 'nTOFF': 1, 'dOFF': 0.11967250530393213, 'SUCCESS': False}
10:09:25,664 root DEBUG 

=================== Experiment ID #88 	 Dual Point ID: 90 ===================
10:09:25,675 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.161E-08|<1.000E-06)
10:09:25,676 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:26,8 root DEBUG Side: ON	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.323E-01 	 Total distance: 1.323E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([249], dtype=int64), array([[False]])]] 	 class: [4 7]
10:09:26,338 root DEBUG Side: OFF	 Angle(dx0, dx): 0.74 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.340E-01 	 Total distance: 1.340E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([132], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:26,560 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.458E-02 	 Total distance: 2.085E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([209], dtype=int64), array([[False]])]] 	 class: [4 7]
10:09:26,561 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:26,561 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 22.35 	 cIDON = [4 7], cIDOFF = [4 7]
10:09:26,561 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:26,561 root DEBUG dOFF/dON = 1.6
10:09:26,561 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.0373111713325, 'dON1': 0.13234395406518043, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.13234395406518043, 'nTON': 1, 'dON': 0.13234395406518043, 'dxOFFAngle': 89.96758645935128, 'dOFF1': 0.20852895471755786, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.20852895471755786, 'nTOFF': 1, 'dOFF': 0.20852895471755786, 'SUCCESS': True}
10:09:26,570 root DEBUG 

=================== Experiment ID #89 	 Dual Point ID: 91 ===================
10:09:26,580 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.222E-09|<1.000E-06)
10:09:26,580 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:26,898 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.384E-02 	 Total distance: 2.384E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([176], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:27,229 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.243E-01 	 Total distance: 1.243E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([206], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:27,229 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:27,229 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 67.82 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:27,230 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:27,230 root DEBUG dOFF/dON = 5.2
10:09:27,230 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.99308387389316, 'dON1': 0.023839135361909642, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.023839135361909642, 'nTON': 1, 'dON': 0.023839135361909642, 'dxOFFAngle': 89.55941087485218, 'dOFF1': 0.1243182955151079, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.1243182955151079, 'nTOFF': 1, 'dOFF': 0.1243182955151079, 'SUCCESS': True}
10:09:27,237 root DEBUG 

=================== Experiment ID #90 	 Dual Point ID: 92 ===================
10:09:27,247 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.674E-08|<1.000E-06)
10:09:27,247 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:27,484 root DEBUG Side: ON	 Angle(dx0, dx): 4.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.732E-07 	 Total distance: 6.732E-07 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:09:27,705 root DEBUG Side: ON	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.517E-01 	 Total distance: 2.517E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([155], dtype=int64), array([[False]])]] 	 class: [0 8]
10:09:28,28 root DEBUG Side: OFF	 Angle(dx0, dx): 0.96 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.039E-01 	 Total distance: 1.039E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([58], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:09:28,28 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:28,28 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -41.58 	 cIDON = [0 8], cIDOFF = [1 8]
10:09:28,28 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:28,29 root DEBUG dOFF/dON = 0.4
10:09:28,29 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.39654045759886, 'dON1': 0.251734533152717, 'cIDON1': array([0, 8], dtype=int64), 'dON_patch_1': 0.251734533152717, 'nTON': 1, 'dON': 0.251734533152717, 'dxOFFAngle': 87.5890739814414, 'dOFF1': 0.10388444097447638, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 0.10388444097447638, 'nTOFF': 1, 'dOFF': 0.10388444097447638, 'SUCCESS': False}
10:09:28,43 root DEBUG 

=================== Experiment ID #91 	 Dual Point ID: 93 ===================
10:09:28,50 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.929E-07|<1.000E-06)
10:09:28,50 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:28,438 root DEBUG Side: ON	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.593E-01 	 Total distance: 7.593E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([206], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:28,664 root DEBUG Side: ON	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.079E+00 	 Total distance: 1.838E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([59], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:28,840 root DEBUG Side: ON	 Angle(dx0, dx): 1.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.986E-01 	 Total distance: 2.137E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([28], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:29,166 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.359E-01 	 Total distance: 4.359E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([7], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:29,167 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:29,167 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -66.11 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:29,167 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:29,167 root DEBUG dOFF/dON = 0.2
10:09:29,167 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.05539868090928, 'dON1': 2.136641977119129, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 2.136641977119129, 'nTON': 1, 'dON': 2.136641977119129, 'dxOFFAngle': 86.79139059141211, 'dOFF1': 0.4359239515357871, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.4359239515357871, 'nTOFF': 1, 'dOFF': 0.4359239515357871, 'SUCCESS': False}
10:09:29,177 root DEBUG 

=================== Experiment ID #92 	 Dual Point ID: 94 ===================
10:09:29,185 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.857E-11|<1.000E-06)
10:09:29,185 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:29,538 root DEBUG Side: ON	 Angle(dx0, dx): 0.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.215E-02 	 Total distance: 5.215E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([230], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:29,866 root DEBUG Side: OFF	 Angle(dx0, dx): 0.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.719E-02 	 Total distance: 4.719E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([30], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:29,867 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:29,867 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -4.99 	 cIDON = [2 4], cIDOFF = [2 4]
10:09:29,867 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:29,867 root DEBUG dOFF/dON = 0.9
10:09:29,867 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.6735616452245, 'dON1': 0.05214561505637104, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.05214561505637104, 'nTON': 1, 'dON': 0.05214561505637104, 'dxOFFAngle': 86.10000007100133, 'dOFF1': 0.047192281616998503, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.047192281616998503, 'nTOFF': 1, 'dOFF': 0.047192281616998503, 'SUCCESS': False}
10:09:29,878 root DEBUG 

=================== Experiment ID #93 	 Dual Point ID: 95 ===================
10:09:29,886 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.021E-08|<1.000E-06)
10:09:29,887 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:30,184 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.938E-02 	 Total distance: 2.938E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([105], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:30,376 root DEBUG Side: ON	 Angle(dx0, dx): 1.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.102E-02 	 Total distance: 5.041E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([182], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:30,670 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.938E-03 	 Total distance: 6.938E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([114], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:30,670 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:30,670 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -75.80 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:30,671 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:30,671 root DEBUG dOFF/dON = 0.1
10:09:30,671 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.45861631375587, 'dON1': 0.05040549788240385, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.05040549788240385, 'nTON': 1, 'dON': 0.05040549788240385, 'dxOFFAngle': 88.676917435155, 'dOFF1': 0.006938190248638102, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.006938190248638102, 'nTOFF': 1, 'dOFF': 0.006938190248638102, 'SUCCESS': False}
10:09:30,688 root DEBUG 

=================== Experiment ID #94 	 Dual Point ID: 96 ===================
10:09:30,701 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.443E-08|<1.000E-06)
10:09:30,701 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:31,29 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.660E-02 	 Total distance: 7.660E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([142], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:31,260 root DEBUG Side: ON	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.450E-01 	 Total distance: 3.216E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([74], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:31,509 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.308E-01 	 Total distance: 5.524E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([18], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:31,840 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.080E-01 	 Total distance: 1.080E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([101], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:31,841 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:31,841 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -67.30 	 cIDON = [4 7], cIDOFF = [4 7]
10:09:31,841 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:31,841 root DEBUG dOFF/dON = 0.2
10:09:31,841 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.02402091250575, 'dON1': 0.5524365443519605, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.5524365443519605, 'nTON': 1, 'dON': 0.5524365443519605, 'dxOFFAngle': 89.4962473431642, 'dOFF1': 0.10796827176289332, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.10796827176289332, 'nTOFF': 1, 'dOFF': 0.10796827176289332, 'SUCCESS': False}
10:09:31,848 root DEBUG 

=================== Experiment ID #95 	 Dual Point ID: 97 ===================
10:09:31,856 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.329E-08|<1.000E-06)
10:09:31,857 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:32,177 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.921E-03 	 Total distance: 6.921E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([4], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:32,469 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.678E-02 	 Total distance: 1.678E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([4], dtype=int64), array([[False]])]] 	 class: [8 9]
10:09:32,469 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:32,469 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 41.60 	 cIDON = [8 9], cIDOFF = [8 9]
10:09:32,469 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:32,469 root DEBUG dOFF/dON = 2.4
10:09:32,470 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.45069382932805, 'dON1': 0.006921402209806258, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.006921402209806258, 'nTON': 1, 'dON': 0.006921402209806258, 'dxOFFAngle': 88.49598051550336, 'dOFF1': 0.016780921539432996, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.016780921539432996, 'nTOFF': 1, 'dOFF': 0.016780921539432996, 'SUCCESS': True}
10:09:32,480 root DEBUG 

=================== Experiment ID #96 	 Dual Point ID: 98 ===================
10:09:32,493 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.379E-08|<1.000E-06)
10:09:32,493 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:32,840 root DEBUG Side: ON	 Angle(dx0, dx): 0.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.467E-01 	 Total distance: 2.467E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([60], dtype=int64), array([[False]])]] 	 class: [2 5]
10:09:33,140 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.260E-02 	 Total distance: 4.260E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([121], dtype=int64), array([[False]])]] 	 class: [2 5]
10:09:33,141 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:33,141 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -70.54 	 cIDON = [2 5], cIDOFF = [2 5]
10:09:33,141 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:33,141 root DEBUG dOFF/dON = 0.2
10:09:33,141 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.8873894013872, 'dON1': 0.24665006785910087, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.24665006785910087, 'nTON': 1, 'dON': 0.24665006785910087, 'dxOFFAngle': 88.97845456211644, 'dOFF1': 0.04260036235220057, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.04260036235220057, 'nTOFF': 1, 'dOFF': 0.04260036235220057, 'SUCCESS': False}
10:09:33,147 root DEBUG 

=================== Experiment ID #97 	 Dual Point ID: 99 ===================
10:09:33,154 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.301E-08|<1.000E-06)
10:09:33,154 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:33,460 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.360E-01 	 Total distance: 5.360E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([58], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:33,676 root DEBUG Side: ON	 Angle(dx0, dx): 0.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.401E-01 	 Total distance: 8.761E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([59], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:33,966 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.811E-01 	 Total distance: 3.811E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([10], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:33,967 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:33,967 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -39.37 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:33,967 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:33,967 root DEBUG dOFF/dON = 0.4
10:09:33,967 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.88509492853485, 'dON1': 0.876107337903002, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.876107337903002, 'nTON': 1, 'dON': 0.876107337903002, 'dxOFFAngle': 87.24818601344907, 'dOFF1': 0.3811292910798108, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.3811292910798108, 'nTOFF': 1, 'dOFF': 0.3811292910798108, 'SUCCESS': False}
10:09:33,972 root DEBUG 

=================== Experiment ID #98 	 Dual Point ID: 100 ===================
10:09:33,980 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.573E-08|<1.000E-06)
10:09:33,981 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:34,297 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.788E-02 	 Total distance: 7.788E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([57], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:34,526 root DEBUG Side: ON	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.465E-01 	 Total distance: 6.243E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([13], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:34,790 root DEBUG Side: OFF	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.668E-01 	 Total distance: 2.668E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([241], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:34,790 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:34,790 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -40.12 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:34,790 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:34,791 root DEBUG dOFF/dON = 0.4
10:09:34,791 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.14948362562494, 'dON1': 0.6243374729638278, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.6243374729638278, 'nTON': 1, 'dON': 0.6243374729638278, 'dxOFFAngle': 89.80601982642145, 'dOFF1': 0.26681884268488676, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.26681884268488676, 'nTOFF': 1, 'dOFF': 0.26681884268488676, 'SUCCESS': False}
10:09:34,801 root DEBUG 

=================== Experiment ID #99 	 Dual Point ID: 101 ===================
10:09:34,809 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.996E-08|<1.000E-06)
10:09:34,809 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:35,95 root DEBUG Side: ON	 Angle(dx0, dx): 1.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.961E-01 	 Total distance: 9.961E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([188], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:35,386 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.621E-02 	 Total distance: 6.621E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([196], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:35,386 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:35,386 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -87.53 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:35,386 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:35,386 root DEBUG dOFF/dON = 0.1
10:09:35,386 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.76872935188067, 'dON1': 0.9960730522670318, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.9960730522670318, 'nTON': 1, 'dON': 0.9960730522670318, 'dxOFFAngle': 89.99139385377322, 'dOFF1': 0.06621033994410341, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.06621033994410341, 'nTOFF': 1, 'dOFF': 0.06621033994410341, 'SUCCESS': False}
10:09:35,395 root DEBUG 

=================== Experiment ID #100 	 Dual Point ID: 102 ===================
10:09:35,410 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.813E-09|<1.000E-06)
10:09:35,411 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:35,669 root DEBUG Side: ON	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.790E-01 	 Total distance: 1.790E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([68], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:35,968 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.703E-01 	 Total distance: 3.703E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([149], dtype=int64), array([[False]])]] 	 class: [5 7]
10:09:35,968 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:35,969 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 34.84 	 cIDON = [5 7], cIDOFF = [5 7]
10:09:35,969 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:35,969 root DEBUG dOFF/dON = 2.1
10:09:35,969 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.08308478694872, 'dON1': 0.17896760796540404, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.17896760796540404, 'nTON': 1, 'dON': 0.17896760796540404, 'dxOFFAngle': 87.13335725446025, 'dOFF1': 0.3703435847921145, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.3703435847921145, 'nTOFF': 1, 'dOFF': 0.3703435847921145, 'SUCCESS': True}
10:09:35,979 root DEBUG 

=================== Experiment ID #101 	 Dual Point ID: 103 ===================
10:09:35,987 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.214E-08|<1.000E-06)
10:09:35,987 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:36,252 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.412E-01 	 Total distance: 4.412E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([38], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:36,582 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.253E-01 	 Total distance: 2.253E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([132], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:36,795 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.421E-01 	 Total distance: 4.674E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([190], dtype=int64), array([[False]])]] 	 class: [4 7]
10:09:37,2 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.394E-01 	 Total distance: 6.068E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([178], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:37,222 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.196E-01 	 Total distance: 1.326E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([25], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:37,223 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:37,223 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 50.08 	 cIDON = [4 7], cIDOFF = [4 7]
10:09:37,223 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:37,223 root DEBUG dOFF/dON = 3.0
10:09:37,223 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.24990238603769, 'dON1': 0.44115922651410444, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.44115922651410444, 'nTON': 1, 'dON': 0.44115922651410444, 'dxOFFAngle': 89.88861263904926, 'dOFF1': 1.3264156427225533, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 1.3264156427225533, 'nTOFF': 1, 'dOFF': 1.3264156427225533, 'SUCCESS': True}
10:09:37,232 root DEBUG 

=================== Experiment ID #102 	 Dual Point ID: 104 ===================
10:09:37,239 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.859E-08|<1.000E-06)
10:09:37,240 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:37,555 root DEBUG Side: ON	 Angle(dx0, dx): 2.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.417E-01 	 Total distance: 3.417E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([186], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:37,825 root DEBUG Side: OFF	 Angle(dx0, dx): 0.78 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.350E-02 	 Total distance: 4.350E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([74], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:38,66 root DEBUG Side: OFF	 Angle(dx0, dx): 1.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.329E-02 	 Total distance: 1.268E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([135], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:38,66 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:38,67 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -45.87 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:38,67 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:38,67 root DEBUG dOFF/dON = 0.4
10:09:38,67 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.02190307668647, 'dON1': 0.34171722906200624, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.34171722906200624, 'nTON': 1, 'dON': 0.34171722906200624, 'dxOFFAngle': 84.77494947506607, 'dOFF1': 0.12679270948943994, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.12679270948943994, 'nTOFF': 1, 'dOFF': 0.12679270948943994, 'SUCCESS': False}
10:09:38,75 root DEBUG 

=================== Experiment ID #103 	 Dual Point ID: 105 ===================
10:09:38,83 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.792E-10|<1.000E-06)
10:09:38,83 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:38,402 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.671E-01 	 Total distance: 1.671E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([80], dtype=int64), array([[False]])]] 	 class: [3 7]
10:09:38,646 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.123E-01 	 Total distance: 2.123E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([171], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:38,646 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:38,647 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 11.91 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:38,647 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:38,647 root DEBUG dOFF/dON = 1.3
10:09:38,647 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.06936399049867, 'dON1': 0.16713674871774245, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.16713674871774245, 'nTON': 1, 'dON': 0.16713674871774245, 'dxOFFAngle': 85.8412776922582, 'dOFF1': 0.2123210039880643, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.2123210039880643, 'nTOFF': 1, 'dOFF': 0.2123210039880643, 'SUCCESS': True}
10:09:38,658 root DEBUG 

=================== Experiment ID #104 	 Dual Point ID: 106 ===================
10:09:38,663 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.267E-09|<1.000E-06)
10:09:38,663 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:38,896 root DEBUG Side: ON	 Angle(dx0, dx): 4.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.036E-06 	 Total distance: 4.036E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 9]
10:09:39,151 root DEBUG Side: OFF	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.028E-01 	 Total distance: 2.028E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([56], dtype=int64), array([[False]])]] 	 class: [1 9]
10:09:39,151 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:39,151 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [1 9], cIDOFF = [1 9]
10:09:39,151 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:39,151 root DEBUG dOFF/dON = 50246.0
10:09:39,151 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.13016291961792, 'dON1': 4.0362556524912404e-06, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 4.0362556524912404e-06, 'nTON': 1, 'dON': 4.0362556524912404e-06, 'dxOFFAngle': 87.51641114703128, 'dOFF1': 0.20280568115484518, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.20280568115484518, 'nTOFF': 1, 'dOFF': 0.20280568115484518, 'SUCCESS': True}
10:09:39,161 root DEBUG 

=================== Experiment ID #105 	 Dual Point ID: 107 ===================
10:09:39,168 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.684E-09|<1.000E-06)
10:09:39,168 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:39,467 root DEBUG Side: ON	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.363E-02 	 Total distance: 9.363E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([0], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:39,837 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.392E-01 	 Total distance: 1.392E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([83], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:40,26 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.423E-01 	 Total distance: 3.815E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([48], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:40,26 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:40,26 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 60.59 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:40,26 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:40,26 root DEBUG dOFF/dON = 4.1
10:09:40,26 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.61090574159897, 'dON1': 0.09362764090231118, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.09362764090231118, 'nTON': 1, 'dON': 0.09362764090231118, 'dxOFFAngle': 87.28352050405428, 'dOFF1': 0.38154857236347717, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.38154857236347717, 'nTOFF': 1, 'dOFF': 0.38154857236347717, 'SUCCESS': True}
10:09:40,36 root DEBUG 

=================== Experiment ID #106 	 Dual Point ID: 108 ===================
10:09:40,44 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.402E-09|<1.000E-06)
10:09:40,44 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:40,358 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.729E-02 	 Total distance: 7.729E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([131], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:09:40,542 root DEBUG Side: ON	 Angle(dx0, dx): 0.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.667E-02 	 Total distance: 1.040E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([151], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:09:40,851 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.915E-01 	 Total distance: 2.915E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([50], dtype=int64), array([[False]])]] 	 class: [5 9]
10:09:40,851 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:40,852 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 47.42 	 cIDON = [5 9], cIDOFF = [5 9]
10:09:40,852 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:40,852 root DEBUG dOFF/dON = 2.8
10:09:40,852 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.51990742188228, 'dON1': 0.1039626783476363, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.1039626783476363, 'nTON': 1, 'dON': 0.1039626783476363, 'dxOFFAngle': 87.42702627645629, 'dOFF1': 0.291450140343231, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.291450140343231, 'nTOFF': 1, 'dOFF': 0.291450140343231, 'SUCCESS': True}
10:09:40,862 root DEBUG 

=================== Experiment ID #107 	 Dual Point ID: 109 ===================
10:09:40,869 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.445E-10|<1.000E-06)
10:09:40,869 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:41,199 root DEBUG Side: ON	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.368E-01 	 Total distance: 1.368E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([200], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:41,445 root DEBUG Side: OFF	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.034E-02 	 Total distance: 4.034E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([137], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:41,661 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.418E-01 	 Total distance: 1.821E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([255], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:41,883 root DEBUG Side: OFF	 Angle(dx0, dx): 2.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.924E-01 	 Total distance: 3.745E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([218], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:41,883 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:41,884 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 46.49 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:41,884 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:41,884 root DEBUG dOFF/dON = 2.7
10:09:41,884 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.26108113523503, 'dON1': 0.13680299033513543, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.13680299033513543, 'nTON': 1, 'dON': 0.13680299033513543, 'dxOFFAngle': 87.2434266560101, 'dOFF1': 0.3744940499943833, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.3744940499943833, 'nTOFF': 1, 'dOFF': 0.3744940499943833, 'SUCCESS': True}
10:09:41,895 root DEBUG 

=================== Experiment ID #108 	 Dual Point ID: 110 ===================
10:09:41,903 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.309E-09|<1.000E-06)
10:09:41,904 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:42,237 root DEBUG Side: ON	 Angle(dx0, dx): 0.88 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.957E-01 	 Total distance: 1.957E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([212], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:42,587 root DEBUG Side: OFF	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.022E-02 	 Total distance: 5.022E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([200], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:42,587 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:42,587 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -59.16 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:42,587 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:42,587 root DEBUG dOFF/dON = 0.3
10:09:42,587 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.55085298099877, 'dON1': 0.19572257941190924, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.19572257941190924, 'nTON': 1, 'dON': 0.19572257941190924, 'dxOFFAngle': 87.40732560738272, 'dOFF1': 0.05022431888974931, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.05022431888974931, 'nTOFF': 1, 'dOFF': 0.05022431888974931, 'SUCCESS': False}
10:09:42,597 root DEBUG 

=================== Experiment ID #109 	 Dual Point ID: 111 ===================
10:09:42,606 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.916E-08|<1.000E-06)
10:09:42,606 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:42,914 root DEBUG Side: ON	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.613E-01 	 Total distance: 6.613E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([35], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:09:43,202 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.307E-01 	 Total distance: 4.307E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([249], dtype=int64), array([[False]])]] 	 class: [6 7]
10:09:43,401 root DEBUG Side: OFF	 Angle(dx0, dx): 0.56 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.325E-02 	 Total distance: 4.939E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([50], dtype=int64), array([[False]])]] 	 class: [6 7]
10:09:43,401 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:43,401 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -14.49 	 cIDON = [6 7], cIDOFF = [6 7]
10:09:43,402 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:43,402 root DEBUG dOFF/dON = 0.7
10:09:43,402 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.89205335135279, 'dON1': 0.6612667491685312, 'cIDON1': array([6, 7], dtype=int64), 'dON_patch_1': 0.6612667491685312, 'nTON': 1, 'dON': 0.6612667491685312, 'dxOFFAngle': 89.6259143493318, 'dOFF1': 0.49393257855434275, 'cIDOFF1': array([6, 7], dtype=int64), 'dOFF_patch_1': 0.49393257855434275, 'nTOFF': 1, 'dOFF': 0.49393257855434275, 'SUCCESS': False}
10:09:43,411 root DEBUG 

=================== Experiment ID #110 	 Dual Point ID: 112 ===================
10:09:43,419 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.360E-09|<1.000E-06)
10:09:43,420 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:43,719 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.559E-03 	 Total distance: 1.559E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([137], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:43,937 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.688E-01 	 Total distance: 7.704E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([93], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:44,117 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.165E-02 	 Total distance: 8.121E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([114], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:44,383 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.813E-01 	 Total distance: 9.933E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([183], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:44,522 root DEBUG Side: ON	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.282E-02 	 Total distance: 1.076E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([68], dtype=int64), array([[False]])]] 	 class: [3 5]
10:09:44,740 root DEBUG Side: OFF	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.497E-02 	 Total distance: 5.497E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([112], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:09:44,740 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:44,740 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -90.28 	 cIDON = [3 5], cIDOFF = [3 5]
10:09:44,740 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:44,740 root DEBUG dOFF/dON = 0.1
10:09:44,740 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.76549002374767, 'dON1': 1.0761625819312524, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 1.0761625819312524, 'nTON': 1, 'dON': 1.0761625819312524, 'dxOFFAngle': 89.91518279797835, 'dOFF1': 0.054972775419983314, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.054972775419983314, 'nTOFF': 1, 'dOFF': 0.054972775419983314, 'SUCCESS': False}
10:09:44,748 root DEBUG 

=================== Experiment ID #111 	 Dual Point ID: 113 ===================
10:09:44,758 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.470E-08|<1.000E-06)
10:09:44,759 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:44,988 root DEBUG Side: ON	 Angle(dx0, dx): 2.60 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.725E-07 	 Total distance: 6.725E-07 	 Future toggles: 0 	 Past toggles: 0 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 9]
10:09:45,194 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.721E-02 	 Total distance: 6.721E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([75], dtype=int64), array([[False]])]] 	 class: [0 9]
10:09:45,534 root DEBUG Side: OFF	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.873E-02 	 Total distance: 9.873E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([105], dtype=int64), array([[False]])]] 	 class: [1 9]
10:09:45,810 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.418E-01 	 Total distance: 8.405E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([154], dtype=int64), array([[False]])]] 	 class: [1 9]
10:09:46,25 root DEBUG Side: OFF	 Angle(dx0, dx): 0.59 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.176E-02 	 Total distance: 9.323E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([31], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:09:46,25 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:46,26 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 86.55 	 cIDON = [0 9], cIDOFF = [1 9]
10:09:46,26 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:46,26 root DEBUG dOFF/dON = 13.9
10:09:46,26 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.57157790021144, 'dON1': 0.06720760136860654, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.06720760136860654, 'nTON': 1, 'dON': 0.06720760136860654, 'dxOFFAngle': 88.355784384305, 'dOFF1': 0.9322961487386223, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.9322961487386223, 'nTOFF': 1, 'dOFF': 0.9322961487386223, 'SUCCESS': True}
10:09:46,35 root DEBUG 

=================== Experiment ID #112 	 Dual Point ID: 114 ===================
10:09:46,45 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.277E-08|<1.000E-06)
10:09:46,45 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:46,288 root DEBUG Side: ON	 Angle(dx0, dx): 5.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.744E-06 	 Total distance: 6.744E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 8]
10:09:46,603 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.581E-01 	 Total distance: 5.581E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([135], dtype=int64), array([[ True]])]] 	 class: [0 8]
10:09:46,603 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:46,604 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [0 8], cIDOFF = [0 8]
10:09:46,604 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:46,604 root DEBUG dOFF/dON = 82761.0
10:09:46,604 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.05844524757406, 'dON1': 6.743721838491299e-06, 'cIDON1': array([0, 8], dtype=int64), 'dON_patch_1': 6.743721838491299e-06, 'nTON': 1, 'dON': 6.743721838491299e-06, 'dxOFFAngle': 85.83302298545985, 'dOFF1': 0.5581173629493119, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.5581173629493119, 'nTOFF': 1, 'dOFF': 0.5581173629493119, 'SUCCESS': True}
10:09:46,616 root DEBUG 

=================== Experiment ID #113 	 Dual Point ID: 115 ===================
10:09:46,623 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.397E-08|<1.000E-06)
10:09:46,623 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:46,901 root DEBUG Side: ON	 Angle(dx0, dx): 2.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.041E-01 	 Total distance: 1.041E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([164], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:47,168 root DEBUG Side: OFF	 Angle(dx0, dx): 0.97 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.865E-02 	 Total distance: 4.865E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([203], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:47,169 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:47,169 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -36.29 	 cIDON = [4 7], cIDOFF = [4 7]
10:09:47,170 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:47,170 root DEBUG dOFF/dON = 0.5
10:09:47,170 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.00852564251056, 'dON1': 0.10408176837189267, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.10408176837189267, 'nTON': 1, 'dON': 0.10408176837189267, 'dxOFFAngle': 87.44096757096489, 'dOFF1': 0.04864925732452499, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.04864925732452499, 'nTOFF': 1, 'dOFF': 0.04864925732452499, 'SUCCESS': False}
10:09:47,181 root DEBUG 

=================== Experiment ID #114 	 Dual Point ID: 116 ===================
10:09:47,188 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.924E-09|<1.000E-06)
10:09:47,188 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:47,540 root DEBUG Side: ON	 Angle(dx0, dx): 0.92 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.318E-01 	 Total distance: 2.318E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([127], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:47,832 root DEBUG Side: OFF	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.317E-02 	 Total distance: 1.317E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([1], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:47,833 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:47,833 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -89.25 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:47,833 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:47,833 root DEBUG dOFF/dON = 0.1
10:09:47,833 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.02499459721079, 'dON1': 0.2317512245860822, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.2317512245860822, 'nTON': 1, 'dON': 0.2317512245860822, 'dxOFFAngle': 86.95936224537691, 'dOFF1': 0.013169637932468626, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.013169637932468626, 'nTOFF': 1, 'dOFF': 0.013169637932468626, 'SUCCESS': False}
10:09:47,840 root DEBUG 

=================== Experiment ID #115 	 Dual Point ID: 117 ===================
10:09:47,852 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.689E-08|<1.000E-06)
10:09:47,852 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:48,190 root DEBUG Side: ON	 Angle(dx0, dx): 1.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.133E-01 	 Total distance: 7.133E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([0], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:48,520 root DEBUG Side: OFF	 Angle(dx0, dx): 0.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.440E-01 	 Total distance: 3.440E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([30], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:09:48,738 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.802E-01 	 Total distance: 1.024E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([248], dtype=int64), array([[False]])]] 	 class: [2 6]
10:09:48,738 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:48,738 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 17.89 	 cIDON = [2 6], cIDOFF = [2 6]
10:09:48,738 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:48,738 root DEBUG dOFF/dON = 1.4
10:09:48,738 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.06757796021326, 'dON1': 0.713261755312887, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.713261755312887, 'nTON': 1, 'dON': 0.713261755312887, 'dxOFFAngle': 88.12093418451684, 'dOFF1': 1.024145999491346, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 1.024145999491346, 'nTOFF': 1, 'dOFF': 1.024145999491346, 'SUCCESS': True}
10:09:48,748 root DEBUG 

=================== Experiment ID #116 	 Dual Point ID: 118 ===================
10:09:48,756 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.457E-08|<1.000E-06)
10:09:48,757 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:49,77 root DEBUG Side: ON	 Angle(dx0, dx): 0.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.903E-01 	 Total distance: 1.903E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([15], dtype=int64), array([[False]])]] 	 class: [1 9]
10:09:49,347 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.055E-02 	 Total distance: 6.055E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([206], dtype=int64), array([[False]])]] 	 class: [0 9]
10:09:49,347 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:49,348 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -51.73 	 cIDON = [1 9], cIDOFF = [0 9]
10:09:49,348 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:49,348 root DEBUG dOFF/dON = 0.3
10:09:49,348 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.54895481266614, 'dON1': 0.19031285862496292, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.19031285862496292, 'nTON': 1, 'dON': 0.19031285862496292, 'dxOFFAngle': 87.93418012207172, 'dOFF1': 0.06054891178137405, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.06054891178137405, 'nTOFF': 1, 'dOFF': 0.06054891178137405, 'SUCCESS': False}
10:09:49,357 root DEBUG 

=================== Experiment ID #117 	 Dual Point ID: 119 ===================
10:09:49,368 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.153E-09|<1.000E-06)
10:09:49,368 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:49,649 root DEBUG Side: ON	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.248E-01 	 Total distance: 1.248E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([85], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:09:49,979 root DEBUG Side: OFF	 Angle(dx0, dx): 5.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.661E-02 	 Total distance: 5.661E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([3, 8], dtype=int64), array([[0.],
       [1.]])]] 	 class: [7 8]
10:09:49,980 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:49,980 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -37.60 	 cIDON = [3 7], cIDOFF = [3 7]
10:09:49,980 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:49,980 root DEBUG dOFF/dON = 0.5
10:09:49,980 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.10385690026627, 'dON1': 0.12483850069517023, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.12483850069517023, 'nTON': 1, 'dON': 0.12483850069517023, 'dxOFFAngle': 88.41012818892189, 'dOFF1': 0.05660832857272259, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.05660832857272259, 'nTOFF': 1, 'dOFF': 0.05660832857272259, 'SUCCESS': False}
10:09:49,994 root DEBUG 

=================== Experiment ID #118 	 Dual Point ID: 120 ===================
10:09:50,3 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.039E-07|<1.000E-06)
10:09:50,3 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:50,302 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.513E-01 	 Total distance: 4.513E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([28], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:09:50,532 root DEBUG Side: ON	 Angle(dx0, dx): 0.86 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.693E-01 	 Total distance: 1.321E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([14], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:09:50,830 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.567E-01 	 Total distance: 1.567E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([22], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:09:50,831 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:50,831 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -78.78 	 cIDON = [5 6], cIDOFF = [5 6]
10:09:50,831 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:50,831 root DEBUG dOFF/dON = 0.1
10:09:50,831 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.81517295608387, 'dON1': 1.320549494769382, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 1.320549494769382, 'nTON': 1, 'dON': 1.320549494769382, 'dxOFFAngle': 89.95013115860664, 'dOFF1': 0.15672278834336134, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.15672278834336134, 'nTOFF': 1, 'dOFF': 0.15672278834336134, 'SUCCESS': False}
10:09:50,841 root DEBUG 

=================== Experiment ID #119 	 Dual Point ID: 121 ===================
10:09:50,851 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.317E-08|<1.000E-06)
10:09:50,851 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:51,206 root DEBUG Side: ON	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.617E-01 	 Total distance: 1.617E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([213], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:51,386 root DEBUG Side: ON	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.063E-01 	 Total distance: 2.680E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([188], dtype=int64), array([[False]])]] 	 class: [4 7]
10:09:51,742 root DEBUG Side: OFF	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.233E-01 	 Total distance: 1.233E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([47], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:09:51,742 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:51,742 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -36.97 	 cIDON = [4 7], cIDOFF = [4 7]
10:09:51,743 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:51,743 root DEBUG dOFF/dON = 0.5
10:09:51,743 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.057727964332, 'dON1': 0.2680432621395994, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.2680432621395994, 'nTON': 1, 'dON': 0.2680432621395994, 'dxOFFAngle': 86.17211794394335, 'dOFF1': 0.12334212959923499, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.12334212959923499, 'nTOFF': 1, 'dOFF': 0.12334212959923499, 'SUCCESS': False}
10:09:51,755 root DEBUG 

=================== Experiment ID #120 	 Dual Point ID: 122 ===================
10:09:51,762 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.007E-08|<1.000E-06)
10:09:51,762 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:52,57 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.181E-02 	 Total distance: 3.181E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([139], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:09:52,332 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.672E-02 	 Total distance: 6.672E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([205], dtype=int64), array([[ True]])]] 	 class: [2 5]
10:09:52,332 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:52,333 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 35.44 	 cIDON = [2 5], cIDOFF = [2 5]
10:09:52,333 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:52,333 root DEBUG dOFF/dON = 2.1
10:09:52,333 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.25455498950181, 'dON1': 0.03180676613232783, 'cIDON1': array([2, 5], dtype=int64), 'dON_patch_1': 0.03180676613232783, 'nTON': 1, 'dON': 0.03180676613232783, 'dxOFFAngle': 88.48069835404297, 'dOFF1': 0.0667249301104752, 'cIDOFF1': array([2, 5], dtype=int64), 'dOFF_patch_1': 0.0667249301104752, 'nTOFF': 1, 'dOFF': 0.0667249301104752, 'SUCCESS': True}
10:09:52,347 root DEBUG 

=================== Experiment ID #121 	 Dual Point ID: 123 ===================
10:09:52,357 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.581E-08|<1.000E-06)
10:09:52,358 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:52,660 root DEBUG Side: ON	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.639E-02 	 Total distance: 9.639E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([192], dtype=int64), array([[False]])]] 	 class: [6 9]
10:09:52,975 root DEBUG Side: OFF	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.812E-02 	 Total distance: 7.812E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([44], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:09:52,975 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:52,975 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -10.47 	 cIDON = [6 9], cIDOFF = [6 9]
10:09:52,975 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:52,975 root DEBUG dOFF/dON = 0.8
10:09:52,975 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.93902556237492, 'dON1': 0.09638992462670458, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.09638992462670458, 'nTON': 1, 'dON': 0.09638992462670458, 'dxOFFAngle': 89.20106237775099, 'dOFF1': 0.07811868904068586, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.07811868904068586, 'nTOFF': 1, 'dOFF': 0.07811868904068586, 'SUCCESS': False}
10:09:52,987 root DEBUG 

=================== Experiment ID #122 	 Dual Point ID: 124 ===================
10:09:52,998 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.249E-08|<1.000E-06)
10:09:52,998 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:53,334 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.445E-01 	 Total distance: 7.445E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([103], dtype=int64), array([[False]])]] 	 class: [1 2]
10:09:53,535 root DEBUG Side: ON	 Angle(dx0, dx): 1.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.739E-01 	 Total distance: 9.184E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([73], dtype=int64), array([[ True]])]] 	 class: [1 2]
10:09:53,789 root DEBUG Side: OFF	 Angle(dx0, dx): 0.44 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.438E-01 	 Total distance: 1.438E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([109], dtype=int64), array([[ True]])]] 	 class: [0 2]
10:09:53,790 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:53,790 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -72.92 	 cIDON = [1 2], cIDOFF = [0 2]
10:09:53,791 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:53,791 root DEBUG dOFF/dON = 0.2
10:09:53,791 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.24695984646885, 'dON1': 0.9184198953249809, 'cIDON1': array([1, 2], dtype=int64), 'dON_patch_1': 0.9184198953249809, 'nTON': 1, 'dON': 0.9184198953249809, 'dxOFFAngle': 89.39567160154147, 'dOFF1': 0.14380739340659415, 'cIDOFF1': array([0, 2], dtype=int64), 'dOFF_patch_1': 0.14380739340659415, 'nTOFF': 1, 'dOFF': 0.14380739340659415, 'SUCCESS': False}
10:09:53,806 root DEBUG 

=================== Experiment ID #123 	 Dual Point ID: 125 ===================
10:09:53,818 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.754E-08|<1.000E-06)
10:09:53,818 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:54,158 root DEBUG Side: ON	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.172E-02 	 Total distance: 4.172E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([212], dtype=int64), array([[False]])]] 	 class: [4 5]
10:09:54,463 root DEBUG Side: OFF	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.161E-02 	 Total distance: 2.161E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([23], dtype=int64), array([[False]])]] 	 class: [4 5]
10:09:54,463 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:54,464 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -31.76 	 cIDON = [4 5], cIDOFF = [4 5]
10:09:54,464 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:54,464 root DEBUG dOFF/dON = 0.5
10:09:54,464 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.76567757009283, 'dON1': 0.0417191714014133, 'cIDON1': array([4, 5], dtype=int64), 'dON_patch_1': 0.0417191714014133, 'nTON': 1, 'dON': 0.0417191714014133, 'dxOFFAngle': 89.67629506791172, 'dOFF1': 0.021606198763194733, 'cIDOFF1': array([4, 5], dtype=int64), 'dOFF_patch_1': 0.021606198763194733, 'nTOFF': 1, 'dOFF': 0.021606198763194733, 'SUCCESS': False}
10:09:54,474 root DEBUG 

=================== Experiment ID #124 	 Dual Point ID: 126 ===================
10:09:54,485 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.701E-09|<1.000E-06)
10:09:54,485 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:54,766 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.838E-01 	 Total distance: 2.838E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([58], dtype=int64), array([[False]])]] 	 class: [3 6]
10:09:55,39 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.189E-01 	 Total distance: 2.189E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([187], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:55,277 root DEBUG Side: OFF	 Angle(dx0, dx): 0.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.221E-01 	 Total distance: 3.409E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([28], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:09:55,277 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:55,278 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 9.15 	 cIDON = [3 6], cIDOFF = [3 6]
10:09:55,278 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:55,278 root DEBUG dOFF/dON = 1.2
10:09:55,278 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.27028920216954, 'dON1': 0.28377604388687516, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.28377604388687516, 'nTON': 1, 'dON': 0.28377604388687516, 'dxOFFAngle': 88.5798495320556, 'dOFF1': 0.34091211802502364, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.34091211802502364, 'nTOFF': 1, 'dOFF': 0.34091211802502364, 'SUCCESS': True}
10:09:55,292 root DEBUG 

=================== Experiment ID #125 	 Dual Point ID: 127 ===================
10:09:55,303 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.428E-08|<1.000E-06)
10:09:55,303 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:55,639 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.856E-01 	 Total distance: 7.856E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([16], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:55,947 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.472E-01 	 Total distance: 2.472E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([115], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:09:55,947 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:55,947 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -52.12 	 cIDON = [0 1], cIDOFF = [0 1]
10:09:55,947 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:55,947 root DEBUG dOFF/dON = 0.3
10:09:55,947 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.51753702871342, 'dON1': 0.7856140944952906, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.7856140944952906, 'nTON': 1, 'dON': 0.7856140944952906, 'dxOFFAngle': 89.43025613465988, 'dOFF1': 0.24724263943723312, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.24724263943723312, 'nTOFF': 1, 'dOFF': 0.24724263943723312, 'SUCCESS': False}
10:09:55,958 root DEBUG 

=================== Experiment ID #126 	 Dual Point ID: 128 ===================
10:09:55,969 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.535E-09|<1.000E-06)
10:09:55,970 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:56,265 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.020E-03 	 Total distance: 5.020E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([255], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:09:56,468 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.161E-02 	 Total distance: 4.663E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([15], dtype=int64), array([[False]])]] 	 class: [2 3]
10:09:56,738 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.673E-03 	 Total distance: 5.673E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([254], dtype=int64), array([[False]])]] 	 class: [2 3]
10:09:56,961 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.344E-01 	 Total distance: 3.401E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([18], dtype=int64), array([[False]])]] 	 class: [2 3]
10:09:56,962 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:56,962 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 75.88 	 cIDON = [2 3], cIDOFF = [2 3]
10:09:56,962 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:56,962 root DEBUG dOFF/dON = 7.3
10:09:56,962 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.97752113800317, 'dON1': 0.0466321806808695, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.0466321806808695, 'nTON': 1, 'dON': 0.0466321806808695, 'dxOFFAngle': 89.73672472961478, 'dOFF1': 0.34009117893308694, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.34009117893308694, 'nTOFF': 1, 'dOFF': 0.34009117893308694, 'SUCCESS': True}
10:09:56,975 root DEBUG 

=================== Experiment ID #127 	 Dual Point ID: 129 ===================
10:09:56,985 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.517E-08|<1.000E-06)
10:09:56,986 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:57,305 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.623E-02 	 Total distance: 9.623E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([49], dtype=int64), array([[False]])]] 	 class: [2 7]
10:09:57,595 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.783E-03 	 Total distance: 2.783E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([41], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:09:57,595 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:57,595 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -94.38 	 cIDON = [2 7], cIDOFF = [2 7]
10:09:57,596 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:09:57,596 root DEBUG dOFF/dON = 0.0
10:09:57,596 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.1404622478487, 'dON1': 0.0962334041113102, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.0962334041113102, 'nTON': 1, 'dON': 0.0962334041113102, 'dxOFFAngle': 88.76860463219121, 'dOFF1': 0.0027828381203812654, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.0027828381203812654, 'nTOFF': 1, 'dOFF': 0.0027828381203812654, 'SUCCESS': False}
10:09:57,605 root DEBUG 

=================== Experiment ID #128 	 Dual Point ID: 130 ===================
10:09:57,614 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.827E-08|<1.000E-06)
10:09:57,614 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:57,911 root DEBUG Side: ON	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.129E-02 	 Total distance: 1.129E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([97], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:58,122 root DEBUG Side: ON	 Angle(dx0, dx): 1.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.849E-02 	 Total distance: 6.979E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([177], dtype=int64), array([[False]])]] 	 class: [2 4]
10:09:58,445 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.658E-01 	 Total distance: 1.658E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([207], dtype=int64), array([[ True]])]] 	 class: [2 4]
10:09:58,445 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:09:58,445 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 40.75 	 cIDON = [2 4], cIDOFF = [2 4]
10:09:58,445 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:09:58,445 root DEBUG dOFF/dON = 2.4
10:09:58,445 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.91309310512, 'dON1': 0.06978637218776931, 'cIDON1': array([2, 4], dtype=int64), 'dON_patch_1': 0.06978637218776931, 'nTON': 1, 'dON': 0.06978637218776931, 'dxOFFAngle': 89.8804925096161, 'dOFF1': 0.16576774426685245, 'cIDOFF1': array([2, 4], dtype=int64), 'dOFF_patch_1': 0.16576774426685245, 'nTOFF': 1, 'dOFF': 0.16576774426685245, 'SUCCESS': True}
10:09:58,451 root DEBUG 

=================== Experiment ID #129 	 Dual Point ID: 131 ===================
10:09:58,459 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.145E-08|<1.000E-06)
10:09:58,459 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:09:58,783 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.776E-01 	 Total distance: 1.776E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([137], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:09:59,4 root DEBUG Side: ON	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.349E-02 	 Total distance: 1.911E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([178], dtype=int64), array([[False]])]] 	 class: [0 9]
10:09:59,214 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.574E-02 	 Total distance: 2.568E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([178], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:09:59,517 root DEBUG Side: OFF	 Angle(dx0, dx): 0.17 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.061E-01 	 Total distance: 1.061E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([130], dtype=int64), array([[False]])]] 	 class: [1 9]
10:09:59,759 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.318E-01 	 Total distance: 2.379E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([95], dtype=int64), array([[False]])]] 	 class: [1 9]
10:10:00,10 root DEBUG Side: OFF	 Angle(dx0, dx): 0.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.532E-01 	 Total distance: 3.911E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([230], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:10:00,255 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.222E-01 	 Total distance: 9.133E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([249], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:10:00,256 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:00,256 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 56.10 	 cIDON = [0 9], cIDOFF = [1 9]
10:10:00,256 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:00,256 root DEBUG dOFF/dON = 3.6
10:10:00,256 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.0248309017367, 'dON1': 0.25684718235068593, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.25684718235068593, 'nTON': 1, 'dON': 0.25684718235068593, 'dxOFFAngle': 85.6612535672273, 'dOFF1': 0.9132808081722066, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.9132808081722066, 'nTOFF': 1, 'dOFF': 0.9132808081722066, 'SUCCESS': True}
10:10:00,262 root DEBUG 

=================== Experiment ID #130 	 Dual Point ID: 132 ===================
10:10:00,272 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.058E-08|<1.000E-06)
10:10:00,272 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:00,591 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.882E-02 	 Total distance: 5.882E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([130], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:10:00,802 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.157E-01 	 Total distance: 1.745E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([137], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:10:01,24 root DEBUG Side: ON	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.178E-01 	 Total distance: 2.923E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([148], dtype=int64), array([[False]])]] 	 class: [0 9]
10:10:01,298 root DEBUG Side: OFF	 Angle(dx0, dx): 0.92 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.416E-01 	 Total distance: 2.416E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([178], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:10:01,525 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.014E-02 	 Total distance: 3.217E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([95], dtype=int64), array([[False]])]] 	 class: [1 9]
10:10:01,707 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.377E-02 	 Total distance: 3.755E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([178], dtype=int64), array([[False]])]] 	 class: [1 9]
10:10:01,707 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:01,707 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 12.46 	 cIDON = [0 9], cIDOFF = [1 9]
10:10:01,707 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:01,707 root DEBUG dOFF/dON = 1.3
10:10:01,708 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.2436076424255, 'dON1': 0.29231448758941625, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.29231448758941625, 'nTON': 1, 'dON': 0.29231448758941625, 'dxOFFAngle': 85.42008539755662, 'dOFF1': 0.3755069420254526, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.3755069420254526, 'nTOFF': 1, 'dOFF': 0.3755069420254526, 'SUCCESS': True}
10:10:01,714 root DEBUG 

=================== Experiment ID #131 	 Dual Point ID: 133 ===================
10:10:01,723 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.314E-08|<1.000E-06)
10:10:01,724 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:02,43 root DEBUG Side: ON	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.136E-01 	 Total distance: 1.136E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([60], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:02,302 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.229E-01 	 Total distance: 2.229E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([140], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:02,303 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:02,303 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 32.50 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:02,303 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:02,303 root DEBUG dOFF/dON = 2.0
10:10:02,303 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.80100499662281, 'dON1': 0.11356477626034456, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.11356477626034456, 'nTON': 1, 'dON': 0.11356477626034456, 'dxOFFAngle': 89.02176358703166, 'dOFF1': 0.22290307229663578, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.22290307229663578, 'nTOFF': 1, 'dOFF': 0.22290307229663578, 'SUCCESS': True}
10:10:02,313 root DEBUG 

=================== Experiment ID #132 	 Dual Point ID: 134 ===================
10:10:02,323 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.093E-08|<1.000E-06)
10:10:02,324 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:02,671 root DEBUG Side: ON	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.344E-01 	 Total distance: 1.344E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([29], dtype=int64), array([[False]])]] 	 class: [1 9]
10:10:02,858 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.309E-02 	 Total distance: 1.775E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([200], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:10:03,58 root DEBUG Side: ON	 Angle(dx0, dx): 0.81 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.591E-02 	 Total distance: 2.634E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([22], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:10:03,318 root DEBUG Side: OFF	 Angle(dx0, dx): 0.64 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.018E-01 	 Total distance: 2.018E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([25], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:10:03,319 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:03,319 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -13.26 	 cIDON = [1 9], cIDOFF = [0 9]
10:10:03,319 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:03,319 root DEBUG dOFF/dON = 0.8
10:10:03,319 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.6726399965905, 'dON1': 0.2634285318260601, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.2634285318260601, 'nTON': 1, 'dON': 0.2634285318260601, 'dxOFFAngle': 87.29323532018638, 'dOFF1': 0.20175319681905257, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.20175319681905257, 'nTOFF': 1, 'dOFF': 0.20175319681905257, 'SUCCESS': False}
10:10:03,333 root DEBUG 

=================== Experiment ID #133 	 Dual Point ID: 135 ===================
10:10:03,345 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.648E-08|<1.000E-06)
10:10:03,345 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:03,620 root DEBUG Side: ON	 Angle(dx0, dx): 0.65 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.759E-01 	 Total distance: 1.759E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([14], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:03,970 root DEBUG Side: OFF	 Angle(dx0, dx): 0.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.964E-01 	 Total distance: 1.964E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([195], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:04,235 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.190E-01 	 Total distance: 7.153E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([200], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:04,463 root DEBUG Side: OFF	 Angle(dx0, dx): 0.71 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.773E-01 	 Total distance: 1.393E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([225], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:04,464 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:04,464 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 77.57 	 cIDON = [2 7], cIDOFF = [2 7]
10:10:04,464 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:04,464 root DEBUG dOFF/dON = 7.9
10:10:04,464 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.60261611162413, 'dON1': 0.1758803883287601, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.1758803883287601, 'nTON': 1, 'dON': 0.1758803883287601, 'dxOFFAngle': 87.92374007055163, 'dOFF1': 1.3926712469388491, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 1.3926712469388491, 'nTOFF': 1, 'dOFF': 1.3926712469388491, 'SUCCESS': True}
10:10:04,478 root DEBUG 

=================== Experiment ID #134 	 Dual Point ID: 136 ===================
10:10:04,487 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.939E-08|<1.000E-06)
10:10:04,487 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:04,805 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.198E-02 	 Total distance: 1.198E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([137], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:05,45 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.868E-01 	 Total distance: 1.987E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([3], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:05,238 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.546E-02 	 Total distance: 2.242E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([173], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:05,426 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.233E-02 	 Total distance: 2.365E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([96], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:05,607 root DEBUG Side: ON	 Angle(dx0, dx): 0.45 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.088E-02 	 Total distance: 2.474E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([167], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:05,937 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.773E-02 	 Total distance: 1.773E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([57], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:06,155 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.384E-01 	 Total distance: 2.562E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([32], dtype=int64), array([[False]])]] 	 class: [3 6]
10:10:06,395 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.742E-02 	 Total distance: 2.736E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([63], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:06,395 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:06,395 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 5.03 	 cIDON = [3 6], cIDOFF = [3 6]
10:10:06,396 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:06,396 root DEBUG dOFF/dON = 1.1
10:10:06,396 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.80271020354319, 'dON1': 0.24739599942714455, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.24739599942714455, 'nTON': 1, 'dON': 0.24739599942714455, 'dxOFFAngle': 86.42303673333808, 'dOFF1': 0.27358167452434345, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.27358167452434345, 'nTOFF': 1, 'dOFF': 0.27358167452434345, 'SUCCESS': True}
10:10:06,407 root DEBUG 

=================== Experiment ID #135 	 Dual Point ID: 137 ===================
10:10:06,415 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.727E-09|<1.000E-06)
10:10:06,415 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:06,639 root DEBUG Side: ON	 Angle(dx0, dx): 1.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.690E-06 	 Total distance: 2.690E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[0.],
       [1.]])]] 	 class: [1 3]
10:10:06,991 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.409E-01 	 Total distance: 4.409E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([107], dtype=int64), array([[False]])]] 	 class: [0 3]
10:10:06,991 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:06,991 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [0 3], cIDOFF = [0 3]
10:10:06,992 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:06,992 root DEBUG dOFF/dON = 163923.2
10:10:06,992 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.7145101053214, 'dON1': 2.689601903767458e-06, 'cIDON1': array([0, 3], dtype=int64), 'dON_patch_1': 2.689601903767458e-06, 'nTON': 1, 'dON': 2.689601903767458e-06, 'dxOFFAngle': 87.58301328425009, 'dOFF1': 0.4408881414353487, 'cIDOFF1': array([0, 3], dtype=int64), 'dOFF_patch_1': 0.4408881414353487, 'nTOFF': 1, 'dOFF': 0.4408881414353487, 'SUCCESS': True}
10:10:07,4 root DEBUG 

=================== Experiment ID #136 	 Dual Point ID: 138 ===================
10:10:07,16 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.647E-08|<1.000E-06)
10:10:07,16 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:07,324 root DEBUG Side: ON	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.675E-01 	 Total distance: 1.675E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([238], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:10:07,640 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.632E-01 	 Total distance: 5.632E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([39], dtype=int64), array([[ True]])]] 	 class: [2 9]
10:10:07,846 root DEBUG Side: OFF	 Angle(dx0, dx): 3.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.639E-01 	 Total distance: 1.427E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([48], dtype=int64), array([[False]])]] 	 class: [2 9]
10:10:07,846 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:07,846 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 78.99 	 cIDON = [2 9], cIDOFF = [2 9]
10:10:07,846 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:07,847 root DEBUG dOFF/dON = 8.5
10:10:07,847 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.56589003278181, 'dON1': 0.16749351085046174, 'cIDON1': array([2, 9], dtype=int64), 'dON_patch_1': 0.16749351085046174, 'nTON': 1, 'dON': 0.16749351085046174, 'dxOFFAngle': 89.83652597475123, 'dOFF1': 1.4270448051945814, 'cIDOFF1': array([2, 9], dtype=int64), 'dOFF_patch_1': 1.4270448051945814, 'nTOFF': 1, 'dOFF': 1.4270448051945814, 'SUCCESS': True}
10:10:07,853 root DEBUG 

=================== Experiment ID #137 	 Dual Point ID: 139 ===================
10:10:07,869 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.252E-07|<1.000E-06)
10:10:07,869 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:08,184 root DEBUG Side: ON	 Angle(dx0, dx): 0.89 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.700E-01 	 Total distance: 1.700E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([7], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:08,507 root DEBUG Side: OFF	 Angle(dx0, dx): 1.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.679E-01 	 Total distance: 1.679E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([58], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:08,507 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:08,508 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -0.62 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:08,508 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:08,508 root DEBUG dOFF/dON = 1.0
10:10:08,508 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.08304261291237, 'dON1': 0.17001348204051386, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.17001348204051386, 'nTON': 1, 'dON': 0.17001348204051386, 'dxOFFAngle': 86.86558100898928, 'dOFF1': 0.16790584066399197, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.16790584066399197, 'nTOFF': 1, 'dOFF': 0.16790584066399197, 'SUCCESS': False}
10:10:08,517 root DEBUG 

=================== Experiment ID #138 	 Dual Point ID: 140 ===================
10:10:08,526 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.042E-09|<1.000E-06)
10:10:08,527 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:08,883 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.199E-02 	 Total distance: 1.199E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([240], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:10:09,103 root DEBUG Side: ON	 Angle(dx0, dx): 0.20 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.705E-01 	 Total distance: 6.825E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([38], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:10:09,288 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.107E-01 	 Total distance: 8.933E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([128], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:10:09,529 root DEBUG Side: ON	 Angle(dx0, dx): 1.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.425E-01 	 Total distance: 1.236E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([48], dtype=int64), array([[False]])]] 	 class: [4 5]
10:10:09,855 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.126E-01 	 Total distance: 1.126E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([39], dtype=int64), array([[False]])]] 	 class: [4 5]
10:10:09,857 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:09,857 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -83.30 	 cIDON = [4 5], cIDOFF = [4 5]
10:10:09,857 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:09,857 root DEBUG dOFF/dON = 0.1
10:10:09,857 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.64836458057535, 'dON1': 1.2357069638025755, 'cIDON1': array([4, 5], dtype=int64), 'dON_patch_1': 1.2357069638025755, 'nTON': 1, 'dON': 1.2357069638025755, 'dxOFFAngle': 88.84496036750701, 'dOFF1': 0.11261210323585352, 'cIDOFF1': array([4, 5], dtype=int64), 'dOFF_patch_1': 0.11261210323585352, 'nTOFF': 1, 'dOFF': 0.11261210323585352, 'SUCCESS': False}
10:10:09,868 root DEBUG 

=================== Experiment ID #139 	 Dual Point ID: 141 ===================
10:10:09,877 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.987E-08|<1.000E-06)
10:10:09,877 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:10,235 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.058E+00 	 Total distance: 1.058E+00 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([205], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:10,425 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.994E-03 	 Total distance: 1.067E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([114], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:10,644 root DEBUG Side: ON	 Angle(dx0, dx): 0.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.770E-01 	 Total distance: 1.244E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([0], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:10,999 root DEBUG Side: OFF	 Angle(dx0, dx): 0.68 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.536E-02 	 Total distance: 2.536E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([134], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:11,0 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:11,0 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -96.00 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:11,0 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:11,0 root DEBUG dOFF/dON = 0.0
10:10:11,0 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.19843350717973, 'dON1': 1.2435099906975224, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 1.2435099906975224, 'nTON': 1, 'dON': 1.2435099906975224, 'dxOFFAngle': 87.55069543737389, 'dOFF1': 0.02536056425060494, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.02536056425060494, 'nTOFF': 1, 'dOFF': 0.02536056425060494, 'SUCCESS': False}
10:10:11,7 root DEBUG 

=================== Experiment ID #140 	 Dual Point ID: 142 ===================
10:10:11,13 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.869E-08|<1.000E-06)
10:10:11,13 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:11,309 root DEBUG Side: ON	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.186E-02 	 Total distance: 9.186E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([138], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:11,583 root DEBUG Side: OFF	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.201E-02 	 Total distance: 4.201E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([33], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:11,583 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:11,583 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -37.24 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:11,583 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:11,583 root DEBUG dOFF/dON = 0.5
10:10:11,583 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.99724696787547, 'dON1': 0.09186063622664559, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.09186063622664559, 'nTON': 1, 'dON': 0.09186063622664559, 'dxOFFAngle': 87.07440080922095, 'dOFF1': 0.04200670919039959, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.04200670919039959, 'nTOFF': 1, 'dOFF': 0.04200670919039959, 'SUCCESS': False}
10:10:11,593 root DEBUG 

=================== Experiment ID #141 	 Dual Point ID: 143 ===================
10:10:11,600 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.894E-08|<1.000E-06)
10:10:11,601 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:11,903 root DEBUG Side: ON	 Angle(dx0, dx): 0.49 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.231E-01 	 Total distance: 4.231E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([120], dtype=int64), array([[False]])]] 	 class: [3 8]
10:10:12,216 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.215E-01 	 Total distance: 3.215E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([208], dtype=int64), array([[False]])]] 	 class: [3 8]
10:10:12,388 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.598E-02 	 Total distance: 3.875E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([40], dtype=int64), array([[False]])]] 	 class: [3 8]
10:10:12,595 root DEBUG Side: OFF	 Angle(dx0, dx): 0.57 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.089E-01 	 Total distance: 7.964E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([215], dtype=int64), array([[False]])]] 	 class: [3 8]
10:10:12,807 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.501E-01 	 Total distance: 1.246E+00 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([251], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:10:13,34 root DEBUG Side: OFF	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.011E-01 	 Total distance: 1.848E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([148], dtype=int64), array([[ True]])]] 	 class: [3 8]
10:10:13,34 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:13,34 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 62.74 	 cIDON = [3 8], cIDOFF = [3 8]
10:10:13,34 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:13,34 root DEBUG dOFF/dON = 4.4
10:10:13,34 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.83846795992073, 'dON1': 0.4230841689484974, 'cIDON1': array([3, 8], dtype=int64), 'dON_patch_1': 0.4230841689484974, 'nTON': 1, 'dON': 0.4230841689484974, 'dxOFFAngle': 85.11326734203674, 'dOFF1': 1.8475950618046555, 'cIDOFF1': array([3, 8], dtype=int64), 'dOFF_patch_1': 1.8475950618046555, 'nTOFF': 1, 'dOFF': 1.8475950618046555, 'SUCCESS': True}
10:10:13,46 root DEBUG 

=================== Experiment ID #142 	 Dual Point ID: 144 ===================
10:10:13,56 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.781E-08|<1.000E-06)
10:10:13,56 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:13,335 root DEBUG Side: ON	 Angle(dx0, dx): 0.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.386E-02 	 Total distance: 2.386E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([3], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:13,686 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.434E-01 	 Total distance: 1.434E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([241], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:13,941 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.389E-01 	 Total distance: 5.823E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([127], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:13,941 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:13,941 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 92.13 	 cIDON = [5 7], cIDOFF = [5 7]
10:10:13,941 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:13,941 root DEBUG dOFF/dON = 24.4
10:10:13,941 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.03406467846104, 'dON1': 0.023863710724828853, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.023863710724828853, 'nTON': 1, 'dON': 0.023863710724828853, 'dxOFFAngle': 87.3056756379529, 'dOFF1': 0.5823031994721561, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.5823031994721561, 'nTOFF': 1, 'dOFF': 0.5823031994721561, 'SUCCESS': True}
10:10:13,950 root DEBUG 

=================== Experiment ID #143 	 Dual Point ID: 145 ===================
10:10:13,962 root DEBUG CONTROL: 	 WARNING! 	 (target neuron output > tolerance: |1.592E-06|>1.000E-06)
10:10:13,962 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:13,962 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:13,963 root DEBUG 

=================== Experiment ID #143 	 Dual Point ID: 146 ===================
10:10:13,973 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.829E-08|<1.000E-06)
10:10:13,973 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:14,304 root DEBUG Side: ON	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.865E-01 	 Total distance: 2.865E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([56], dtype=int64), array([[False]])]] 	 class: [5 6]
10:10:14,657 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.516E-01 	 Total distance: 2.516E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([154], dtype=int64), array([[False]])]] 	 class: [5 6]
10:10:14,945 root DEBUG Side: OFF	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.983E-01 	 Total distance: 8.499E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([162], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:10:15,198 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.804E-01 	 Total distance: 1.030E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([22], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:10:15,198 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:15,198 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 56.49 	 cIDON = [5 6], cIDOFF = [5 6]
10:10:15,198 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:15,198 root DEBUG dOFF/dON = 3.6
10:10:15,198 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.93428502411551, 'dON1': 0.2864783049709359, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.2864783049709359, 'nTON': 1, 'dON': 0.2864783049709359, 'dxOFFAngle': 89.96322676535112, 'dOFF1': 1.0303542873316391, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 1.0303542873316391, 'nTOFF': 1, 'dOFF': 1.0303542873316391, 'SUCCESS': True}
10:10:15,215 root DEBUG 

=================== Experiment ID #144 	 Dual Point ID: 147 ===================
10:10:15,222 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.170E-08|<1.000E-06)
10:10:15,222 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:15,511 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.395E-01 	 Total distance: 3.395E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([53], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:15,743 root DEBUG Side: ON	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.494E-01 	 Total distance: 1.289E+00 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([201], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:15,910 root DEBUG Side: ON	 Angle(dx0, dx): 1.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.630E-01 	 Total distance: 1.652E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([122], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:16,181 root DEBUG Side: OFF	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.124E-01 	 Total distance: 5.124E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([78], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:16,181 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:16,181 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -52.65 	 cIDON = [5 7], cIDOFF = [5 7]
10:10:16,181 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:16,181 root DEBUG dOFF/dON = 0.3
10:10:16,181 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.62745759633114, 'dON1': 1.6518978807704874, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 1.6518978807704874, 'nTON': 1, 'dON': 1.6518978807704874, 'dxOFFAngle': 88.04766310654946, 'dOFF1': 0.5124424718602226, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.5124424718602226, 'nTOFF': 1, 'dOFF': 0.5124424718602226, 'SUCCESS': False}
10:10:16,192 root DEBUG 

=================== Experiment ID #145 	 Dual Point ID: 148 ===================
10:10:16,199 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.804E-08|<1.000E-06)
10:10:16,200 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:16,527 root DEBUG Side: ON	 Angle(dx0, dx): 0.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.134E-01 	 Total distance: 2.134E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([35], dtype=int64), array([[False]])]] 	 class: [0 5]
10:10:16,724 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.373E-01 	 Total distance: 3.507E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([15], dtype=int64), array([[ True]])]] 	 class: [0 5]
10:10:17,50 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.725E-01 	 Total distance: 1.725E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([15], dtype=int64), array([[ True]])]] 	 class: [1 5]
10:10:17,50 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:17,51 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -34.07 	 cIDON = [0 5], cIDOFF = [1 5]
10:10:17,51 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:17,51 root DEBUG dOFF/dON = 0.5
10:10:17,51 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.10070163272997, 'dON1': 0.35071635850164173, 'cIDON1': array([0, 5], dtype=int64), 'dON_patch_1': 0.35071635850164173, 'nTON': 1, 'dON': 0.35071635850164173, 'dxOFFAngle': 87.71384440858208, 'dOFF1': 0.17248492248360178, 'cIDOFF1': array([1, 5], dtype=int64), 'dOFF_patch_1': 0.17248492248360178, 'nTOFF': 1, 'dOFF': 0.17248492248360178, 'SUCCESS': False}
10:10:17,60 root DEBUG 

=================== Experiment ID #146 	 Dual Point ID: 149 ===================
10:10:17,70 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.342E-08|<1.000E-06)
10:10:17,70 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:17,340 root DEBUG Side: ON	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.934E-02 	 Total distance: 3.934E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([75], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:10:17,571 root DEBUG Side: ON	 Angle(dx0, dx): 1.72 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.299E-01 	 Total distance: 1.693E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([40], dtype=int64), array([[ True]])]] 	 class: [0 9]
10:10:17,808 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.181E-02 	 Total distance: 6.181E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([37], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:10:17,808 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:17,809 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -46.50 	 cIDON = [0 9], cIDOFF = [1 9]
10:10:17,809 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:17,809 root DEBUG dOFF/dON = 0.4
10:10:17,809 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.6753332715646, 'dON1': 0.1692776214532232, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.1692776214532232, 'nTON': 1, 'dON': 0.1692776214532232, 'dxOFFAngle': 89.520683376952, 'dOFF1': 0.06181245432205557, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.06181245432205557, 'nTOFF': 1, 'dOFF': 0.06181245432205557, 'SUCCESS': False}
10:10:17,815 root DEBUG 

=================== Experiment ID #147 	 Dual Point ID: 150 ===================
10:10:17,822 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.726E-08|<1.000E-06)
10:10:17,822 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:18,126 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.132E-02 	 Total distance: 2.132E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([237], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:10:18,321 root DEBUG Side: ON	 Angle(dx0, dx): 1.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.441E-01 	 Total distance: 2.654E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([230], dtype=int64), array([[False]])]] 	 class: [1 9]
10:10:18,637 root DEBUG Side: OFF	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.678E-01 	 Total distance: 4.678E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([20], dtype=int64), array([[False]])]] 	 class: [0 9]
10:10:18,637 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:18,637 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 27.61 	 cIDON = [1 9], cIDOFF = [0 9]
10:10:18,638 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:18,638 root DEBUG dOFF/dON = 1.8
10:10:18,638 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.59907894925868, 'dON1': 0.2653828065406248, 'cIDON1': array([1, 9], dtype=int64), 'dON_patch_1': 0.2653828065406248, 'nTON': 1, 'dON': 0.2653828065406248, 'dxOFFAngle': 88.11787560493822, 'dOFF1': 0.46780431743046313, 'cIDOFF1': array([0, 9], dtype=int64), 'dOFF_patch_1': 0.46780431743046313, 'nTOFF': 1, 'dOFF': 0.46780431743046313, 'SUCCESS': True}
10:10:18,649 root DEBUG 

=================== Experiment ID #148 	 Dual Point ID: 151 ===================
10:10:18,658 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.135E-08|<1.000E-06)
10:10:18,659 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:18,967 root DEBUG Side: ON	 Angle(dx0, dx): 0.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.028E+00 	 Total distance: 1.028E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([141], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:19,329 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.537E-02 	 Total distance: 8.537E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([95], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:19,576 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.291E-01 	 Total distance: 2.145E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([25], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:19,759 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.594E-02 	 Total distance: 2.504E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([70], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:20,28 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.384E-02 	 Total distance: 3.042E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([255], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:20,252 root DEBUG Side: OFF	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.078E-01 	 Total distance: 5.121E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([10], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:20,252 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:20,252 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -33.48 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:20,253 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:20,253 root DEBUG dOFF/dON = 0.5
10:10:20,253 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.86016100381477, 'dON1': 1.0275321361287473, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 1.0275321361287473, 'nTON': 1, 'dON': 1.0275321361287473, 'dxOFFAngle': 89.50088827068325, 'dOFF1': 0.5120874191238857, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.5120874191238857, 'nTOFF': 1, 'dOFF': 0.5120874191238857, 'SUCCESS': False}
10:10:20,266 root DEBUG 

=================== Experiment ID #149 	 Dual Point ID: 152 ===================
10:10:20,277 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.574E-09|<1.000E-06)
10:10:20,277 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:20,576 root DEBUG Side: ON	 Angle(dx0, dx): 1.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.031E-06 	 Total distance: 4.031E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:10:20,872 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.100E-01 	 Total distance: 2.100E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([123], dtype=int64), array([[False]])]] 	 class: [1 8]
10:10:20,872 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:20,872 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 100.00 	 cIDON = [1 8], cIDOFF = [1 8]
10:10:20,872 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:20,873 root DEBUG dOFF/dON = 52100.0
10:10:20,873 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.88279057121876, 'dON1': 4.031202029752893e-06, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 4.031202029752893e-06, 'nTON': 1, 'dON': 4.031202029752893e-06, 'dxOFFAngle': 89.90585170029861, 'dOFF1': 0.21002546983190182, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 0.21002546983190182, 'nTOFF': 1, 'dOFF': 0.21002546983190182, 'SUCCESS': True}
10:10:20,881 root DEBUG 

=================== Experiment ID #150 	 Dual Point ID: 153 ===================
10:10:20,889 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.303E-08|<1.000E-06)
10:10:20,890 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:21,229 root DEBUG Side: ON	 Angle(dx0, dx): 1.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.125E-01 	 Total distance: 1.125E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([14], dtype=int64), array([[False]])]] 	 class: [4 7]
10:10:21,579 root DEBUG Side: OFF	 Angle(dx0, dx): 0.99 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.893E-01 	 Total distance: 2.893E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([145], dtype=int64), array([[False]])]] 	 class: [4 7]
10:10:21,580 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:21,580 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 44.01 	 cIDON = [4 7], cIDOFF = [4 7]
10:10:21,580 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:21,580 root DEBUG dOFF/dON = 2.6
10:10:21,580 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.4852071022217, 'dON1': 0.11246820034131233, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.11246820034131233, 'nTON': 1, 'dON': 0.11246820034131233, 'dxOFFAngle': 86.78497304244843, 'dOFF1': 0.2892593836158203, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.2892593836158203, 'nTOFF': 1, 'dOFF': 0.2892593836158203, 'SUCCESS': True}
10:10:21,590 root DEBUG 

=================== Experiment ID #151 	 Dual Point ID: 154 ===================
10:10:21,597 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.429E-08|<1.000E-06)
10:10:21,598 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:21,935 root DEBUG Side: ON	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.092E-01 	 Total distance: 5.092E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([50], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:10:22,245 root DEBUG Side: OFF	 Angle(dx0, dx): 0.36 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.395E-01 	 Total distance: 2.395E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([153], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:10:22,246 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:22,246 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -36.02 	 cIDON = [5 9], cIDOFF = [5 9]
10:10:22,246 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:22,246 root DEBUG dOFF/dON = 0.5
10:10:22,246 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.59182778579202, 'dON1': 0.5092045503703108, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.5092045503703108, 'nTON': 1, 'dON': 0.5092045503703108, 'dxOFFAngle': 86.55810098431283, 'dOFF1': 0.23953156725252023, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.23953156725252023, 'nTOFF': 1, 'dOFF': 0.23953156725252023, 'SUCCESS': False}
10:10:22,256 root DEBUG 

=================== Experiment ID #152 	 Dual Point ID: 155 ===================
10:10:22,262 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.714E-08|<1.000E-06)
10:10:22,262 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:22,659 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.927E-02 	 Total distance: 8.927E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([15], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:22,871 root DEBUG Side: ON	 Angle(dx0, dx): 0.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.076E-01 	 Total distance: 1.969E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([7], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:23,160 root DEBUG Side: OFF	 Angle(dx0, dx): 0.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.698E-01 	 Total distance: 7.698E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([76], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:23,160 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:23,160 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 59.27 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:23,161 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:23,161 root DEBUG dOFF/dON = 3.9
10:10:23,161 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.90905596558147, 'dON1': 0.1968567256460531, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.1968567256460531, 'nTON': 1, 'dON': 0.1968567256460531, 'dxOFFAngle': 88.74366920469511, 'dOFF1': 0.769831290259161, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.769831290259161, 'nTOFF': 1, 'dOFF': 0.769831290259161, 'SUCCESS': True}
10:10:23,171 root DEBUG 

=================== Experiment ID #153 	 Dual Point ID: 156 ===================
10:10:23,179 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.992E-08|<1.000E-06)
10:10:23,179 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:23,516 root DEBUG Side: ON	 Angle(dx0, dx): 0.46 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.206E-02 	 Total distance: 7.206E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([97], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:23,839 root DEBUG Side: OFF	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.231E-01 	 Total distance: 5.231E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([161], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:23,839 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:23,840 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 75.79 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:23,840 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:23,840 root DEBUG dOFF/dON = 7.3
10:10:23,840 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.01921526893223, 'dON1': 0.07206100368361582, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.07206100368361582, 'nTON': 1, 'dON': 0.07206100368361582, 'dxOFFAngle': 87.92828895366434, 'dOFF1': 0.5231407221177098, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.5231407221177098, 'nTOFF': 1, 'dOFF': 0.5231407221177098, 'SUCCESS': True}
10:10:23,849 root DEBUG 

=================== Experiment ID #154 	 Dual Point ID: 157 ===================
10:10:23,856 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.234E-10|<1.000E-06)
10:10:23,856 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:24,188 root DEBUG Side: ON	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.906E-01 	 Total distance: 4.906E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([124], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:24,499 root DEBUG Side: OFF	 Angle(dx0, dx): 0.78 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.289E-02 	 Total distance: 4.289E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([204], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:10:24,499 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:24,499 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -83.92 	 cIDON = [3 6], cIDOFF = [3 6]
10:10:24,500 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:24,500 root DEBUG dOFF/dON = 0.1
10:10:24,500 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.15701043674434, 'dON1': 0.49055349388773234, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.49055349388773234, 'nTON': 1, 'dON': 0.49055349388773234, 'dxOFFAngle': 84.94428865768023, 'dOFF1': 0.042893498857160026, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.042893498857160026, 'nTOFF': 1, 'dOFF': 0.042893498857160026, 'SUCCESS': False}
10:10:24,514 root DEBUG 

=================== Experiment ID #155 	 Dual Point ID: 158 ===================
10:10:24,524 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.193E-09|<1.000E-06)
10:10:24,524 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:24,856 root DEBUG Side: ON	 Angle(dx0, dx): 1.10 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.556E-01 	 Total distance: 2.556E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([151], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:25,188 root DEBUG Side: OFF	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.408E-01 	 Total distance: 1.408E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([74], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:25,188 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:25,188 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -28.95 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:25,188 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:25,188 root DEBUG dOFF/dON = 0.6
10:10:25,188 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.58590977368665, 'dON1': 0.2555686658159129, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.2555686658159129, 'nTON': 1, 'dON': 0.2555686658159129, 'dxOFFAngle': 87.29997047079945, 'dOFF1': 0.14082618231043356, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.14082618231043356, 'nTOFF': 1, 'dOFF': 0.14082618231043356, 'SUCCESS': False}
10:10:25,198 root DEBUG 

=================== Experiment ID #156 	 Dual Point ID: 159 ===================
10:10:25,211 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.880E-09|<1.000E-06)
10:10:25,211 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:25,534 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.711E-01 	 Total distance: 4.711E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([36], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:25,726 root DEBUG Side: ON	 Angle(dx0, dx): 0.62 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.164E-01 	 Total distance: 5.876E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([104], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:26,9 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.291E-03 	 Total distance: 2.291E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([15], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:26,9 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:26,9 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.22 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:26,10 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:26,10 root DEBUG dOFF/dON = 0.0
10:10:26,10 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.7404100253898, 'dON1': 0.587551731769118, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.587551731769118, 'nTON': 1, 'dON': 0.587551731769118, 'dxOFFAngle': 88.96269622589917, 'dOFF1': 0.002290765237027297, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.002290765237027297, 'nTOFF': 1, 'dOFF': 0.002290765237027297, 'SUCCESS': False}
10:10:26,24 root DEBUG 

=================== Experiment ID #157 	 Dual Point ID: 160 ===================
10:10:26,32 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.548E-11|<1.000E-06)
10:10:26,33 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:26,331 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.706E-02 	 Total distance: 5.706E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([255], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:26,549 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.385E-02 	 Total distance: 1.309E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([174], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:26,756 root DEBUG Side: ON	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.391E-01 	 Total distance: 4.700E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([76], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:27,5 root DEBUG Side: ON	 Angle(dx0, dx): 0.58 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.265E-01 	 Total distance: 5.965E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([12], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:27,238 root DEBUG Side: OFF	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.531E-02 	 Total distance: 3.531E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([55], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:27,238 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:27,238 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -88.82 	 cIDON = [2 6], cIDOFF = [2 6]
10:10:27,238 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:27,238 root DEBUG dOFF/dON = 0.1
10:10:27,238 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.25533906970243, 'dON1': 0.5965270978145729, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 0.5965270978145729, 'nTON': 1, 'dON': 0.5965270978145729, 'dxOFFAngle': 88.5633532913985, 'dOFF1': 0.03531226242472548, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.03531226242472548, 'nTOFF': 1, 'dOFF': 0.03531226242472548, 'SUCCESS': False}
10:10:27,244 root DEBUG 

=================== Experiment ID #158 	 Dual Point ID: 161 ===================
10:10:27,253 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.746E-08|<1.000E-06)
10:10:27,253 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:27,610 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.227E-01 	 Total distance: 1.227E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([183], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:27,828 root DEBUG Side: ON	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.898E-01 	 Total distance: 6.125E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([206], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:28,76 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.609E-01 	 Total distance: 1.073E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([242], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:28,406 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.507E-01 	 Total distance: 2.507E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([94], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:28,579 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.646E-04 	 Total distance: 2.514E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([52], dtype=int64), array([[False]])]] 	 class: [2 6]
10:10:28,824 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.841E-01 	 Total distance: 4.355E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([237], dtype=int64), array([[ True]])]] 	 class: [2 6]
10:10:28,824 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:28,824 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -42.27 	 cIDON = [2 6], cIDOFF = [2 6]
10:10:28,824 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:28,824 root DEBUG dOFF/dON = 0.4
10:10:28,824 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.2378097988311, 'dON1': 1.0733847713898093, 'cIDON1': array([2, 6], dtype=int64), 'dON_patch_1': 1.0733847713898093, 'nTON': 1, 'dON': 1.0733847713898093, 'dxOFFAngle': 88.62693297173378, 'dOFF1': 0.4355269125525155, 'cIDOFF1': array([2, 6], dtype=int64), 'dOFF_patch_1': 0.4355269125525155, 'nTOFF': 1, 'dOFF': 0.4355269125525155, 'SUCCESS': False}
10:10:28,833 root DEBUG 

=================== Experiment ID #159 	 Dual Point ID: 162 ===================
10:10:28,839 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.241E-08|<1.000E-06)
10:10:28,839 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:29,182 root DEBUG Side: ON	 Angle(dx0, dx): 0.42 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.561E-01 	 Total distance: 1.561E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([150], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:10:29,511 root DEBUG Side: OFF	 Angle(dx0, dx): 1.31 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.448E-01 	 Total distance: 1.448E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([144], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:10:29,511 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:29,512 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -3.76 	 cIDON = [6 9], cIDOFF = [6 9]
10:10:29,512 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:29,512 root DEBUG dOFF/dON = 0.9
10:10:29,512 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.085423185152, 'dON1': 0.15614667666063586, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.15614667666063586, 'nTON': 1, 'dON': 0.15614667666063586, 'dxOFFAngle': 88.76490343793876, 'dOFF1': 0.14481866708121074, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.14481866708121074, 'nTOFF': 1, 'dOFF': 0.14481866708121074, 'SUCCESS': False}
10:10:29,522 root DEBUG 

=================== Experiment ID #160 	 Dual Point ID: 163 ===================
10:10:29,532 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.662E-07|<1.000E-06)
10:10:29,532 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:29,902 root DEBUG Side: ON	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.764E-02 	 Total distance: 5.764E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([72], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:10:30,212 root DEBUG Side: OFF	 Angle(dx0, dx): 0.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.254E-01 	 Total distance: 4.254E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([78], dtype=int64), array([[ True]])]] 	 class: [4 6]
10:10:30,213 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:30,213 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 76.14 	 cIDON = [4 6], cIDOFF = [4 6]
10:10:30,213 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:30,213 root DEBUG dOFF/dON = 7.4
10:10:30,213 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.72375605191047, 'dON1': 0.05763779833546911, 'cIDON1': array([4, 6], dtype=int64), 'dON_patch_1': 0.05763779833546911, 'nTON': 1, 'dON': 0.05763779833546911, 'dxOFFAngle': 87.90185580678802, 'dOFF1': 0.4254323633139676, 'cIDOFF1': array([4, 6], dtype=int64), 'dOFF_patch_1': 0.4254323633139676, 'nTOFF': 1, 'dOFF': 0.4254323633139676, 'SUCCESS': True}
10:10:30,230 root DEBUG 

=================== Experiment ID #161 	 Dual Point ID: 164 ===================
10:10:30,247 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.188E-09|<1.000E-06)
10:10:30,247 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:30,562 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.407E-01 	 Total distance: 1.407E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([176], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:30,732 root DEBUG Side: ON	 Angle(dx0, dx): 0.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.096E-02 	 Total distance: 2.217E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([42], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:31,31 root DEBUG Side: OFF	 Angle(dx0, dx): 1.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.654E-02 	 Total distance: 2.654E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([140], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:31,31 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:31,31 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -78.62 	 cIDON = [2 7], cIDOFF = [2 7]
10:10:31,31 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:31,32 root DEBUG dOFF/dON = 0.1
10:10:31,32 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.41215534766718, 'dON1': 0.2216541766406356, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.2216541766406356, 'nTON': 1, 'dON': 0.2216541766406356, 'dxOFFAngle': 89.7335046692244, 'dOFF1': 0.026535618870898055, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.026535618870898055, 'nTOFF': 1, 'dOFF': 0.026535618870898055, 'SUCCESS': False}
10:10:31,38 root DEBUG 

=================== Experiment ID #162 	 Dual Point ID: 165 ===================
10:10:31,46 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.003E-08|<1.000E-06)
10:10:31,46 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:31,409 root DEBUG Side: ON	 Angle(dx0, dx): 0.77 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.484E-02 	 Total distance: 4.484E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([67], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:31,749 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.627E-02 	 Total distance: 7.627E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([163], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:32,7 root DEBUG Side: OFF	 Angle(dx0, dx): 1.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.250E-01 	 Total distance: 3.013E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([188], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:32,7 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:32,7 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 74.09 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:32,7 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:32,7 root DEBUG dOFF/dON = 6.7
10:10:32,7 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.67091724559708, 'dON1': 0.04483826398518086, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.04483826398518086, 'nTON': 1, 'dON': 0.04483826398518086, 'dxOFFAngle': 88.55830360311639, 'dOFF1': 0.3012695626208053, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.3012695626208053, 'nTOFF': 1, 'dOFF': 0.3012695626208053, 'SUCCESS': True}
10:10:32,16 root DEBUG 

=================== Experiment ID #163 	 Dual Point ID: 166 ===================
10:10:32,30 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.072E-09|<1.000E-06)
10:10:32,30 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:32,312 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.609E-01 	 Total distance: 1.609E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([237], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:10:32,477 root DEBUG Side: ON	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.446E-01 	 Total distance: 3.055E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([220], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:10:32,776 root DEBUG Side: OFF	 Angle(dx0, dx): 1.43 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.455E-01 	 Total distance: 1.455E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([153], dtype=int64), array([[ True]])]] 	 class: [5 6]
10:10:32,776 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:32,777 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -35.49 	 cIDON = [5 6], cIDOFF = [5 6]
10:10:32,777 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:32,777 root DEBUG dOFF/dON = 0.5
10:10:32,777 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.96589195932032, 'dON1': 0.30550607670923907, 'cIDON1': array([5, 6], dtype=int64), 'dON_patch_1': 0.30550607670923907, 'nTON': 1, 'dON': 0.30550607670923907, 'dxOFFAngle': 89.73978035734316, 'dOFF1': 0.14547249611576396, 'cIDOFF1': array([5, 6], dtype=int64), 'dOFF_patch_1': 0.14547249611576396, 'nTOFF': 1, 'dOFF': 0.14547249611576396, 'SUCCESS': False}
10:10:32,790 root DEBUG 

=================== Experiment ID #164 	 Dual Point ID: 167 ===================
10:10:32,797 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.790E-09|<1.000E-06)
10:10:32,798 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:33,112 root DEBUG Side: ON	 Angle(dx0, dx): 0.28 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.141E-01 	 Total distance: 4.141E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([210], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:33,419 root DEBUG Side: OFF	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.333E-01 	 Total distance: 5.333E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([129], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:33,568 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.219E-01 	 Total distance: 7.551E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([17], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:33,568 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:33,568 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 29.17 	 cIDON = [5 7], cIDOFF = [5 7]
10:10:33,568 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:33,568 root DEBUG dOFF/dON = 1.8
10:10:33,568 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.72911130569322, 'dON1': 0.41406673916757475, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.41406673916757475, 'nTON': 1, 'dON': 0.41406673916757475, 'dxOFFAngle': 88.45612600400065, 'dOFF1': 0.7551231072134955, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.7551231072134955, 'nTOFF': 1, 'dOFF': 0.7551231072134955, 'SUCCESS': True}
10:10:33,575 root DEBUG 

=================== Experiment ID #165 	 Dual Point ID: 168 ===================
10:10:33,583 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.597E-08|<1.000E-06)
10:10:33,583 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:33,876 root DEBUG Side: ON	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.023E-01 	 Total distance: 4.023E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([42], dtype=int64), array([[False]])]] 	 class: [4 7]
10:10:34,159 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.430E-02 	 Total distance: 4.430E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([38], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:10:34,160 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:34,160 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -80.16 	 cIDON = [4 7], cIDOFF = [4 7]
10:10:34,160 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:34,160 root DEBUG dOFF/dON = 0.1
10:10:34,160 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.11174010424453, 'dON1': 0.4022680720032327, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.4022680720032327, 'nTON': 1, 'dON': 0.4022680720032327, 'dxOFFAngle': 88.23581478984038, 'dOFF1': 0.04430164504267408, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.04430164504267408, 'nTOFF': 1, 'dOFF': 0.04430164504267408, 'SUCCESS': False}
10:10:34,172 root DEBUG 

=================== Experiment ID #166 	 Dual Point ID: 169 ===================
10:10:34,182 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.498E-08|<1.000E-06)
10:10:34,182 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:34,538 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.766E-02 	 Total distance: 5.766E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([179], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:34,772 root DEBUG Side: ON	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.377E-03 	 Total distance: 5.903E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([12], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:35,60 root DEBUG Side: OFF	 Angle(dx0, dx): 1.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.433E-01 	 Total distance: 4.433E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([30], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:35,169 root DEBUG Side: OFF	 Angle(dx0, dx): 1.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.348E-06 	 Total distance: 4.433E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([30], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:35,294 root DEBUG Side: OFF	 Angle(dx0, dx): 1.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.740E-07 	 Total distance: 4.433E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([30], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:35,419 root DEBUG Side: OFF	 Angle(dx0, dx): 1.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.348E-06 	 Total distance: 4.433E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([30], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:35,544 root DEBUG Side: OFF	 Angle(dx0, dx): 1.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.740E-07 	 Total distance: 4.433E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([30], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:35,657 root DEBUG Side: OFF	 Angle(dx0, dx): 1.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.348E-06 	 Total distance: 4.433E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([30], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:35,779 root DEBUG Side: OFF	 Angle(dx0, dx): 1.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.740E-07 	 Total distance: 4.433E-01 	 Future toggles: 0 	 Past toggles: 4 	 Toggled: [[1, array([30], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:35,955 root DEBUG Side: OFF	 Angle(dx0, dx): 1.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.348E-06 	 Total distance: 4.433E-01 	 Future toggles: 0 	 Past toggles: 5 	 Toggled: [[1, array([30], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:35,971 root DEBUG Got stuck in too many past-layer relus.
10:10:35,971 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:10:35,971 root DEBUG DISCARD POINT! No toggles were recorded successfully: results['nTON']=1, results['nTOFF']=0.
10:10:35,973 root DEBUG 

=================== Experiment ID #166 	 Dual Point ID: 170 ===================
10:10:35,982 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.200E-08|<1.000E-06)
10:10:35,982 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:36,310 root DEBUG Side: ON	 Angle(dx0, dx): 0.89 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.706E-01 	 Total distance: 2.706E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([15], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:10:36,589 root DEBUG Side: OFF	 Angle(dx0, dx): 0.07 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.623E-02 	 Total distance: 1.623E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([194], dtype=int64), array([[False]])]] 	 class: [5 7]
10:10:36,589 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:36,589 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -88.69 	 cIDON = [5 7], cIDOFF = [5 7]
10:10:36,590 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:36,590 root DEBUG dOFF/dON = 0.1
10:10:36,590 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.79203753378236, 'dON1': 0.2706083222541516, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.2706083222541516, 'nTON': 1, 'dON': 0.2706083222541516, 'dxOFFAngle': 88.71653690737902, 'dOFF1': 0.01622559377078534, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.01622559377078534, 'nTOFF': 1, 'dOFF': 0.01622559377078534, 'SUCCESS': False}
10:10:36,603 root DEBUG 

=================== Experiment ID #167 	 Dual Point ID: 171 ===================
10:10:36,612 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.216E-08|<1.000E-06)
10:10:36,612 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:36,905 root DEBUG Side: ON	 Angle(dx0, dx): 2.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.380E-01 	 Total distance: 3.380E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([62], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:37,248 root DEBUG Side: OFF	 Angle(dx0, dx): 1.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.673E-01 	 Total distance: 6.673E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([134], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:37,248 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:37,248 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 32.76 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:37,248 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:37,248 root DEBUG dOFF/dON = 2.0
10:10:37,248 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.78267109901249, 'dON1': 0.3380026000570515, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.3380026000570515, 'nTON': 1, 'dON': 0.3380026000570515, 'dxOFFAngle': 88.23962264311194, 'dOFF1': 0.6673437960308636, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.6673437960308636, 'nTOFF': 1, 'dOFF': 0.6673437960308636, 'SUCCESS': True}
10:10:37,256 root DEBUG 

=================== Experiment ID #168 	 Dual Point ID: 172 ===================
10:10:37,269 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.727E-08|<1.000E-06)
10:10:37,270 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:37,553 root DEBUG Side: ON	 Angle(dx0, dx): 0.92 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.156E-01 	 Total distance: 1.156E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([19], dtype=int64), array([[False]])]] 	 class: [6 9]
10:10:37,853 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.930E-02 	 Total distance: 7.930E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([165], dtype=int64), array([[False]])]] 	 class: [6 9]
10:10:38,63 root DEBUG Side: OFF	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.765E-01 	 Total distance: 2.558E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([40], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:10:38,63 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:38,63 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 37.76 	 cIDON = [6 9], cIDOFF = [6 9]
10:10:38,64 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:38,64 root DEBUG dOFF/dON = 2.2
10:10:38,64 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.75690627253297, 'dON1': 0.11556859399395715, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.11556859399395715, 'nTON': 1, 'dON': 0.11556859399395715, 'dxOFFAngle': 86.81153102581919, 'dOFF1': 0.25581362199553187, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.25581362199553187, 'nTOFF': 1, 'dOFF': 0.25581362199553187, 'SUCCESS': True}
10:10:38,73 root DEBUG 

=================== Experiment ID #169 	 Dual Point ID: 173 ===================
10:10:38,81 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.132E-08|<1.000E-06)
10:10:38,81 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:38,381 root DEBUG Side: ON	 Angle(dx0, dx): 0.80 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.399E-02 	 Total distance: 2.399E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([65], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:38,704 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.155E-01 	 Total distance: 3.155E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([90], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:38,878 root DEBUG Side: OFF	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.648E-01 	 Total distance: 4.803E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([84], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:38,878 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:38,878 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 90.49 	 cIDON = [2 7], cIDOFF = [2 7]
10:10:38,878 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:38,878 root DEBUG dOFF/dON = 20.0
10:10:38,878 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.34025443589478, 'dON1': 0.023985848270617734, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.023985848270617734, 'nTON': 1, 'dON': 0.023985848270617734, 'dxOFFAngle': 89.26646077612378, 'dOFF1': 0.4803013675363078, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.4803013675363078, 'nTOFF': 1, 'dOFF': 0.4803013675363078, 'SUCCESS': True}
10:10:38,884 root DEBUG 

=================== Experiment ID #170 	 Dual Point ID: 174 ===================
10:10:38,894 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.244E-07|<1.000E-06)
10:10:38,894 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:39,181 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.106E-02 	 Total distance: 9.106E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([176], dtype=int64), array([[ True]])]] 	 class: [6 7]
10:10:39,488 root DEBUG Side: OFF	 Angle(dx0, dx): 0.14 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.980E-02 	 Total distance: 7.980E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([159], dtype=int64), array([[False]])]] 	 class: [6 7]
10:10:39,488 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:39,488 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -6.59 	 cIDON = [6 7], cIDOFF = [6 7]
10:10:39,488 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:39,488 root DEBUG dOFF/dON = 0.9
10:10:39,488 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.95342904459461, 'dON1': 0.09106305787162036, 'cIDON1': array([6, 7], dtype=int64), 'dON_patch_1': 0.09106305787162036, 'nTON': 1, 'dON': 0.09106305787162036, 'dxOFFAngle': 89.02749338109604, 'dOFF1': 0.07979956585167858, 'cIDOFF1': array([6, 7], dtype=int64), 'dOFF_patch_1': 0.07979956585167858, 'nTOFF': 1, 'dOFF': 0.07979956585167858, 'SUCCESS': False}
10:10:39,498 root DEBUG 

=================== Experiment ID #171 	 Dual Point ID: 175 ===================
10:10:39,505 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.608E-08|<1.000E-06)
10:10:39,505 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:39,841 root DEBUG Side: ON	 Angle(dx0, dx): 0.39 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.146E-01 	 Total distance: 4.146E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([11], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:40,92 root DEBUG Side: OFF	 Angle(dx0, dx): 0.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.519E-01 	 Total distance: 5.519E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([71], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:40,93 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:40,93 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 14.20 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:40,93 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:40,93 root DEBUG dOFF/dON = 1.3
10:10:40,93 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.24634868937932, 'dON1': 0.41460661240568497, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.41460661240568497, 'nTON': 1, 'dON': 0.41460661240568497, 'dxOFFAngle': 87.31279829463065, 'dOFF1': 0.5518759414719858, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.5518759414719858, 'nTOFF': 1, 'dOFF': 0.5518759414719858, 'SUCCESS': True}
10:10:40,101 root DEBUG 

=================== Experiment ID #172 	 Dual Point ID: 176 ===================
10:10:40,111 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.899E-08|<1.000E-06)
10:10:40,112 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:40,385 root DEBUG Side: ON	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.512E-02 	 Total distance: 3.512E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([4], dtype=int64), array([[ True]])]] 	 class: [6 9]
10:10:40,546 root DEBUG Side: ON	 Angle(dx0, dx): 0.40 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.971E-02 	 Total distance: 7.483E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([206], dtype=int64), array([[False]])]] 	 class: [6 9]
10:10:40,728 root DEBUG Side: ON	 Angle(dx0, dx): 0.86 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.079E-02 	 Total distance: 1.056E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([80], dtype=int64), array([[False]])]] 	 class: [6 9]
10:10:41,52 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.639E-02 	 Total distance: 8.639E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([206], dtype=int64), array([[False]])]] 	 class: [6 9]
10:10:41,52 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:41,52 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -10.02 	 cIDON = [6 9], cIDOFF = [6 9]
10:10:41,53 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:41,53 root DEBUG dOFF/dON = 0.8
10:10:41,53 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.61100696645465, 'dON1': 0.10561854783369719, 'cIDON1': array([6, 9], dtype=int64), 'dON_patch_1': 0.10561854783369719, 'nTON': 1, 'dON': 0.10561854783369719, 'dxOFFAngle': 89.44953670429445, 'dOFF1': 0.08638507494438545, 'cIDOFF1': array([6, 9], dtype=int64), 'dOFF_patch_1': 0.08638507494438545, 'nTOFF': 1, 'dOFF': 0.08638507494438545, 'SUCCESS': False}
10:10:41,59 root DEBUG 

=================== Experiment ID #173 	 Dual Point ID: 177 ===================
10:10:41,66 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.431E-08|<1.000E-06)
10:10:41,66 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:41,379 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.702E-01 	 Total distance: 3.702E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([238], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:41,590 root DEBUG Side: ON	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.681E-01 	 Total distance: 1.338E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([41], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:41,870 root DEBUG Side: OFF	 Angle(dx0, dx): 0.53 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.766E-03 	 Total distance: 7.766E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([34], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:41,870 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:41,870 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -98.85 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:41,870 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:41,871 root DEBUG dOFF/dON = 0.0
10:10:41,871 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.48489320588892, 'dON1': 1.338251798500036, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 1.338251798500036, 'nTON': 1, 'dON': 1.338251798500036, 'dxOFFAngle': 88.80037763321057, 'dOFF1': 0.00776645296875438, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.00776645296875438, 'nTOFF': 1, 'dOFF': 0.00776645296875438, 'SUCCESS': False}
10:10:41,884 root DEBUG 

=================== Experiment ID #174 	 Dual Point ID: 178 ===================
10:10:41,890 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.737E-08|<1.000E-06)
10:10:41,891 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:42,160 root DEBUG Side: ON	 Angle(dx0, dx): 0.35 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.755E-05 	 Total distance: 2.755E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:10:42,434 root DEBUG Side: OFF	 Angle(dx0, dx): 0.48 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.158E-05 	 Total distance: 3.158E-05 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 8]
10:10:42,435 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:42,435 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 6.82 	 cIDON = [1 8], cIDOFF = [1 8]
10:10:42,435 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:42,435 root DEBUG dOFF/dON = 1.1
10:10:42,435 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.65467239243186, 'dON1': 2.7546989898404214e-05, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 2.7546989898404214e-05, 'nTON': 1, 'dON': 2.7546989898404214e-05, 'dxOFFAngle': 89.45315380967745, 'dOFF1': 3.1579121466856725e-05, 'cIDOFF1': array([1, 8], dtype=int64), 'dOFF_patch_1': 3.1579121466856725e-05, 'nTOFF': 1, 'dOFF': 3.1579121466856725e-05, 'SUCCESS': True}
10:10:42,448 root DEBUG 

=================== Experiment ID #175 	 Dual Point ID: 179 ===================
10:10:42,455 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.135E-08|<1.000E-06)
10:10:42,455 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:42,745 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.424E-02 	 Total distance: 4.424E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([59], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:42,935 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.912E-04 	 Total distance: 4.513E-02 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([19], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:43,154 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.011E-01 	 Total distance: 2.462E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([144], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:43,432 root DEBUG Side: OFF	 Angle(dx0, dx): 0.70 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.416E-02 	 Total distance: 4.416E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([99], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:43,432 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:43,432 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -69.59 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:43,432 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:43,432 root DEBUG dOFF/dON = 0.2
10:10:43,433 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.33155464824428, 'dON1': 0.24623849370447548, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.24623849370447548, 'nTON': 1, 'dON': 0.24623849370447548, 'dxOFFAngle': 87.85356004687242, 'dOFF1': 0.04416247783229324, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.04416247783229324, 'nTOFF': 1, 'dOFF': 0.04416247783229324, 'SUCCESS': False}
10:10:43,439 root DEBUG 

=================== Experiment ID #176 	 Dual Point ID: 180 ===================
10:10:43,448 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.273E-08|<1.000E-06)
10:10:43,449 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:43,802 root DEBUG Side: ON	 Angle(dx0, dx): 0.61 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.790E-01 	 Total distance: 2.790E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([10], dtype=int64), array([[False]])]] 	 class: [0 9]
10:10:44,114 root DEBUG Side: OFF	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.157E-01 	 Total distance: 2.157E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([64], dtype=int64), array([[False]])]] 	 class: [1 9]
10:10:44,349 root DEBUG Side: OFF	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.045E-02 	 Total distance: 2.862E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([17], dtype=int64), array([[ True]])]] 	 class: [1 9]
10:10:44,350 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:44,350 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 1.27 	 cIDON = [0 9], cIDOFF = [1 9]
10:10:44,350 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:44,350 root DEBUG dOFF/dON = 1.0
10:10:44,350 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 85.59924362182463, 'dON1': 0.2789964118805111, 'cIDON1': array([0, 9], dtype=int64), 'dON_patch_1': 0.2789964118805111, 'nTON': 1, 'dON': 0.2789964118805111, 'dxOFFAngle': 89.1403678228429, 'dOFF1': 0.28616182129919215, 'cIDOFF1': array([1, 9], dtype=int64), 'dOFF_patch_1': 0.28616182129919215, 'nTOFF': 1, 'dOFF': 0.28616182129919215, 'SUCCESS': True}
10:10:44,360 root DEBUG 

=================== Experiment ID #177 	 Dual Point ID: 181 ===================
10:10:44,370 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.934E-08|<1.000E-06)
10:10:44,370 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:44,718 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.204E-01 	 Total distance: 1.204E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([240], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:10:44,931 root DEBUG Side: ON	 Angle(dx0, dx): 0.37 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.718E-02 	 Total distance: 1.975E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([153], dtype=int64), array([[ True]])]] 	 class: [4 7]
10:10:45,245 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.534E-02 	 Total distance: 2.534E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([229], dtype=int64), array([[False]])]] 	 class: [4 7]
10:10:45,245 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:45,245 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -77.26 	 cIDON = [4 7], cIDOFF = [4 7]
10:10:45,246 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:45,246 root DEBUG dOFF/dON = 0.1
10:10:45,246 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.38699843983949, 'dON1': 0.19754406494792467, 'cIDON1': array([4, 7], dtype=int64), 'dON_patch_1': 0.19754406494792467, 'nTON': 1, 'dON': 0.19754406494792467, 'dxOFFAngle': 86.73388737973511, 'dOFF1': 0.02534093258082265, 'cIDOFF1': array([4, 7], dtype=int64), 'dOFF_patch_1': 0.02534093258082265, 'nTOFF': 1, 'dOFF': 0.02534093258082265, 'SUCCESS': False}
10:10:45,257 root DEBUG 

=================== Experiment ID #178 	 Dual Point ID: 182 ===================
10:10:45,264 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.253E-08|<1.000E-06)
10:10:45,264 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:45,552 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.728E-01 	 Total distance: 1.728E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([15], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:10:45,825 root DEBUG Side: ON	 Angle(dx0, dx): 1.47 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.251E-02 	 Total distance: 2.453E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([25], dtype=int64), array([[False]])]] 	 class: [5 9]
10:10:46,117 root DEBUG Side: OFF	 Angle(dx0, dx): 0.32 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.451E-02 	 Total distance: 1.451E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([247], dtype=int64), array([[ True]])]] 	 class: [5 9]
10:10:46,118 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:46,118 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -88.83 	 cIDON = [5 9], cIDOFF = [5 9]
10:10:46,118 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:46,118 root DEBUG dOFF/dON = 0.1
10:10:46,118 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 84.08770020842417, 'dON1': 0.24527288395365804, 'cIDON1': array([5, 9], dtype=int64), 'dON_patch_1': 0.24527288395365804, 'nTON': 1, 'dON': 0.24527288395365804, 'dxOFFAngle': 84.46416150035714, 'dOFF1': 0.01451009725579735, 'cIDOFF1': array([5, 9], dtype=int64), 'dOFF_patch_1': 0.01451009725579735, 'nTOFF': 1, 'dOFF': 0.01451009725579735, 'SUCCESS': False}
10:10:46,132 root DEBUG 

=================== Experiment ID #179 	 Dual Point ID: 183 ===================
10:10:46,139 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.907E-10|<1.000E-06)
10:10:46,140 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:46,452 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.939E-02 	 Total distance: 8.939E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([58], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:10:46,707 root DEBUG Side: ON	 Angle(dx0, dx): 0.24 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.485E-02 	 Total distance: 1.242E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([173], dtype=int64), array([[False]])]] 	 class: [7 9]
10:10:47,36 root DEBUG Side: OFF	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.581E-01 	 Total distance: 1.581E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([78], dtype=int64), array([[ True]])]] 	 class: [7 9]
10:10:47,36 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:47,37 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 11.99 	 cIDON = [7 9], cIDOFF = [7 9]
10:10:47,37 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:47,37 root DEBUG dOFF/dON = 1.3
10:10:47,37 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.92657318915546, 'dON1': 0.1242375555615791, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.1242375555615791, 'nTON': 1, 'dON': 0.1242375555615791, 'dxOFFAngle': 87.50508249252493, 'dOFF1': 0.15808193498600526, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.15808193498600526, 'nTOFF': 1, 'dOFF': 0.15808193498600526, 'SUCCESS': True}
10:10:47,51 root DEBUG 

=================== Experiment ID #180 	 Dual Point ID: 184 ===================
10:10:47,59 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.187E-08|<1.000E-06)
10:10:47,60 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:47,331 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.420E-02 	 Total distance: 2.420E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([19], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:47,535 root DEBUG Side: ON	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.949E-01 	 Total distance: 2.191E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([10], dtype=int64), array([[ True]])]] 	 class: [2 7]
10:10:47,848 root DEBUG Side: OFF	 Angle(dx0, dx): 1.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.236E-01 	 Total distance: 2.236E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([33], dtype=int64), array([[False]])]] 	 class: [2 7]
10:10:47,848 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:47,848 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 1.02 	 cIDON = [2 7], cIDOFF = [2 7]
10:10:47,849 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:47,849 root DEBUG dOFF/dON = 1.0
10:10:47,849 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.17132363163647, 'dON1': 0.21906114068333424, 'cIDON1': array([2, 7], dtype=int64), 'dON_patch_1': 0.21906114068333424, 'nTON': 1, 'dON': 0.21906114068333424, 'dxOFFAngle': 87.41315377022035, 'dOFF1': 0.22357476952383712, 'cIDOFF1': array([2, 7], dtype=int64), 'dOFF_patch_1': 0.22357476952383712, 'nTOFF': 1, 'dOFF': 0.22357476952383712, 'SUCCESS': True}
10:10:47,860 root DEBUG 

=================== Experiment ID #181 	 Dual Point ID: 185 ===================
10:10:47,870 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.880E-08|<1.000E-06)
10:10:47,871 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:48,160 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.866E-01 	 Total distance: 3.866E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([4], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:48,394 root DEBUG Side: ON	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.013E-02 	 Total distance: 4.067E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([212], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:48,746 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.157E-01 	 Total distance: 1.157E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([212], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:48,746 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:48,746 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -55.69 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:48,746 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:48,747 root DEBUG dOFF/dON = 0.3
10:10:48,747 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.51657792373592, 'dON1': 0.4066866648979036, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.4066866648979036, 'nTON': 1, 'dON': 0.4066866648979036, 'dxOFFAngle': 89.69518577432335, 'dOFF1': 0.11573384655390416, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.11573384655390416, 'nTOFF': 1, 'dOFF': 0.11573384655390416, 'SUCCESS': False}
10:10:48,762 root DEBUG 

=================== Experiment ID #182 	 Dual Point ID: 186 ===================
10:10:48,777 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.969E-08|<1.000E-06)
10:10:48,777 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:49,136 root DEBUG Side: ON	 Angle(dx0, dx): 1.99 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.808E-02 	 Total distance: 5.808E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([5, 7], dtype=int64), array([[1.],
       [0.]])]] 	 class: [5 9]
10:10:49,491 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.464E-01 	 Total distance: 1.464E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([2], dtype=int64), array([[False]])]] 	 class: [7 9]
10:10:49,491 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:49,491 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 43.19 	 cIDON = [7 9], cIDOFF = [7 9]
10:10:49,491 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:49,492 root DEBUG dOFF/dON = 2.5
10:10:49,492 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.84904711018157, 'dON1': 0.05807827955312849, 'cIDON1': array([7, 9], dtype=int64), 'dON_patch_1': 0.05807827955312849, 'nTON': 1, 'dON': 0.05807827955312849, 'dxOFFAngle': 89.98983615713507, 'dOFF1': 0.14640421941255383, 'cIDOFF1': array([7, 9], dtype=int64), 'dOFF_patch_1': 0.14640421941255383, 'nTOFF': 1, 'dOFF': 0.14640421941255383, 'SUCCESS': True}
10:10:49,504 root DEBUG 

=================== Experiment ID #183 	 Dual Point ID: 187 ===================
10:10:49,510 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.160E-08|<1.000E-06)
10:10:49,510 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:49,866 root DEBUG Side: ON	 Angle(dx0, dx): 0.08 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.722E-02 	 Total distance: 4.722E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([33], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:50,148 root DEBUG Side: OFF	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.495E-01 	 Total distance: 1.495E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([159], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:50,361 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.243E-01 	 Total distance: 2.737E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([139], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:50,361 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:50,361 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 70.57 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:50,361 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:50,361 root DEBUG dOFF/dON = 5.8
10:10:50,361 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.94409554768981, 'dON1': 0.047222908968844186, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.047222908968844186, 'nTON': 1, 'dON': 0.047222908968844186, 'dxOFFAngle': 88.50513939588137, 'dOFF1': 0.2737464822123179, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.2737464822123179, 'nTOFF': 1, 'dOFF': 0.2737464822123179, 'SUCCESS': True}
10:10:50,368 root DEBUG 

=================== Experiment ID #184 	 Dual Point ID: 188 ===================
10:10:50,374 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.597E-08|<1.000E-06)
10:10:50,374 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:50,675 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.027E-02 	 Total distance: 8.027E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([97], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:51,14 root DEBUG Side: OFF	 Angle(dx0, dx): 1.78 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.283E-01 	 Total distance: 1.283E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([211], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:51,14 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:51,15 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 23.01 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:51,15 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:51,15 root DEBUG dOFF/dON = 1.6
10:10:51,15 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.07815617656091, 'dON1': 0.08026964573441749, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.08026964573441749, 'nTON': 1, 'dON': 0.08026964573441749, 'dxOFFAngle': 85.74526726643595, 'dOFF1': 0.12825045785613726, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.12825045785613726, 'nTOFF': 1, 'dOFF': 0.12825045785613726, 'SUCCESS': True}
10:10:51,25 root DEBUG 

=================== Experiment ID #185 	 Dual Point ID: 189 ===================
10:10:51,31 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |6.581E-10|<1.000E-06)
10:10:51,31 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:51,365 root DEBUG Side: ON	 Angle(dx0, dx): 0.01 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.516E-01 	 Total distance: 4.516E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([34], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:51,535 root DEBUG Side: ON	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.517E-01 	 Total distance: 7.032E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([50], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:51,859 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.552E-02 	 Total distance: 7.552E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([156], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:52,95 root DEBUG Side: OFF	 Angle(dx0, dx): 0.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.962E-01 	 Total distance: 6.717E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([239], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:52,95 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:52,96 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -2.29 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:52,97 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:52,97 root DEBUG dOFF/dON = 1.0
10:10:52,97 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.72734073020474, 'dON1': 0.7032445829527485, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.7032445829527485, 'nTON': 1, 'dON': 0.7032445829527485, 'dxOFFAngle': 88.34091329451542, 'dOFF1': 0.6717175388245321, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 0.6717175388245321, 'nTOFF': 1, 'dOFF': 0.6717175388245321, 'SUCCESS': False}
10:10:52,118 root DEBUG 

=================== Experiment ID #186 	 Dual Point ID: 190 ===================
10:10:52,134 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |5.124E-08|<1.000E-06)
10:10:52,135 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:52,499 root DEBUG Side: ON	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.500E-01 	 Total distance: 6.500E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([64], dtype=int64), array([[ True]])]] 	 class: [3 9]
10:10:52,805 root DEBUG Side: ON	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.880E-01 	 Total distance: 1.338E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([42], dtype=int64), array([[False]])]] 	 class: [3 9]
10:10:53,212 root DEBUG Side: OFF	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.208E-01 	 Total distance: 1.208E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([76], dtype=int64), array([[False]])]] 	 class: [3 9]
10:10:53,523 root DEBUG Side: OFF	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.527E-01 	 Total distance: 6.735E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([182], dtype=int64), array([[False]])]] 	 class: [3 9]
10:10:53,523 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:53,523 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -33.04 	 cIDON = [3 9], cIDOFF = [3 9]
10:10:53,524 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:53,524 root DEBUG dOFF/dON = 0.5
10:10:53,524 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.35810948111134, 'dON1': 1.3379923687762045, 'cIDON1': array([3, 9], dtype=int64), 'dON_patch_1': 1.3379923687762045, 'nTON': 1, 'dON': 1.3379923687762045, 'dxOFFAngle': 88.17402082284318, 'dOFF1': 0.6734524415334178, 'cIDOFF1': array([3, 9], dtype=int64), 'dOFF_patch_1': 0.6734524415334178, 'nTOFF': 1, 'dOFF': 0.6734524415334178, 'SUCCESS': False}
10:10:53,532 root DEBUG 

=================== Experiment ID #187 	 Dual Point ID: 191 ===================
10:10:53,540 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.255E-08|<1.000E-06)
10:10:53,540 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:53,870 root DEBUG Side: ON	 Angle(dx0, dx): 2.38 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.837E-02 	 Total distance: 4.837E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([30], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:54,194 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.700E-01 	 Total distance: 6.700E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([236], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:54,392 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.624E-01 	 Total distance: 8.324E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([101], dtype=int64), array([[False]])]] 	 class: [3 5]
10:10:54,563 root DEBUG Side: OFF	 Angle(dx0, dx): 0.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.002E-01 	 Total distance: 1.233E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([211], dtype=int64), array([[ True]])]] 	 class: [3 5]
10:10:54,563 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:54,564 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 92.45 	 cIDON = [3 5], cIDOFF = [3 5]
10:10:54,564 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:54,564 root DEBUG dOFF/dON = 25.5
10:10:54,564 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.42120735266174, 'dON1': 0.0483658458771839, 'cIDON1': array([3, 5], dtype=int64), 'dON_patch_1': 0.0483658458771839, 'nTON': 1, 'dON': 0.0483658458771839, 'dxOFFAngle': 87.23305631606992, 'dOFF1': 1.2326241519761076, 'cIDOFF1': array([3, 5], dtype=int64), 'dOFF_patch_1': 1.2326241519761076, 'nTOFF': 1, 'dOFF': 1.2326241519761076, 'SUCCESS': True}
10:10:54,576 root DEBUG 

=================== Experiment ID #188 	 Dual Point ID: 192 ===================
10:10:54,585 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.701E-08|<1.000E-06)
10:10:54,585 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:54,875 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.337E-02 	 Total distance: 5.337E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([56], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:55,30 root DEBUG Side: ON	 Angle(dx0, dx): 0.18 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.817E-01 	 Total distance: 3.351E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([198], dtype=int64), array([[False]])]] 	 class: [3 7]
10:10:55,363 root DEBUG Side: OFF	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.225E+00 	 Total distance: 1.225E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([173], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:10:55,363 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:55,363 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 57.05 	 cIDON = [3 7], cIDOFF = [3 7]
10:10:55,364 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:55,364 root DEBUG dOFF/dON = 3.7
10:10:55,364 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.97871254451837, 'dON1': 0.33510851450487333, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.33510851450487333, 'nTON': 1, 'dON': 0.33510851450487333, 'dxOFFAngle': 87.02493710713163, 'dOFF1': 1.225234164724649, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 1.225234164724649, 'nTOFF': 1, 'dOFF': 1.225234164724649, 'SUCCESS': True}
10:10:55,376 root DEBUG 

=================== Experiment ID #189 	 Dual Point ID: 193 ===================
10:10:55,385 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.576E-08|<1.000E-06)
10:10:55,386 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:55,695 root DEBUG Side: ON	 Angle(dx0, dx): 0.97 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.724E-02 	 Total distance: 1.724E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([31], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:10:56,7 root DEBUG Side: OFF	 Angle(dx0, dx): 0.51 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.337E-01 	 Total distance: 1.337E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([5], dtype=int64), array([[False]])]] 	 class: [2 3]
10:10:56,7 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:56,8 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 77.15 	 cIDON = [2 3], cIDOFF = [2 3]
10:10:56,8 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:56,8 root DEBUG dOFF/dON = 7.8
10:10:56,8 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.36177451816496, 'dON1': 0.017240204086514697, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.017240204086514697, 'nTON': 1, 'dON': 0.017240204086514697, 'dxOFFAngle': 87.16754392045931, 'dOFF1': 0.13365289959016358, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.13365289959016358, 'nTOFF': 1, 'dOFF': 0.13365289959016358, 'SUCCESS': True}
10:10:56,18 root DEBUG 

=================== Experiment ID #190 	 Dual Point ID: 194 ===================
10:10:56,26 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.979E-09|<1.000E-06)
10:10:56,26 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:56,357 root DEBUG Side: ON	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.713E-01 	 Total distance: 2.713E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([104], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:56,557 root DEBUG Side: ON	 Angle(dx0, dx): 0.02 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.179E-01 	 Total distance: 5.892E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([191], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:56,782 root DEBUG Side: ON	 Angle(dx0, dx): 0.41 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.095E-01 	 Total distance: 7.987E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([43], dtype=int64), array([[ True]])]] 	 class: [0 1]
10:10:57,76 root DEBUG Side: OFF	 Angle(dx0, dx): 0.26 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.763E-02 	 Total distance: 7.763E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([108], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:57,297 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.508E-02 	 Total distance: 1.227E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([130], dtype=int64), array([[False]])]] 	 class: [0 1]
10:10:57,297 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:57,297 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -73.36 	 cIDON = [0 1], cIDOFF = [0 1]
10:10:57,297 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:57,297 root DEBUG dOFF/dON = 0.2
10:10:57,298 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.846548735142, 'dON1': 0.7986946450168635, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.7986946450168635, 'nTON': 1, 'dON': 0.7986946450168635, 'dxOFFAngle': 89.44218403740133, 'dOFF1': 0.1227168854655881, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.1227168854655881, 'nTOFF': 1, 'dOFF': 0.1227168854655881, 'SUCCESS': False}
10:10:57,304 root DEBUG 

=================== Experiment ID #191 	 Dual Point ID: 195 ===================
10:10:57,311 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |9.678E-09|<1.000E-06)
10:10:57,311 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:57,641 root DEBUG Side: ON	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.039E-01 	 Total distance: 2.039E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([197], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:10:57,918 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.961E-02 	 Total distance: 9.961E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([149], dtype=int64), array([[ True]])]] 	 class: [4 5]
10:10:57,919 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:57,919 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -34.37 	 cIDON = [4 5], cIDOFF = [4 5]
10:10:57,919 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:10:57,919 root DEBUG dOFF/dON = 0.5
10:10:57,919 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.74513681093259, 'dON1': 0.2039367422248547, 'cIDON1': array([4, 5], dtype=int64), 'dON_patch_1': 0.2039367422248547, 'nTON': 1, 'dON': 0.2039367422248547, 'dxOFFAngle': 89.46064424233192, 'dOFF1': 0.09960848842214017, 'cIDOFF1': array([4, 5], dtype=int64), 'dOFF_patch_1': 0.09960848842214017, 'nTOFF': 1, 'dOFF': 0.09960848842214017, 'SUCCESS': False}
10:10:57,929 root DEBUG 

=================== Experiment ID #192 	 Dual Point ID: 196 ===================
10:10:57,939 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.427E-09|<1.000E-06)
10:10:57,939 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:58,277 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.993E-02 	 Total distance: 2.993E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([184], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:58,564 root DEBUG Side: OFF	 Angle(dx0, dx): 0.30 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.279E-01 	 Total distance: 1.279E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([106], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:10:58,703 root DEBUG Side: OFF	 Angle(dx0, dx): 0.00 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.242E-02 	 Total distance: 1.403E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([241], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:58,891 root DEBUG Side: OFF	 Angle(dx0, dx): 0.06 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.509E-02 	 Total distance: 1.654E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([115], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:59,73 root DEBUG Side: OFF	 Angle(dx0, dx): 0.52 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.852E-01 	 Total distance: 3.506E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([215], dtype=int64), array([[False]])]] 	 class: [8 9]
10:10:59,74 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:59,74 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 84.27 	 cIDON = [8 9], cIDOFF = [8 9]
10:10:59,74 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:59,74 root DEBUG dOFF/dON = 11.7
10:10:59,74 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.7220055896571, 'dON1': 0.02993376835630929, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.02993376835630929, 'nTON': 1, 'dON': 0.02993376835630929, 'dxOFFAngle': 87.69947486284185, 'dOFF1': 0.35059403536136985, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.35059403536136985, 'nTOFF': 1, 'dOFF': 0.35059403536136985, 'SUCCESS': True}
10:10:59,80 root DEBUG 

=================== Experiment ID #193 	 Dual Point ID: 197 ===================
10:10:59,88 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.875E-08|<1.000E-06)
10:10:59,89 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:10:59,304 root DEBUG Side: ON	 Angle(dx0, dx): 0.27 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 8.595E-03 	 Total distance: 8.595E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([37], dtype=int64), array([[ True]])]] 	 class: [1 8]
10:10:59,549 root DEBUG Side: OFF	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.985E-02 	 Total distance: 1.985E-02 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([240], dtype=int64), array([[False]])]] 	 class: [0 8]
10:10:59,781 root DEBUG Side: OFF	 Angle(dx0, dx): 0.76 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.353E-02 	 Total distance: 9.338E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([215], dtype=int64), array([[False]])]] 	 class: [0 8]
10:10:59,781 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:10:59,781 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 83.14 	 cIDON = [1 8], cIDOFF = [0 8]
10:10:59,781 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:10:59,781 root DEBUG dOFF/dON = 10.9
10:10:59,781 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.58405741793126, 'dON1': 0.00859542622291484, 'cIDON1': array([1, 8], dtype=int64), 'dON_patch_1': 0.00859542622291484, 'nTON': 1, 'dON': 0.00859542622291484, 'dxOFFAngle': 89.08401581465078, 'dOFF1': 0.09338107738110618, 'cIDOFF1': array([0, 8], dtype=int64), 'dOFF_patch_1': 0.09338107738110618, 'nTOFF': 1, 'dOFF': 0.09338107738110618, 'SUCCESS': True}
10:10:59,791 root DEBUG 

=================== Experiment ID #194 	 Dual Point ID: 198 ===================
10:10:59,805 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.044E-08|<1.000E-06)
10:10:59,806 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:00,145 root DEBUG Side: ON	 Angle(dx0, dx): 0.13 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.220E-02 	 Total distance: 6.220E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([51], dtype=int64), array([[ True]])]] 	 class: [2 3]
10:11:00,383 root DEBUG Side: OFF	 Angle(dx0, dx): 0.05 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.869E-03 	 Total distance: 6.869E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([13], dtype=int64), array([[False]])]] 	 class: [2 3]
10:11:00,383 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:00,383 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -80.11 	 cIDON = [2 3], cIDOFF = [2 3]
10:11:00,384 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:00,384 root DEBUG dOFF/dON = 0.1
10:11:00,384 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.57465533453126, 'dON1': 0.062201079045710754, 'cIDON1': array([2, 3], dtype=int64), 'dON_patch_1': 0.062201079045710754, 'nTON': 1, 'dON': 0.062201079045710754, 'dxOFFAngle': 88.34518494227282, 'dOFF1': 0.006868659167090522, 'cIDOFF1': array([2, 3], dtype=int64), 'dOFF_patch_1': 0.006868659167090522, 'nTOFF': 1, 'dOFF': 0.006868659167090522, 'SUCCESS': False}
10:11:00,395 root DEBUG 

=================== Experiment ID #195 	 Dual Point ID: 199 ===================
10:11:00,403 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.323E-09|<1.000E-06)
10:11:00,403 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:00,684 root DEBUG Side: ON	 Angle(dx0, dx): 0.09 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.181E-01 	 Total distance: 2.181E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([84], dtype=int64), array([[False]])]] 	 class: [3 7]
10:11:00,873 root DEBUG Side: ON	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.959E-01 	 Total distance: 7.140E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([230], dtype=int64), array([[False]])]] 	 class: [3 7]
10:11:01,118 root DEBUG Side: OFF	 Angle(dx0, dx): 0.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.486E-03 	 Total distance: 2.486E-03 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([158], dtype=int64), array([[False]])]] 	 class: [3 7]
10:11:01,351 root DEBUG Side: OFF	 Angle(dx0, dx): 0.11 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.954E-01 	 Total distance: 2.978E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([42], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:11:01,351 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:01,351 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -41.13 	 cIDON = [3 7], cIDOFF = [3 7]
10:11:01,351 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:01,351 root DEBUG dOFF/dON = 0.4
10:11:01,351 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.58814204820735, 'dON1': 0.7140115591936598, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.7140115591936598, 'nTON': 1, 'dON': 0.7140115591936598, 'dxOFFAngle': 89.49122484165669, 'dOFF1': 0.29783846095664446, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.29783846095664446, 'nTOFF': 1, 'dOFF': 0.29783846095664446, 'SUCCESS': False}
10:11:01,360 root DEBUG 

=================== Experiment ID #196 	 Dual Point ID: 200 ===================
10:11:01,368 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |7.359E-09|<1.000E-06)
10:11:01,369 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:01,677 root DEBUG Side: ON	 Angle(dx0, dx): 2.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 9.815E-02 	 Total distance: 9.815E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([17], dtype=int64), array([[False]])]] 	 class: [0 1]
10:11:01,980 root DEBUG Side: OFF	 Angle(dx0, dx): 0.34 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.814E-02 	 Total distance: 6.814E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([234], dtype=int64), array([[False]])]] 	 class: [0 1]
10:11:01,981 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:01,981 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -18.05 	 cIDON = [0 1], cIDOFF = [0 1]
10:11:01,981 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:01,981 root DEBUG dOFF/dON = 0.7
10:11:01,981 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.24821792649156, 'dON1': 0.09814630946867837, 'cIDON1': array([0, 1], dtype=int64), 'dON_patch_1': 0.09814630946867837, 'nTON': 1, 'dON': 0.09814630946867837, 'dxOFFAngle': 88.68194267882521, 'dOFF1': 0.06813982597465407, 'cIDOFF1': array([0, 1], dtype=int64), 'dOFF_patch_1': 0.06813982597465407, 'nTOFF': 1, 'dOFF': 0.06813982597465407, 'SUCCESS': False}
10:11:01,992 root DEBUG 

=================== Experiment ID #197 	 Dual Point ID: 201 ===================
10:11:02,2 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.988E-08|<1.000E-06)
10:11:02,3 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:02,279 root DEBUG Side: ON	 Angle(dx0, dx): 0.15 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.083E-01 	 Total distance: 3.083E-01 	 Future toggles: 0 	 Past toggles: 1 	 Toggled: [[1, array([75], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:11:02,532 root DEBUG Side: ON	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.223E-01 	 Total distance: 5.307E-01 	 Future toggles: 0 	 Past toggles: 2 	 Toggled: [[1, array([132], dtype=int64), array([[False]])]] 	 class: [3 7]
10:11:02,776 root DEBUG Side: ON	 Angle(dx0, dx): 0.25 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.560E-01 	 Total distance: 6.867E-01 	 Future toggles: 0 	 Past toggles: 3 	 Toggled: [[1, array([116], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:11:02,969 root DEBUG Side: ON	 Angle(dx0, dx): 1.33 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.961E-01 	 Total distance: 1.083E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([202], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:11:03,271 root DEBUG Side: OFF	 Angle(dx0, dx): 0.71 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.945E-01 	 Total distance: 1.945E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([238], dtype=int64), array([[False]])]] 	 class: [3 7]
10:11:03,271 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:03,271 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -69.55 	 cIDON = [3 7], cIDOFF = [3 7]
10:11:03,271 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:03,271 root DEBUG dOFF/dON = 0.2
10:11:03,271 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 86.3822398846227, 'dON1': 1.082811982120436, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 1.082811982120436, 'nTON': 1, 'dON': 1.082811982120436, 'dxOFFAngle': 86.3456884471154, 'dOFF1': 0.1944577107229371, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.1944577107229371, 'nTOFF': 1, 'dOFF': 0.1944577107229371, 'SUCCESS': False}
10:11:03,277 root DEBUG 

=================== Experiment ID #198 	 Dual Point ID: 202 ===================
10:11:03,285 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |8.121E-09|<1.000E-06)
10:11:03,285 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:03,543 root DEBUG Side: ON	 Angle(dx0, dx): 0.60 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 3.812E-02 	 Total distance: 3.812E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([199], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:11:03,784 root DEBUG Side: OFF	 Angle(dx0, dx): 0.16 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.465E-04 	 Total distance: 1.465E-04 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([54], dtype=int64), array([[ True]])]] 	 class: [5 7]
10:11:03,784 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:03,785 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -99.23 	 cIDON = [5 7], cIDOFF = [5 7]
10:11:03,785 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:03,785 root DEBUG dOFF/dON = 0.0
10:11:03,785 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.18611738103947, 'dON1': 0.038124828579623606, 'cIDON1': array([5, 7], dtype=int64), 'dON_patch_1': 0.038124828579623606, 'nTON': 1, 'dON': 0.038124828579623606, 'dxOFFAngle': 88.7873776234193, 'dOFF1': 0.00014649950982594234, 'cIDOFF1': array([5, 7], dtype=int64), 'dOFF_patch_1': 0.00014649950982594234, 'nTOFF': 1, 'dOFF': 0.00014649950982594234, 'SUCCESS': False}
10:11:03,795 root DEBUG 

=================== Experiment ID #199 	 Dual Point ID: 203 ===================
10:11:03,806 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.187E-07|<1.000E-06)
10:11:03,807 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:04,118 root DEBUG Side: ON	 Angle(dx0, dx): 0.22 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.061E-01 	 Total distance: 1.061E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([71], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:11:04,445 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 5.497E-01 	 Total distance: 5.497E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([171], dtype=int64), array([[ True]])]] 	 class: [3 7]
10:11:04,445 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:04,445 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 67.66 	 cIDON = [3 7], cIDOFF = [3 7]
10:11:04,445 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:04,445 root DEBUG dOFF/dON = 5.2
10:11:04,445 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.91665748145219, 'dON1': 0.1060520814213691, 'cIDON1': array([3, 7], dtype=int64), 'dON_patch_1': 0.1060520814213691, 'nTON': 1, 'dON': 0.1060520814213691, 'dxOFFAngle': 89.53710268567282, 'dOFF1': 0.5497370304765937, 'cIDOFF1': array([3, 7], dtype=int64), 'dOFF_patch_1': 0.5497370304765937, 'nTOFF': 1, 'dOFF': 0.5497370304765937, 'SUCCESS': True}
10:11:04,453 root DEBUG 

=================== Experiment ID #200 	 Dual Point ID: 204 ===================
10:11:04,462 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |1.079E-07|<1.000E-06)
10:11:04,462 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:04,806 root DEBUG Side: ON	 Angle(dx0, dx): 0.03 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.367E+00 	 Total distance: 1.367E+00 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([107], dtype=int64), array([[ True]])]] 	 class: [0 2]
10:11:04,998 root DEBUG Side: OFF	 Angle(dx0, dx): 1.90 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.708E-06 	 Total distance: 4.708E-06 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[5, array([0, 1], dtype=int64), array([[1.],
       [0.]])]] 	 class: [0 2]
10:11:04,998 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:04,998 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -100.00 	 cIDON = [0 2], cIDOFF = [1 2]
10:11:04,998 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:04,998 root DEBUG dOFF/dON = 0.0
10:11:04,998 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 87.85237398920837, 'dON1': 1.3669946405281037, 'cIDON1': array([0, 2], dtype=int64), 'dON_patch_1': 1.3669946405281037, 'nTON': 1, 'dON': 1.3669946405281037, 'dxOFFAngle': 87.40110828836772, 'dOFF1': 4.707901519783614e-06, 'cIDOFF1': array([1, 2], dtype=int64), 'dOFF_patch_1': 4.707901519783614e-06, 'nTOFF': 1, 'dOFF': 4.707901519783614e-06, 'SUCCESS': False}
10:11:05,5 root DEBUG 

=================== Experiment ID #201 	 Dual Point ID: 205 ===================
10:11:05,12 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |4.034E-09|<1.000E-06)
10:11:05,12 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:05,303 root DEBUG Side: ON	 Angle(dx0, dx): 2.29 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 7.763E-02 	 Total distance: 7.763E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([40], dtype=int64), array([[ True]])]] 	 class: [3 6]
10:11:05,634 root DEBUG Side: OFF	 Angle(dx0, dx): 0.50 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.008E-01 	 Total distance: 2.008E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([2], dtype=int64), array([[False]])]] 	 class: [3 6]
10:11:05,634 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:05,635 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 44.23 	 cIDON = [3 6], cIDOFF = [3 6]
10:11:05,635 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:05,635 root DEBUG dOFF/dON = 2.6
10:11:05,635 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.1989669191597, 'dON1': 0.07763076438731817, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.07763076438731817, 'nTON': 1, 'dON': 0.07763076438731817, 'dxOFFAngle': 88.62114667253364, 'dOFF1': 0.20075715132771202, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.20075715132771202, 'nTOFF': 1, 'dOFF': 0.20075715132771202, 'SUCCESS': True}
10:11:05,645 root DEBUG 

=================== Experiment ID #202 	 Dual Point ID: 206 ===================
10:11:05,651 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |3.591E-08|<1.000E-06)
10:11:05,652 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:05,991 root DEBUG Side: ON	 Angle(dx0, dx): 1.04 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 2.531E-01 	 Total distance: 2.531E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([11], dtype=int64), array([[False]])]] 	 class: [3 6]
10:11:06,287 root DEBUG Side: OFF	 Angle(dx0, dx): 0.21 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.476E-02 	 Total distance: 1.476E-02 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[3, array([205], dtype=int64), array([[False]])]] 	 class: [3 6]
10:11:06,288 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:06,288 root DEBUG 	 nT= 1  	 success?   False    	 (dON-dOFF)/|dON+dOFF|: -88.98 	 cIDON = [3 6], cIDOFF = [3 6]
10:11:06,288 root DEBUG ===> #(dOFF_patch>dON_patch) = 0/1 = 0.00%
10:11:06,288 root DEBUG dOFF/dON = 0.1
10:11:06,288 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 89.60811203390992, 'dON1': 0.2531366604898789, 'cIDON1': array([3, 6], dtype=int64), 'dON_patch_1': 0.2531366604898789, 'nTON': 1, 'dON': 0.2531366604898789, 'dxOFFAngle': 89.65594219378293, 'dOFF1': 0.014761153350623392, 'cIDOFF1': array([3, 6], dtype=int64), 'dOFF_patch_1': 0.014761153350623392, 'nTOFF': 1, 'dOFF': 0.014761153350623392, 'SUCCESS': False}
10:11:06,300 root DEBUG 

=================== Experiment ID #203 	 Dual Point ID: 207 ===================
10:11:06,311 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.607E-08|<1.000E-06)
10:11:06,312 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:06,618 root DEBUG Side: ON	 Angle(dx0, dx): 0.23 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.389E-03 	 Total distance: 1.389E-03 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([47], dtype=int64), array([[False]])]] 	 class: [0 7]
10:11:06,926 root DEBUG Side: OFF	 Angle(dx0, dx): 0.19 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 1.448E-01 	 Total distance: 1.448E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([149], dtype=int64), array([[False]])]] 	 class: [1 7]
10:11:06,927 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:06,927 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 98.10 	 cIDON = [0 7], cIDOFF = [1 7]
10:11:06,927 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:06,928 root DEBUG dOFF/dON = 104.2
10:11:06,928 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.74396829559412, 'dON1': 0.0013890799545552088, 'cIDON1': array([0, 7], dtype=int64), 'dON_patch_1': 0.0013890799545552088, 'nTON': 1, 'dON': 0.0013890799545552088, 'dxOFFAngle': 87.84199643243856, 'dOFF1': 0.14475398140910975, 'cIDOFF1': array([1, 7], dtype=int64), 'dOFF_patch_1': 0.14475398140910975, 'nTOFF': 1, 'dOFF': 0.14475398140910975, 'SUCCESS': True}
10:11:06,944 root DEBUG 

=================== Experiment ID #204 	 Dual Point ID: 208 ===================
10:11:06,952 root DEBUG CONTROL: 	 OK! 	 (target neuron output < tolerance: |2.576E-08|<1.000E-06)
10:11:06,952 root DEBUG CONTROL DUAL POINT: Check that target neuron output < tolerance ({tol:.3E}) at x_dual.
10:11:07,241 root DEBUG Side: ON	 Angle(dx0, dx): 1.54 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 4.048E-01 	 Total distance: 4.048E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[4, array([49], dtype=int64), array([[False]])]] 	 class: [8 9]
10:11:07,576 root DEBUG Side: OFF	 Angle(dx0, dx): 0.55 deg 	 Angle(n, nold): 0.00 deg 	 Distance in patch: 6.971E-01 	 Total distance: 6.971E-01 	 Future toggles: 1 	 Past toggles: 1 	 Toggled: [[2, array([184], dtype=int64), array([[ True]])]] 	 class: [8 9]
10:11:07,577 root DEBUG Check patch-by-patch distances for success (dOFF_patch>dON_patch) and ratio (dOFF_patch/dON_patch):
10:11:07,577 root DEBUG 	 nT= 1  	 success?    True    	 (dON-dOFF)/|dON+dOFF|: 26.52 	 cIDON = [8 9], cIDOFF = [8 9]
10:11:07,577 root DEBUG ===> #(dOFF_patch>dON_patch) = 1/1 = 100.00%
10:11:07,577 root DEBUG dOFF/dON = 1.7
10:11:07,577 root DEBUG {'CHOOSE_DX': 'along_decision_boundary', 'dxONAngle': 88.91493666000133, 'dON1': 0.4048333207112381, 'cIDON1': array([8, 9], dtype=int64), 'dON_patch_1': 0.4048333207112381, 'nTON': 1, 'dON': 0.4048333207112381, 'dxOFFAngle': 89.01310996318182, 'dOFF1': 0.6970578042790264, 'cIDOFF1': array([8, 9], dtype=int64), 'dOFF_patch_1': 0.6970578042790264, 'nTOFF': 1, 'dOFF': 0.6970578042790264, 'SUCCESS': True}
10:11:07,822 matplotlib.pyplot DEBUG Loaded backend tkagg version 8.6.
10:11:07,894 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:11:07,894 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:11:07,894 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:11:07,894 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:11:07,894 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 1189
10:11:07,906 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:11:07,906 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:11:07,906 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:11:07,906 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:11:07,906 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 2994
10:11:07,940 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:11:07,940 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:11:07,940 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:11:07,940 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:11:07,940 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 696
10:11:07,943 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:11:07,943 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:11:07,943 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:11:07,943 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:11:07,943 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 526
10:11:07,948 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:11:07,948 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:11:07,948 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:11:07,948 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:11:07,948 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 499
10:11:07,951 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:11:07,951 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:11:07,951 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:11:07,951 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:11:07,951 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 673
10:11:07,955 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:11:07,955 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:11:07,955 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:11:07,955 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:11:07,955 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 922
10:11:07,959 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:11:07,959 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:11:07,959 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:11:07,960 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:11:07,960 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 568
10:11:07,964 PIL.PngImagePlugin DEBUG STREAM b'IHDR' 16 13
10:11:07,964 PIL.PngImagePlugin DEBUG STREAM b'sBIT' 41 4
10:11:07,964 PIL.PngImagePlugin DEBUG b'sBIT' 41 4 (unknown)
10:11:07,964 PIL.PngImagePlugin DEBUG STREAM b'pHYs' 57 9
10:11:07,964 PIL.PngImagePlugin DEBUG STREAM b'IDAT' 78 626
10:11:07,978 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
10:11:07,980 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,980 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,980 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:11:07,980 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:11:07,980 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,980 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,980 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,980 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,980 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,980 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,981 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,981 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:07,981 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:11:07,981 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:07,981 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,981 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:07,981 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,981 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,981 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:07,981 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,981 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,981 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,981 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:07,981 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,981 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,981 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,982 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,982 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,982 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,982 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,982 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,982 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,982 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,982 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:07,982 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:07,982 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:11:07,982 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,982 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:07,982 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,982 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,982 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:07,983 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,983 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,983 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:07,983 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:11:07,983 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:07,983 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,983 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,983 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:07,983 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,983 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,983 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:11:07,983 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,983 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,983 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:11:07,983 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,984 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,984 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:07,984 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,984 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:11:07,984 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:07,984 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:07,984 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,984 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,984 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,984 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,984 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,984 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,984 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,984 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,985 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,985 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,985 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,985 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:07,985 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,985 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,985 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,985 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:07,985 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,985 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:07,985 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:11:07,985 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,985 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,986 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,986 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,986 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,986 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,986 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,986 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,986 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:07,986 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:07,986 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,986 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,986 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:11:07,986 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:07,986 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:07,987 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:07,987 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,987 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,987 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,987 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,987 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,987 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,987 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,987 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,987 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:11:07,987 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:07,987 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,987 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,988 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,988 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,988 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,988 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,988 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,988 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,988 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,988 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,988 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,988 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,988 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,988 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,988 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:07,989 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,989 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,989 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:07,989 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,989 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,989 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,989 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,989 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,989 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:07,989 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,989 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,989 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,990 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:07,990 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,990 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,990 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,990 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,990 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,990 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:11:07,990 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:11:07,990 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:07,990 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:11:07,990 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,990 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:07,991 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:07,991 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,991 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:07,991 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,991 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,991 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,991 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,991 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,991 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,991 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,991 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:11:07,991 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,991 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:07,992 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:07,992 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,992 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,992 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,992 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,992 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,992 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:11:07,992 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:07,992 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:07,992 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,992 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,992 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,992 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,993 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,993 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,993 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,993 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:07,993 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,993 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,993 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:11:07,993 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,993 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:11:07,993 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:11:07,993 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,994 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,994 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:11:07,994 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,994 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,994 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,994 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,994 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:07,994 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,994 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:07,994 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,994 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,995 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:07,995 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,995 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,995 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:07,995 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,995 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:07,995 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,995 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:07,995 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,995 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,995 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:07,995 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,995 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:07,995 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,995 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,995 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,995 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,995 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,995 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,995 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,995 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,995 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,996 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,996 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,996 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:11:07,996 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,996 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,996 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,996 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:07,996 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,996 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:07,996 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,996 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:07,996 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:07,996 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,996 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,996 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,996 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:07,996 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:07,996 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,996 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,997 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:07,997 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:07,997 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,997 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:07,997 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:11:07,997 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:07,997 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,997 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:11:07,997 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:07,997 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:11:07,997 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:07,997 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,997 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,997 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,997 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,997 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,998 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,998 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:11:07,998 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,998 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,998 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:07,998 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,998 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:07,998 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:07,999 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:07,999 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,999 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:07,999 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,999 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,999 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:07,999 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:07,999 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:07,999 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:11:08,0 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,0 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,0 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:11:08,0 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,0 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:11:08,0 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,0 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:11:08,0 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,0 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:11:08,1 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,1 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,1 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,1 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,1 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:08,1 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,1 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,1 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,1 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,1 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,2 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:08,2 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,2 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,2 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,2 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,2 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,2 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,2 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,2 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,2 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,3 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,3 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,3 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,3 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,3 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,3 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,3 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,3 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,3 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,3 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,4 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,4 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,4 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,4 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,4 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,4 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,4 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,4 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:11:08,4 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,4 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,4 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,5 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,5 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,5 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,5 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,5 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,5 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,5 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,5 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,5 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,5 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,5 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,6 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,6 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,6 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,6 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,6 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,6 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,6 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:08,6 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,6 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,6 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,6 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,7 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,7 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,7 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,7 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,7 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,8 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,8 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,8 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,8 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,8 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:08,8 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:11:08,8 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,8 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,8 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,8 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,8 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,9 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,9 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,9 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,9 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,9 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,9 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,9 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:11:08,9 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,9 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,9 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,10 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,10 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:08,10 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,10 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,10 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,10 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,10 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,10 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,10 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,10 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,10 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,11 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,11 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,11 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,11 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,11 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,11 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,11 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:11:08,11 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,11 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,11 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,12 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,12 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:11:08,12 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,12 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:11:08,12 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:11:08,12 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,12 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,12 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,12 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,12 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,12 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,13 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,13 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,13 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,13 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,13 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,13 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,13 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,13 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,13 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,13 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,13 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,14 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,14 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:11:08,14 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,14 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,14 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,14 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,14 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,14 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:08,14 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,14 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,15 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,15 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:11:08,15 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,15 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,15 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,15 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,15 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,15 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,15 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,15 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,16 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,16 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,16 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,16 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,16 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,16 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,16 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,16 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:11:08,16 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,16 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,16 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,17 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,17 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,17 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,17 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,17 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,17 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,17 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:08,17 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,17 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,17 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,17 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:11:08,18 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,18 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,18 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:08,18 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,18 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,18 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,18 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:08,18 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,18 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,18 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,18 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,19 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
10:11:08,179 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
10:11:08,179 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,179 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,179 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:11:08,179 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:11:08,179 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,179 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,180 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,180 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,180 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,180 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,180 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,180 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,180 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:11:08,180 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,180 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,180 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,180 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,181 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,181 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,181 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,181 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,181 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,181 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,181 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,181 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,181 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,181 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,181 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,181 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,182 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,182 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,182 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,182 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,182 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,182 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,182 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:11:08,182 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,182 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,182 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,183 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,183 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,183 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,183 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,183 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,183 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:11:08,183 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,183 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,183 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,183 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,183 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,183 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,184 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:11:08,184 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,184 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,184 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:11:08,184 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,184 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,184 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,184 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,184 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:11:08,184 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,185 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,185 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,185 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,185 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,185 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,185 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,185 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,185 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,185 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,185 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,185 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,185 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,186 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,186 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,186 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,186 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,186 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:08,186 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,186 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,186 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:11:08,186 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,186 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,186 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,186 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,187 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,187 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,187 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,187 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,187 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:08,187 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,187 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,187 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,187 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:11:08,187 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,187 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,187 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,188 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,188 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,188 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,188 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,188 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,188 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,188 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,188 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,189 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:11:08,189 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,189 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,189 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,189 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,189 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,189 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,189 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,189 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,189 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,189 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,190 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,190 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,190 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,190 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,190 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,190 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,190 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,190 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,190 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,190 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,190 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,191 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,191 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,191 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,191 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,191 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,191 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,191 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,191 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,191 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,191 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,191 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,192 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,192 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,192 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:11:08,192 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:11:08,192 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,192 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:11:08,192 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,192 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,192 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,192 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,192 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,192 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,193 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,193 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,193 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,193 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,193 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,193 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,193 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:11:08,193 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,193 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,193 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,193 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,193 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,193 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,194 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,194 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,194 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:11:08,194 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:08,194 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,194 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,194 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,194 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,194 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,194 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,194 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,194 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,195 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,195 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,195 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,195 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:11:08,195 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,195 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:11:08,195 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:11:08,195 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,195 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,195 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:11:08,195 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,195 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,196 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,196 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,196 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:08,196 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,196 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,196 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,196 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,196 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,196 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,196 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,196 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,196 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,196 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:08,197 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,197 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:08,197 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,197 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,197 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,197 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,197 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,197 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,197 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,197 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,197 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,197 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,198 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,198 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,198 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,198 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,198 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,198 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,198 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:11:08,198 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,198 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,198 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,198 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,198 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,199 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,199 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,199 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:08,199 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,199 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,199 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,199 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,199 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,199 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,199 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,199 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,199 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,200 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:08,200 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,200 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,200 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:11:08,200 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:08,200 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,200 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:11:08,200 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,200 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:11:08,200 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,200 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,200 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,200 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,201 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,201 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,201 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,201 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:11:08,201 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,201 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,201 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,201 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,201 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,201 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,201 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:08,201 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,202 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,202 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,202 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,202 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,202 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,202 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,202 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:11:08,202 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,202 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,202 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:11:08,202 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,202 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:11:08,203 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,203 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:11:08,203 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,203 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:11:08,203 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,203 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,203 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,203 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,203 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:08,203 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,203 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,203 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,204 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,204 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,204 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:08,204 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,204 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,204 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,204 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,204 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,204 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,204 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,204 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,204 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,205 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,205 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,205 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,205 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,205 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,205 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,205 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,205 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,205 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,205 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,205 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,205 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,206 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,206 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,206 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,206 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,206 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,206 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:11:08,206 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,206 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,206 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,206 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,206 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,206 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,207 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,207 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,207 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,207 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,207 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,207 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,208 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,208 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,208 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,208 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,208 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,208 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,208 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,208 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,208 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:08,208 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,208 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,208 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,209 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,209 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,209 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,209 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,209 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,209 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,209 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,209 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,209 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,209 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,209 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:08,210 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:11:08,210 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,210 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,210 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,210 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,210 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,210 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,210 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,210 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,210 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,210 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,210 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,211 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:11:08,211 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,211 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,211 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,211 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,211 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:08,211 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,211 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,211 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,211 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,211 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,212 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,212 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,212 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,212 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,212 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,212 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,212 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,212 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,212 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,212 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,212 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:11:08,212 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,213 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,213 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,213 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,213 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:11:08,213 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,213 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:11:08,213 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:11:08,213 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,213 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,213 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,213 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,214 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,214 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,214 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,214 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,214 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,214 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,214 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,214 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,214 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,214 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,214 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,214 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,215 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,215 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,215 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:11:08,215 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,215 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,215 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,215 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,215 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,215 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:08,215 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,215 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,216 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,216 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:11:08,216 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,216 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,216 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,216 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,216 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,216 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,216 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,216 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,216 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,216 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,217 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,217 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,217 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,217 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,217 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,217 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:11:08,217 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,217 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,217 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,217 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,217 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,217 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,218 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,218 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,218 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,218 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:08,218 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,218 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,218 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,218 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:11:08,218 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,218 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,218 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:08,219 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,219 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,219 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,219 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:08,219 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,219 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,219 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,219 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,220 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
10:11:08,404 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0.
10:11:08,404 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,404 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,404 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
10:11:08,404 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
10:11:08,404 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,405 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,405 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,405 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,405 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,405 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,405 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,405 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,405 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
10:11:08,405 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,405 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,405 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,405 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,405 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,405 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,405 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,405 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,405 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,405 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,405 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,405 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,406 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,406 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,406 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,406 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,406 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,406 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,406 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,406 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,406 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,406 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,406 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
10:11:08,406 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,406 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,406 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,406 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,406 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,406 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,406 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,406 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,406 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
10:11:08,406 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,406 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,407 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,407 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,407 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,407 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Regular.ttf', name='Kalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,407 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:11:08,407 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,407 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,407 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
10:11:08,407 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,407 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,407 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,408 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,408 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
10:11:08,408 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,408 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,408 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,408 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,408 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,408 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,408 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,408 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,408 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,408 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,408 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,408 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,408 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,408 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,408 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,408 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,408 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,408 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:08,408 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,408 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
10:11:08,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SigmarOne-Regular.ttf', name='Sigmar One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:08,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
10:11:08,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cinzel-Black.ttf', name='Cinzel', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:11:08,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Shrikhand-Regular.ttf', name='Shrikhand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\KingsoftSymbol\\KingsoftSymbol.ttf', name='Kingsoft Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BungeeInline-Regular.ttf', name='Bungee Inline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Playball-Regular.ttf', name='Playball', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:11:08,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:11:08,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
10:11:08,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeckerliOne-Regular.ttf', name='Leckerli One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Origin.ttf', name='Origin', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:11:08,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GreatVibes-Regular.ttf', name='Great Vibes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UbuntuMono-Regular.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
10:11:08,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Megrim.ttf', name='Megrim', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:08,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Yellowtail-Regular.ttf', name='Yellowtail', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:11:08,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Baloo-Regular.ttf', name='Baloo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
10:11:08,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
10:11:08,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PermanentMarker.ttf', name='Permanent Marker', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:11:08,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Cookie-Regular.ttf', name='Cookie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:08,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CabinSketch-Regular.ttf', name='Cabin Sketch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,414 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,414 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,414 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,414 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,414 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,414 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,414 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,414 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:08,414 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,414 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:08,414 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,414 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,414 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,414 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,414 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,414 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,414 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,414 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,414 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,414 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,414 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,414 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,415 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\mtfont\\mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,415 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,415 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,415 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,415 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:11:08,415 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,415 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,415 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,415 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,415 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,415 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,415 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,415 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:08,415 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,415 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,415 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,415 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,415 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,415 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Light.ttf', name='Quicksand', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,415 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,415 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,415 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,415 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:08,416 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,416 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,416 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
10:11:08,416 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:08,416 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,416 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:11:08,416 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,416 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
10:11:08,416 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,416 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BowlbyOneSC-Regular.ttf', name='Bowlby One SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,416 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,416 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,416 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,416 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,416 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,416 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:11:08,416 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,416 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,416 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,416 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BlackOpsOne-Regular.ttf', name='Black Ops One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,416 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,417 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Light.ttf', name='Roboto', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,417 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:08,417 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,417 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,417 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,417 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,417 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Bold-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,417 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,417 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,417 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:11:08,417 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,417 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,417 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
10:11:08,417 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,417 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
10:11:08,417 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,417 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
10:11:08,417 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,417 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
10:11:08,417 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\ProgramData\\kingsoft\\office6\\omath\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,417 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,417 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,417 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,417 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:08,418 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,418 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,418 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DoppioOne-Regular.ttf', name='Doppio One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,418 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,418 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,418 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:08,418 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,418 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,418 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,418 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Kalam-Light.ttf', name='Kalam', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,418 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Courgette-Regular.ttf', name='Courgette', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,418 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,418 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,418 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,418 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,418 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,418 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,418 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,418 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,418 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,418 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,418 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,418 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,418 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,419 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,419 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,419 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,419 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,419 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,419 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,419 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,419 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,419 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
10:11:08,419 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,419 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,419 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,419 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,419 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,419 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,419 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,419 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,419 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,419 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,419 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,419 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,419 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inter-Regular-slnt=0.ttf', name='Inter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,419 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,419 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,420 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,420 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,420 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,420 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,420 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,420 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Medium.ttf', name='Quicksand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:08,420 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,420 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,420 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,420 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,420 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,420 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,420 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,420 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,420 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTExtra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,420 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,420 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,420 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,420 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,420 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:08,420 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:11:08,420 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SortsMillGoudy-Regular.ttf', name='Sorts Mill Goudy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,420 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,420 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,421 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,421 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Skranji-Bold.ttf', name='Skranji', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,421 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,421 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,421 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,421 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,421 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,421 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,421 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
10:11:08,421 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,421 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,421 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,421 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,421 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:08,421 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,421 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,421 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,421 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,421 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,421 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,421 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,421 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,421 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,421 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
10:11:08,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Limelight-Regular.ttf', name='Limelight', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MontserratSubrayada-Bold.ttf', name='Montserrat Subrayada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
10:11:08,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
10:11:08,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
10:11:08,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,423 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,423 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euphorig.ttf', name='Euphorigenic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,423 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,423 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,423 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,423 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,423 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,423 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,423 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,423 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,423 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
10:11:08,423 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
10:11:08,423 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
10:11:08,423 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,423 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,423 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Quicksand-Regular.ttf', name='Quicksand', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,423 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,423 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,423 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
10:11:08,423 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,423 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,423 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,423 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
10:11:08,423 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,424 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,424 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,424 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MarcellusSC-Regular.ttf', name='Marcellus SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,424 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,424 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,424 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,424 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,424 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,424 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Orbitron-Bold.ttf', name='Orbitron', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,424 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,424 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,424 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Lemon-Regular.ttf', name='Lemon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,424 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,424 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,425 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
10:11:08,425 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,425 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,425 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,425 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,425 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,425 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,425 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
10:11:08,425 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,425 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,425 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Medium.ttf', name='Roboto', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
10:11:08,425 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,425 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,425 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,426 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
10:11:08,426 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,426 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,426 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Teko-SemiBold.ttf', name='Teko SemiBold', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:08,426 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
10:11:08,426 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,426 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
10:11:08,426 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
10:11:08,426 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FugazOne-Regular.ttf', name='Fugaz One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,426 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RussoOne-Regular.ttf', name='Russo One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,426 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,426 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
10:11:08,426 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0 to DejaVu Sans ('E:\\Anaconda\\envs\\cg\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
